

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 29 13:19:37 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	stringtext11,global,class=STRCODE,delta=2
    19                           	psect	stringtext12,global,class=STRCODE,delta=2
    20                           	psect	stringtext13,global,class=STRCODE,delta=2
    21                           	psect	stringtext14,global,class=STRCODE,delta=2
    22                           	psect	stringtext15,global,class=STRCODE,delta=2
    23                           	psect	stringtext16,global,class=STRCODE,delta=2
    24                           	psect	stringtext17,global,class=STRCODE,delta=2
    25                           	psect	stringtext18,global,class=STRCODE,delta=2
    26                           	psect	stringtext19,global,class=STRCODE,delta=2
    27                           	psect	stringtext20,global,class=STRCODE,delta=2
    28                           	psect	stringtext21,global,class=STRCODE,delta=2
    29                           	psect	stringtext22,global,class=STRCODE,delta=2
    30                           	psect	stringtext23,global,class=STRCODE,delta=2
    31                           	psect	stringtext24,global,class=STRCODE,delta=2
    32                           	psect	stringtext25,global,class=STRCODE,delta=2
    33                           	psect	stringtext26,global,class=STRCODE,delta=2
    34                           	psect	stringtext27,global,class=STRCODE,delta=2
    35                           	psect	cinit,global,class=CODE,merge=1,delta=2
    36                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    37                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    38                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    39                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    40                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    41                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    42                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    43                           	psect	inittext,global,class=CODE,delta=2
    44                           	psect	clrtext,global,class=CODE,delta=2
    45                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    46                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    47                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    48                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    49                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    50                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    51                           	psect	text1,local,class=CODE,merge=1,delta=2
    52                           	psect	text2,local,class=CODE,merge=1,delta=2
    53                           	psect	text3,local,class=CODE,merge=1,delta=2
    54                           	psect	text4,local,class=CODE,merge=1,delta=2
    55                           	psect	text5,local,class=CODE,merge=1,delta=2
    56                           	psect	text6,local,class=CODE,merge=1,delta=2
    57                           	psect	text7,local,class=CODE,merge=1,delta=2
    58                           	psect	text8,local,class=CODE,merge=1,delta=2
    59                           	psect	text9,local,class=CODE,merge=1,delta=2
    60                           	psect	text10,local,class=CODE,merge=1,delta=2
    61                           	psect	text11,local,class=CODE,merge=1,delta=2
    62                           	psect	text12,local,class=CODE,merge=1,delta=2
    63                           	psect	text13,local,class=CODE,merge=1,delta=2
    64                           	psect	text14,local,class=CODE,merge=1,delta=2
    65                           	psect	text15,local,class=CODE,merge=1,delta=2
    66                           	psect	text16,local,class=CODE,merge=1,delta=2
    67                           	psect	text17,local,class=CODE,merge=1,delta=2
    68                           	psect	text18,local,class=CODE,merge=1,delta=2
    69                           	psect	text19,local,class=CODE,merge=1,delta=2
    70                           	psect	text20,local,class=CODE,merge=1,delta=2
    71                           	psect	text21,local,class=CODE,merge=1,delta=2
    72                           	psect	text22,local,class=CODE,merge=1,delta=2
    73                           	psect	text23,local,class=CODE,merge=1,delta=2
    74                           	psect	text24,local,class=CODE,merge=1,delta=2
    75                           	psect	text25,local,class=CODE,merge=1,delta=2
    76                           	psect	text26,local,class=CODE,merge=1,delta=2
    77                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    81                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    82                           	psect	text32,local,class=CODE,merge=1,delta=2
    83                           	psect	text33,local,class=CODE,merge=1,delta=2
    84                           	psect	text34,local,class=CODE,merge=1,delta=2
    85                           	psect	text35,local,class=CODE,merge=1,delta=2
    86                           	psect	text36,local,class=CODE,merge=1,delta=2
    87                           	psect	text37,local,class=CODE,merge=1,delta=2
    88                           	psect	text38,local,class=CODE,merge=1,delta=2
    89                           	psect	text39,local,class=CODE,merge=1,delta=2
    90                           	psect	text40,local,class=CODE,merge=1,delta=2
    91                           	psect	text41,local,class=CODE,merge=1,delta=2
    92                           	psect	text42,local,class=CODE,merge=1,delta=2
    93                           	psect	text43,local,class=CODE,merge=1,delta=2
    94                           	psect	text44,local,class=CODE,merge=1,delta=2
    95                           	psect	text45,local,class=CODE,merge=1,delta=2
    96                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text47,local,class=CODE,merge=1,delta=2
    98                           	psect	text48,local,class=CODE,merge=1,delta=2
    99                           	psect	text49,local,class=CODE,merge=1,delta=2
   100                           	psect	text50,local,class=CODE,merge=1,delta=2
   101                           	psect	text51,local,class=CODE,merge=1,delta=2,group=2
   102                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
   103                           	psect	text53,local,class=CODE,merge=1,delta=2,group=2
   104                           	psect	text54,local,class=CODE,merge=1,delta=2
   105                           	psect	text55,local,class=CODE,merge=1,delta=2
   106                           	psect	text56,local,class=CODE,merge=1,delta=2
   107                           	psect	text57,local,class=CODE,merge=1,delta=2
   108                           	psect	text58,local,class=CODE,merge=1,delta=2
   109                           	psect	text59,local,class=CODE,merge=1,delta=2,group=1
   110                           	psect	text60,local,class=CODE,merge=1,delta=2,group=1
   111                           	psect	text61,local,class=CODE,merge=1,delta=2
   112                           	psect	text62,local,class=CODE,merge=1,delta=2
   113                           	psect	text63,local,class=CODE,merge=1,delta=2
   114                           	psect	text64,local,class=CODE,merge=1,delta=2
   115                           	psect	text65,local,class=CODE,merge=1,delta=2
   116                           	psect	text66,local,class=CODE,merge=1,delta=2
   117                           	psect	text67,local,class=CODE,merge=1,delta=2
   118                           	psect	text68,local,class=CODE,merge=1,delta=2
   119                           	psect	text69,local,class=CODE,merge=1,delta=2
   120                           	psect	text70,local,class=CODE,merge=1,delta=2
   121                           	psect	text71,local,class=CODE,merge=1,delta=2
   122                           	psect	text72,local,class=CODE,merge=1,delta=2
   123                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
   124                           	psect	text74,local,class=CODE,merge=1,delta=2,group=1
   125                           	psect	text75,local,class=CODE,merge=1,delta=2
   126                           	psect	text76,local,class=CODE,merge=1,delta=2
   127                           	psect	text77,local,class=CODE,merge=1,delta=2
   128                           	psect	text78,local,class=CODE,merge=1,delta=2
   129                           	psect	text79,local,class=CODE,merge=1,delta=2
   130                           	psect	text80,local,class=CODE,merge=1,delta=2
   131                           	psect	text81,local,class=CODE,merge=1,delta=2
   132                           	psect	text82,local,class=CODE,merge=1,delta=2
   133                           	psect	text83,local,class=CODE,merge=1,delta=2
   134                           	psect	text84,local,class=CODE,merge=1,delta=2
   135                           	psect	text85,local,class=CODE,merge=1,delta=2
   136                           	psect	text86,local,class=CODE,merge=1,delta=2,group=1
   137                           	psect	text87,local,class=CODE,merge=1,delta=2
   138                           	psect	text88,local,class=CODE,merge=1,delta=2
   139                           	psect	text89,local,class=CODE,merge=1,delta=2
   140                           	psect	text90,local,class=CODE,merge=1,delta=2
   141                           	psect	text91,local,class=CODE,merge=1,delta=2
   142                           	psect	intentry,global,class=CODE,delta=2
   143                           	psect	text93,local,class=CODE,merge=1,delta=2
   144                           	psect	text94,local,class=CODE,merge=1,delta=2
   145                           	psect	text95,local,class=CODE,merge=1,delta=2
   146                           	psect	text96,local,class=CODE,merge=1,delta=2
   147                           	psect	text97,local,class=CODE,merge=1,delta=2
   148                           	psect	text98,local,class=CODE,merge=1,delta=2
   149                           	psect	text99,local,class=CODE,merge=1,delta=2
   150                           	psect	text100,local,class=CODE,merge=1,delta=2
   151                           	psect	text101,local,class=CODE,merge=1,delta=2
   152                           	psect	text102,local,class=CODE,merge=1,delta=2
   153                           	psect	text103,local,class=CODE,merge=1,delta=2
   154                           	psect	text104,local,class=CODE,merge=1,delta=2
   155                           	psect	text105,local,class=CODE,merge=1,delta=2
   156                           	psect	text106,local,class=CODE,merge=1,delta=2
   157                           	psect	text107,local,class=CODE,merge=1,delta=2
   158                           	psect	text108,local,class=CODE,merge=1,delta=2
   159                           	dabs	1,0xCA0,32
   160                           	dabs	1,0xC20,80
   161                           	dabs	1,0xBA0,80
   162                           	dabs	1,0xB20,80
   163                           	dabs	1,0xAA0,80
   164                           	dabs	1,0xA20,80
   165                           	dabs	1,0x9A0,80
   166                           	dabs	1,0x920,80
   167                           	dabs	1,0x8A0,80
   168                           	dabs	1,0x820,80
   169                           	dabs	1,0x7A0,80
   170                           	dabs	1,0x720,80
   171                           	dabs	1,0x6A0,80
   172                           	dabs	1,0x64E,34
   173                           	dabs	1,0x23EE,0,_dmxArray
   174                           	dabs	1,0x7E,2
   175  0000                     
   176                           ; Version 2.05
   177                           ; Generated 20/12/2018 GMT
   178                           ; 
   179                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   180                           ; All rights reserved.
   181                           ; 
   182                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   183                           ; 
   184                           ; Redistribution and use in source and binary forms, with or without modification, are
   185                           ; permitted provided that the following conditions are met:
   186                           ; 
   187                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   188                           ;        conditions and the following disclaimer.
   189                           ; 
   190                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   191                           ;        of conditions and the following disclaimer in the documentation and/or other
   192                           ;        materials provided with the distribution.
   193                           ; 
   194                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   195                           ;        software without specific prior written permission.
   196                           ; 
   197                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   198                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   199                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   200                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   201                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   202                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   203                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   204                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   205                           ; 
   206                           ; 
   207                           ; Code-generator required, PIC16F18446 Definitions
   208                           ; 
   209                           ; SFR Addresses
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  008C                     	;# 
   232  008C                     	;# 
   233  008D                     	;# 
   234  008E                     	;# 
   235  008E                     	;# 
   236  008F                     	;# 
   237  0090                     	;# 
   238  0090                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0092                     	;# 
   242  0093                     	;# 
   243  0094                     	;# 
   244  0094                     	;# 
   245  0095                     	;# 
   246  0096                     	;# 
   247  0096                     	;# 
   248  0097                     	;# 
   249  0098                     	;# 
   250  0099                     	;# 
   251  009A                     	;# 
   252  009B                     	;# 
   253  009B                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009D                     	;# 
   257  009E                     	;# 
   258  009F                     	;# 
   259  010C                     	;# 
   260  010C                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  010F                     	;# 
   264  010F                     	;# 
   265  0110                     	;# 
   266  0111                     	;# 
   267  0112                     	;# 
   268  0113                     	;# 
   269  0114                     	;# 
   270  0115                     	;# 
   271  0116                     	;# 
   272  0117                     	;# 
   273  0118                     	;# 
   274  0119                     	;# 
   275  0119                     	;# 
   276  0119                     	;# 
   277  011A                     	;# 
   278  011A                     	;# 
   279  011A                     	;# 
   280  011B                     	;# 
   281  011B                     	;# 
   282  011B                     	;# 
   283  011B                     	;# 
   284  011B                     	;# 
   285  011C                     	;# 
   286  011C                     	;# 
   287  011C                     	;# 
   288  011D                     	;# 
   289  011D                     	;# 
   290  011D                     	;# 
   291  011E                     	;# 
   292  011E                     	;# 
   293  011E                     	;# 
   294  011F                     	;# 
   295  011F                     	;# 
   296  011F                     	;# 
   297  011F                     	;# 
   298  011F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  018E                     	;# 
   302  018F                     	;# 
   303  0190                     	;# 
   304  0191                     	;# 
   305  0192                     	;# 
   306  0196                     	;# 
   307  0197                     	;# 
   308  0198                     	;# 
   309  0199                     	;# 
   310  019A                     	;# 
   311  019B                     	;# 
   312  019C                     	;# 
   313  020C                     	;# 
   314  020D                     	;# 
   315  020E                     	;# 
   316  020E                     	;# 
   317  020F                     	;# 
   318  020F                     	;# 
   319  0210                     	;# 
   320  0210                     	;# 
   321  0211                     	;# 
   322  0211                     	;# 
   323  0212                     	;# 
   324  0213                     	;# 
   325  0214                     	;# 
   326  0214                     	;# 
   327  0215                     	;# 
   328  0215                     	;# 
   329  0216                     	;# 
   330  0216                     	;# 
   331  0217                     	;# 
   332  0217                     	;# 
   333  0218                     	;# 
   334  0219                     	;# 
   335  021A                     	;# 
   336  021A                     	;# 
   337  021B                     	;# 
   338  021B                     	;# 
   339  021C                     	;# 
   340  021C                     	;# 
   341  021D                     	;# 
   342  021D                     	;# 
   343  021E                     	;# 
   344  021F                     	;# 
   345  028C                     	;# 
   346  028C                     	;# 
   347  028D                     	;# 
   348  028D                     	;# 
   349  028E                     	;# 
   350  028F                     	;# 
   351  0290                     	;# 
   352  0291                     	;# 
   353  0292                     	;# 
   354  0292                     	;# 
   355  0293                     	;# 
   356  0293                     	;# 
   357  0294                     	;# 
   358  0295                     	;# 
   359  0296                     	;# 
   360  0297                     	;# 
   361  0298                     	;# 
   362  0298                     	;# 
   363  0299                     	;# 
   364  0299                     	;# 
   365  029A                     	;# 
   366  029B                     	;# 
   367  029C                     	;# 
   368  029D                     	;# 
   369  029F                     	;# 
   370  030C                     	;# 
   371  030C                     	;# 
   372  030D                     	;# 
   373  030E                     	;# 
   374  030F                     	;# 
   375  0310                     	;# 
   376  0310                     	;# 
   377  0311                     	;# 
   378  0312                     	;# 
   379  0313                     	;# 
   380  0314                     	;# 
   381  0314                     	;# 
   382  0315                     	;# 
   383  0316                     	;# 
   384  0317                     	;# 
   385  0318                     	;# 
   386  0318                     	;# 
   387  0319                     	;# 
   388  031A                     	;# 
   389  031B                     	;# 
   390  038C                     	;# 
   391  038C                     	;# 
   392  038D                     	;# 
   393  038E                     	;# 
   394  0390                     	;# 
   395  0390                     	;# 
   396  0391                     	;# 
   397  0392                     	;# 
   398  048C                     	;# 
   399  048C                     	;# 
   400  048D                     	;# 
   401  048E                     	;# 
   402  048F                     	;# 
   403  048F                     	;# 
   404  0490                     	;# 
   405  0491                     	;# 
   406  0492                     	;# 
   407  0492                     	;# 
   408  0493                     	;# 
   409  0494                     	;# 
   410  0495                     	;# 
   411  0495                     	;# 
   412  0496                     	;# 
   413  0497                     	;# 
   414  0498                     	;# 
   415  0499                     	;# 
   416  049A                     	;# 
   417  049B                     	;# 
   418  049C                     	;# 
   419  049D                     	;# 
   420  058C                     	;# 
   421  058C                     	;# 
   422  058D                     	;# 
   423  058E                     	;# 
   424  058F                     	;# 
   425  058F                     	;# 
   426  0590                     	;# 
   427  0591                     	;# 
   428  0592                     	;# 
   429  0593                     	;# 
   430  059C                     	;# 
   431  059C                     	;# 
   432  059D                     	;# 
   433  059D                     	;# 
   434  059E                     	;# 
   435  059F                     	;# 
   436  060C                     	;# 
   437  060C                     	;# 
   438  060D                     	;# 
   439  060D                     	;# 
   440  060E                     	;# 
   441  060F                     	;# 
   442  0610                     	;# 
   443  0611                     	;# 
   444  0612                     	;# 
   445  0613                     	;# 
   446  0614                     	;# 
   447  0616                     	;# 
   448  0616                     	;# 
   449  0617                     	;# 
   450  0617                     	;# 
   451  0618                     	;# 
   452  0619                     	;# 
   453  061A                     	;# 
   454  061B                     	;# 
   455  061C                     	;# 
   456  061D                     	;# 
   457  061E                     	;# 
   458  070C                     	;# 
   459  070D                     	;# 
   460  070E                     	;# 
   461  070F                     	;# 
   462  0710                     	;# 
   463  0711                     	;# 
   464  0712                     	;# 
   465  0713                     	;# 
   466  0714                     	;# 
   467  0716                     	;# 
   468  0717                     	;# 
   469  0718                     	;# 
   470  0719                     	;# 
   471  071A                     	;# 
   472  071B                     	;# 
   473  071C                     	;# 
   474  071D                     	;# 
   475  071E                     	;# 
   476  0796                     	;# 
   477  0797                     	;# 
   478  0798                     	;# 
   479  0799                     	;# 
   480  079A                     	;# 
   481  079B                     	;# 
   482  079C                     	;# 
   483  079D                     	;# 
   484  080C                     	;# 
   485  080D                     	;# 
   486  080E                     	;# 
   487  080F                     	;# 
   488  0810                     	;# 
   489  0811                     	;# 
   490  0812                     	;# 
   491  0813                     	;# 
   492  0814                     	;# 
   493  081A                     	;# 
   494  081A                     	;# 
   495  081B                     	;# 
   496  081C                     	;# 
   497  081C                     	;# 
   498  081D                     	;# 
   499  081E                     	;# 
   500  081F                     	;# 
   501  088C                     	;# 
   502  088D                     	;# 
   503  088E                     	;# 
   504  088F                     	;# 
   505  0890                     	;# 
   506  0891                     	;# 
   507  0892                     	;# 
   508  0893                     	;# 
   509  0895                     	;# 
   510  0896                     	;# 
   511  0897                     	;# 
   512  0898                     	;# 
   513  0899                     	;# 
   514  089A                     	;# 
   515  089B                     	;# 
   516  090C                     	;# 
   517  090E                     	;# 
   518  090F                     	;# 
   519  091F                     	;# 
   520  098F                     	;# 
   521  098F                     	;# 
   522  0990                     	;# 
   523  0991                     	;# 
   524  0992                     	;# 
   525  0993                     	;# 
   526  0994                     	;# 
   527  0995                     	;# 
   528  0996                     	;# 
   529  0997                     	;# 
   530  1E0F                     	;# 
   531  1E10                     	;# 
   532  1E11                     	;# 
   533  1E12                     	;# 
   534  1E13                     	;# 
   535  1E14                     	;# 
   536  1E15                     	;# 
   537  1E16                     	;# 
   538  1E17                     	;# 
   539  1E18                     	;# 
   540  1E19                     	;# 
   541  1E1A                     	;# 
   542  1E1B                     	;# 
   543  1E1C                     	;# 
   544  1E1D                     	;# 
   545  1E1E                     	;# 
   546  1E1F                     	;# 
   547  1E20                     	;# 
   548  1E21                     	;# 
   549  1E22                     	;# 
   550  1E23                     	;# 
   551  1E24                     	;# 
   552  1E25                     	;# 
   553  1E26                     	;# 
   554  1E27                     	;# 
   555  1E28                     	;# 
   556  1E29                     	;# 
   557  1E2A                     	;# 
   558  1E2B                     	;# 
   559  1E2C                     	;# 
   560  1E2D                     	;# 
   561  1E2E                     	;# 
   562  1E2F                     	;# 
   563  1E30                     	;# 
   564  1E31                     	;# 
   565  1E32                     	;# 
   566  1E33                     	;# 
   567  1E34                     	;# 
   568  1E35                     	;# 
   569  1E36                     	;# 
   570  1E37                     	;# 
   571  1E8F                     	;# 
   572  1E90                     	;# 
   573  1E91                     	;# 
   574  1E92                     	;# 
   575  1E93                     	;# 
   576  1E94                     	;# 
   577  1E95                     	;# 
   578  1E96                     	;# 
   579  1E97                     	;# 
   580  1E9C                     	;# 
   581  1E9D                     	;# 
   582  1E9E                     	;# 
   583  1EA1                     	;# 
   584  1EA2                     	;# 
   585  1EA3                     	;# 
   586  1EA4                     	;# 
   587  1EA9                     	;# 
   588  1EAA                     	;# 
   589  1EB1                     	;# 
   590  1EB2                     	;# 
   591  1EB8                     	;# 
   592  1EB9                     	;# 
   593  1EBA                     	;# 
   594  1EBB                     	;# 
   595  1EBC                     	;# 
   596  1EBD                     	;# 
   597  1EBE                     	;# 
   598  1EC3                     	;# 
   599  1EC5                     	;# 
   600  1EC6                     	;# 
   601  1EC7                     	;# 
   602  1EC8                     	;# 
   603  1EC9                     	;# 
   604  1ECA                     	;# 
   605  1ECB                     	;# 
   606  1ECB                     	;# 
   607  1ECB                     	;# 
   608  1ECC                     	;# 
   609  1ECC                     	;# 
   610  1ECC                     	;# 
   611  1F10                     	;# 
   612  1F11                     	;# 
   613  1F12                     	;# 
   614  1F14                     	;# 
   615  1F15                     	;# 
   616  1F1C                     	;# 
   617  1F1D                     	;# 
   618  1F1E                     	;# 
   619  1F1F                     	;# 
   620  1F20                     	;# 
   621  1F21                     	;# 
   622  1F22                     	;# 
   623  1F23                     	;# 
   624  1F24                     	;# 
   625  1F25                     	;# 
   626  1F26                     	;# 
   627  1F27                     	;# 
   628  1F38                     	;# 
   629  1F39                     	;# 
   630  1F3A                     	;# 
   631  1F3B                     	;# 
   632  1F3C                     	;# 
   633  1F3D                     	;# 
   634  1F3E                     	;# 
   635  1F3F                     	;# 
   636  1F43                     	;# 
   637  1F44                     	;# 
   638  1F45                     	;# 
   639  1F46                     	;# 
   640  1F47                     	;# 
   641  1F48                     	;# 
   642  1F49                     	;# 
   643  1F4A                     	;# 
   644  1F4E                     	;# 
   645  1F4F                     	;# 
   646  1F50                     	;# 
   647  1F51                     	;# 
   648  1F52                     	;# 
   649  1F53                     	;# 
   650  1F54                     	;# 
   651  1F55                     	;# 
   652  1FE4                     	;# 
   653  1FE5                     	;# 
   654  1FE6                     	;# 
   655  1FE7                     	;# 
   656  1FE8                     	;# 
   657  1FE8                     	;# 
   658  1FE9                     	;# 
   659  1FEA                     	;# 
   660  1FEB                     	;# 
   661  1FED                     	;# 
   662  1FEE                     	;# 
   663  1FEF                     	;# 
   664  0000                     	;# 
   665  0001                     	;# 
   666  0002                     	;# 
   667  0003                     	;# 
   668  0004                     	;# 
   669  0005                     	;# 
   670  0006                     	;# 
   671  0007                     	;# 
   672  0008                     	;# 
   673  0009                     	;# 
   674  000A                     	;# 
   675  000B                     	;# 
   676  000C                     	;# 
   677  000D                     	;# 
   678  000E                     	;# 
   679  0012                     	;# 
   680  0013                     	;# 
   681  0014                     	;# 
   682  0018                     	;# 
   683  0019                     	;# 
   684  001A                     	;# 
   685  008C                     	;# 
   686  008C                     	;# 
   687  008D                     	;# 
   688  008E                     	;# 
   689  008E                     	;# 
   690  008F                     	;# 
   691  0090                     	;# 
   692  0090                     	;# 
   693  0091                     	;# 
   694  0092                     	;# 
   695  0092                     	;# 
   696  0093                     	;# 
   697  0094                     	;# 
   698  0094                     	;# 
   699  0095                     	;# 
   700  0096                     	;# 
   701  0096                     	;# 
   702  0097                     	;# 
   703  0098                     	;# 
   704  0099                     	;# 
   705  009A                     	;# 
   706  009B                     	;# 
   707  009B                     	;# 
   708  009C                     	;# 
   709  009D                     	;# 
   710  009D                     	;# 
   711  009E                     	;# 
   712  009F                     	;# 
   713  010C                     	;# 
   714  010C                     	;# 
   715  010D                     	;# 
   716  010E                     	;# 
   717  010F                     	;# 
   718  010F                     	;# 
   719  0110                     	;# 
   720  0111                     	;# 
   721  0112                     	;# 
   722  0113                     	;# 
   723  0114                     	;# 
   724  0115                     	;# 
   725  0116                     	;# 
   726  0117                     	;# 
   727  0118                     	;# 
   728  0119                     	;# 
   729  0119                     	;# 
   730  0119                     	;# 
   731  011A                     	;# 
   732  011A                     	;# 
   733  011A                     	;# 
   734  011B                     	;# 
   735  011B                     	;# 
   736  011B                     	;# 
   737  011B                     	;# 
   738  011B                     	;# 
   739  011C                     	;# 
   740  011C                     	;# 
   741  011C                     	;# 
   742  011D                     	;# 
   743  011D                     	;# 
   744  011D                     	;# 
   745  011E                     	;# 
   746  011E                     	;# 
   747  011E                     	;# 
   748  011F                     	;# 
   749  011F                     	;# 
   750  011F                     	;# 
   751  011F                     	;# 
   752  011F                     	;# 
   753  018C                     	;# 
   754  018D                     	;# 
   755  018E                     	;# 
   756  018F                     	;# 
   757  0190                     	;# 
   758  0191                     	;# 
   759  0192                     	;# 
   760  0196                     	;# 
   761  0197                     	;# 
   762  0198                     	;# 
   763  0199                     	;# 
   764  019A                     	;# 
   765  019B                     	;# 
   766  019C                     	;# 
   767  020C                     	;# 
   768  020D                     	;# 
   769  020E                     	;# 
   770  020E                     	;# 
   771  020F                     	;# 
   772  020F                     	;# 
   773  0210                     	;# 
   774  0210                     	;# 
   775  0211                     	;# 
   776  0211                     	;# 
   777  0212                     	;# 
   778  0213                     	;# 
   779  0214                     	;# 
   780  0214                     	;# 
   781  0215                     	;# 
   782  0215                     	;# 
   783  0216                     	;# 
   784  0216                     	;# 
   785  0217                     	;# 
   786  0217                     	;# 
   787  0218                     	;# 
   788  0219                     	;# 
   789  021A                     	;# 
   790  021A                     	;# 
   791  021B                     	;# 
   792  021B                     	;# 
   793  021C                     	;# 
   794  021C                     	;# 
   795  021D                     	;# 
   796  021D                     	;# 
   797  021E                     	;# 
   798  021F                     	;# 
   799  028C                     	;# 
   800  028C                     	;# 
   801  028D                     	;# 
   802  028D                     	;# 
   803  028E                     	;# 
   804  028F                     	;# 
   805  0290                     	;# 
   806  0291                     	;# 
   807  0292                     	;# 
   808  0292                     	;# 
   809  0293                     	;# 
   810  0293                     	;# 
   811  0294                     	;# 
   812  0295                     	;# 
   813  0296                     	;# 
   814  0297                     	;# 
   815  0298                     	;# 
   816  0298                     	;# 
   817  0299                     	;# 
   818  0299                     	;# 
   819  029A                     	;# 
   820  029B                     	;# 
   821  029C                     	;# 
   822  029D                     	;# 
   823  029F                     	;# 
   824  030C                     	;# 
   825  030C                     	;# 
   826  030D                     	;# 
   827  030E                     	;# 
   828  030F                     	;# 
   829  0310                     	;# 
   830  0310                     	;# 
   831  0311                     	;# 
   832  0312                     	;# 
   833  0313                     	;# 
   834  0314                     	;# 
   835  0314                     	;# 
   836  0315                     	;# 
   837  0316                     	;# 
   838  0317                     	;# 
   839  0318                     	;# 
   840  0318                     	;# 
   841  0319                     	;# 
   842  031A                     	;# 
   843  031B                     	;# 
   844  038C                     	;# 
   845  038C                     	;# 
   846  038D                     	;# 
   847  038E                     	;# 
   848  0390                     	;# 
   849  0390                     	;# 
   850  0391                     	;# 
   851  0392                     	;# 
   852  048C                     	;# 
   853  048C                     	;# 
   854  048D                     	;# 
   855  048E                     	;# 
   856  048F                     	;# 
   857  048F                     	;# 
   858  0490                     	;# 
   859  0491                     	;# 
   860  0492                     	;# 
   861  0492                     	;# 
   862  0493                     	;# 
   863  0494                     	;# 
   864  0495                     	;# 
   865  0495                     	;# 
   866  0496                     	;# 
   867  0497                     	;# 
   868  0498                     	;# 
   869  0499                     	;# 
   870  049A                     	;# 
   871  049B                     	;# 
   872  049C                     	;# 
   873  049D                     	;# 
   874  058C                     	;# 
   875  058C                     	;# 
   876  058D                     	;# 
   877  058E                     	;# 
   878  058F                     	;# 
   879  058F                     	;# 
   880  0590                     	;# 
   881  0591                     	;# 
   882  0592                     	;# 
   883  0593                     	;# 
   884  059C                     	;# 
   885  059C                     	;# 
   886  059D                     	;# 
   887  059D                     	;# 
   888  059E                     	;# 
   889  059F                     	;# 
   890  060C                     	;# 
   891  060C                     	;# 
   892  060D                     	;# 
   893  060D                     	;# 
   894  060E                     	;# 
   895  060F                     	;# 
   896  0610                     	;# 
   897  0611                     	;# 
   898  0612                     	;# 
   899  0613                     	;# 
   900  0614                     	;# 
   901  0616                     	;# 
   902  0616                     	;# 
   903  0617                     	;# 
   904  0617                     	;# 
   905  0618                     	;# 
   906  0619                     	;# 
   907  061A                     	;# 
   908  061B                     	;# 
   909  061C                     	;# 
   910  061D                     	;# 
   911  061E                     	;# 
   912  070C                     	;# 
   913  070D                     	;# 
   914  070E                     	;# 
   915  070F                     	;# 
   916  0710                     	;# 
   917  0711                     	;# 
   918  0712                     	;# 
   919  0713                     	;# 
   920  0714                     	;# 
   921  0716                     	;# 
   922  0717                     	;# 
   923  0718                     	;# 
   924  0719                     	;# 
   925  071A                     	;# 
   926  071B                     	;# 
   927  071C                     	;# 
   928  071D                     	;# 
   929  071E                     	;# 
   930  0796                     	;# 
   931  0797                     	;# 
   932  0798                     	;# 
   933  0799                     	;# 
   934  079A                     	;# 
   935  079B                     	;# 
   936  079C                     	;# 
   937  079D                     	;# 
   938  080C                     	;# 
   939  080D                     	;# 
   940  080E                     	;# 
   941  080F                     	;# 
   942  0810                     	;# 
   943  0811                     	;# 
   944  0812                     	;# 
   945  0813                     	;# 
   946  0814                     	;# 
   947  081A                     	;# 
   948  081A                     	;# 
   949  081B                     	;# 
   950  081C                     	;# 
   951  081C                     	;# 
   952  081D                     	;# 
   953  081E                     	;# 
   954  081F                     	;# 
   955  088C                     	;# 
   956  088D                     	;# 
   957  088E                     	;# 
   958  088F                     	;# 
   959  0890                     	;# 
   960  0891                     	;# 
   961  0892                     	;# 
   962  0893                     	;# 
   963  0895                     	;# 
   964  0896                     	;# 
   965  0897                     	;# 
   966  0898                     	;# 
   967  0899                     	;# 
   968  089A                     	;# 
   969  089B                     	;# 
   970  090C                     	;# 
   971  090E                     	;# 
   972  090F                     	;# 
   973  091F                     	;# 
   974  098F                     	;# 
   975  098F                     	;# 
   976  0990                     	;# 
   977  0991                     	;# 
   978  0992                     	;# 
   979  0993                     	;# 
   980  0994                     	;# 
   981  0995                     	;# 
   982  0996                     	;# 
   983  0997                     	;# 
   984  1E0F                     	;# 
   985  1E10                     	;# 
   986  1E11                     	;# 
   987  1E12                     	;# 
   988  1E13                     	;# 
   989  1E14                     	;# 
   990  1E15                     	;# 
   991  1E16                     	;# 
   992  1E17                     	;# 
   993  1E18                     	;# 
   994  1E19                     	;# 
   995  1E1A                     	;# 
   996  1E1B                     	;# 
   997  1E1C                     	;# 
   998  1E1D                     	;# 
   999  1E1E                     	;# 
  1000  1E1F                     	;# 
  1001  1E20                     	;# 
  1002  1E21                     	;# 
  1003  1E22                     	;# 
  1004  1E23                     	;# 
  1005  1E24                     	;# 
  1006  1E25                     	;# 
  1007  1E26                     	;# 
  1008  1E27                     	;# 
  1009  1E28                     	;# 
  1010  1E29                     	;# 
  1011  1E2A                     	;# 
  1012  1E2B                     	;# 
  1013  1E2C                     	;# 
  1014  1E2D                     	;# 
  1015  1E2E                     	;# 
  1016  1E2F                     	;# 
  1017  1E30                     	;# 
  1018  1E31                     	;# 
  1019  1E32                     	;# 
  1020  1E33                     	;# 
  1021  1E34                     	;# 
  1022  1E35                     	;# 
  1023  1E36                     	;# 
  1024  1E37                     	;# 
  1025  1E8F                     	;# 
  1026  1E90                     	;# 
  1027  1E91                     	;# 
  1028  1E92                     	;# 
  1029  1E93                     	;# 
  1030  1E94                     	;# 
  1031  1E95                     	;# 
  1032  1E96                     	;# 
  1033  1E97                     	;# 
  1034  1E9C                     	;# 
  1035  1E9D                     	;# 
  1036  1E9E                     	;# 
  1037  1EA1                     	;# 
  1038  1EA2                     	;# 
  1039  1EA3                     	;# 
  1040  1EA4                     	;# 
  1041  1EA9                     	;# 
  1042  1EAA                     	;# 
  1043  1EB1                     	;# 
  1044  1EB2                     	;# 
  1045  1EB8                     	;# 
  1046  1EB9                     	;# 
  1047  1EBA                     	;# 
  1048  1EBB                     	;# 
  1049  1EBC                     	;# 
  1050  1EBD                     	;# 
  1051  1EBE                     	;# 
  1052  1EC3                     	;# 
  1053  1EC5                     	;# 
  1054  1EC6                     	;# 
  1055  1EC7                     	;# 
  1056  1EC8                     	;# 
  1057  1EC9                     	;# 
  1058  1ECA                     	;# 
  1059  1ECB                     	;# 
  1060  1ECB                     	;# 
  1061  1ECB                     	;# 
  1062  1ECC                     	;# 
  1063  1ECC                     	;# 
  1064  1ECC                     	;# 
  1065  1F10                     	;# 
  1066  1F11                     	;# 
  1067  1F12                     	;# 
  1068  1F14                     	;# 
  1069  1F15                     	;# 
  1070  1F1C                     	;# 
  1071  1F1D                     	;# 
  1072  1F1E                     	;# 
  1073  1F1F                     	;# 
  1074  1F20                     	;# 
  1075  1F21                     	;# 
  1076  1F22                     	;# 
  1077  1F23                     	;# 
  1078  1F24                     	;# 
  1079  1F25                     	;# 
  1080  1F26                     	;# 
  1081  1F27                     	;# 
  1082  1F38                     	;# 
  1083  1F39                     	;# 
  1084  1F3A                     	;# 
  1085  1F3B                     	;# 
  1086  1F3C                     	;# 
  1087  1F3D                     	;# 
  1088  1F3E                     	;# 
  1089  1F3F                     	;# 
  1090  1F43                     	;# 
  1091  1F44                     	;# 
  1092  1F45                     	;# 
  1093  1F46                     	;# 
  1094  1F47                     	;# 
  1095  1F48                     	;# 
  1096  1F49                     	;# 
  1097  1F4A                     	;# 
  1098  1F4E                     	;# 
  1099  1F4F                     	;# 
  1100  1F50                     	;# 
  1101  1F51                     	;# 
  1102  1F52                     	;# 
  1103  1F53                     	;# 
  1104  1F54                     	;# 
  1105  1F55                     	;# 
  1106  1FE4                     	;# 
  1107  1FE5                     	;# 
  1108  1FE6                     	;# 
  1109  1FE7                     	;# 
  1110  1FE8                     	;# 
  1111  1FE8                     	;# 
  1112  1FE9                     	;# 
  1113  1FEA                     	;# 
  1114  1FEB                     	;# 
  1115  1FED                     	;# 
  1116  1FEE                     	;# 
  1117  1FEF                     	;# 
  1118  0000                     	;# 
  1119  0001                     	;# 
  1120  0002                     	;# 
  1121  0003                     	;# 
  1122  0004                     	;# 
  1123  0005                     	;# 
  1124  0006                     	;# 
  1125  0007                     	;# 
  1126  0008                     	;# 
  1127  0009                     	;# 
  1128  000A                     	;# 
  1129  000B                     	;# 
  1130  000C                     	;# 
  1131  000D                     	;# 
  1132  000E                     	;# 
  1133  0012                     	;# 
  1134  0013                     	;# 
  1135  0014                     	;# 
  1136  0018                     	;# 
  1137  0019                     	;# 
  1138  001A                     	;# 
  1139  008C                     	;# 
  1140  008C                     	;# 
  1141  008D                     	;# 
  1142  008E                     	;# 
  1143  008E                     	;# 
  1144  008F                     	;# 
  1145  0090                     	;# 
  1146  0090                     	;# 
  1147  0091                     	;# 
  1148  0092                     	;# 
  1149  0092                     	;# 
  1150  0093                     	;# 
  1151  0094                     	;# 
  1152  0094                     	;# 
  1153  0095                     	;# 
  1154  0096                     	;# 
  1155  0096                     	;# 
  1156  0097                     	;# 
  1157  0098                     	;# 
  1158  0099                     	;# 
  1159  009A                     	;# 
  1160  009B                     	;# 
  1161  009B                     	;# 
  1162  009C                     	;# 
  1163  009D                     	;# 
  1164  009D                     	;# 
  1165  009E                     	;# 
  1166  009F                     	;# 
  1167  010C                     	;# 
  1168  010C                     	;# 
  1169  010D                     	;# 
  1170  010E                     	;# 
  1171  010F                     	;# 
  1172  010F                     	;# 
  1173  0110                     	;# 
  1174  0111                     	;# 
  1175  0112                     	;# 
  1176  0113                     	;# 
  1177  0114                     	;# 
  1178  0115                     	;# 
  1179  0116                     	;# 
  1180  0117                     	;# 
  1181  0118                     	;# 
  1182  0119                     	;# 
  1183  0119                     	;# 
  1184  0119                     	;# 
  1185  011A                     	;# 
  1186  011A                     	;# 
  1187  011A                     	;# 
  1188  011B                     	;# 
  1189  011B                     	;# 
  1190  011B                     	;# 
  1191  011B                     	;# 
  1192  011B                     	;# 
  1193  011C                     	;# 
  1194  011C                     	;# 
  1195  011C                     	;# 
  1196  011D                     	;# 
  1197  011D                     	;# 
  1198  011D                     	;# 
  1199  011E                     	;# 
  1200  011E                     	;# 
  1201  011E                     	;# 
  1202  011F                     	;# 
  1203  011F                     	;# 
  1204  011F                     	;# 
  1205  011F                     	;# 
  1206  011F                     	;# 
  1207  018C                     	;# 
  1208  018D                     	;# 
  1209  018E                     	;# 
  1210  018F                     	;# 
  1211  0190                     	;# 
  1212  0191                     	;# 
  1213  0192                     	;# 
  1214  0196                     	;# 
  1215  0197                     	;# 
  1216  0198                     	;# 
  1217  0199                     	;# 
  1218  019A                     	;# 
  1219  019B                     	;# 
  1220  019C                     	;# 
  1221  020C                     	;# 
  1222  020D                     	;# 
  1223  020E                     	;# 
  1224  020E                     	;# 
  1225  020F                     	;# 
  1226  020F                     	;# 
  1227  0210                     	;# 
  1228  0210                     	;# 
  1229  0211                     	;# 
  1230  0211                     	;# 
  1231  0212                     	;# 
  1232  0213                     	;# 
  1233  0214                     	;# 
  1234  0214                     	;# 
  1235  0215                     	;# 
  1236  0215                     	;# 
  1237  0216                     	;# 
  1238  0216                     	;# 
  1239  0217                     	;# 
  1240  0217                     	;# 
  1241  0218                     	;# 
  1242  0219                     	;# 
  1243  021A                     	;# 
  1244  021A                     	;# 
  1245  021B                     	;# 
  1246  021B                     	;# 
  1247  021C                     	;# 
  1248  021C                     	;# 
  1249  021D                     	;# 
  1250  021D                     	;# 
  1251  021E                     	;# 
  1252  021F                     	;# 
  1253  028C                     	;# 
  1254  028C                     	;# 
  1255  028D                     	;# 
  1256  028D                     	;# 
  1257  028E                     	;# 
  1258  028F                     	;# 
  1259  0290                     	;# 
  1260  0291                     	;# 
  1261  0292                     	;# 
  1262  0292                     	;# 
  1263  0293                     	;# 
  1264  0293                     	;# 
  1265  0294                     	;# 
  1266  0295                     	;# 
  1267  0296                     	;# 
  1268  0297                     	;# 
  1269  0298                     	;# 
  1270  0298                     	;# 
  1271  0299                     	;# 
  1272  0299                     	;# 
  1273  029A                     	;# 
  1274  029B                     	;# 
  1275  029C                     	;# 
  1276  029D                     	;# 
  1277  029F                     	;# 
  1278  030C                     	;# 
  1279  030C                     	;# 
  1280  030D                     	;# 
  1281  030E                     	;# 
  1282  030F                     	;# 
  1283  0310                     	;# 
  1284  0310                     	;# 
  1285  0311                     	;# 
  1286  0312                     	;# 
  1287  0313                     	;# 
  1288  0314                     	;# 
  1289  0314                     	;# 
  1290  0315                     	;# 
  1291  0316                     	;# 
  1292  0317                     	;# 
  1293  0318                     	;# 
  1294  0318                     	;# 
  1295  0319                     	;# 
  1296  031A                     	;# 
  1297  031B                     	;# 
  1298  038C                     	;# 
  1299  038C                     	;# 
  1300  038D                     	;# 
  1301  038E                     	;# 
  1302  0390                     	;# 
  1303  0390                     	;# 
  1304  0391                     	;# 
  1305  0392                     	;# 
  1306  048C                     	;# 
  1307  048C                     	;# 
  1308  048D                     	;# 
  1309  048E                     	;# 
  1310  048F                     	;# 
  1311  048F                     	;# 
  1312  0490                     	;# 
  1313  0491                     	;# 
  1314  0492                     	;# 
  1315  0492                     	;# 
  1316  0493                     	;# 
  1317  0494                     	;# 
  1318  0495                     	;# 
  1319  0495                     	;# 
  1320  0496                     	;# 
  1321  0497                     	;# 
  1322  0498                     	;# 
  1323  0499                     	;# 
  1324  049A                     	;# 
  1325  049B                     	;# 
  1326  049C                     	;# 
  1327  049D                     	;# 
  1328  058C                     	;# 
  1329  058C                     	;# 
  1330  058D                     	;# 
  1331  058E                     	;# 
  1332  058F                     	;# 
  1333  058F                     	;# 
  1334  0590                     	;# 
  1335  0591                     	;# 
  1336  0592                     	;# 
  1337  0593                     	;# 
  1338  059C                     	;# 
  1339  059C                     	;# 
  1340  059D                     	;# 
  1341  059D                     	;# 
  1342  059E                     	;# 
  1343  059F                     	;# 
  1344  060C                     	;# 
  1345  060C                     	;# 
  1346  060D                     	;# 
  1347  060D                     	;# 
  1348  060E                     	;# 
  1349  060F                     	;# 
  1350  0610                     	;# 
  1351  0611                     	;# 
  1352  0612                     	;# 
  1353  0613                     	;# 
  1354  0614                     	;# 
  1355  0616                     	;# 
  1356  0616                     	;# 
  1357  0617                     	;# 
  1358  0617                     	;# 
  1359  0618                     	;# 
  1360  0619                     	;# 
  1361  061A                     	;# 
  1362  061B                     	;# 
  1363  061C                     	;# 
  1364  061D                     	;# 
  1365  061E                     	;# 
  1366  070C                     	;# 
  1367  070D                     	;# 
  1368  070E                     	;# 
  1369  070F                     	;# 
  1370  0710                     	;# 
  1371  0711                     	;# 
  1372  0712                     	;# 
  1373  0713                     	;# 
  1374  0714                     	;# 
  1375  0716                     	;# 
  1376  0717                     	;# 
  1377  0718                     	;# 
  1378  0719                     	;# 
  1379  071A                     	;# 
  1380  071B                     	;# 
  1381  071C                     	;# 
  1382  071D                     	;# 
  1383  071E                     	;# 
  1384  0796                     	;# 
  1385  0797                     	;# 
  1386  0798                     	;# 
  1387  0799                     	;# 
  1388  079A                     	;# 
  1389  079B                     	;# 
  1390  079C                     	;# 
  1391  079D                     	;# 
  1392  080C                     	;# 
  1393  080D                     	;# 
  1394  080E                     	;# 
  1395  080F                     	;# 
  1396  0810                     	;# 
  1397  0811                     	;# 
  1398  0812                     	;# 
  1399  0813                     	;# 
  1400  0814                     	;# 
  1401  081A                     	;# 
  1402  081A                     	;# 
  1403  081B                     	;# 
  1404  081C                     	;# 
  1405  081C                     	;# 
  1406  081D                     	;# 
  1407  081E                     	;# 
  1408  081F                     	;# 
  1409  088C                     	;# 
  1410  088D                     	;# 
  1411  088E                     	;# 
  1412  088F                     	;# 
  1413  0890                     	;# 
  1414  0891                     	;# 
  1415  0892                     	;# 
  1416  0893                     	;# 
  1417  0895                     	;# 
  1418  0896                     	;# 
  1419  0897                     	;# 
  1420  0898                     	;# 
  1421  0899                     	;# 
  1422  089A                     	;# 
  1423  089B                     	;# 
  1424  090C                     	;# 
  1425  090E                     	;# 
  1426  090F                     	;# 
  1427  091F                     	;# 
  1428  098F                     	;# 
  1429  098F                     	;# 
  1430  0990                     	;# 
  1431  0991                     	;# 
  1432  0992                     	;# 
  1433  0993                     	;# 
  1434  0994                     	;# 
  1435  0995                     	;# 
  1436  0996                     	;# 
  1437  0997                     	;# 
  1438  1E0F                     	;# 
  1439  1E10                     	;# 
  1440  1E11                     	;# 
  1441  1E12                     	;# 
  1442  1E13                     	;# 
  1443  1E14                     	;# 
  1444  1E15                     	;# 
  1445  1E16                     	;# 
  1446  1E17                     	;# 
  1447  1E18                     	;# 
  1448  1E19                     	;# 
  1449  1E1A                     	;# 
  1450  1E1B                     	;# 
  1451  1E1C                     	;# 
  1452  1E1D                     	;# 
  1453  1E1E                     	;# 
  1454  1E1F                     	;# 
  1455  1E20                     	;# 
  1456  1E21                     	;# 
  1457  1E22                     	;# 
  1458  1E23                     	;# 
  1459  1E24                     	;# 
  1460  1E25                     	;# 
  1461  1E26                     	;# 
  1462  1E27                     	;# 
  1463  1E28                     	;# 
  1464  1E29                     	;# 
  1465  1E2A                     	;# 
  1466  1E2B                     	;# 
  1467  1E2C                     	;# 
  1468  1E2D                     	;# 
  1469  1E2E                     	;# 
  1470  1E2F                     	;# 
  1471  1E30                     	;# 
  1472  1E31                     	;# 
  1473  1E32                     	;# 
  1474  1E33                     	;# 
  1475  1E34                     	;# 
  1476  1E35                     	;# 
  1477  1E36                     	;# 
  1478  1E37                     	;# 
  1479  1E8F                     	;# 
  1480  1E90                     	;# 
  1481  1E91                     	;# 
  1482  1E92                     	;# 
  1483  1E93                     	;# 
  1484  1E94                     	;# 
  1485  1E95                     	;# 
  1486  1E96                     	;# 
  1487  1E97                     	;# 
  1488  1E9C                     	;# 
  1489  1E9D                     	;# 
  1490  1E9E                     	;# 
  1491  1EA1                     	;# 
  1492  1EA2                     	;# 
  1493  1EA3                     	;# 
  1494  1EA4                     	;# 
  1495  1EA9                     	;# 
  1496  1EAA                     	;# 
  1497  1EB1                     	;# 
  1498  1EB2                     	;# 
  1499  1EB8                     	;# 
  1500  1EB9                     	;# 
  1501  1EBA                     	;# 
  1502  1EBB                     	;# 
  1503  1EBC                     	;# 
  1504  1EBD                     	;# 
  1505  1EBE                     	;# 
  1506  1EC3                     	;# 
  1507  1EC5                     	;# 
  1508  1EC6                     	;# 
  1509  1EC7                     	;# 
  1510  1EC8                     	;# 
  1511  1EC9                     	;# 
  1512  1ECA                     	;# 
  1513  1ECB                     	;# 
  1514  1ECB                     	;# 
  1515  1ECB                     	;# 
  1516  1ECC                     	;# 
  1517  1ECC                     	;# 
  1518  1ECC                     	;# 
  1519  1F10                     	;# 
  1520  1F11                     	;# 
  1521  1F12                     	;# 
  1522  1F14                     	;# 
  1523  1F15                     	;# 
  1524  1F1C                     	;# 
  1525  1F1D                     	;# 
  1526  1F1E                     	;# 
  1527  1F1F                     	;# 
  1528  1F20                     	;# 
  1529  1F21                     	;# 
  1530  1F22                     	;# 
  1531  1F23                     	;# 
  1532  1F24                     	;# 
  1533  1F25                     	;# 
  1534  1F26                     	;# 
  1535  1F27                     	;# 
  1536  1F38                     	;# 
  1537  1F39                     	;# 
  1538  1F3A                     	;# 
  1539  1F3B                     	;# 
  1540  1F3C                     	;# 
  1541  1F3D                     	;# 
  1542  1F3E                     	;# 
  1543  1F3F                     	;# 
  1544  1F43                     	;# 
  1545  1F44                     	;# 
  1546  1F45                     	;# 
  1547  1F46                     	;# 
  1548  1F47                     	;# 
  1549  1F48                     	;# 
  1550  1F49                     	;# 
  1551  1F4A                     	;# 
  1552  1F4E                     	;# 
  1553  1F4F                     	;# 
  1554  1F50                     	;# 
  1555  1F51                     	;# 
  1556  1F52                     	;# 
  1557  1F53                     	;# 
  1558  1F54                     	;# 
  1559  1F55                     	;# 
  1560  1FE4                     	;# 
  1561  1FE5                     	;# 
  1562  1FE6                     	;# 
  1563  1FE7                     	;# 
  1564  1FE8                     	;# 
  1565  1FE8                     	;# 
  1566  1FE9                     	;# 
  1567  1FEA                     	;# 
  1568  1FEB                     	;# 
  1569  1FED                     	;# 
  1570  1FEE                     	;# 
  1571  1FEF                     	;# 
  1572  0000                     	;# 
  1573  0001                     	;# 
  1574  0002                     	;# 
  1575  0003                     	;# 
  1576  0004                     	;# 
  1577  0005                     	;# 
  1578  0006                     	;# 
  1579  0007                     	;# 
  1580  0008                     	;# 
  1581  0009                     	;# 
  1582  000A                     	;# 
  1583  000B                     	;# 
  1584  000C                     	;# 
  1585  000D                     	;# 
  1586  000E                     	;# 
  1587  0012                     	;# 
  1588  0013                     	;# 
  1589  0014                     	;# 
  1590  0018                     	;# 
  1591  0019                     	;# 
  1592  001A                     	;# 
  1593  008C                     	;# 
  1594  008C                     	;# 
  1595  008D                     	;# 
  1596  008E                     	;# 
  1597  008E                     	;# 
  1598  008F                     	;# 
  1599  0090                     	;# 
  1600  0090                     	;# 
  1601  0091                     	;# 
  1602  0092                     	;# 
  1603  0092                     	;# 
  1604  0093                     	;# 
  1605  0094                     	;# 
  1606  0094                     	;# 
  1607  0095                     	;# 
  1608  0096                     	;# 
  1609  0096                     	;# 
  1610  0097                     	;# 
  1611  0098                     	;# 
  1612  0099                     	;# 
  1613  009A                     	;# 
  1614  009B                     	;# 
  1615  009B                     	;# 
  1616  009C                     	;# 
  1617  009D                     	;# 
  1618  009D                     	;# 
  1619  009E                     	;# 
  1620  009F                     	;# 
  1621  010C                     	;# 
  1622  010C                     	;# 
  1623  010D                     	;# 
  1624  010E                     	;# 
  1625  010F                     	;# 
  1626  010F                     	;# 
  1627  0110                     	;# 
  1628  0111                     	;# 
  1629  0112                     	;# 
  1630  0113                     	;# 
  1631  0114                     	;# 
  1632  0115                     	;# 
  1633  0116                     	;# 
  1634  0117                     	;# 
  1635  0118                     	;# 
  1636  0119                     	;# 
  1637  0119                     	;# 
  1638  0119                     	;# 
  1639  011A                     	;# 
  1640  011A                     	;# 
  1641  011A                     	;# 
  1642  011B                     	;# 
  1643  011B                     	;# 
  1644  011B                     	;# 
  1645  011B                     	;# 
  1646  011B                     	;# 
  1647  011C                     	;# 
  1648  011C                     	;# 
  1649  011C                     	;# 
  1650  011D                     	;# 
  1651  011D                     	;# 
  1652  011D                     	;# 
  1653  011E                     	;# 
  1654  011E                     	;# 
  1655  011E                     	;# 
  1656  011F                     	;# 
  1657  011F                     	;# 
  1658  011F                     	;# 
  1659  011F                     	;# 
  1660  011F                     	;# 
  1661  018C                     	;# 
  1662  018D                     	;# 
  1663  018E                     	;# 
  1664  018F                     	;# 
  1665  0190                     	;# 
  1666  0191                     	;# 
  1667  0192                     	;# 
  1668  0196                     	;# 
  1669  0197                     	;# 
  1670  0198                     	;# 
  1671  0199                     	;# 
  1672  019A                     	;# 
  1673  019B                     	;# 
  1674  019C                     	;# 
  1675  020C                     	;# 
  1676  020D                     	;# 
  1677  020E                     	;# 
  1678  020E                     	;# 
  1679  020F                     	;# 
  1680  020F                     	;# 
  1681  0210                     	;# 
  1682  0210                     	;# 
  1683  0211                     	;# 
  1684  0211                     	;# 
  1685  0212                     	;# 
  1686  0213                     	;# 
  1687  0214                     	;# 
  1688  0214                     	;# 
  1689  0215                     	;# 
  1690  0215                     	;# 
  1691  0216                     	;# 
  1692  0216                     	;# 
  1693  0217                     	;# 
  1694  0217                     	;# 
  1695  0218                     	;# 
  1696  0219                     	;# 
  1697  021A                     	;# 
  1698  021A                     	;# 
  1699  021B                     	;# 
  1700  021B                     	;# 
  1701  021C                     	;# 
  1702  021C                     	;# 
  1703  021D                     	;# 
  1704  021D                     	;# 
  1705  021E                     	;# 
  1706  021F                     	;# 
  1707  028C                     	;# 
  1708  028C                     	;# 
  1709  028D                     	;# 
  1710  028D                     	;# 
  1711  028E                     	;# 
  1712  028F                     	;# 
  1713  0290                     	;# 
  1714  0291                     	;# 
  1715  0292                     	;# 
  1716  0292                     	;# 
  1717  0293                     	;# 
  1718  0293                     	;# 
  1719  0294                     	;# 
  1720  0295                     	;# 
  1721  0296                     	;# 
  1722  0297                     	;# 
  1723  0298                     	;# 
  1724  0298                     	;# 
  1725  0299                     	;# 
  1726  0299                     	;# 
  1727  029A                     	;# 
  1728  029B                     	;# 
  1729  029C                     	;# 
  1730  029D                     	;# 
  1731  029F                     	;# 
  1732  030C                     	;# 
  1733  030C                     	;# 
  1734  030D                     	;# 
  1735  030E                     	;# 
  1736  030F                     	;# 
  1737  0310                     	;# 
  1738  0310                     	;# 
  1739  0311                     	;# 
  1740  0312                     	;# 
  1741  0313                     	;# 
  1742  0314                     	;# 
  1743  0314                     	;# 
  1744  0315                     	;# 
  1745  0316                     	;# 
  1746  0317                     	;# 
  1747  0318                     	;# 
  1748  0318                     	;# 
  1749  0319                     	;# 
  1750  031A                     	;# 
  1751  031B                     	;# 
  1752  038C                     	;# 
  1753  038C                     	;# 
  1754  038D                     	;# 
  1755  038E                     	;# 
  1756  0390                     	;# 
  1757  0390                     	;# 
  1758  0391                     	;# 
  1759  0392                     	;# 
  1760  048C                     	;# 
  1761  048C                     	;# 
  1762  048D                     	;# 
  1763  048E                     	;# 
  1764  048F                     	;# 
  1765  048F                     	;# 
  1766  0490                     	;# 
  1767  0491                     	;# 
  1768  0492                     	;# 
  1769  0492                     	;# 
  1770  0493                     	;# 
  1771  0494                     	;# 
  1772  0495                     	;# 
  1773  0495                     	;# 
  1774  0496                     	;# 
  1775  0497                     	;# 
  1776  0498                     	;# 
  1777  0499                     	;# 
  1778  049A                     	;# 
  1779  049B                     	;# 
  1780  049C                     	;# 
  1781  049D                     	;# 
  1782  058C                     	;# 
  1783  058C                     	;# 
  1784  058D                     	;# 
  1785  058E                     	;# 
  1786  058F                     	;# 
  1787  058F                     	;# 
  1788  0590                     	;# 
  1789  0591                     	;# 
  1790  0592                     	;# 
  1791  0593                     	;# 
  1792  059C                     	;# 
  1793  059C                     	;# 
  1794  059D                     	;# 
  1795  059D                     	;# 
  1796  059E                     	;# 
  1797  059F                     	;# 
  1798  060C                     	;# 
  1799  060C                     	;# 
  1800  060D                     	;# 
  1801  060D                     	;# 
  1802  060E                     	;# 
  1803  060F                     	;# 
  1804  0610                     	;# 
  1805  0611                     	;# 
  1806  0612                     	;# 
  1807  0613                     	;# 
  1808  0614                     	;# 
  1809  0616                     	;# 
  1810  0616                     	;# 
  1811  0617                     	;# 
  1812  0617                     	;# 
  1813  0618                     	;# 
  1814  0619                     	;# 
  1815  061A                     	;# 
  1816  061B                     	;# 
  1817  061C                     	;# 
  1818  061D                     	;# 
  1819  061E                     	;# 
  1820  070C                     	;# 
  1821  070D                     	;# 
  1822  070E                     	;# 
  1823  070F                     	;# 
  1824  0710                     	;# 
  1825  0711                     	;# 
  1826  0712                     	;# 
  1827  0713                     	;# 
  1828  0714                     	;# 
  1829  0716                     	;# 
  1830  0717                     	;# 
  1831  0718                     	;# 
  1832  0719                     	;# 
  1833  071A                     	;# 
  1834  071B                     	;# 
  1835  071C                     	;# 
  1836  071D                     	;# 
  1837  071E                     	;# 
  1838  0796                     	;# 
  1839  0797                     	;# 
  1840  0798                     	;# 
  1841  0799                     	;# 
  1842  079A                     	;# 
  1843  079B                     	;# 
  1844  079C                     	;# 
  1845  079D                     	;# 
  1846  080C                     	;# 
  1847  080D                     	;# 
  1848  080E                     	;# 
  1849  080F                     	;# 
  1850  0810                     	;# 
  1851  0811                     	;# 
  1852  0812                     	;# 
  1853  0813                     	;# 
  1854  0814                     	;# 
  1855  081A                     	;# 
  1856  081A                     	;# 
  1857  081B                     	;# 
  1858  081C                     	;# 
  1859  081C                     	;# 
  1860  081D                     	;# 
  1861  081E                     	;# 
  1862  081F                     	;# 
  1863  088C                     	;# 
  1864  088D                     	;# 
  1865  088E                     	;# 
  1866  088F                     	;# 
  1867  0890                     	;# 
  1868  0891                     	;# 
  1869  0892                     	;# 
  1870  0893                     	;# 
  1871  0895                     	;# 
  1872  0896                     	;# 
  1873  0897                     	;# 
  1874  0898                     	;# 
  1875  0899                     	;# 
  1876  089A                     	;# 
  1877  089B                     	;# 
  1878  090C                     	;# 
  1879  090E                     	;# 
  1880  090F                     	;# 
  1881  091F                     	;# 
  1882  098F                     	;# 
  1883  098F                     	;# 
  1884  0990                     	;# 
  1885  0991                     	;# 
  1886  0992                     	;# 
  1887  0993                     	;# 
  1888  0994                     	;# 
  1889  0995                     	;# 
  1890  0996                     	;# 
  1891  0997                     	;# 
  1892  1E0F                     	;# 
  1893  1E10                     	;# 
  1894  1E11                     	;# 
  1895  1E12                     	;# 
  1896  1E13                     	;# 
  1897  1E14                     	;# 
  1898  1E15                     	;# 
  1899  1E16                     	;# 
  1900  1E17                     	;# 
  1901  1E18                     	;# 
  1902  1E19                     	;# 
  1903  1E1A                     	;# 
  1904  1E1B                     	;# 
  1905  1E1C                     	;# 
  1906  1E1D                     	;# 
  1907  1E1E                     	;# 
  1908  1E1F                     	;# 
  1909  1E20                     	;# 
  1910  1E21                     	;# 
  1911  1E22                     	;# 
  1912  1E23                     	;# 
  1913  1E24                     	;# 
  1914  1E25                     	;# 
  1915  1E26                     	;# 
  1916  1E27                     	;# 
  1917  1E28                     	;# 
  1918  1E29                     	;# 
  1919  1E2A                     	;# 
  1920  1E2B                     	;# 
  1921  1E2C                     	;# 
  1922  1E2D                     	;# 
  1923  1E2E                     	;# 
  1924  1E2F                     	;# 
  1925  1E30                     	;# 
  1926  1E31                     	;# 
  1927  1E32                     	;# 
  1928  1E33                     	;# 
  1929  1E34                     	;# 
  1930  1E35                     	;# 
  1931  1E36                     	;# 
  1932  1E37                     	;# 
  1933  1E8F                     	;# 
  1934  1E90                     	;# 
  1935  1E91                     	;# 
  1936  1E92                     	;# 
  1937  1E93                     	;# 
  1938  1E94                     	;# 
  1939  1E95                     	;# 
  1940  1E96                     	;# 
  1941  1E97                     	;# 
  1942  1E9C                     	;# 
  1943  1E9D                     	;# 
  1944  1E9E                     	;# 
  1945  1EA1                     	;# 
  1946  1EA2                     	;# 
  1947  1EA3                     	;# 
  1948  1EA4                     	;# 
  1949  1EA9                     	;# 
  1950  1EAA                     	;# 
  1951  1EB1                     	;# 
  1952  1EB2                     	;# 
  1953  1EB8                     	;# 
  1954  1EB9                     	;# 
  1955  1EBA                     	;# 
  1956  1EBB                     	;# 
  1957  1EBC                     	;# 
  1958  1EBD                     	;# 
  1959  1EBE                     	;# 
  1960  1EC3                     	;# 
  1961  1EC5                     	;# 
  1962  1EC6                     	;# 
  1963  1EC7                     	;# 
  1964  1EC8                     	;# 
  1965  1EC9                     	;# 
  1966  1ECA                     	;# 
  1967  1ECB                     	;# 
  1968  1ECB                     	;# 
  1969  1ECB                     	;# 
  1970  1ECC                     	;# 
  1971  1ECC                     	;# 
  1972  1ECC                     	;# 
  1973  1F10                     	;# 
  1974  1F11                     	;# 
  1975  1F12                     	;# 
  1976  1F14                     	;# 
  1977  1F15                     	;# 
  1978  1F1C                     	;# 
  1979  1F1D                     	;# 
  1980  1F1E                     	;# 
  1981  1F1F                     	;# 
  1982  1F20                     	;# 
  1983  1F21                     	;# 
  1984  1F22                     	;# 
  1985  1F23                     	;# 
  1986  1F24                     	;# 
  1987  1F25                     	;# 
  1988  1F26                     	;# 
  1989  1F27                     	;# 
  1990  1F38                     	;# 
  1991  1F39                     	;# 
  1992  1F3A                     	;# 
  1993  1F3B                     	;# 
  1994  1F3C                     	;# 
  1995  1F3D                     	;# 
  1996  1F3E                     	;# 
  1997  1F3F                     	;# 
  1998  1F43                     	;# 
  1999  1F44                     	;# 
  2000  1F45                     	;# 
  2001  1F46                     	;# 
  2002  1F47                     	;# 
  2003  1F48                     	;# 
  2004  1F49                     	;# 
  2005  1F4A                     	;# 
  2006  1F4E                     	;# 
  2007  1F4F                     	;# 
  2008  1F50                     	;# 
  2009  1F51                     	;# 
  2010  1F52                     	;# 
  2011  1F53                     	;# 
  2012  1F54                     	;# 
  2013  1F55                     	;# 
  2014  1FE4                     	;# 
  2015  1FE5                     	;# 
  2016  1FE6                     	;# 
  2017  1FE7                     	;# 
  2018  1FE8                     	;# 
  2019  1FE8                     	;# 
  2020  1FE9                     	;# 
  2021  1FEA                     	;# 
  2022  1FEB                     	;# 
  2023  1FED                     	;# 
  2024  1FEE                     	;# 
  2025  1FEF                     	;# 
  2026  0000                     	;# 
  2027  0001                     	;# 
  2028  0002                     	;# 
  2029  0003                     	;# 
  2030  0004                     	;# 
  2031  0005                     	;# 
  2032  0006                     	;# 
  2033  0007                     	;# 
  2034  0008                     	;# 
  2035  0009                     	;# 
  2036  000A                     	;# 
  2037  000B                     	;# 
  2038  000C                     	;# 
  2039  000D                     	;# 
  2040  000E                     	;# 
  2041  0012                     	;# 
  2042  0013                     	;# 
  2043  0014                     	;# 
  2044  0018                     	;# 
  2045  0019                     	;# 
  2046  001A                     	;# 
  2047  008C                     	;# 
  2048  008C                     	;# 
  2049  008D                     	;# 
  2050  008E                     	;# 
  2051  008E                     	;# 
  2052  008F                     	;# 
  2053  0090                     	;# 
  2054  0090                     	;# 
  2055  0091                     	;# 
  2056  0092                     	;# 
  2057  0092                     	;# 
  2058  0093                     	;# 
  2059  0094                     	;# 
  2060  0094                     	;# 
  2061  0095                     	;# 
  2062  0096                     	;# 
  2063  0096                     	;# 
  2064  0097                     	;# 
  2065  0098                     	;# 
  2066  0099                     	;# 
  2067  009A                     	;# 
  2068  009B                     	;# 
  2069  009B                     	;# 
  2070  009C                     	;# 
  2071  009D                     	;# 
  2072  009D                     	;# 
  2073  009E                     	;# 
  2074  009F                     	;# 
  2075  010C                     	;# 
  2076  010C                     	;# 
  2077  010D                     	;# 
  2078  010E                     	;# 
  2079  010F                     	;# 
  2080  010F                     	;# 
  2081  0110                     	;# 
  2082  0111                     	;# 
  2083  0112                     	;# 
  2084  0113                     	;# 
  2085  0114                     	;# 
  2086  0115                     	;# 
  2087  0116                     	;# 
  2088  0117                     	;# 
  2089  0118                     	;# 
  2090  0119                     	;# 
  2091  0119                     	;# 
  2092  0119                     	;# 
  2093  011A                     	;# 
  2094  011A                     	;# 
  2095  011A                     	;# 
  2096  011B                     	;# 
  2097  011B                     	;# 
  2098  011B                     	;# 
  2099  011B                     	;# 
  2100  011B                     	;# 
  2101  011C                     	;# 
  2102  011C                     	;# 
  2103  011C                     	;# 
  2104  011D                     	;# 
  2105  011D                     	;# 
  2106  011D                     	;# 
  2107  011E                     	;# 
  2108  011E                     	;# 
  2109  011E                     	;# 
  2110  011F                     	;# 
  2111  011F                     	;# 
  2112  011F                     	;# 
  2113  011F                     	;# 
  2114  011F                     	;# 
  2115  018C                     	;# 
  2116  018D                     	;# 
  2117  018E                     	;# 
  2118  018F                     	;# 
  2119  0190                     	;# 
  2120  0191                     	;# 
  2121  0192                     	;# 
  2122  0196                     	;# 
  2123  0197                     	;# 
  2124  0198                     	;# 
  2125  0199                     	;# 
  2126  019A                     	;# 
  2127  019B                     	;# 
  2128  019C                     	;# 
  2129  020C                     	;# 
  2130  020D                     	;# 
  2131  020E                     	;# 
  2132  020E                     	;# 
  2133  020F                     	;# 
  2134  020F                     	;# 
  2135  0210                     	;# 
  2136  0210                     	;# 
  2137  0211                     	;# 
  2138  0211                     	;# 
  2139  0212                     	;# 
  2140  0213                     	;# 
  2141  0214                     	;# 
  2142  0214                     	;# 
  2143  0215                     	;# 
  2144  0215                     	;# 
  2145  0216                     	;# 
  2146  0216                     	;# 
  2147  0217                     	;# 
  2148  0217                     	;# 
  2149  0218                     	;# 
  2150  0219                     	;# 
  2151  021A                     	;# 
  2152  021A                     	;# 
  2153  021B                     	;# 
  2154  021B                     	;# 
  2155  021C                     	;# 
  2156  021C                     	;# 
  2157  021D                     	;# 
  2158  021D                     	;# 
  2159  021E                     	;# 
  2160  021F                     	;# 
  2161  028C                     	;# 
  2162  028C                     	;# 
  2163  028D                     	;# 
  2164  028D                     	;# 
  2165  028E                     	;# 
  2166  028F                     	;# 
  2167  0290                     	;# 
  2168  0291                     	;# 
  2169  0292                     	;# 
  2170  0292                     	;# 
  2171  0293                     	;# 
  2172  0293                     	;# 
  2173  0294                     	;# 
  2174  0295                     	;# 
  2175  0296                     	;# 
  2176  0297                     	;# 
  2177  0298                     	;# 
  2178  0298                     	;# 
  2179  0299                     	;# 
  2180  0299                     	;# 
  2181  029A                     	;# 
  2182  029B                     	;# 
  2183  029C                     	;# 
  2184  029D                     	;# 
  2185  029F                     	;# 
  2186  030C                     	;# 
  2187  030C                     	;# 
  2188  030D                     	;# 
  2189  030E                     	;# 
  2190  030F                     	;# 
  2191  0310                     	;# 
  2192  0310                     	;# 
  2193  0311                     	;# 
  2194  0312                     	;# 
  2195  0313                     	;# 
  2196  0314                     	;# 
  2197  0314                     	;# 
  2198  0315                     	;# 
  2199  0316                     	;# 
  2200  0317                     	;# 
  2201  0318                     	;# 
  2202  0318                     	;# 
  2203  0319                     	;# 
  2204  031A                     	;# 
  2205  031B                     	;# 
  2206  038C                     	;# 
  2207  038C                     	;# 
  2208  038D                     	;# 
  2209  038E                     	;# 
  2210  0390                     	;# 
  2211  0390                     	;# 
  2212  0391                     	;# 
  2213  0392                     	;# 
  2214  048C                     	;# 
  2215  048C                     	;# 
  2216  048D                     	;# 
  2217  048E                     	;# 
  2218  048F                     	;# 
  2219  048F                     	;# 
  2220  0490                     	;# 
  2221  0491                     	;# 
  2222  0492                     	;# 
  2223  0492                     	;# 
  2224  0493                     	;# 
  2225  0494                     	;# 
  2226  0495                     	;# 
  2227  0495                     	;# 
  2228  0496                     	;# 
  2229  0497                     	;# 
  2230  0498                     	;# 
  2231  0499                     	;# 
  2232  049A                     	;# 
  2233  049B                     	;# 
  2234  049C                     	;# 
  2235  049D                     	;# 
  2236  058C                     	;# 
  2237  058C                     	;# 
  2238  058D                     	;# 
  2239  058E                     	;# 
  2240  058F                     	;# 
  2241  058F                     	;# 
  2242  0590                     	;# 
  2243  0591                     	;# 
  2244  0592                     	;# 
  2245  0593                     	;# 
  2246  059C                     	;# 
  2247  059C                     	;# 
  2248  059D                     	;# 
  2249  059D                     	;# 
  2250  059E                     	;# 
  2251  059F                     	;# 
  2252  060C                     	;# 
  2253  060C                     	;# 
  2254  060D                     	;# 
  2255  060D                     	;# 
  2256  060E                     	;# 
  2257  060F                     	;# 
  2258  0610                     	;# 
  2259  0611                     	;# 
  2260  0612                     	;# 
  2261  0613                     	;# 
  2262  0614                     	;# 
  2263  0616                     	;# 
  2264  0616                     	;# 
  2265  0617                     	;# 
  2266  0617                     	;# 
  2267  0618                     	;# 
  2268  0619                     	;# 
  2269  061A                     	;# 
  2270  061B                     	;# 
  2271  061C                     	;# 
  2272  061D                     	;# 
  2273  061E                     	;# 
  2274  070C                     	;# 
  2275  070D                     	;# 
  2276  070E                     	;# 
  2277  070F                     	;# 
  2278  0710                     	;# 
  2279  0711                     	;# 
  2280  0712                     	;# 
  2281  0713                     	;# 
  2282  0714                     	;# 
  2283  0716                     	;# 
  2284  0717                     	;# 
  2285  0718                     	;# 
  2286  0719                     	;# 
  2287  071A                     	;# 
  2288  071B                     	;# 
  2289  071C                     	;# 
  2290  071D                     	;# 
  2291  071E                     	;# 
  2292  0796                     	;# 
  2293  0797                     	;# 
  2294  0798                     	;# 
  2295  0799                     	;# 
  2296  079A                     	;# 
  2297  079B                     	;# 
  2298  079C                     	;# 
  2299  079D                     	;# 
  2300  080C                     	;# 
  2301  080D                     	;# 
  2302  080E                     	;# 
  2303  080F                     	;# 
  2304  0810                     	;# 
  2305  0811                     	;# 
  2306  0812                     	;# 
  2307  0813                     	;# 
  2308  0814                     	;# 
  2309  081A                     	;# 
  2310  081A                     	;# 
  2311  081B                     	;# 
  2312  081C                     	;# 
  2313  081C                     	;# 
  2314  081D                     	;# 
  2315  081E                     	;# 
  2316  081F                     	;# 
  2317  088C                     	;# 
  2318  088D                     	;# 
  2319  088E                     	;# 
  2320  088F                     	;# 
  2321  0890                     	;# 
  2322  0891                     	;# 
  2323  0892                     	;# 
  2324  0893                     	;# 
  2325  0895                     	;# 
  2326  0896                     	;# 
  2327  0897                     	;# 
  2328  0898                     	;# 
  2329  0899                     	;# 
  2330  089A                     	;# 
  2331  089B                     	;# 
  2332  090C                     	;# 
  2333  090E                     	;# 
  2334  090F                     	;# 
  2335  091F                     	;# 
  2336  098F                     	;# 
  2337  098F                     	;# 
  2338  0990                     	;# 
  2339  0991                     	;# 
  2340  0992                     	;# 
  2341  0993                     	;# 
  2342  0994                     	;# 
  2343  0995                     	;# 
  2344  0996                     	;# 
  2345  0997                     	;# 
  2346  1E0F                     	;# 
  2347  1E10                     	;# 
  2348  1E11                     	;# 
  2349  1E12                     	;# 
  2350  1E13                     	;# 
  2351  1E14                     	;# 
  2352  1E15                     	;# 
  2353  1E16                     	;# 
  2354  1E17                     	;# 
  2355  1E18                     	;# 
  2356  1E19                     	;# 
  2357  1E1A                     	;# 
  2358  1E1B                     	;# 
  2359  1E1C                     	;# 
  2360  1E1D                     	;# 
  2361  1E1E                     	;# 
  2362  1E1F                     	;# 
  2363  1E20                     	;# 
  2364  1E21                     	;# 
  2365  1E22                     	;# 
  2366  1E23                     	;# 
  2367  1E24                     	;# 
  2368  1E25                     	;# 
  2369  1E26                     	;# 
  2370  1E27                     	;# 
  2371  1E28                     	;# 
  2372  1E29                     	;# 
  2373  1E2A                     	;# 
  2374  1E2B                     	;# 
  2375  1E2C                     	;# 
  2376  1E2D                     	;# 
  2377  1E2E                     	;# 
  2378  1E2F                     	;# 
  2379  1E30                     	;# 
  2380  1E31                     	;# 
  2381  1E32                     	;# 
  2382  1E33                     	;# 
  2383  1E34                     	;# 
  2384  1E35                     	;# 
  2385  1E36                     	;# 
  2386  1E37                     	;# 
  2387  1E8F                     	;# 
  2388  1E90                     	;# 
  2389  1E91                     	;# 
  2390  1E92                     	;# 
  2391  1E93                     	;# 
  2392  1E94                     	;# 
  2393  1E95                     	;# 
  2394  1E96                     	;# 
  2395  1E97                     	;# 
  2396  1E9C                     	;# 
  2397  1E9D                     	;# 
  2398  1E9E                     	;# 
  2399  1EA1                     	;# 
  2400  1EA2                     	;# 
  2401  1EA3                     	;# 
  2402  1EA4                     	;# 
  2403  1EA9                     	;# 
  2404  1EAA                     	;# 
  2405  1EB1                     	;# 
  2406  1EB2                     	;# 
  2407  1EB8                     	;# 
  2408  1EB9                     	;# 
  2409  1EBA                     	;# 
  2410  1EBB                     	;# 
  2411  1EBC                     	;# 
  2412  1EBD                     	;# 
  2413  1EBE                     	;# 
  2414  1EC3                     	;# 
  2415  1EC5                     	;# 
  2416  1EC6                     	;# 
  2417  1EC7                     	;# 
  2418  1EC8                     	;# 
  2419  1EC9                     	;# 
  2420  1ECA                     	;# 
  2421  1ECB                     	;# 
  2422  1ECB                     	;# 
  2423  1ECB                     	;# 
  2424  1ECC                     	;# 
  2425  1ECC                     	;# 
  2426  1ECC                     	;# 
  2427  1F10                     	;# 
  2428  1F11                     	;# 
  2429  1F12                     	;# 
  2430  1F14                     	;# 
  2431  1F15                     	;# 
  2432  1F1C                     	;# 
  2433  1F1D                     	;# 
  2434  1F1E                     	;# 
  2435  1F1F                     	;# 
  2436  1F20                     	;# 
  2437  1F21                     	;# 
  2438  1F22                     	;# 
  2439  1F23                     	;# 
  2440  1F24                     	;# 
  2441  1F25                     	;# 
  2442  1F26                     	;# 
  2443  1F27                     	;# 
  2444  1F38                     	;# 
  2445  1F39                     	;# 
  2446  1F3A                     	;# 
  2447  1F3B                     	;# 
  2448  1F3C                     	;# 
  2449  1F3D                     	;# 
  2450  1F3E                     	;# 
  2451  1F3F                     	;# 
  2452  1F43                     	;# 
  2453  1F44                     	;# 
  2454  1F45                     	;# 
  2455  1F46                     	;# 
  2456  1F47                     	;# 
  2457  1F48                     	;# 
  2458  1F49                     	;# 
  2459  1F4A                     	;# 
  2460  1F4E                     	;# 
  2461  1F4F                     	;# 
  2462  1F50                     	;# 
  2463  1F51                     	;# 
  2464  1F52                     	;# 
  2465  1F53                     	;# 
  2466  1F54                     	;# 
  2467  1F55                     	;# 
  2468  1FE4                     	;# 
  2469  1FE5                     	;# 
  2470  1FE6                     	;# 
  2471  1FE7                     	;# 
  2472  1FE8                     	;# 
  2473  1FE8                     	;# 
  2474  1FE9                     	;# 
  2475  1FEA                     	;# 
  2476  1FEB                     	;# 
  2477  1FED                     	;# 
  2478  1FEE                     	;# 
  2479  1FEF                     	;# 
  2480  0000                     	;# 
  2481  0001                     	;# 
  2482  0002                     	;# 
  2483  0003                     	;# 
  2484  0004                     	;# 
  2485  0005                     	;# 
  2486  0006                     	;# 
  2487  0007                     	;# 
  2488  0008                     	;# 
  2489  0009                     	;# 
  2490  000A                     	;# 
  2491  000B                     	;# 
  2492  000C                     	;# 
  2493  000D                     	;# 
  2494  000E                     	;# 
  2495  0012                     	;# 
  2496  0013                     	;# 
  2497  0014                     	;# 
  2498  0018                     	;# 
  2499  0019                     	;# 
  2500  001A                     	;# 
  2501  008C                     	;# 
  2502  008C                     	;# 
  2503  008D                     	;# 
  2504  008E                     	;# 
  2505  008E                     	;# 
  2506  008F                     	;# 
  2507  0090                     	;# 
  2508  0090                     	;# 
  2509  0091                     	;# 
  2510  0092                     	;# 
  2511  0092                     	;# 
  2512  0093                     	;# 
  2513  0094                     	;# 
  2514  0094                     	;# 
  2515  0095                     	;# 
  2516  0096                     	;# 
  2517  0096                     	;# 
  2518  0097                     	;# 
  2519  0098                     	;# 
  2520  0099                     	;# 
  2521  009A                     	;# 
  2522  009B                     	;# 
  2523  009B                     	;# 
  2524  009C                     	;# 
  2525  009D                     	;# 
  2526  009D                     	;# 
  2527  009E                     	;# 
  2528  009F                     	;# 
  2529  010C                     	;# 
  2530  010C                     	;# 
  2531  010D                     	;# 
  2532  010E                     	;# 
  2533  010F                     	;# 
  2534  010F                     	;# 
  2535  0110                     	;# 
  2536  0111                     	;# 
  2537  0112                     	;# 
  2538  0113                     	;# 
  2539  0114                     	;# 
  2540  0115                     	;# 
  2541  0116                     	;# 
  2542  0117                     	;# 
  2543  0118                     	;# 
  2544  0119                     	;# 
  2545  0119                     	;# 
  2546  0119                     	;# 
  2547  011A                     	;# 
  2548  011A                     	;# 
  2549  011A                     	;# 
  2550  011B                     	;# 
  2551  011B                     	;# 
  2552  011B                     	;# 
  2553  011B                     	;# 
  2554  011B                     	;# 
  2555  011C                     	;# 
  2556  011C                     	;# 
  2557  011C                     	;# 
  2558  011D                     	;# 
  2559  011D                     	;# 
  2560  011D                     	;# 
  2561  011E                     	;# 
  2562  011E                     	;# 
  2563  011E                     	;# 
  2564  011F                     	;# 
  2565  011F                     	;# 
  2566  011F                     	;# 
  2567  011F                     	;# 
  2568  011F                     	;# 
  2569  018C                     	;# 
  2570  018D                     	;# 
  2571  018E                     	;# 
  2572  018F                     	;# 
  2573  0190                     	;# 
  2574  0191                     	;# 
  2575  0192                     	;# 
  2576  0196                     	;# 
  2577  0197                     	;# 
  2578  0198                     	;# 
  2579  0199                     	;# 
  2580  019A                     	;# 
  2581  019B                     	;# 
  2582  019C                     	;# 
  2583  020C                     	;# 
  2584  020D                     	;# 
  2585  020E                     	;# 
  2586  020E                     	;# 
  2587  020F                     	;# 
  2588  020F                     	;# 
  2589  0210                     	;# 
  2590  0210                     	;# 
  2591  0211                     	;# 
  2592  0211                     	;# 
  2593  0212                     	;# 
  2594  0213                     	;# 
  2595  0214                     	;# 
  2596  0214                     	;# 
  2597  0215                     	;# 
  2598  0215                     	;# 
  2599  0216                     	;# 
  2600  0216                     	;# 
  2601  0217                     	;# 
  2602  0217                     	;# 
  2603  0218                     	;# 
  2604  0219                     	;# 
  2605  021A                     	;# 
  2606  021A                     	;# 
  2607  021B                     	;# 
  2608  021B                     	;# 
  2609  021C                     	;# 
  2610  021C                     	;# 
  2611  021D                     	;# 
  2612  021D                     	;# 
  2613  021E                     	;# 
  2614  021F                     	;# 
  2615  028C                     	;# 
  2616  028C                     	;# 
  2617  028D                     	;# 
  2618  028D                     	;# 
  2619  028E                     	;# 
  2620  028F                     	;# 
  2621  0290                     	;# 
  2622  0291                     	;# 
  2623  0292                     	;# 
  2624  0292                     	;# 
  2625  0293                     	;# 
  2626  0293                     	;# 
  2627  0294                     	;# 
  2628  0295                     	;# 
  2629  0296                     	;# 
  2630  0297                     	;# 
  2631  0298                     	;# 
  2632  0298                     	;# 
  2633  0299                     	;# 
  2634  0299                     	;# 
  2635  029A                     	;# 
  2636  029B                     	;# 
  2637  029C                     	;# 
  2638  029D                     	;# 
  2639  029F                     	;# 
  2640  030C                     	;# 
  2641  030C                     	;# 
  2642  030D                     	;# 
  2643  030E                     	;# 
  2644  030F                     	;# 
  2645  0310                     	;# 
  2646  0310                     	;# 
  2647  0311                     	;# 
  2648  0312                     	;# 
  2649  0313                     	;# 
  2650  0314                     	;# 
  2651  0314                     	;# 
  2652  0315                     	;# 
  2653  0316                     	;# 
  2654  0317                     	;# 
  2655  0318                     	;# 
  2656  0318                     	;# 
  2657  0319                     	;# 
  2658  031A                     	;# 
  2659  031B                     	;# 
  2660  038C                     	;# 
  2661  038C                     	;# 
  2662  038D                     	;# 
  2663  038E                     	;# 
  2664  0390                     	;# 
  2665  0390                     	;# 
  2666  0391                     	;# 
  2667  0392                     	;# 
  2668  048C                     	;# 
  2669  048C                     	;# 
  2670  048D                     	;# 
  2671  048E                     	;# 
  2672  048F                     	;# 
  2673  048F                     	;# 
  2674  0490                     	;# 
  2675  0491                     	;# 
  2676  0492                     	;# 
  2677  0492                     	;# 
  2678  0493                     	;# 
  2679  0494                     	;# 
  2680  0495                     	;# 
  2681  0495                     	;# 
  2682  0496                     	;# 
  2683  0497                     	;# 
  2684  0498                     	;# 
  2685  0499                     	;# 
  2686  049A                     	;# 
  2687  049B                     	;# 
  2688  049C                     	;# 
  2689  049D                     	;# 
  2690  058C                     	;# 
  2691  058C                     	;# 
  2692  058D                     	;# 
  2693  058E                     	;# 
  2694  058F                     	;# 
  2695  058F                     	;# 
  2696  0590                     	;# 
  2697  0591                     	;# 
  2698  0592                     	;# 
  2699  0593                     	;# 
  2700  059C                     	;# 
  2701  059C                     	;# 
  2702  059D                     	;# 
  2703  059D                     	;# 
  2704  059E                     	;# 
  2705  059F                     	;# 
  2706  060C                     	;# 
  2707  060C                     	;# 
  2708  060D                     	;# 
  2709  060D                     	;# 
  2710  060E                     	;# 
  2711  060F                     	;# 
  2712  0610                     	;# 
  2713  0611                     	;# 
  2714  0612                     	;# 
  2715  0613                     	;# 
  2716  0614                     	;# 
  2717  0616                     	;# 
  2718  0616                     	;# 
  2719  0617                     	;# 
  2720  0617                     	;# 
  2721  0618                     	;# 
  2722  0619                     	;# 
  2723  061A                     	;# 
  2724  061B                     	;# 
  2725  061C                     	;# 
  2726  061D                     	;# 
  2727  061E                     	;# 
  2728  070C                     	;# 
  2729  070D                     	;# 
  2730  070E                     	;# 
  2731  070F                     	;# 
  2732  0710                     	;# 
  2733  0711                     	;# 
  2734  0712                     	;# 
  2735  0713                     	;# 
  2736  0714                     	;# 
  2737  0716                     	;# 
  2738  0717                     	;# 
  2739  0718                     	;# 
  2740  0719                     	;# 
  2741  071A                     	;# 
  2742  071B                     	;# 
  2743  071C                     	;# 
  2744  071D                     	;# 
  2745  071E                     	;# 
  2746  0796                     	;# 
  2747  0797                     	;# 
  2748  0798                     	;# 
  2749  0799                     	;# 
  2750  079A                     	;# 
  2751  079B                     	;# 
  2752  079C                     	;# 
  2753  079D                     	;# 
  2754  080C                     	;# 
  2755  080D                     	;# 
  2756  080E                     	;# 
  2757  080F                     	;# 
  2758  0810                     	;# 
  2759  0811                     	;# 
  2760  0812                     	;# 
  2761  0813                     	;# 
  2762  0814                     	;# 
  2763  081A                     	;# 
  2764  081A                     	;# 
  2765  081B                     	;# 
  2766  081C                     	;# 
  2767  081C                     	;# 
  2768  081D                     	;# 
  2769  081E                     	;# 
  2770  081F                     	;# 
  2771  088C                     	;# 
  2772  088D                     	;# 
  2773  088E                     	;# 
  2774  088F                     	;# 
  2775  0890                     	;# 
  2776  0891                     	;# 
  2777  0892                     	;# 
  2778  0893                     	;# 
  2779  0895                     	;# 
  2780  0896                     	;# 
  2781  0897                     	;# 
  2782  0898                     	;# 
  2783  0899                     	;# 
  2784  089A                     	;# 
  2785  089B                     	;# 
  2786  090C                     	;# 
  2787  090E                     	;# 
  2788  090F                     	;# 
  2789  091F                     	;# 
  2790  098F                     	;# 
  2791  098F                     	;# 
  2792  0990                     	;# 
  2793  0991                     	;# 
  2794  0992                     	;# 
  2795  0993                     	;# 
  2796  0994                     	;# 
  2797  0995                     	;# 
  2798  0996                     	;# 
  2799  0997                     	;# 
  2800  1E0F                     	;# 
  2801  1E10                     	;# 
  2802  1E11                     	;# 
  2803  1E12                     	;# 
  2804  1E13                     	;# 
  2805  1E14                     	;# 
  2806  1E15                     	;# 
  2807  1E16                     	;# 
  2808  1E17                     	;# 
  2809  1E18                     	;# 
  2810  1E19                     	;# 
  2811  1E1A                     	;# 
  2812  1E1B                     	;# 
  2813  1E1C                     	;# 
  2814  1E1D                     	;# 
  2815  1E1E                     	;# 
  2816  1E1F                     	;# 
  2817  1E20                     	;# 
  2818  1E21                     	;# 
  2819  1E22                     	;# 
  2820  1E23                     	;# 
  2821  1E24                     	;# 
  2822  1E25                     	;# 
  2823  1E26                     	;# 
  2824  1E27                     	;# 
  2825  1E28                     	;# 
  2826  1E29                     	;# 
  2827  1E2A                     	;# 
  2828  1E2B                     	;# 
  2829  1E2C                     	;# 
  2830  1E2D                     	;# 
  2831  1E2E                     	;# 
  2832  1E2F                     	;# 
  2833  1E30                     	;# 
  2834  1E31                     	;# 
  2835  1E32                     	;# 
  2836  1E33                     	;# 
  2837  1E34                     	;# 
  2838  1E35                     	;# 
  2839  1E36                     	;# 
  2840  1E37                     	;# 
  2841  1E8F                     	;# 
  2842  1E90                     	;# 
  2843  1E91                     	;# 
  2844  1E92                     	;# 
  2845  1E93                     	;# 
  2846  1E94                     	;# 
  2847  1E95                     	;# 
  2848  1E96                     	;# 
  2849  1E97                     	;# 
  2850  1E9C                     	;# 
  2851  1E9D                     	;# 
  2852  1E9E                     	;# 
  2853  1EA1                     	;# 
  2854  1EA2                     	;# 
  2855  1EA3                     	;# 
  2856  1EA4                     	;# 
  2857  1EA9                     	;# 
  2858  1EAA                     	;# 
  2859  1EB1                     	;# 
  2860  1EB2                     	;# 
  2861  1EB8                     	;# 
  2862  1EB9                     	;# 
  2863  1EBA                     	;# 
  2864  1EBB                     	;# 
  2865  1EBC                     	;# 
  2866  1EBD                     	;# 
  2867  1EBE                     	;# 
  2868  1EC3                     	;# 
  2869  1EC5                     	;# 
  2870  1EC6                     	;# 
  2871  1EC7                     	;# 
  2872  1EC8                     	;# 
  2873  1EC9                     	;# 
  2874  1ECA                     	;# 
  2875  1ECB                     	;# 
  2876  1ECB                     	;# 
  2877  1ECB                     	;# 
  2878  1ECC                     	;# 
  2879  1ECC                     	;# 
  2880  1ECC                     	;# 
  2881  1F10                     	;# 
  2882  1F11                     	;# 
  2883  1F12                     	;# 
  2884  1F14                     	;# 
  2885  1F15                     	;# 
  2886  1F1C                     	;# 
  2887  1F1D                     	;# 
  2888  1F1E                     	;# 
  2889  1F1F                     	;# 
  2890  1F20                     	;# 
  2891  1F21                     	;# 
  2892  1F22                     	;# 
  2893  1F23                     	;# 
  2894  1F24                     	;# 
  2895  1F25                     	;# 
  2896  1F26                     	;# 
  2897  1F27                     	;# 
  2898  1F38                     	;# 
  2899  1F39                     	;# 
  2900  1F3A                     	;# 
  2901  1F3B                     	;# 
  2902  1F3C                     	;# 
  2903  1F3D                     	;# 
  2904  1F3E                     	;# 
  2905  1F3F                     	;# 
  2906  1F43                     	;# 
  2907  1F44                     	;# 
  2908  1F45                     	;# 
  2909  1F46                     	;# 
  2910  1F47                     	;# 
  2911  1F48                     	;# 
  2912  1F49                     	;# 
  2913  1F4A                     	;# 
  2914  1F4E                     	;# 
  2915  1F4F                     	;# 
  2916  1F50                     	;# 
  2917  1F51                     	;# 
  2918  1F52                     	;# 
  2919  1F53                     	;# 
  2920  1F54                     	;# 
  2921  1F55                     	;# 
  2922  1FE4                     	;# 
  2923  1FE5                     	;# 
  2924  1FE6                     	;# 
  2925  1FE7                     	;# 
  2926  1FE8                     	;# 
  2927  1FE8                     	;# 
  2928  1FE9                     	;# 
  2929  1FEA                     	;# 
  2930  1FEB                     	;# 
  2931  1FED                     	;# 
  2932  1FEE                     	;# 
  2933  1FEF                     	;# 
  2934  0000                     	;# 
  2935  0001                     	;# 
  2936  0002                     	;# 
  2937  0003                     	;# 
  2938  0004                     	;# 
  2939  0005                     	;# 
  2940  0006                     	;# 
  2941  0007                     	;# 
  2942  0008                     	;# 
  2943  0009                     	;# 
  2944  000A                     	;# 
  2945  000B                     	;# 
  2946  000C                     	;# 
  2947  000D                     	;# 
  2948  000E                     	;# 
  2949  0012                     	;# 
  2950  0013                     	;# 
  2951  0014                     	;# 
  2952  0018                     	;# 
  2953  0019                     	;# 
  2954  001A                     	;# 
  2955  008C                     	;# 
  2956  008C                     	;# 
  2957  008D                     	;# 
  2958  008E                     	;# 
  2959  008E                     	;# 
  2960  008F                     	;# 
  2961  0090                     	;# 
  2962  0090                     	;# 
  2963  0091                     	;# 
  2964  0092                     	;# 
  2965  0092                     	;# 
  2966  0093                     	;# 
  2967  0094                     	;# 
  2968  0094                     	;# 
  2969  0095                     	;# 
  2970  0096                     	;# 
  2971  0096                     	;# 
  2972  0097                     	;# 
  2973  0098                     	;# 
  2974  0099                     	;# 
  2975  009A                     	;# 
  2976  009B                     	;# 
  2977  009B                     	;# 
  2978  009C                     	;# 
  2979  009D                     	;# 
  2980  009D                     	;# 
  2981  009E                     	;# 
  2982  009F                     	;# 
  2983  010C                     	;# 
  2984  010C                     	;# 
  2985  010D                     	;# 
  2986  010E                     	;# 
  2987  010F                     	;# 
  2988  010F                     	;# 
  2989  0110                     	;# 
  2990  0111                     	;# 
  2991  0112                     	;# 
  2992  0113                     	;# 
  2993  0114                     	;# 
  2994  0115                     	;# 
  2995  0116                     	;# 
  2996  0117                     	;# 
  2997  0118                     	;# 
  2998  0119                     	;# 
  2999  0119                     	;# 
  3000  0119                     	;# 
  3001  011A                     	;# 
  3002  011A                     	;# 
  3003  011A                     	;# 
  3004  011B                     	;# 
  3005  011B                     	;# 
  3006  011B                     	;# 
  3007  011B                     	;# 
  3008  011B                     	;# 
  3009  011C                     	;# 
  3010  011C                     	;# 
  3011  011C                     	;# 
  3012  011D                     	;# 
  3013  011D                     	;# 
  3014  011D                     	;# 
  3015  011E                     	;# 
  3016  011E                     	;# 
  3017  011E                     	;# 
  3018  011F                     	;# 
  3019  011F                     	;# 
  3020  011F                     	;# 
  3021  011F                     	;# 
  3022  011F                     	;# 
  3023  018C                     	;# 
  3024  018D                     	;# 
  3025  018E                     	;# 
  3026  018F                     	;# 
  3027  0190                     	;# 
  3028  0191                     	;# 
  3029  0192                     	;# 
  3030  0196                     	;# 
  3031  0197                     	;# 
  3032  0198                     	;# 
  3033  0199                     	;# 
  3034  019A                     	;# 
  3035  019B                     	;# 
  3036  019C                     	;# 
  3037  020C                     	;# 
  3038  020D                     	;# 
  3039  020E                     	;# 
  3040  020E                     	;# 
  3041  020F                     	;# 
  3042  020F                     	;# 
  3043  0210                     	;# 
  3044  0210                     	;# 
  3045  0211                     	;# 
  3046  0211                     	;# 
  3047  0212                     	;# 
  3048  0213                     	;# 
  3049  0214                     	;# 
  3050  0214                     	;# 
  3051  0215                     	;# 
  3052  0215                     	;# 
  3053  0216                     	;# 
  3054  0216                     	;# 
  3055  0217                     	;# 
  3056  0217                     	;# 
  3057  0218                     	;# 
  3058  0219                     	;# 
  3059  021A                     	;# 
  3060  021A                     	;# 
  3061  021B                     	;# 
  3062  021B                     	;# 
  3063  021C                     	;# 
  3064  021C                     	;# 
  3065  021D                     	;# 
  3066  021D                     	;# 
  3067  021E                     	;# 
  3068  021F                     	;# 
  3069  028C                     	;# 
  3070  028C                     	;# 
  3071  028D                     	;# 
  3072  028D                     	;# 
  3073  028E                     	;# 
  3074  028F                     	;# 
  3075  0290                     	;# 
  3076  0291                     	;# 
  3077  0292                     	;# 
  3078  0292                     	;# 
  3079  0293                     	;# 
  3080  0293                     	;# 
  3081  0294                     	;# 
  3082  0295                     	;# 
  3083  0296                     	;# 
  3084  0297                     	;# 
  3085  0298                     	;# 
  3086  0298                     	;# 
  3087  0299                     	;# 
  3088  0299                     	;# 
  3089  029A                     	;# 
  3090  029B                     	;# 
  3091  029C                     	;# 
  3092  029D                     	;# 
  3093  029F                     	;# 
  3094  030C                     	;# 
  3095  030C                     	;# 
  3096  030D                     	;# 
  3097  030E                     	;# 
  3098  030F                     	;# 
  3099  0310                     	;# 
  3100  0310                     	;# 
  3101  0311                     	;# 
  3102  0312                     	;# 
  3103  0313                     	;# 
  3104  0314                     	;# 
  3105  0314                     	;# 
  3106  0315                     	;# 
  3107  0316                     	;# 
  3108  0317                     	;# 
  3109  0318                     	;# 
  3110  0318                     	;# 
  3111  0319                     	;# 
  3112  031A                     	;# 
  3113  031B                     	;# 
  3114  038C                     	;# 
  3115  038C                     	;# 
  3116  038D                     	;# 
  3117  038E                     	;# 
  3118  0390                     	;# 
  3119  0390                     	;# 
  3120  0391                     	;# 
  3121  0392                     	;# 
  3122  048C                     	;# 
  3123  048C                     	;# 
  3124  048D                     	;# 
  3125  048E                     	;# 
  3126  048F                     	;# 
  3127  048F                     	;# 
  3128  0490                     	;# 
  3129  0491                     	;# 
  3130  0492                     	;# 
  3131  0492                     	;# 
  3132  0493                     	;# 
  3133  0494                     	;# 
  3134  0495                     	;# 
  3135  0495                     	;# 
  3136  0496                     	;# 
  3137  0497                     	;# 
  3138  0498                     	;# 
  3139  0499                     	;# 
  3140  049A                     	;# 
  3141  049B                     	;# 
  3142  049C                     	;# 
  3143  049D                     	;# 
  3144  058C                     	;# 
  3145  058C                     	;# 
  3146  058D                     	;# 
  3147  058E                     	;# 
  3148  058F                     	;# 
  3149  058F                     	;# 
  3150  0590                     	;# 
  3151  0591                     	;# 
  3152  0592                     	;# 
  3153  0593                     	;# 
  3154  059C                     	;# 
  3155  059C                     	;# 
  3156  059D                     	;# 
  3157  059D                     	;# 
  3158  059E                     	;# 
  3159  059F                     	;# 
  3160  060C                     	;# 
  3161  060C                     	;# 
  3162  060D                     	;# 
  3163  060D                     	;# 
  3164  060E                     	;# 
  3165  060F                     	;# 
  3166  0610                     	;# 
  3167  0611                     	;# 
  3168  0612                     	;# 
  3169  0613                     	;# 
  3170  0614                     	;# 
  3171  0616                     	;# 
  3172  0616                     	;# 
  3173  0617                     	;# 
  3174  0617                     	;# 
  3175  0618                     	;# 
  3176  0619                     	;# 
  3177  061A                     	;# 
  3178  061B                     	;# 
  3179  061C                     	;# 
  3180  061D                     	;# 
  3181  061E                     	;# 
  3182  070C                     	;# 
  3183  070D                     	;# 
  3184  070E                     	;# 
  3185  070F                     	;# 
  3186  0710                     	;# 
  3187  0711                     	;# 
  3188  0712                     	;# 
  3189  0713                     	;# 
  3190  0714                     	;# 
  3191  0716                     	;# 
  3192  0717                     	;# 
  3193  0718                     	;# 
  3194  0719                     	;# 
  3195  071A                     	;# 
  3196  071B                     	;# 
  3197  071C                     	;# 
  3198  071D                     	;# 
  3199  071E                     	;# 
  3200  0796                     	;# 
  3201  0797                     	;# 
  3202  0798                     	;# 
  3203  0799                     	;# 
  3204  079A                     	;# 
  3205  079B                     	;# 
  3206  079C                     	;# 
  3207  079D                     	;# 
  3208  080C                     	;# 
  3209  080D                     	;# 
  3210  080E                     	;# 
  3211  080F                     	;# 
  3212  0810                     	;# 
  3213  0811                     	;# 
  3214  0812                     	;# 
  3215  0813                     	;# 
  3216  0814                     	;# 
  3217  081A                     	;# 
  3218  081A                     	;# 
  3219  081B                     	;# 
  3220  081C                     	;# 
  3221  081C                     	;# 
  3222  081D                     	;# 
  3223  081E                     	;# 
  3224  081F                     	;# 
  3225  088C                     	;# 
  3226  088D                     	;# 
  3227  088E                     	;# 
  3228  088F                     	;# 
  3229  0890                     	;# 
  3230  0891                     	;# 
  3231  0892                     	;# 
  3232  0893                     	;# 
  3233  0895                     	;# 
  3234  0896                     	;# 
  3235  0897                     	;# 
  3236  0898                     	;# 
  3237  0899                     	;# 
  3238  089A                     	;# 
  3239  089B                     	;# 
  3240  090C                     	;# 
  3241  090E                     	;# 
  3242  090F                     	;# 
  3243  091F                     	;# 
  3244  098F                     	;# 
  3245  098F                     	;# 
  3246  0990                     	;# 
  3247  0991                     	;# 
  3248  0992                     	;# 
  3249  0993                     	;# 
  3250  0994                     	;# 
  3251  0995                     	;# 
  3252  0996                     	;# 
  3253  0997                     	;# 
  3254  1E0F                     	;# 
  3255  1E10                     	;# 
  3256  1E11                     	;# 
  3257  1E12                     	;# 
  3258  1E13                     	;# 
  3259  1E14                     	;# 
  3260  1E15                     	;# 
  3261  1E16                     	;# 
  3262  1E17                     	;# 
  3263  1E18                     	;# 
  3264  1E19                     	;# 
  3265  1E1A                     	;# 
  3266  1E1B                     	;# 
  3267  1E1C                     	;# 
  3268  1E1D                     	;# 
  3269  1E1E                     	;# 
  3270  1E1F                     	;# 
  3271  1E20                     	;# 
  3272  1E21                     	;# 
  3273  1E22                     	;# 
  3274  1E23                     	;# 
  3275  1E24                     	;# 
  3276  1E25                     	;# 
  3277  1E26                     	;# 
  3278  1E27                     	;# 
  3279  1E28                     	;# 
  3280  1E29                     	;# 
  3281  1E2A                     	;# 
  3282  1E2B                     	;# 
  3283  1E2C                     	;# 
  3284  1E2D                     	;# 
  3285  1E2E                     	;# 
  3286  1E2F                     	;# 
  3287  1E30                     	;# 
  3288  1E31                     	;# 
  3289  1E32                     	;# 
  3290  1E33                     	;# 
  3291  1E34                     	;# 
  3292  1E35                     	;# 
  3293  1E36                     	;# 
  3294  1E37                     	;# 
  3295  1E8F                     	;# 
  3296  1E90                     	;# 
  3297  1E91                     	;# 
  3298  1E92                     	;# 
  3299  1E93                     	;# 
  3300  1E94                     	;# 
  3301  1E95                     	;# 
  3302  1E96                     	;# 
  3303  1E97                     	;# 
  3304  1E9C                     	;# 
  3305  1E9D                     	;# 
  3306  1E9E                     	;# 
  3307  1EA1                     	;# 
  3308  1EA2                     	;# 
  3309  1EA3                     	;# 
  3310  1EA4                     	;# 
  3311  1EA9                     	;# 
  3312  1EAA                     	;# 
  3313  1EB1                     	;# 
  3314  1EB2                     	;# 
  3315  1EB8                     	;# 
  3316  1EB9                     	;# 
  3317  1EBA                     	;# 
  3318  1EBB                     	;# 
  3319  1EBC                     	;# 
  3320  1EBD                     	;# 
  3321  1EBE                     	;# 
  3322  1EC3                     	;# 
  3323  1EC5                     	;# 
  3324  1EC6                     	;# 
  3325  1EC7                     	;# 
  3326  1EC8                     	;# 
  3327  1EC9                     	;# 
  3328  1ECA                     	;# 
  3329  1ECB                     	;# 
  3330  1ECB                     	;# 
  3331  1ECB                     	;# 
  3332  1ECC                     	;# 
  3333  1ECC                     	;# 
  3334  1ECC                     	;# 
  3335  1F10                     	;# 
  3336  1F11                     	;# 
  3337  1F12                     	;# 
  3338  1F14                     	;# 
  3339  1F15                     	;# 
  3340  1F1C                     	;# 
  3341  1F1D                     	;# 
  3342  1F1E                     	;# 
  3343  1F1F                     	;# 
  3344  1F20                     	;# 
  3345  1F21                     	;# 
  3346  1F22                     	;# 
  3347  1F23                     	;# 
  3348  1F24                     	;# 
  3349  1F25                     	;# 
  3350  1F26                     	;# 
  3351  1F27                     	;# 
  3352  1F38                     	;# 
  3353  1F39                     	;# 
  3354  1F3A                     	;# 
  3355  1F3B                     	;# 
  3356  1F3C                     	;# 
  3357  1F3D                     	;# 
  3358  1F3E                     	;# 
  3359  1F3F                     	;# 
  3360  1F43                     	;# 
  3361  1F44                     	;# 
  3362  1F45                     	;# 
  3363  1F46                     	;# 
  3364  1F47                     	;# 
  3365  1F48                     	;# 
  3366  1F49                     	;# 
  3367  1F4A                     	;# 
  3368  1F4E                     	;# 
  3369  1F4F                     	;# 
  3370  1F50                     	;# 
  3371  1F51                     	;# 
  3372  1F52                     	;# 
  3373  1F53                     	;# 
  3374  1F54                     	;# 
  3375  1F55                     	;# 
  3376  1FE4                     	;# 
  3377  1FE5                     	;# 
  3378  1FE6                     	;# 
  3379  1FE7                     	;# 
  3380  1FE8                     	;# 
  3381  1FE8                     	;# 
  3382  1FE9                     	;# 
  3383  1FEA                     	;# 
  3384  1FEB                     	;# 
  3385  1FED                     	;# 
  3386  1FEE                     	;# 
  3387  1FEF                     	;# 
  3388  0000                     	;# 
  3389  0001                     	;# 
  3390  0002                     	;# 
  3391  0003                     	;# 
  3392  0004                     	;# 
  3393  0005                     	;# 
  3394  0006                     	;# 
  3395  0007                     	;# 
  3396  0008                     	;# 
  3397  0009                     	;# 
  3398  000A                     	;# 
  3399  000B                     	;# 
  3400  000C                     	;# 
  3401  000D                     	;# 
  3402  000E                     	;# 
  3403  0012                     	;# 
  3404  0013                     	;# 
  3405  0014                     	;# 
  3406  0018                     	;# 
  3407  0019                     	;# 
  3408  001A                     	;# 
  3409  008C                     	;# 
  3410  008C                     	;# 
  3411  008D                     	;# 
  3412  008E                     	;# 
  3413  008E                     	;# 
  3414  008F                     	;# 
  3415  0090                     	;# 
  3416  0090                     	;# 
  3417  0091                     	;# 
  3418  0092                     	;# 
  3419  0092                     	;# 
  3420  0093                     	;# 
  3421  0094                     	;# 
  3422  0094                     	;# 
  3423  0095                     	;# 
  3424  0096                     	;# 
  3425  0096                     	;# 
  3426  0097                     	;# 
  3427  0098                     	;# 
  3428  0099                     	;# 
  3429  009A                     	;# 
  3430  009B                     	;# 
  3431  009B                     	;# 
  3432  009C                     	;# 
  3433  009D                     	;# 
  3434  009D                     	;# 
  3435  009E                     	;# 
  3436  009F                     	;# 
  3437  010C                     	;# 
  3438  010C                     	;# 
  3439  010D                     	;# 
  3440  010E                     	;# 
  3441  010F                     	;# 
  3442  010F                     	;# 
  3443  0110                     	;# 
  3444  0111                     	;# 
  3445  0112                     	;# 
  3446  0113                     	;# 
  3447  0114                     	;# 
  3448  0115                     	;# 
  3449  0116                     	;# 
  3450  0117                     	;# 
  3451  0118                     	;# 
  3452  0119                     	;# 
  3453  0119                     	;# 
  3454  0119                     	;# 
  3455  011A                     	;# 
  3456  011A                     	;# 
  3457  011A                     	;# 
  3458  011B                     	;# 
  3459  011B                     	;# 
  3460  011B                     	;# 
  3461  011B                     	;# 
  3462  011B                     	;# 
  3463  011C                     	;# 
  3464  011C                     	;# 
  3465  011C                     	;# 
  3466  011D                     	;# 
  3467  011D                     	;# 
  3468  011D                     	;# 
  3469  011E                     	;# 
  3470  011E                     	;# 
  3471  011E                     	;# 
  3472  011F                     	;# 
  3473  011F                     	;# 
  3474  011F                     	;# 
  3475  011F                     	;# 
  3476  011F                     	;# 
  3477  018C                     	;# 
  3478  018D                     	;# 
  3479  018E                     	;# 
  3480  018F                     	;# 
  3481  0190                     	;# 
  3482  0191                     	;# 
  3483  0192                     	;# 
  3484  0196                     	;# 
  3485  0197                     	;# 
  3486  0198                     	;# 
  3487  0199                     	;# 
  3488  019A                     	;# 
  3489  019B                     	;# 
  3490  019C                     	;# 
  3491  020C                     	;# 
  3492  020D                     	;# 
  3493  020E                     	;# 
  3494  020E                     	;# 
  3495  020F                     	;# 
  3496  020F                     	;# 
  3497  0210                     	;# 
  3498  0210                     	;# 
  3499  0211                     	;# 
  3500  0211                     	;# 
  3501  0212                     	;# 
  3502  0213                     	;# 
  3503  0214                     	;# 
  3504  0214                     	;# 
  3505  0215                     	;# 
  3506  0215                     	;# 
  3507  0216                     	;# 
  3508  0216                     	;# 
  3509  0217                     	;# 
  3510  0217                     	;# 
  3511  0218                     	;# 
  3512  0219                     	;# 
  3513  021A                     	;# 
  3514  021A                     	;# 
  3515  021B                     	;# 
  3516  021B                     	;# 
  3517  021C                     	;# 
  3518  021C                     	;# 
  3519  021D                     	;# 
  3520  021D                     	;# 
  3521  021E                     	;# 
  3522  021F                     	;# 
  3523  028C                     	;# 
  3524  028C                     	;# 
  3525  028D                     	;# 
  3526  028D                     	;# 
  3527  028E                     	;# 
  3528  028F                     	;# 
  3529  0290                     	;# 
  3530  0291                     	;# 
  3531  0292                     	;# 
  3532  0292                     	;# 
  3533  0293                     	;# 
  3534  0293                     	;# 
  3535  0294                     	;# 
  3536  0295                     	;# 
  3537  0296                     	;# 
  3538  0297                     	;# 
  3539  0298                     	;# 
  3540  0298                     	;# 
  3541  0299                     	;# 
  3542  0299                     	;# 
  3543  029A                     	;# 
  3544  029B                     	;# 
  3545  029C                     	;# 
  3546  029D                     	;# 
  3547  029F                     	;# 
  3548  030C                     	;# 
  3549  030C                     	;# 
  3550  030D                     	;# 
  3551  030E                     	;# 
  3552  030F                     	;# 
  3553  0310                     	;# 
  3554  0310                     	;# 
  3555  0311                     	;# 
  3556  0312                     	;# 
  3557  0313                     	;# 
  3558  0314                     	;# 
  3559  0314                     	;# 
  3560  0315                     	;# 
  3561  0316                     	;# 
  3562  0317                     	;# 
  3563  0318                     	;# 
  3564  0318                     	;# 
  3565  0319                     	;# 
  3566  031A                     	;# 
  3567  031B                     	;# 
  3568  038C                     	;# 
  3569  038C                     	;# 
  3570  038D                     	;# 
  3571  038E                     	;# 
  3572  0390                     	;# 
  3573  0390                     	;# 
  3574  0391                     	;# 
  3575  0392                     	;# 
  3576  048C                     	;# 
  3577  048C                     	;# 
  3578  048D                     	;# 
  3579  048E                     	;# 
  3580  048F                     	;# 
  3581  048F                     	;# 
  3582  0490                     	;# 
  3583  0491                     	;# 
  3584  0492                     	;# 
  3585  0492                     	;# 
  3586  0493                     	;# 
  3587  0494                     	;# 
  3588  0495                     	;# 
  3589  0495                     	;# 
  3590  0496                     	;# 
  3591  0497                     	;# 
  3592  0498                     	;# 
  3593  0499                     	;# 
  3594  049A                     	;# 
  3595  049B                     	;# 
  3596  049C                     	;# 
  3597  049D                     	;# 
  3598  058C                     	;# 
  3599  058C                     	;# 
  3600  058D                     	;# 
  3601  058E                     	;# 
  3602  058F                     	;# 
  3603  058F                     	;# 
  3604  0590                     	;# 
  3605  0591                     	;# 
  3606  0592                     	;# 
  3607  0593                     	;# 
  3608  059C                     	;# 
  3609  059C                     	;# 
  3610  059D                     	;# 
  3611  059D                     	;# 
  3612  059E                     	;# 
  3613  059F                     	;# 
  3614  060C                     	;# 
  3615  060C                     	;# 
  3616  060D                     	;# 
  3617  060D                     	;# 
  3618  060E                     	;# 
  3619  060F                     	;# 
  3620  0610                     	;# 
  3621  0611                     	;# 
  3622  0612                     	;# 
  3623  0613                     	;# 
  3624  0614                     	;# 
  3625  0616                     	;# 
  3626  0616                     	;# 
  3627  0617                     	;# 
  3628  0617                     	;# 
  3629  0618                     	;# 
  3630  0619                     	;# 
  3631  061A                     	;# 
  3632  061B                     	;# 
  3633  061C                     	;# 
  3634  061D                     	;# 
  3635  061E                     	;# 
  3636  070C                     	;# 
  3637  070D                     	;# 
  3638  070E                     	;# 
  3639  070F                     	;# 
  3640  0710                     	;# 
  3641  0711                     	;# 
  3642  0712                     	;# 
  3643  0713                     	;# 
  3644  0714                     	;# 
  3645  0716                     	;# 
  3646  0717                     	;# 
  3647  0718                     	;# 
  3648  0719                     	;# 
  3649  071A                     	;# 
  3650  071B                     	;# 
  3651  071C                     	;# 
  3652  071D                     	;# 
  3653  071E                     	;# 
  3654  0796                     	;# 
  3655  0797                     	;# 
  3656  0798                     	;# 
  3657  0799                     	;# 
  3658  079A                     	;# 
  3659  079B                     	;# 
  3660  079C                     	;# 
  3661  079D                     	;# 
  3662  080C                     	;# 
  3663  080D                     	;# 
  3664  080E                     	;# 
  3665  080F                     	;# 
  3666  0810                     	;# 
  3667  0811                     	;# 
  3668  0812                     	;# 
  3669  0813                     	;# 
  3670  0814                     	;# 
  3671  081A                     	;# 
  3672  081A                     	;# 
  3673  081B                     	;# 
  3674  081C                     	;# 
  3675  081C                     	;# 
  3676  081D                     	;# 
  3677  081E                     	;# 
  3678  081F                     	;# 
  3679  088C                     	;# 
  3680  088D                     	;# 
  3681  088E                     	;# 
  3682  088F                     	;# 
  3683  0890                     	;# 
  3684  0891                     	;# 
  3685  0892                     	;# 
  3686  0893                     	;# 
  3687  0895                     	;# 
  3688  0896                     	;# 
  3689  0897                     	;# 
  3690  0898                     	;# 
  3691  0899                     	;# 
  3692  089A                     	;# 
  3693  089B                     	;# 
  3694  090C                     	;# 
  3695  090E                     	;# 
  3696  090F                     	;# 
  3697  091F                     	;# 
  3698  098F                     	;# 
  3699  098F                     	;# 
  3700  0990                     	;# 
  3701  0991                     	;# 
  3702  0992                     	;# 
  3703  0993                     	;# 
  3704  0994                     	;# 
  3705  0995                     	;# 
  3706  0996                     	;# 
  3707  0997                     	;# 
  3708  1E0F                     	;# 
  3709  1E10                     	;# 
  3710  1E11                     	;# 
  3711  1E12                     	;# 
  3712  1E13                     	;# 
  3713  1E14                     	;# 
  3714  1E15                     	;# 
  3715  1E16                     	;# 
  3716  1E17                     	;# 
  3717  1E18                     	;# 
  3718  1E19                     	;# 
  3719  1E1A                     	;# 
  3720  1E1B                     	;# 
  3721  1E1C                     	;# 
  3722  1E1D                     	;# 
  3723  1E1E                     	;# 
  3724  1E1F                     	;# 
  3725  1E20                     	;# 
  3726  1E21                     	;# 
  3727  1E22                     	;# 
  3728  1E23                     	;# 
  3729  1E24                     	;# 
  3730  1E25                     	;# 
  3731  1E26                     	;# 
  3732  1E27                     	;# 
  3733  1E28                     	;# 
  3734  1E29                     	;# 
  3735  1E2A                     	;# 
  3736  1E2B                     	;# 
  3737  1E2C                     	;# 
  3738  1E2D                     	;# 
  3739  1E2E                     	;# 
  3740  1E2F                     	;# 
  3741  1E30                     	;# 
  3742  1E31                     	;# 
  3743  1E32                     	;# 
  3744  1E33                     	;# 
  3745  1E34                     	;# 
  3746  1E35                     	;# 
  3747  1E36                     	;# 
  3748  1E37                     	;# 
  3749  1E8F                     	;# 
  3750  1E90                     	;# 
  3751  1E91                     	;# 
  3752  1E92                     	;# 
  3753  1E93                     	;# 
  3754  1E94                     	;# 
  3755  1E95                     	;# 
  3756  1E96                     	;# 
  3757  1E97                     	;# 
  3758  1E9C                     	;# 
  3759  1E9D                     	;# 
  3760  1E9E                     	;# 
  3761  1EA1                     	;# 
  3762  1EA2                     	;# 
  3763  1EA3                     	;# 
  3764  1EA4                     	;# 
  3765  1EA9                     	;# 
  3766  1EAA                     	;# 
  3767  1EB1                     	;# 
  3768  1EB2                     	;# 
  3769  1EB8                     	;# 
  3770  1EB9                     	;# 
  3771  1EBA                     	;# 
  3772  1EBB                     	;# 
  3773  1EBC                     	;# 
  3774  1EBD                     	;# 
  3775  1EBE                     	;# 
  3776  1EC3                     	;# 
  3777  1EC5                     	;# 
  3778  1EC6                     	;# 
  3779  1EC7                     	;# 
  3780  1EC8                     	;# 
  3781  1EC9                     	;# 
  3782  1ECA                     	;# 
  3783  1ECB                     	;# 
  3784  1ECB                     	;# 
  3785  1ECB                     	;# 
  3786  1ECC                     	;# 
  3787  1ECC                     	;# 
  3788  1ECC                     	;# 
  3789  1F10                     	;# 
  3790  1F11                     	;# 
  3791  1F12                     	;# 
  3792  1F14                     	;# 
  3793  1F15                     	;# 
  3794  1F1C                     	;# 
  3795  1F1D                     	;# 
  3796  1F1E                     	;# 
  3797  1F1F                     	;# 
  3798  1F20                     	;# 
  3799  1F21                     	;# 
  3800  1F22                     	;# 
  3801  1F23                     	;# 
  3802  1F24                     	;# 
  3803  1F25                     	;# 
  3804  1F26                     	;# 
  3805  1F27                     	;# 
  3806  1F38                     	;# 
  3807  1F39                     	;# 
  3808  1F3A                     	;# 
  3809  1F3B                     	;# 
  3810  1F3C                     	;# 
  3811  1F3D                     	;# 
  3812  1F3E                     	;# 
  3813  1F3F                     	;# 
  3814  1F43                     	;# 
  3815  1F44                     	;# 
  3816  1F45                     	;# 
  3817  1F46                     	;# 
  3818  1F47                     	;# 
  3819  1F48                     	;# 
  3820  1F49                     	;# 
  3821  1F4A                     	;# 
  3822  1F4E                     	;# 
  3823  1F4F                     	;# 
  3824  1F50                     	;# 
  3825  1F51                     	;# 
  3826  1F52                     	;# 
  3827  1F53                     	;# 
  3828  1F54                     	;# 
  3829  1F55                     	;# 
  3830  1FE4                     	;# 
  3831  1FE5                     	;# 
  3832  1FE6                     	;# 
  3833  1FE7                     	;# 
  3834  1FE8                     	;# 
  3835  1FE8                     	;# 
  3836  1FE9                     	;# 
  3837  1FEA                     	;# 
  3838  1FEB                     	;# 
  3839  1FED                     	;# 
  3840  1FEE                     	;# 
  3841  1FEF                     	;# 
  3842  0000                     	;# 
  3843  0001                     	;# 
  3844  0002                     	;# 
  3845  0003                     	;# 
  3846  0004                     	;# 
  3847  0005                     	;# 
  3848  0006                     	;# 
  3849  0007                     	;# 
  3850  0008                     	;# 
  3851  0009                     	;# 
  3852  000A                     	;# 
  3853  000B                     	;# 
  3854  000C                     	;# 
  3855  000D                     	;# 
  3856  000E                     	;# 
  3857  0012                     	;# 
  3858  0013                     	;# 
  3859  0014                     	;# 
  3860  0018                     	;# 
  3861  0019                     	;# 
  3862  001A                     	;# 
  3863  008C                     	;# 
  3864  008C                     	;# 
  3865  008D                     	;# 
  3866  008E                     	;# 
  3867  008E                     	;# 
  3868  008F                     	;# 
  3869  0090                     	;# 
  3870  0090                     	;# 
  3871  0091                     	;# 
  3872  0092                     	;# 
  3873  0092                     	;# 
  3874  0093                     	;# 
  3875  0094                     	;# 
  3876  0094                     	;# 
  3877  0095                     	;# 
  3878  0096                     	;# 
  3879  0096                     	;# 
  3880  0097                     	;# 
  3881  0098                     	;# 
  3882  0099                     	;# 
  3883  009A                     	;# 
  3884  009B                     	;# 
  3885  009B                     	;# 
  3886  009C                     	;# 
  3887  009D                     	;# 
  3888  009D                     	;# 
  3889  009E                     	;# 
  3890  009F                     	;# 
  3891  010C                     	;# 
  3892  010C                     	;# 
  3893  010D                     	;# 
  3894  010E                     	;# 
  3895  010F                     	;# 
  3896  010F                     	;# 
  3897  0110                     	;# 
  3898  0111                     	;# 
  3899  0112                     	;# 
  3900  0113                     	;# 
  3901  0114                     	;# 
  3902  0115                     	;# 
  3903  0116                     	;# 
  3904  0117                     	;# 
  3905  0118                     	;# 
  3906  0119                     	;# 
  3907  0119                     	;# 
  3908  0119                     	;# 
  3909  011A                     	;# 
  3910  011A                     	;# 
  3911  011A                     	;# 
  3912  011B                     	;# 
  3913  011B                     	;# 
  3914  011B                     	;# 
  3915  011B                     	;# 
  3916  011B                     	;# 
  3917  011C                     	;# 
  3918  011C                     	;# 
  3919  011C                     	;# 
  3920  011D                     	;# 
  3921  011D                     	;# 
  3922  011D                     	;# 
  3923  011E                     	;# 
  3924  011E                     	;# 
  3925  011E                     	;# 
  3926  011F                     	;# 
  3927  011F                     	;# 
  3928  011F                     	;# 
  3929  011F                     	;# 
  3930  011F                     	;# 
  3931  018C                     	;# 
  3932  018D                     	;# 
  3933  018E                     	;# 
  3934  018F                     	;# 
  3935  0190                     	;# 
  3936  0191                     	;# 
  3937  0192                     	;# 
  3938  0196                     	;# 
  3939  0197                     	;# 
  3940  0198                     	;# 
  3941  0199                     	;# 
  3942  019A                     	;# 
  3943  019B                     	;# 
  3944  019C                     	;# 
  3945  020C                     	;# 
  3946  020D                     	;# 
  3947  020E                     	;# 
  3948  020E                     	;# 
  3949  020F                     	;# 
  3950  020F                     	;# 
  3951  0210                     	;# 
  3952  0210                     	;# 
  3953  0211                     	;# 
  3954  0211                     	;# 
  3955  0212                     	;# 
  3956  0213                     	;# 
  3957  0214                     	;# 
  3958  0214                     	;# 
  3959  0215                     	;# 
  3960  0215                     	;# 
  3961  0216                     	;# 
  3962  0216                     	;# 
  3963  0217                     	;# 
  3964  0217                     	;# 
  3965  0218                     	;# 
  3966  0219                     	;# 
  3967  021A                     	;# 
  3968  021A                     	;# 
  3969  021B                     	;# 
  3970  021B                     	;# 
  3971  021C                     	;# 
  3972  021C                     	;# 
  3973  021D                     	;# 
  3974  021D                     	;# 
  3975  021E                     	;# 
  3976  021F                     	;# 
  3977  028C                     	;# 
  3978  028C                     	;# 
  3979  028D                     	;# 
  3980  028D                     	;# 
  3981  028E                     	;# 
  3982  028F                     	;# 
  3983  0290                     	;# 
  3984  0291                     	;# 
  3985  0292                     	;# 
  3986  0292                     	;# 
  3987  0293                     	;# 
  3988  0293                     	;# 
  3989  0294                     	;# 
  3990  0295                     	;# 
  3991  0296                     	;# 
  3992  0297                     	;# 
  3993  0298                     	;# 
  3994  0298                     	;# 
  3995  0299                     	;# 
  3996  0299                     	;# 
  3997  029A                     	;# 
  3998  029B                     	;# 
  3999  029C                     	;# 
  4000  029D                     	;# 
  4001  029F                     	;# 
  4002  030C                     	;# 
  4003  030C                     	;# 
  4004  030D                     	;# 
  4005  030E                     	;# 
  4006  030F                     	;# 
  4007  0310                     	;# 
  4008  0310                     	;# 
  4009  0311                     	;# 
  4010  0312                     	;# 
  4011  0313                     	;# 
  4012  0314                     	;# 
  4013  0314                     	;# 
  4014  0315                     	;# 
  4015  0316                     	;# 
  4016  0317                     	;# 
  4017  0318                     	;# 
  4018  0318                     	;# 
  4019  0319                     	;# 
  4020  031A                     	;# 
  4021  031B                     	;# 
  4022  038C                     	;# 
  4023  038C                     	;# 
  4024  038D                     	;# 
  4025  038E                     	;# 
  4026  0390                     	;# 
  4027  0390                     	;# 
  4028  0391                     	;# 
  4029  0392                     	;# 
  4030  048C                     	;# 
  4031  048C                     	;# 
  4032  048D                     	;# 
  4033  048E                     	;# 
  4034  048F                     	;# 
  4035  048F                     	;# 
  4036  0490                     	;# 
  4037  0491                     	;# 
  4038  0492                     	;# 
  4039  0492                     	;# 
  4040  0493                     	;# 
  4041  0494                     	;# 
  4042  0495                     	;# 
  4043  0495                     	;# 
  4044  0496                     	;# 
  4045  0497                     	;# 
  4046  0498                     	;# 
  4047  0499                     	;# 
  4048  049A                     	;# 
  4049  049B                     	;# 
  4050  049C                     	;# 
  4051  049D                     	;# 
  4052  058C                     	;# 
  4053  058C                     	;# 
  4054  058D                     	;# 
  4055  058E                     	;# 
  4056  058F                     	;# 
  4057  058F                     	;# 
  4058  0590                     	;# 
  4059  0591                     	;# 
  4060  0592                     	;# 
  4061  0593                     	;# 
  4062  059C                     	;# 
  4063  059C                     	;# 
  4064  059D                     	;# 
  4065  059D                     	;# 
  4066  059E                     	;# 
  4067  059F                     	;# 
  4068  060C                     	;# 
  4069  060C                     	;# 
  4070  060D                     	;# 
  4071  060D                     	;# 
  4072  060E                     	;# 
  4073  060F                     	;# 
  4074  0610                     	;# 
  4075  0611                     	;# 
  4076  0612                     	;# 
  4077  0613                     	;# 
  4078  0614                     	;# 
  4079  0616                     	;# 
  4080  0616                     	;# 
  4081  0617                     	;# 
  4082  0617                     	;# 
  4083  0618                     	;# 
  4084  0619                     	;# 
  4085  061A                     	;# 
  4086  061B                     	;# 
  4087  061C                     	;# 
  4088  061D                     	;# 
  4089  061E                     	;# 
  4090  070C                     	;# 
  4091  070D                     	;# 
  4092  070E                     	;# 
  4093  070F                     	;# 
  4094  0710                     	;# 
  4095  0711                     	;# 
  4096  0712                     	;# 
  4097  0713                     	;# 
  4098  0714                     	;# 
  4099  0716                     	;# 
  4100  0717                     	;# 
  4101  0718                     	;# 
  4102  0719                     	;# 
  4103  071A                     	;# 
  4104  071B                     	;# 
  4105  071C                     	;# 
  4106  071D                     	;# 
  4107  071E                     	;# 
  4108  0796                     	;# 
  4109  0797                     	;# 
  4110  0798                     	;# 
  4111  0799                     	;# 
  4112  079A                     	;# 
  4113  079B                     	;# 
  4114  079C                     	;# 
  4115  079D                     	;# 
  4116  080C                     	;# 
  4117  080D                     	;# 
  4118  080E                     	;# 
  4119  080F                     	;# 
  4120  0810                     	;# 
  4121  0811                     	;# 
  4122  0812                     	;# 
  4123  0813                     	;# 
  4124  0814                     	;# 
  4125  081A                     	;# 
  4126  081A                     	;# 
  4127  081B                     	;# 
  4128  081C                     	;# 
  4129  081C                     	;# 
  4130  081D                     	;# 
  4131  081E                     	;# 
  4132  081F                     	;# 
  4133  088C                     	;# 
  4134  088D                     	;# 
  4135  088E                     	;# 
  4136  088F                     	;# 
  4137  0890                     	;# 
  4138  0891                     	;# 
  4139  0892                     	;# 
  4140  0893                     	;# 
  4141  0895                     	;# 
  4142  0896                     	;# 
  4143  0897                     	;# 
  4144  0898                     	;# 
  4145  0899                     	;# 
  4146  089A                     	;# 
  4147  089B                     	;# 
  4148  090C                     	;# 
  4149  090E                     	;# 
  4150  090F                     	;# 
  4151  091F                     	;# 
  4152  098F                     	;# 
  4153  098F                     	;# 
  4154  0990                     	;# 
  4155  0991                     	;# 
  4156  0992                     	;# 
  4157  0993                     	;# 
  4158  0994                     	;# 
  4159  0995                     	;# 
  4160  0996                     	;# 
  4161  0997                     	;# 
  4162  1E0F                     	;# 
  4163  1E10                     	;# 
  4164  1E11                     	;# 
  4165  1E12                     	;# 
  4166  1E13                     	;# 
  4167  1E14                     	;# 
  4168  1E15                     	;# 
  4169  1E16                     	;# 
  4170  1E17                     	;# 
  4171  1E18                     	;# 
  4172  1E19                     	;# 
  4173  1E1A                     	;# 
  4174  1E1B                     	;# 
  4175  1E1C                     	;# 
  4176  1E1D                     	;# 
  4177  1E1E                     	;# 
  4178  1E1F                     	;# 
  4179  1E20                     	;# 
  4180  1E21                     	;# 
  4181  1E22                     	;# 
  4182  1E23                     	;# 
  4183  1E24                     	;# 
  4184  1E25                     	;# 
  4185  1E26                     	;# 
  4186  1E27                     	;# 
  4187  1E28                     	;# 
  4188  1E29                     	;# 
  4189  1E2A                     	;# 
  4190  1E2B                     	;# 
  4191  1E2C                     	;# 
  4192  1E2D                     	;# 
  4193  1E2E                     	;# 
  4194  1E2F                     	;# 
  4195  1E30                     	;# 
  4196  1E31                     	;# 
  4197  1E32                     	;# 
  4198  1E33                     	;# 
  4199  1E34                     	;# 
  4200  1E35                     	;# 
  4201  1E36                     	;# 
  4202  1E37                     	;# 
  4203  1E8F                     	;# 
  4204  1E90                     	;# 
  4205  1E91                     	;# 
  4206  1E92                     	;# 
  4207  1E93                     	;# 
  4208  1E94                     	;# 
  4209  1E95                     	;# 
  4210  1E96                     	;# 
  4211  1E97                     	;# 
  4212  1E9C                     	;# 
  4213  1E9D                     	;# 
  4214  1E9E                     	;# 
  4215  1EA1                     	;# 
  4216  1EA2                     	;# 
  4217  1EA3                     	;# 
  4218  1EA4                     	;# 
  4219  1EA9                     	;# 
  4220  1EAA                     	;# 
  4221  1EB1                     	;# 
  4222  1EB2                     	;# 
  4223  1EB8                     	;# 
  4224  1EB9                     	;# 
  4225  1EBA                     	;# 
  4226  1EBB                     	;# 
  4227  1EBC                     	;# 
  4228  1EBD                     	;# 
  4229  1EBE                     	;# 
  4230  1EC3                     	;# 
  4231  1EC5                     	;# 
  4232  1EC6                     	;# 
  4233  1EC7                     	;# 
  4234  1EC8                     	;# 
  4235  1EC9                     	;# 
  4236  1ECA                     	;# 
  4237  1ECB                     	;# 
  4238  1ECB                     	;# 
  4239  1ECB                     	;# 
  4240  1ECC                     	;# 
  4241  1ECC                     	;# 
  4242  1ECC                     	;# 
  4243  1F10                     	;# 
  4244  1F11                     	;# 
  4245  1F12                     	;# 
  4246  1F14                     	;# 
  4247  1F15                     	;# 
  4248  1F1C                     	;# 
  4249  1F1D                     	;# 
  4250  1F1E                     	;# 
  4251  1F1F                     	;# 
  4252  1F20                     	;# 
  4253  1F21                     	;# 
  4254  1F22                     	;# 
  4255  1F23                     	;# 
  4256  1F24                     	;# 
  4257  1F25                     	;# 
  4258  1F26                     	;# 
  4259  1F27                     	;# 
  4260  1F38                     	;# 
  4261  1F39                     	;# 
  4262  1F3A                     	;# 
  4263  1F3B                     	;# 
  4264  1F3C                     	;# 
  4265  1F3D                     	;# 
  4266  1F3E                     	;# 
  4267  1F3F                     	;# 
  4268  1F43                     	;# 
  4269  1F44                     	;# 
  4270  1F45                     	;# 
  4271  1F46                     	;# 
  4272  1F47                     	;# 
  4273  1F48                     	;# 
  4274  1F49                     	;# 
  4275  1F4A                     	;# 
  4276  1F4E                     	;# 
  4277  1F4F                     	;# 
  4278  1F50                     	;# 
  4279  1F51                     	;# 
  4280  1F52                     	;# 
  4281  1F53                     	;# 
  4282  1F54                     	;# 
  4283  1F55                     	;# 
  4284  1FE4                     	;# 
  4285  1FE5                     	;# 
  4286  1FE6                     	;# 
  4287  1FE7                     	;# 
  4288  1FE8                     	;# 
  4289  1FE8                     	;# 
  4290  1FE9                     	;# 
  4291  1FEA                     	;# 
  4292  1FEB                     	;# 
  4293  1FED                     	;# 
  4294  1FEE                     	;# 
  4295  1FEF                     	;# 
  4296  0000                     	;# 
  4297  0001                     	;# 
  4298  0002                     	;# 
  4299  0003                     	;# 
  4300  0004                     	;# 
  4301  0005                     	;# 
  4302  0006                     	;# 
  4303  0007                     	;# 
  4304  0008                     	;# 
  4305  0009                     	;# 
  4306  000A                     	;# 
  4307  000B                     	;# 
  4308  000C                     	;# 
  4309  000D                     	;# 
  4310  000E                     	;# 
  4311  0012                     	;# 
  4312  0013                     	;# 
  4313  0014                     	;# 
  4314  0018                     	;# 
  4315  0019                     	;# 
  4316  001A                     	;# 
  4317  008C                     	;# 
  4318  008C                     	;# 
  4319  008D                     	;# 
  4320  008E                     	;# 
  4321  008E                     	;# 
  4322  008F                     	;# 
  4323  0090                     	;# 
  4324  0090                     	;# 
  4325  0091                     	;# 
  4326  0092                     	;# 
  4327  0092                     	;# 
  4328  0093                     	;# 
  4329  0094                     	;# 
  4330  0094                     	;# 
  4331  0095                     	;# 
  4332  0096                     	;# 
  4333  0096                     	;# 
  4334  0097                     	;# 
  4335  0098                     	;# 
  4336  0099                     	;# 
  4337  009A                     	;# 
  4338  009B                     	;# 
  4339  009B                     	;# 
  4340  009C                     	;# 
  4341  009D                     	;# 
  4342  009D                     	;# 
  4343  009E                     	;# 
  4344  009F                     	;# 
  4345  010C                     	;# 
  4346  010C                     	;# 
  4347  010D                     	;# 
  4348  010E                     	;# 
  4349  010F                     	;# 
  4350  010F                     	;# 
  4351  0110                     	;# 
  4352  0111                     	;# 
  4353  0112                     	;# 
  4354  0113                     	;# 
  4355  0114                     	;# 
  4356  0115                     	;# 
  4357  0116                     	;# 
  4358  0117                     	;# 
  4359  0118                     	;# 
  4360  0119                     	;# 
  4361  0119                     	;# 
  4362  0119                     	;# 
  4363  011A                     	;# 
  4364  011A                     	;# 
  4365  011A                     	;# 
  4366  011B                     	;# 
  4367  011B                     	;# 
  4368  011B                     	;# 
  4369  011B                     	;# 
  4370  011B                     	;# 
  4371  011C                     	;# 
  4372  011C                     	;# 
  4373  011C                     	;# 
  4374  011D                     	;# 
  4375  011D                     	;# 
  4376  011D                     	;# 
  4377  011E                     	;# 
  4378  011E                     	;# 
  4379  011E                     	;# 
  4380  011F                     	;# 
  4381  011F                     	;# 
  4382  011F                     	;# 
  4383  011F                     	;# 
  4384  011F                     	;# 
  4385  018C                     	;# 
  4386  018D                     	;# 
  4387  018E                     	;# 
  4388  018F                     	;# 
  4389  0190                     	;# 
  4390  0191                     	;# 
  4391  0192                     	;# 
  4392  0196                     	;# 
  4393  0197                     	;# 
  4394  0198                     	;# 
  4395  0199                     	;# 
  4396  019A                     	;# 
  4397  019B                     	;# 
  4398  019C                     	;# 
  4399  020C                     	;# 
  4400  020D                     	;# 
  4401  020E                     	;# 
  4402  020E                     	;# 
  4403  020F                     	;# 
  4404  020F                     	;# 
  4405  0210                     	;# 
  4406  0210                     	;# 
  4407  0211                     	;# 
  4408  0211                     	;# 
  4409  0212                     	;# 
  4410  0213                     	;# 
  4411  0214                     	;# 
  4412  0214                     	;# 
  4413  0215                     	;# 
  4414  0215                     	;# 
  4415  0216                     	;# 
  4416  0216                     	;# 
  4417  0217                     	;# 
  4418  0217                     	;# 
  4419  0218                     	;# 
  4420  0219                     	;# 
  4421  021A                     	;# 
  4422  021A                     	;# 
  4423  021B                     	;# 
  4424  021B                     	;# 
  4425  021C                     	;# 
  4426  021C                     	;# 
  4427  021D                     	;# 
  4428  021D                     	;# 
  4429  021E                     	;# 
  4430  021F                     	;# 
  4431  028C                     	;# 
  4432  028C                     	;# 
  4433  028D                     	;# 
  4434  028D                     	;# 
  4435  028E                     	;# 
  4436  028F                     	;# 
  4437  0290                     	;# 
  4438  0291                     	;# 
  4439  0292                     	;# 
  4440  0292                     	;# 
  4441  0293                     	;# 
  4442  0293                     	;# 
  4443  0294                     	;# 
  4444  0295                     	;# 
  4445  0296                     	;# 
  4446  0297                     	;# 
  4447  0298                     	;# 
  4448  0298                     	;# 
  4449  0299                     	;# 
  4450  0299                     	;# 
  4451  029A                     	;# 
  4452  029B                     	;# 
  4453  029C                     	;# 
  4454  029D                     	;# 
  4455  029F                     	;# 
  4456  030C                     	;# 
  4457  030C                     	;# 
  4458  030D                     	;# 
  4459  030E                     	;# 
  4460  030F                     	;# 
  4461  0310                     	;# 
  4462  0310                     	;# 
  4463  0311                     	;# 
  4464  0312                     	;# 
  4465  0313                     	;# 
  4466  0314                     	;# 
  4467  0314                     	;# 
  4468  0315                     	;# 
  4469  0316                     	;# 
  4470  0317                     	;# 
  4471  0318                     	;# 
  4472  0318                     	;# 
  4473  0319                     	;# 
  4474  031A                     	;# 
  4475  031B                     	;# 
  4476  038C                     	;# 
  4477  038C                     	;# 
  4478  038D                     	;# 
  4479  038E                     	;# 
  4480  0390                     	;# 
  4481  0390                     	;# 
  4482  0391                     	;# 
  4483  0392                     	;# 
  4484  048C                     	;# 
  4485  048C                     	;# 
  4486  048D                     	;# 
  4487  048E                     	;# 
  4488  048F                     	;# 
  4489  048F                     	;# 
  4490  0490                     	;# 
  4491  0491                     	;# 
  4492  0492                     	;# 
  4493  0492                     	;# 
  4494  0493                     	;# 
  4495  0494                     	;# 
  4496  0495                     	;# 
  4497  0495                     	;# 
  4498  0496                     	;# 
  4499  0497                     	;# 
  4500  0498                     	;# 
  4501  0499                     	;# 
  4502  049A                     	;# 
  4503  049B                     	;# 
  4504  049C                     	;# 
  4505  049D                     	;# 
  4506  058C                     	;# 
  4507  058C                     	;# 
  4508  058D                     	;# 
  4509  058E                     	;# 
  4510  058F                     	;# 
  4511  058F                     	;# 
  4512  0590                     	;# 
  4513  0591                     	;# 
  4514  0592                     	;# 
  4515  0593                     	;# 
  4516  059C                     	;# 
  4517  059C                     	;# 
  4518  059D                     	;# 
  4519  059D                     	;# 
  4520  059E                     	;# 
  4521  059F                     	;# 
  4522  060C                     	;# 
  4523  060C                     	;# 
  4524  060D                     	;# 
  4525  060D                     	;# 
  4526  060E                     	;# 
  4527  060F                     	;# 
  4528  0610                     	;# 
  4529  0611                     	;# 
  4530  0612                     	;# 
  4531  0613                     	;# 
  4532  0614                     	;# 
  4533  0616                     	;# 
  4534  0616                     	;# 
  4535  0617                     	;# 
  4536  0617                     	;# 
  4537  0618                     	;# 
  4538  0619                     	;# 
  4539  061A                     	;# 
  4540  061B                     	;# 
  4541  061C                     	;# 
  4542  061D                     	;# 
  4543  061E                     	;# 
  4544  070C                     	;# 
  4545  070D                     	;# 
  4546  070E                     	;# 
  4547  070F                     	;# 
  4548  0710                     	;# 
  4549  0711                     	;# 
  4550  0712                     	;# 
  4551  0713                     	;# 
  4552  0714                     	;# 
  4553  0716                     	;# 
  4554  0717                     	;# 
  4555  0718                     	;# 
  4556  0719                     	;# 
  4557  071A                     	;# 
  4558  071B                     	;# 
  4559  071C                     	;# 
  4560  071D                     	;# 
  4561  071E                     	;# 
  4562  0796                     	;# 
  4563  0797                     	;# 
  4564  0798                     	;# 
  4565  0799                     	;# 
  4566  079A                     	;# 
  4567  079B                     	;# 
  4568  079C                     	;# 
  4569  079D                     	;# 
  4570  080C                     	;# 
  4571  080D                     	;# 
  4572  080E                     	;# 
  4573  080F                     	;# 
  4574  0810                     	;# 
  4575  0811                     	;# 
  4576  0812                     	;# 
  4577  0813                     	;# 
  4578  0814                     	;# 
  4579  081A                     	;# 
  4580  081A                     	;# 
  4581  081B                     	;# 
  4582  081C                     	;# 
  4583  081C                     	;# 
  4584  081D                     	;# 
  4585  081E                     	;# 
  4586  081F                     	;# 
  4587  088C                     	;# 
  4588  088D                     	;# 
  4589  088E                     	;# 
  4590  088F                     	;# 
  4591  0890                     	;# 
  4592  0891                     	;# 
  4593  0892                     	;# 
  4594  0893                     	;# 
  4595  0895                     	;# 
  4596  0896                     	;# 
  4597  0897                     	;# 
  4598  0898                     	;# 
  4599  0899                     	;# 
  4600  089A                     	;# 
  4601  089B                     	;# 
  4602  090C                     	;# 
  4603  090E                     	;# 
  4604  090F                     	;# 
  4605  091F                     	;# 
  4606  098F                     	;# 
  4607  098F                     	;# 
  4608  0990                     	;# 
  4609  0991                     	;# 
  4610  0992                     	;# 
  4611  0993                     	;# 
  4612  0994                     	;# 
  4613  0995                     	;# 
  4614  0996                     	;# 
  4615  0997                     	;# 
  4616  1E0F                     	;# 
  4617  1E10                     	;# 
  4618  1E11                     	;# 
  4619  1E12                     	;# 
  4620  1E13                     	;# 
  4621  1E14                     	;# 
  4622  1E15                     	;# 
  4623  1E16                     	;# 
  4624  1E17                     	;# 
  4625  1E18                     	;# 
  4626  1E19                     	;# 
  4627  1E1A                     	;# 
  4628  1E1B                     	;# 
  4629  1E1C                     	;# 
  4630  1E1D                     	;# 
  4631  1E1E                     	;# 
  4632  1E1F                     	;# 
  4633  1E20                     	;# 
  4634  1E21                     	;# 
  4635  1E22                     	;# 
  4636  1E23                     	;# 
  4637  1E24                     	;# 
  4638  1E25                     	;# 
  4639  1E26                     	;# 
  4640  1E27                     	;# 
  4641  1E28                     	;# 
  4642  1E29                     	;# 
  4643  1E2A                     	;# 
  4644  1E2B                     	;# 
  4645  1E2C                     	;# 
  4646  1E2D                     	;# 
  4647  1E2E                     	;# 
  4648  1E2F                     	;# 
  4649  1E30                     	;# 
  4650  1E31                     	;# 
  4651  1E32                     	;# 
  4652  1E33                     	;# 
  4653  1E34                     	;# 
  4654  1E35                     	;# 
  4655  1E36                     	;# 
  4656  1E37                     	;# 
  4657  1E8F                     	;# 
  4658  1E90                     	;# 
  4659  1E91                     	;# 
  4660  1E92                     	;# 
  4661  1E93                     	;# 
  4662  1E94                     	;# 
  4663  1E95                     	;# 
  4664  1E96                     	;# 
  4665  1E97                     	;# 
  4666  1E9C                     	;# 
  4667  1E9D                     	;# 
  4668  1E9E                     	;# 
  4669  1EA1                     	;# 
  4670  1EA2                     	;# 
  4671  1EA3                     	;# 
  4672  1EA4                     	;# 
  4673  1EA9                     	;# 
  4674  1EAA                     	;# 
  4675  1EB1                     	;# 
  4676  1EB2                     	;# 
  4677  1EB8                     	;# 
  4678  1EB9                     	;# 
  4679  1EBA                     	;# 
  4680  1EBB                     	;# 
  4681  1EBC                     	;# 
  4682  1EBD                     	;# 
  4683  1EBE                     	;# 
  4684  1EC3                     	;# 
  4685  1EC5                     	;# 
  4686  1EC6                     	;# 
  4687  1EC7                     	;# 
  4688  1EC8                     	;# 
  4689  1EC9                     	;# 
  4690  1ECA                     	;# 
  4691  1ECB                     	;# 
  4692  1ECB                     	;# 
  4693  1ECB                     	;# 
  4694  1ECC                     	;# 
  4695  1ECC                     	;# 
  4696  1ECC                     	;# 
  4697  1F10                     	;# 
  4698  1F11                     	;# 
  4699  1F12                     	;# 
  4700  1F14                     	;# 
  4701  1F15                     	;# 
  4702  1F1C                     	;# 
  4703  1F1D                     	;# 
  4704  1F1E                     	;# 
  4705  1F1F                     	;# 
  4706  1F20                     	;# 
  4707  1F21                     	;# 
  4708  1F22                     	;# 
  4709  1F23                     	;# 
  4710  1F24                     	;# 
  4711  1F25                     	;# 
  4712  1F26                     	;# 
  4713  1F27                     	;# 
  4714  1F38                     	;# 
  4715  1F39                     	;# 
  4716  1F3A                     	;# 
  4717  1F3B                     	;# 
  4718  1F3C                     	;# 
  4719  1F3D                     	;# 
  4720  1F3E                     	;# 
  4721  1F3F                     	;# 
  4722  1F43                     	;# 
  4723  1F44                     	;# 
  4724  1F45                     	;# 
  4725  1F46                     	;# 
  4726  1F47                     	;# 
  4727  1F48                     	;# 
  4728  1F49                     	;# 
  4729  1F4A                     	;# 
  4730  1F4E                     	;# 
  4731  1F4F                     	;# 
  4732  1F50                     	;# 
  4733  1F51                     	;# 
  4734  1F52                     	;# 
  4735  1F53                     	;# 
  4736  1F54                     	;# 
  4737  1F55                     	;# 
  4738  1FE4                     	;# 
  4739  1FE5                     	;# 
  4740  1FE6                     	;# 
  4741  1FE7                     	;# 
  4742  1FE8                     	;# 
  4743  1FE8                     	;# 
  4744  1FE9                     	;# 
  4745  1FEA                     	;# 
  4746  1FEB                     	;# 
  4747  1FED                     	;# 
  4748  1FEE                     	;# 
  4749  1FEF                     	;# 
  4750  0000                     	;# 
  4751  0001                     	;# 
  4752  0002                     	;# 
  4753  0003                     	;# 
  4754  0004                     	;# 
  4755  0005                     	;# 
  4756  0006                     	;# 
  4757  0007                     	;# 
  4758  0008                     	;# 
  4759  0009                     	;# 
  4760  000A                     	;# 
  4761  000B                     	;# 
  4762  000C                     	;# 
  4763  000D                     	;# 
  4764  000E                     	;# 
  4765  0012                     	;# 
  4766  0013                     	;# 
  4767  0014                     	;# 
  4768  0018                     	;# 
  4769  0019                     	;# 
  4770  001A                     	;# 
  4771  008C                     	;# 
  4772  008C                     	;# 
  4773  008D                     	;# 
  4774  008E                     	;# 
  4775  008E                     	;# 
  4776  008F                     	;# 
  4777  0090                     	;# 
  4778  0090                     	;# 
  4779  0091                     	;# 
  4780  0092                     	;# 
  4781  0092                     	;# 
  4782  0093                     	;# 
  4783  0094                     	;# 
  4784  0094                     	;# 
  4785  0095                     	;# 
  4786  0096                     	;# 
  4787  0096                     	;# 
  4788  0097                     	;# 
  4789  0098                     	;# 
  4790  0099                     	;# 
  4791  009A                     	;# 
  4792  009B                     	;# 
  4793  009B                     	;# 
  4794  009C                     	;# 
  4795  009D                     	;# 
  4796  009D                     	;# 
  4797  009E                     	;# 
  4798  009F                     	;# 
  4799  010C                     	;# 
  4800  010C                     	;# 
  4801  010D                     	;# 
  4802  010E                     	;# 
  4803  010F                     	;# 
  4804  010F                     	;# 
  4805  0110                     	;# 
  4806  0111                     	;# 
  4807  0112                     	;# 
  4808  0113                     	;# 
  4809  0114                     	;# 
  4810  0115                     	;# 
  4811  0116                     	;# 
  4812  0117                     	;# 
  4813  0118                     	;# 
  4814  0119                     	;# 
  4815  0119                     	;# 
  4816  0119                     	;# 
  4817  011A                     	;# 
  4818  011A                     	;# 
  4819  011A                     	;# 
  4820  011B                     	;# 
  4821  011B                     	;# 
  4822  011B                     	;# 
  4823  011B                     	;# 
  4824  011B                     	;# 
  4825  011C                     	;# 
  4826  011C                     	;# 
  4827  011C                     	;# 
  4828  011D                     	;# 
  4829  011D                     	;# 
  4830  011D                     	;# 
  4831  011E                     	;# 
  4832  011E                     	;# 
  4833  011E                     	;# 
  4834  011F                     	;# 
  4835  011F                     	;# 
  4836  011F                     	;# 
  4837  011F                     	;# 
  4838  011F                     	;# 
  4839  018C                     	;# 
  4840  018D                     	;# 
  4841  018E                     	;# 
  4842  018F                     	;# 
  4843  0190                     	;# 
  4844  0191                     	;# 
  4845  0192                     	;# 
  4846  0196                     	;# 
  4847  0197                     	;# 
  4848  0198                     	;# 
  4849  0199                     	;# 
  4850  019A                     	;# 
  4851  019B                     	;# 
  4852  019C                     	;# 
  4853  020C                     	;# 
  4854  020D                     	;# 
  4855  020E                     	;# 
  4856  020E                     	;# 
  4857  020F                     	;# 
  4858  020F                     	;# 
  4859  0210                     	;# 
  4860  0210                     	;# 
  4861  0211                     	;# 
  4862  0211                     	;# 
  4863  0212                     	;# 
  4864  0213                     	;# 
  4865  0214                     	;# 
  4866  0214                     	;# 
  4867  0215                     	;# 
  4868  0215                     	;# 
  4869  0216                     	;# 
  4870  0216                     	;# 
  4871  0217                     	;# 
  4872  0217                     	;# 
  4873  0218                     	;# 
  4874  0219                     	;# 
  4875  021A                     	;# 
  4876  021A                     	;# 
  4877  021B                     	;# 
  4878  021B                     	;# 
  4879  021C                     	;# 
  4880  021C                     	;# 
  4881  021D                     	;# 
  4882  021D                     	;# 
  4883  021E                     	;# 
  4884  021F                     	;# 
  4885  028C                     	;# 
  4886  028C                     	;# 
  4887  028D                     	;# 
  4888  028D                     	;# 
  4889  028E                     	;# 
  4890  028F                     	;# 
  4891  0290                     	;# 
  4892  0291                     	;# 
  4893  0292                     	;# 
  4894  0292                     	;# 
  4895  0293                     	;# 
  4896  0293                     	;# 
  4897  0294                     	;# 
  4898  0295                     	;# 
  4899  0296                     	;# 
  4900  0297                     	;# 
  4901  0298                     	;# 
  4902  0298                     	;# 
  4903  0299                     	;# 
  4904  0299                     	;# 
  4905  029A                     	;# 
  4906  029B                     	;# 
  4907  029C                     	;# 
  4908  029D                     	;# 
  4909  029F                     	;# 
  4910  030C                     	;# 
  4911  030C                     	;# 
  4912  030D                     	;# 
  4913  030E                     	;# 
  4914  030F                     	;# 
  4915  0310                     	;# 
  4916  0310                     	;# 
  4917  0311                     	;# 
  4918  0312                     	;# 
  4919  0313                     	;# 
  4920  0314                     	;# 
  4921  0314                     	;# 
  4922  0315                     	;# 
  4923  0316                     	;# 
  4924  0317                     	;# 
  4925  0318                     	;# 
  4926  0318                     	;# 
  4927  0319                     	;# 
  4928  031A                     	;# 
  4929  031B                     	;# 
  4930  038C                     	;# 
  4931  038C                     	;# 
  4932  038D                     	;# 
  4933  038E                     	;# 
  4934  0390                     	;# 
  4935  0390                     	;# 
  4936  0391                     	;# 
  4937  0392                     	;# 
  4938  048C                     	;# 
  4939  048C                     	;# 
  4940  048D                     	;# 
  4941  048E                     	;# 
  4942  048F                     	;# 
  4943  048F                     	;# 
  4944  0490                     	;# 
  4945  0491                     	;# 
  4946  0492                     	;# 
  4947  0492                     	;# 
  4948  0493                     	;# 
  4949  0494                     	;# 
  4950  0495                     	;# 
  4951  0495                     	;# 
  4952  0496                     	;# 
  4953  0497                     	;# 
  4954  0498                     	;# 
  4955  0499                     	;# 
  4956  049A                     	;# 
  4957  049B                     	;# 
  4958  049C                     	;# 
  4959  049D                     	;# 
  4960  058C                     	;# 
  4961  058C                     	;# 
  4962  058D                     	;# 
  4963  058E                     	;# 
  4964  058F                     	;# 
  4965  058F                     	;# 
  4966  0590                     	;# 
  4967  0591                     	;# 
  4968  0592                     	;# 
  4969  0593                     	;# 
  4970  059C                     	;# 
  4971  059C                     	;# 
  4972  059D                     	;# 
  4973  059D                     	;# 
  4974  059E                     	;# 
  4975  059F                     	;# 
  4976  060C                     	;# 
  4977  060C                     	;# 
  4978  060D                     	;# 
  4979  060D                     	;# 
  4980  060E                     	;# 
  4981  060F                     	;# 
  4982  0610                     	;# 
  4983  0611                     	;# 
  4984  0612                     	;# 
  4985  0613                     	;# 
  4986  0614                     	;# 
  4987  0616                     	;# 
  4988  0616                     	;# 
  4989  0617                     	;# 
  4990  0617                     	;# 
  4991  0618                     	;# 
  4992  0619                     	;# 
  4993  061A                     	;# 
  4994  061B                     	;# 
  4995  061C                     	;# 
  4996  061D                     	;# 
  4997  061E                     	;# 
  4998  070C                     	;# 
  4999  070D                     	;# 
  5000  070E                     	;# 
  5001  070F                     	;# 
  5002  0710                     	;# 
  5003  0711                     	;# 
  5004  0712                     	;# 
  5005  0713                     	;# 
  5006  0714                     	;# 
  5007  0716                     	;# 
  5008  0717                     	;# 
  5009  0718                     	;# 
  5010  0719                     	;# 
  5011  071A                     	;# 
  5012  071B                     	;# 
  5013  071C                     	;# 
  5014  071D                     	;# 
  5015  071E                     	;# 
  5016  0796                     	;# 
  5017  0797                     	;# 
  5018  0798                     	;# 
  5019  0799                     	;# 
  5020  079A                     	;# 
  5021  079B                     	;# 
  5022  079C                     	;# 
  5023  079D                     	;# 
  5024  080C                     	;# 
  5025  080D                     	;# 
  5026  080E                     	;# 
  5027  080F                     	;# 
  5028  0810                     	;# 
  5029  0811                     	;# 
  5030  0812                     	;# 
  5031  0813                     	;# 
  5032  0814                     	;# 
  5033  081A                     	;# 
  5034  081A                     	;# 
  5035  081B                     	;# 
  5036  081C                     	;# 
  5037  081C                     	;# 
  5038  081D                     	;# 
  5039  081E                     	;# 
  5040  081F                     	;# 
  5041  088C                     	;# 
  5042  088D                     	;# 
  5043  088E                     	;# 
  5044  088F                     	;# 
  5045  0890                     	;# 
  5046  0891                     	;# 
  5047  0892                     	;# 
  5048  0893                     	;# 
  5049  0895                     	;# 
  5050  0896                     	;# 
  5051  0897                     	;# 
  5052  0898                     	;# 
  5053  0899                     	;# 
  5054  089A                     	;# 
  5055  089B                     	;# 
  5056  090C                     	;# 
  5057  090E                     	;# 
  5058  090F                     	;# 
  5059  091F                     	;# 
  5060  098F                     	;# 
  5061  098F                     	;# 
  5062  0990                     	;# 
  5063  0991                     	;# 
  5064  0992                     	;# 
  5065  0993                     	;# 
  5066  0994                     	;# 
  5067  0995                     	;# 
  5068  0996                     	;# 
  5069  0997                     	;# 
  5070  1E0F                     	;# 
  5071  1E10                     	;# 
  5072  1E11                     	;# 
  5073  1E12                     	;# 
  5074  1E13                     	;# 
  5075  1E14                     	;# 
  5076  1E15                     	;# 
  5077  1E16                     	;# 
  5078  1E17                     	;# 
  5079  1E18                     	;# 
  5080  1E19                     	;# 
  5081  1E1A                     	;# 
  5082  1E1B                     	;# 
  5083  1E1C                     	;# 
  5084  1E1D                     	;# 
  5085  1E1E                     	;# 
  5086  1E1F                     	;# 
  5087  1E20                     	;# 
  5088  1E21                     	;# 
  5089  1E22                     	;# 
  5090  1E23                     	;# 
  5091  1E24                     	;# 
  5092  1E25                     	;# 
  5093  1E26                     	;# 
  5094  1E27                     	;# 
  5095  1E28                     	;# 
  5096  1E29                     	;# 
  5097  1E2A                     	;# 
  5098  1E2B                     	;# 
  5099  1E2C                     	;# 
  5100  1E2D                     	;# 
  5101  1E2E                     	;# 
  5102  1E2F                     	;# 
  5103  1E30                     	;# 
  5104  1E31                     	;# 
  5105  1E32                     	;# 
  5106  1E33                     	;# 
  5107  1E34                     	;# 
  5108  1E35                     	;# 
  5109  1E36                     	;# 
  5110  1E37                     	;# 
  5111  1E8F                     	;# 
  5112  1E90                     	;# 
  5113  1E91                     	;# 
  5114  1E92                     	;# 
  5115  1E93                     	;# 
  5116  1E94                     	;# 
  5117  1E95                     	;# 
  5118  1E96                     	;# 
  5119  1E97                     	;# 
  5120  1E9C                     	;# 
  5121  1E9D                     	;# 
  5122  1E9E                     	;# 
  5123  1EA1                     	;# 
  5124  1EA2                     	;# 
  5125  1EA3                     	;# 
  5126  1EA4                     	;# 
  5127  1EA9                     	;# 
  5128  1EAA                     	;# 
  5129  1EB1                     	;# 
  5130  1EB2                     	;# 
  5131  1EB8                     	;# 
  5132  1EB9                     	;# 
  5133  1EBA                     	;# 
  5134  1EBB                     	;# 
  5135  1EBC                     	;# 
  5136  1EBD                     	;# 
  5137  1EBE                     	;# 
  5138  1EC3                     	;# 
  5139  1EC5                     	;# 
  5140  1EC6                     	;# 
  5141  1EC7                     	;# 
  5142  1EC8                     	;# 
  5143  1EC9                     	;# 
  5144  1ECA                     	;# 
  5145  1ECB                     	;# 
  5146  1ECB                     	;# 
  5147  1ECB                     	;# 
  5148  1ECC                     	;# 
  5149  1ECC                     	;# 
  5150  1ECC                     	;# 
  5151  1F10                     	;# 
  5152  1F11                     	;# 
  5153  1F12                     	;# 
  5154  1F14                     	;# 
  5155  1F15                     	;# 
  5156  1F1C                     	;# 
  5157  1F1D                     	;# 
  5158  1F1E                     	;# 
  5159  1F1F                     	;# 
  5160  1F20                     	;# 
  5161  1F21                     	;# 
  5162  1F22                     	;# 
  5163  1F23                     	;# 
  5164  1F24                     	;# 
  5165  1F25                     	;# 
  5166  1F26                     	;# 
  5167  1F27                     	;# 
  5168  1F38                     	;# 
  5169  1F39                     	;# 
  5170  1F3A                     	;# 
  5171  1F3B                     	;# 
  5172  1F3C                     	;# 
  5173  1F3D                     	;# 
  5174  1F3E                     	;# 
  5175  1F3F                     	;# 
  5176  1F43                     	;# 
  5177  1F44                     	;# 
  5178  1F45                     	;# 
  5179  1F46                     	;# 
  5180  1F47                     	;# 
  5181  1F48                     	;# 
  5182  1F49                     	;# 
  5183  1F4A                     	;# 
  5184  1F4E                     	;# 
  5185  1F4F                     	;# 
  5186  1F50                     	;# 
  5187  1F51                     	;# 
  5188  1F52                     	;# 
  5189  1F53                     	;# 
  5190  1F54                     	;# 
  5191  1F55                     	;# 
  5192  1FE4                     	;# 
  5193  1FE5                     	;# 
  5194  1FE6                     	;# 
  5195  1FE7                     	;# 
  5196  1FE8                     	;# 
  5197  1FE8                     	;# 
  5198  1FE9                     	;# 
  5199  1FEA                     	;# 
  5200  1FEB                     	;# 
  5201  1FED                     	;# 
  5202  1FEE                     	;# 
  5203  1FEF                     	;# 
  5204  0000                     	;# 
  5205  0001                     	;# 
  5206  0002                     	;# 
  5207  0003                     	;# 
  5208  0004                     	;# 
  5209  0005                     	;# 
  5210  0006                     	;# 
  5211  0007                     	;# 
  5212  0008                     	;# 
  5213  0009                     	;# 
  5214  000A                     	;# 
  5215  000B                     	;# 
  5216  000C                     	;# 
  5217  000D                     	;# 
  5218  000E                     	;# 
  5219  0012                     	;# 
  5220  0013                     	;# 
  5221  0014                     	;# 
  5222  0018                     	;# 
  5223  0019                     	;# 
  5224  001A                     	;# 
  5225  008C                     	;# 
  5226  008C                     	;# 
  5227  008D                     	;# 
  5228  008E                     	;# 
  5229  008E                     	;# 
  5230  008F                     	;# 
  5231  0090                     	;# 
  5232  0090                     	;# 
  5233  0091                     	;# 
  5234  0092                     	;# 
  5235  0092                     	;# 
  5236  0093                     	;# 
  5237  0094                     	;# 
  5238  0094                     	;# 
  5239  0095                     	;# 
  5240  0096                     	;# 
  5241  0096                     	;# 
  5242  0097                     	;# 
  5243  0098                     	;# 
  5244  0099                     	;# 
  5245  009A                     	;# 
  5246  009B                     	;# 
  5247  009B                     	;# 
  5248  009C                     	;# 
  5249  009D                     	;# 
  5250  009D                     	;# 
  5251  009E                     	;# 
  5252  009F                     	;# 
  5253  010C                     	;# 
  5254  010C                     	;# 
  5255  010D                     	;# 
  5256  010E                     	;# 
  5257  010F                     	;# 
  5258  010F                     	;# 
  5259  0110                     	;# 
  5260  0111                     	;# 
  5261  0112                     	;# 
  5262  0113                     	;# 
  5263  0114                     	;# 
  5264  0115                     	;# 
  5265  0116                     	;# 
  5266  0117                     	;# 
  5267  0118                     	;# 
  5268  0119                     	;# 
  5269  0119                     	;# 
  5270  0119                     	;# 
  5271  011A                     	;# 
  5272  011A                     	;# 
  5273  011A                     	;# 
  5274  011B                     	;# 
  5275  011B                     	;# 
  5276  011B                     	;# 
  5277  011B                     	;# 
  5278  011B                     	;# 
  5279  011C                     	;# 
  5280  011C                     	;# 
  5281  011C                     	;# 
  5282  011D                     	;# 
  5283  011D                     	;# 
  5284  011D                     	;# 
  5285  011E                     	;# 
  5286  011E                     	;# 
  5287  011E                     	;# 
  5288  011F                     	;# 
  5289  011F                     	;# 
  5290  011F                     	;# 
  5291  011F                     	;# 
  5292  011F                     	;# 
  5293  018C                     	;# 
  5294  018D                     	;# 
  5295  018E                     	;# 
  5296  018F                     	;# 
  5297  0190                     	;# 
  5298  0191                     	;# 
  5299  0192                     	;# 
  5300  0196                     	;# 
  5301  0197                     	;# 
  5302  0198                     	;# 
  5303  0199                     	;# 
  5304  019A                     	;# 
  5305  019B                     	;# 
  5306  019C                     	;# 
  5307  020C                     	;# 
  5308  020D                     	;# 
  5309  020E                     	;# 
  5310  020E                     	;# 
  5311  020F                     	;# 
  5312  020F                     	;# 
  5313  0210                     	;# 
  5314  0210                     	;# 
  5315  0211                     	;# 
  5316  0211                     	;# 
  5317  0212                     	;# 
  5318  0213                     	;# 
  5319  0214                     	;# 
  5320  0214                     	;# 
  5321  0215                     	;# 
  5322  0215                     	;# 
  5323  0216                     	;# 
  5324  0216                     	;# 
  5325  0217                     	;# 
  5326  0217                     	;# 
  5327  0218                     	;# 
  5328  0219                     	;# 
  5329  021A                     	;# 
  5330  021A                     	;# 
  5331  021B                     	;# 
  5332  021B                     	;# 
  5333  021C                     	;# 
  5334  021C                     	;# 
  5335  021D                     	;# 
  5336  021D                     	;# 
  5337  021E                     	;# 
  5338  021F                     	;# 
  5339  028C                     	;# 
  5340  028C                     	;# 
  5341  028D                     	;# 
  5342  028D                     	;# 
  5343  028E                     	;# 
  5344  028F                     	;# 
  5345  0290                     	;# 
  5346  0291                     	;# 
  5347  0292                     	;# 
  5348  0292                     	;# 
  5349  0293                     	;# 
  5350  0293                     	;# 
  5351  0294                     	;# 
  5352  0295                     	;# 
  5353  0296                     	;# 
  5354  0297                     	;# 
  5355  0298                     	;# 
  5356  0298                     	;# 
  5357  0299                     	;# 
  5358  0299                     	;# 
  5359  029A                     	;# 
  5360  029B                     	;# 
  5361  029C                     	;# 
  5362  029D                     	;# 
  5363  029F                     	;# 
  5364  030C                     	;# 
  5365  030C                     	;# 
  5366  030D                     	;# 
  5367  030E                     	;# 
  5368  030F                     	;# 
  5369  0310                     	;# 
  5370  0310                     	;# 
  5371  0311                     	;# 
  5372  0312                     	;# 
  5373  0313                     	;# 
  5374  0314                     	;# 
  5375  0314                     	;# 
  5376  0315                     	;# 
  5377  0316                     	;# 
  5378  0317                     	;# 
  5379  0318                     	;# 
  5380  0318                     	;# 
  5381  0319                     	;# 
  5382  031A                     	;# 
  5383  031B                     	;# 
  5384  038C                     	;# 
  5385  038C                     	;# 
  5386  038D                     	;# 
  5387  038E                     	;# 
  5388  0390                     	;# 
  5389  0390                     	;# 
  5390  0391                     	;# 
  5391  0392                     	;# 
  5392  048C                     	;# 
  5393  048C                     	;# 
  5394  048D                     	;# 
  5395  048E                     	;# 
  5396  048F                     	;# 
  5397  048F                     	;# 
  5398  0490                     	;# 
  5399  0491                     	;# 
  5400  0492                     	;# 
  5401  0492                     	;# 
  5402  0493                     	;# 
  5403  0494                     	;# 
  5404  0495                     	;# 
  5405  0495                     	;# 
  5406  0496                     	;# 
  5407  0497                     	;# 
  5408  0498                     	;# 
  5409  0499                     	;# 
  5410  049A                     	;# 
  5411  049B                     	;# 
  5412  049C                     	;# 
  5413  049D                     	;# 
  5414  058C                     	;# 
  5415  058C                     	;# 
  5416  058D                     	;# 
  5417  058E                     	;# 
  5418  058F                     	;# 
  5419  058F                     	;# 
  5420  0590                     	;# 
  5421  0591                     	;# 
  5422  0592                     	;# 
  5423  0593                     	;# 
  5424  059C                     	;# 
  5425  059C                     	;# 
  5426  059D                     	;# 
  5427  059D                     	;# 
  5428  059E                     	;# 
  5429  059F                     	;# 
  5430  060C                     	;# 
  5431  060C                     	;# 
  5432  060D                     	;# 
  5433  060D                     	;# 
  5434  060E                     	;# 
  5435  060F                     	;# 
  5436  0610                     	;# 
  5437  0611                     	;# 
  5438  0612                     	;# 
  5439  0613                     	;# 
  5440  0614                     	;# 
  5441  0616                     	;# 
  5442  0616                     	;# 
  5443  0617                     	;# 
  5444  0617                     	;# 
  5445  0618                     	;# 
  5446  0619                     	;# 
  5447  061A                     	;# 
  5448  061B                     	;# 
  5449  061C                     	;# 
  5450  061D                     	;# 
  5451  061E                     	;# 
  5452  070C                     	;# 
  5453  070D                     	;# 
  5454  070E                     	;# 
  5455  070F                     	;# 
  5456  0710                     	;# 
  5457  0711                     	;# 
  5458  0712                     	;# 
  5459  0713                     	;# 
  5460  0714                     	;# 
  5461  0716                     	;# 
  5462  0717                     	;# 
  5463  0718                     	;# 
  5464  0719                     	;# 
  5465  071A                     	;# 
  5466  071B                     	;# 
  5467  071C                     	;# 
  5468  071D                     	;# 
  5469  071E                     	;# 
  5470  0796                     	;# 
  5471  0797                     	;# 
  5472  0798                     	;# 
  5473  0799                     	;# 
  5474  079A                     	;# 
  5475  079B                     	;# 
  5476  079C                     	;# 
  5477  079D                     	;# 
  5478  080C                     	;# 
  5479  080D                     	;# 
  5480  080E                     	;# 
  5481  080F                     	;# 
  5482  0810                     	;# 
  5483  0811                     	;# 
  5484  0812                     	;# 
  5485  0813                     	;# 
  5486  0814                     	;# 
  5487  081A                     	;# 
  5488  081A                     	;# 
  5489  081B                     	;# 
  5490  081C                     	;# 
  5491  081C                     	;# 
  5492  081D                     	;# 
  5493  081E                     	;# 
  5494  081F                     	;# 
  5495  088C                     	;# 
  5496  088D                     	;# 
  5497  088E                     	;# 
  5498  088F                     	;# 
  5499  0890                     	;# 
  5500  0891                     	;# 
  5501  0892                     	;# 
  5502  0893                     	;# 
  5503  0895                     	;# 
  5504  0896                     	;# 
  5505  0897                     	;# 
  5506  0898                     	;# 
  5507  0899                     	;# 
  5508  089A                     	;# 
  5509  089B                     	;# 
  5510  090C                     	;# 
  5511  090E                     	;# 
  5512  090F                     	;# 
  5513  091F                     	;# 
  5514  098F                     	;# 
  5515  098F                     	;# 
  5516  0990                     	;# 
  5517  0991                     	;# 
  5518  0992                     	;# 
  5519  0993                     	;# 
  5520  0994                     	;# 
  5521  0995                     	;# 
  5522  0996                     	;# 
  5523  0997                     	;# 
  5524  1E0F                     	;# 
  5525  1E10                     	;# 
  5526  1E11                     	;# 
  5527  1E12                     	;# 
  5528  1E13                     	;# 
  5529  1E14                     	;# 
  5530  1E15                     	;# 
  5531  1E16                     	;# 
  5532  1E17                     	;# 
  5533  1E18                     	;# 
  5534  1E19                     	;# 
  5535  1E1A                     	;# 
  5536  1E1B                     	;# 
  5537  1E1C                     	;# 
  5538  1E1D                     	;# 
  5539  1E1E                     	;# 
  5540  1E1F                     	;# 
  5541  1E20                     	;# 
  5542  1E21                     	;# 
  5543  1E22                     	;# 
  5544  1E23                     	;# 
  5545  1E24                     	;# 
  5546  1E25                     	;# 
  5547  1E26                     	;# 
  5548  1E27                     	;# 
  5549  1E28                     	;# 
  5550  1E29                     	;# 
  5551  1E2A                     	;# 
  5552  1E2B                     	;# 
  5553  1E2C                     	;# 
  5554  1E2D                     	;# 
  5555  1E2E                     	;# 
  5556  1E2F                     	;# 
  5557  1E30                     	;# 
  5558  1E31                     	;# 
  5559  1E32                     	;# 
  5560  1E33                     	;# 
  5561  1E34                     	;# 
  5562  1E35                     	;# 
  5563  1E36                     	;# 
  5564  1E37                     	;# 
  5565  1E8F                     	;# 
  5566  1E90                     	;# 
  5567  1E91                     	;# 
  5568  1E92                     	;# 
  5569  1E93                     	;# 
  5570  1E94                     	;# 
  5571  1E95                     	;# 
  5572  1E96                     	;# 
  5573  1E97                     	;# 
  5574  1E9C                     	;# 
  5575  1E9D                     	;# 
  5576  1E9E                     	;# 
  5577  1EA1                     	;# 
  5578  1EA2                     	;# 
  5579  1EA3                     	;# 
  5580  1EA4                     	;# 
  5581  1EA9                     	;# 
  5582  1EAA                     	;# 
  5583  1EB1                     	;# 
  5584  1EB2                     	;# 
  5585  1EB8                     	;# 
  5586  1EB9                     	;# 
  5587  1EBA                     	;# 
  5588  1EBB                     	;# 
  5589  1EBC                     	;# 
  5590  1EBD                     	;# 
  5591  1EBE                     	;# 
  5592  1EC3                     	;# 
  5593  1EC5                     	;# 
  5594  1EC6                     	;# 
  5595  1EC7                     	;# 
  5596  1EC8                     	;# 
  5597  1EC9                     	;# 
  5598  1ECA                     	;# 
  5599  1ECB                     	;# 
  5600  1ECB                     	;# 
  5601  1ECB                     	;# 
  5602  1ECC                     	;# 
  5603  1ECC                     	;# 
  5604  1ECC                     	;# 
  5605  1F10                     	;# 
  5606  1F11                     	;# 
  5607  1F12                     	;# 
  5608  1F14                     	;# 
  5609  1F15                     	;# 
  5610  1F1C                     	;# 
  5611  1F1D                     	;# 
  5612  1F1E                     	;# 
  5613  1F1F                     	;# 
  5614  1F20                     	;# 
  5615  1F21                     	;# 
  5616  1F22                     	;# 
  5617  1F23                     	;# 
  5618  1F24                     	;# 
  5619  1F25                     	;# 
  5620  1F26                     	;# 
  5621  1F27                     	;# 
  5622  1F38                     	;# 
  5623  1F39                     	;# 
  5624  1F3A                     	;# 
  5625  1F3B                     	;# 
  5626  1F3C                     	;# 
  5627  1F3D                     	;# 
  5628  1F3E                     	;# 
  5629  1F3F                     	;# 
  5630  1F43                     	;# 
  5631  1F44                     	;# 
  5632  1F45                     	;# 
  5633  1F46                     	;# 
  5634  1F47                     	;# 
  5635  1F48                     	;# 
  5636  1F49                     	;# 
  5637  1F4A                     	;# 
  5638  1F4E                     	;# 
  5639  1F4F                     	;# 
  5640  1F50                     	;# 
  5641  1F51                     	;# 
  5642  1F52                     	;# 
  5643  1F53                     	;# 
  5644  1F54                     	;# 
  5645  1F55                     	;# 
  5646  1FE4                     	;# 
  5647  1FE5                     	;# 
  5648  1FE6                     	;# 
  5649  1FE7                     	;# 
  5650  1FE8                     	;# 
  5651  1FE8                     	;# 
  5652  1FE9                     	;# 
  5653  1FEA                     	;# 
  5654  1FEB                     	;# 
  5655  1FED                     	;# 
  5656  1FEE                     	;# 
  5657  1FEF                     	;# 
  5658  0000                     	;# 
  5659  0001                     	;# 
  5660  0002                     	;# 
  5661  0003                     	;# 
  5662  0004                     	;# 
  5663  0005                     	;# 
  5664  0006                     	;# 
  5665  0007                     	;# 
  5666  0008                     	;# 
  5667  0009                     	;# 
  5668  000A                     	;# 
  5669  000B                     	;# 
  5670  000C                     	;# 
  5671  000D                     	;# 
  5672  000E                     	;# 
  5673  0012                     	;# 
  5674  0013                     	;# 
  5675  0014                     	;# 
  5676  0018                     	;# 
  5677  0019                     	;# 
  5678  001A                     	;# 
  5679  008C                     	;# 
  5680  008C                     	;# 
  5681  008D                     	;# 
  5682  008E                     	;# 
  5683  008E                     	;# 
  5684  008F                     	;# 
  5685  0090                     	;# 
  5686  0090                     	;# 
  5687  0091                     	;# 
  5688  0092                     	;# 
  5689  0092                     	;# 
  5690  0093                     	;# 
  5691  0094                     	;# 
  5692  0094                     	;# 
  5693  0095                     	;# 
  5694  0096                     	;# 
  5695  0096                     	;# 
  5696  0097                     	;# 
  5697  0098                     	;# 
  5698  0099                     	;# 
  5699  009A                     	;# 
  5700  009B                     	;# 
  5701  009B                     	;# 
  5702  009C                     	;# 
  5703  009D                     	;# 
  5704  009D                     	;# 
  5705  009E                     	;# 
  5706  009F                     	;# 
  5707  010C                     	;# 
  5708  010C                     	;# 
  5709  010D                     	;# 
  5710  010E                     	;# 
  5711  010F                     	;# 
  5712  010F                     	;# 
  5713  0110                     	;# 
  5714  0111                     	;# 
  5715  0112                     	;# 
  5716  0113                     	;# 
  5717  0114                     	;# 
  5718  0115                     	;# 
  5719  0116                     	;# 
  5720  0117                     	;# 
  5721  0118                     	;# 
  5722  0119                     	;# 
  5723  0119                     	;# 
  5724  0119                     	;# 
  5725  011A                     	;# 
  5726  011A                     	;# 
  5727  011A                     	;# 
  5728  011B                     	;# 
  5729  011B                     	;# 
  5730  011B                     	;# 
  5731  011B                     	;# 
  5732  011B                     	;# 
  5733  011C                     	;# 
  5734  011C                     	;# 
  5735  011C                     	;# 
  5736  011D                     	;# 
  5737  011D                     	;# 
  5738  011D                     	;# 
  5739  011E                     	;# 
  5740  011E                     	;# 
  5741  011E                     	;# 
  5742  011F                     	;# 
  5743  011F                     	;# 
  5744  011F                     	;# 
  5745  011F                     	;# 
  5746  011F                     	;# 
  5747  018C                     	;# 
  5748  018D                     	;# 
  5749  018E                     	;# 
  5750  018F                     	;# 
  5751  0190                     	;# 
  5752  0191                     	;# 
  5753  0192                     	;# 
  5754  0196                     	;# 
  5755  0197                     	;# 
  5756  0198                     	;# 
  5757  0199                     	;# 
  5758  019A                     	;# 
  5759  019B                     	;# 
  5760  019C                     	;# 
  5761  020C                     	;# 
  5762  020D                     	;# 
  5763  020E                     	;# 
  5764  020E                     	;# 
  5765  020F                     	;# 
  5766  020F                     	;# 
  5767  0210                     	;# 
  5768  0210                     	;# 
  5769  0211                     	;# 
  5770  0211                     	;# 
  5771  0212                     	;# 
  5772  0213                     	;# 
  5773  0214                     	;# 
  5774  0214                     	;# 
  5775  0215                     	;# 
  5776  0215                     	;# 
  5777  0216                     	;# 
  5778  0216                     	;# 
  5779  0217                     	;# 
  5780  0217                     	;# 
  5781  0218                     	;# 
  5782  0219                     	;# 
  5783  021A                     	;# 
  5784  021A                     	;# 
  5785  021B                     	;# 
  5786  021B                     	;# 
  5787  021C                     	;# 
  5788  021C                     	;# 
  5789  021D                     	;# 
  5790  021D                     	;# 
  5791  021E                     	;# 
  5792  021F                     	;# 
  5793  028C                     	;# 
  5794  028C                     	;# 
  5795  028D                     	;# 
  5796  028D                     	;# 
  5797  028E                     	;# 
  5798  028F                     	;# 
  5799  0290                     	;# 
  5800  0291                     	;# 
  5801  0292                     	;# 
  5802  0292                     	;# 
  5803  0293                     	;# 
  5804  0293                     	;# 
  5805  0294                     	;# 
  5806  0295                     	;# 
  5807  0296                     	;# 
  5808  0297                     	;# 
  5809  0298                     	;# 
  5810  0298                     	;# 
  5811  0299                     	;# 
  5812  0299                     	;# 
  5813  029A                     	;# 
  5814  029B                     	;# 
  5815  029C                     	;# 
  5816  029D                     	;# 
  5817  029F                     	;# 
  5818  030C                     	;# 
  5819  030C                     	;# 
  5820  030D                     	;# 
  5821  030E                     	;# 
  5822  030F                     	;# 
  5823  0310                     	;# 
  5824  0310                     	;# 
  5825  0311                     	;# 
  5826  0312                     	;# 
  5827  0313                     	;# 
  5828  0314                     	;# 
  5829  0314                     	;# 
  5830  0315                     	;# 
  5831  0316                     	;# 
  5832  0317                     	;# 
  5833  0318                     	;# 
  5834  0318                     	;# 
  5835  0319                     	;# 
  5836  031A                     	;# 
  5837  031B                     	;# 
  5838  038C                     	;# 
  5839  038C                     	;# 
  5840  038D                     	;# 
  5841  038E                     	;# 
  5842  0390                     	;# 
  5843  0390                     	;# 
  5844  0391                     	;# 
  5845  0392                     	;# 
  5846  048C                     	;# 
  5847  048C                     	;# 
  5848  048D                     	;# 
  5849  048E                     	;# 
  5850  048F                     	;# 
  5851  048F                     	;# 
  5852  0490                     	;# 
  5853  0491                     	;# 
  5854  0492                     	;# 
  5855  0492                     	;# 
  5856  0493                     	;# 
  5857  0494                     	;# 
  5858  0495                     	;# 
  5859  0495                     	;# 
  5860  0496                     	;# 
  5861  0497                     	;# 
  5862  0498                     	;# 
  5863  0499                     	;# 
  5864  049A                     	;# 
  5865  049B                     	;# 
  5866  049C                     	;# 
  5867  049D                     	;# 
  5868  058C                     	;# 
  5869  058C                     	;# 
  5870  058D                     	;# 
  5871  058E                     	;# 
  5872  058F                     	;# 
  5873  058F                     	;# 
  5874  0590                     	;# 
  5875  0591                     	;# 
  5876  0592                     	;# 
  5877  0593                     	;# 
  5878  059C                     	;# 
  5879  059C                     	;# 
  5880  059D                     	;# 
  5881  059D                     	;# 
  5882  059E                     	;# 
  5883  059F                     	;# 
  5884  060C                     	;# 
  5885  060C                     	;# 
  5886  060D                     	;# 
  5887  060D                     	;# 
  5888  060E                     	;# 
  5889  060F                     	;# 
  5890  0610                     	;# 
  5891  0611                     	;# 
  5892  0612                     	;# 
  5893  0613                     	;# 
  5894  0614                     	;# 
  5895  0616                     	;# 
  5896  0616                     	;# 
  5897  0617                     	;# 
  5898  0617                     	;# 
  5899  0618                     	;# 
  5900  0619                     	;# 
  5901  061A                     	;# 
  5902  061B                     	;# 
  5903  061C                     	;# 
  5904  061D                     	;# 
  5905  061E                     	;# 
  5906  070C                     	;# 
  5907  070D                     	;# 
  5908  070E                     	;# 
  5909  070F                     	;# 
  5910  0710                     	;# 
  5911  0711                     	;# 
  5912  0712                     	;# 
  5913  0713                     	;# 
  5914  0714                     	;# 
  5915  0716                     	;# 
  5916  0717                     	;# 
  5917  0718                     	;# 
  5918  0719                     	;# 
  5919  071A                     	;# 
  5920  071B                     	;# 
  5921  071C                     	;# 
  5922  071D                     	;# 
  5923  071E                     	;# 
  5924  0796                     	;# 
  5925  0797                     	;# 
  5926  0798                     	;# 
  5927  0799                     	;# 
  5928  079A                     	;# 
  5929  079B                     	;# 
  5930  079C                     	;# 
  5931  079D                     	;# 
  5932  080C                     	;# 
  5933  080D                     	;# 
  5934  080E                     	;# 
  5935  080F                     	;# 
  5936  0810                     	;# 
  5937  0811                     	;# 
  5938  0812                     	;# 
  5939  0813                     	;# 
  5940  0814                     	;# 
  5941  081A                     	;# 
  5942  081A                     	;# 
  5943  081B                     	;# 
  5944  081C                     	;# 
  5945  081C                     	;# 
  5946  081D                     	;# 
  5947  081E                     	;# 
  5948  081F                     	;# 
  5949  088C                     	;# 
  5950  088D                     	;# 
  5951  088E                     	;# 
  5952  088F                     	;# 
  5953  0890                     	;# 
  5954  0891                     	;# 
  5955  0892                     	;# 
  5956  0893                     	;# 
  5957  0895                     	;# 
  5958  0896                     	;# 
  5959  0897                     	;# 
  5960  0898                     	;# 
  5961  0899                     	;# 
  5962  089A                     	;# 
  5963  089B                     	;# 
  5964  090C                     	;# 
  5965  090E                     	;# 
  5966  090F                     	;# 
  5967  091F                     	;# 
  5968  098F                     	;# 
  5969  098F                     	;# 
  5970  0990                     	;# 
  5971  0991                     	;# 
  5972  0992                     	;# 
  5973  0993                     	;# 
  5974  0994                     	;# 
  5975  0995                     	;# 
  5976  0996                     	;# 
  5977  0997                     	;# 
  5978  1E0F                     	;# 
  5979  1E10                     	;# 
  5980  1E11                     	;# 
  5981  1E12                     	;# 
  5982  1E13                     	;# 
  5983  1E14                     	;# 
  5984  1E15                     	;# 
  5985  1E16                     	;# 
  5986  1E17                     	;# 
  5987  1E18                     	;# 
  5988  1E19                     	;# 
  5989  1E1A                     	;# 
  5990  1E1B                     	;# 
  5991  1E1C                     	;# 
  5992  1E1D                     	;# 
  5993  1E1E                     	;# 
  5994  1E1F                     	;# 
  5995  1E20                     	;# 
  5996  1E21                     	;# 
  5997  1E22                     	;# 
  5998  1E23                     	;# 
  5999  1E24                     	;# 
  6000  1E25                     	;# 
  6001  1E26                     	;# 
  6002  1E27                     	;# 
  6003  1E28                     	;# 
  6004  1E29                     	;# 
  6005  1E2A                     	;# 
  6006  1E2B                     	;# 
  6007  1E2C                     	;# 
  6008  1E2D                     	;# 
  6009  1E2E                     	;# 
  6010  1E2F                     	;# 
  6011  1E30                     	;# 
  6012  1E31                     	;# 
  6013  1E32                     	;# 
  6014  1E33                     	;# 
  6015  1E34                     	;# 
  6016  1E35                     	;# 
  6017  1E36                     	;# 
  6018  1E37                     	;# 
  6019  1E8F                     	;# 
  6020  1E90                     	;# 
  6021  1E91                     	;# 
  6022  1E92                     	;# 
  6023  1E93                     	;# 
  6024  1E94                     	;# 
  6025  1E95                     	;# 
  6026  1E96                     	;# 
  6027  1E97                     	;# 
  6028  1E9C                     	;# 
  6029  1E9D                     	;# 
  6030  1E9E                     	;# 
  6031  1EA1                     	;# 
  6032  1EA2                     	;# 
  6033  1EA3                     	;# 
  6034  1EA4                     	;# 
  6035  1EA9                     	;# 
  6036  1EAA                     	;# 
  6037  1EB1                     	;# 
  6038  1EB2                     	;# 
  6039  1EB8                     	;# 
  6040  1EB9                     	;# 
  6041  1EBA                     	;# 
  6042  1EBB                     	;# 
  6043  1EBC                     	;# 
  6044  1EBD                     	;# 
  6045  1EBE                     	;# 
  6046  1EC3                     	;# 
  6047  1EC5                     	;# 
  6048  1EC6                     	;# 
  6049  1EC7                     	;# 
  6050  1EC8                     	;# 
  6051  1EC9                     	;# 
  6052  1ECA                     	;# 
  6053  1ECB                     	;# 
  6054  1ECB                     	;# 
  6055  1ECB                     	;# 
  6056  1ECC                     	;# 
  6057  1ECC                     	;# 
  6058  1ECC                     	;# 
  6059  1F10                     	;# 
  6060  1F11                     	;# 
  6061  1F12                     	;# 
  6062  1F14                     	;# 
  6063  1F15                     	;# 
  6064  1F1C                     	;# 
  6065  1F1D                     	;# 
  6066  1F1E                     	;# 
  6067  1F1F                     	;# 
  6068  1F20                     	;# 
  6069  1F21                     	;# 
  6070  1F22                     	;# 
  6071  1F23                     	;# 
  6072  1F24                     	;# 
  6073  1F25                     	;# 
  6074  1F26                     	;# 
  6075  1F27                     	;# 
  6076  1F38                     	;# 
  6077  1F39                     	;# 
  6078  1F3A                     	;# 
  6079  1F3B                     	;# 
  6080  1F3C                     	;# 
  6081  1F3D                     	;# 
  6082  1F3E                     	;# 
  6083  1F3F                     	;# 
  6084  1F43                     	;# 
  6085  1F44                     	;# 
  6086  1F45                     	;# 
  6087  1F46                     	;# 
  6088  1F47                     	;# 
  6089  1F48                     	;# 
  6090  1F49                     	;# 
  6091  1F4A                     	;# 
  6092  1F4E                     	;# 
  6093  1F4F                     	;# 
  6094  1F50                     	;# 
  6095  1F51                     	;# 
  6096  1F52                     	;# 
  6097  1F53                     	;# 
  6098  1F54                     	;# 
  6099  1F55                     	;# 
  6100  1FE4                     	;# 
  6101  1FE5                     	;# 
  6102  1FE6                     	;# 
  6103  1FE7                     	;# 
  6104  1FE8                     	;# 
  6105  1FE8                     	;# 
  6106  1FE9                     	;# 
  6107  1FEA                     	;# 
  6108  1FEB                     	;# 
  6109  1FED                     	;# 
  6110  1FEE                     	;# 
  6111  1FEF                     	;# 
  6112  0000                     	;# 
  6113  0001                     	;# 
  6114  0002                     	;# 
  6115  0003                     	;# 
  6116  0004                     	;# 
  6117  0005                     	;# 
  6118  0006                     	;# 
  6119  0007                     	;# 
  6120  0008                     	;# 
  6121  0009                     	;# 
  6122  000A                     	;# 
  6123  000B                     	;# 
  6124  000C                     	;# 
  6125  000D                     	;# 
  6126  000E                     	;# 
  6127  0012                     	;# 
  6128  0013                     	;# 
  6129  0014                     	;# 
  6130  0018                     	;# 
  6131  0019                     	;# 
  6132  001A                     	;# 
  6133  008C                     	;# 
  6134  008C                     	;# 
  6135  008D                     	;# 
  6136  008E                     	;# 
  6137  008E                     	;# 
  6138  008F                     	;# 
  6139  0090                     	;# 
  6140  0090                     	;# 
  6141  0091                     	;# 
  6142  0092                     	;# 
  6143  0092                     	;# 
  6144  0093                     	;# 
  6145  0094                     	;# 
  6146  0094                     	;# 
  6147  0095                     	;# 
  6148  0096                     	;# 
  6149  0096                     	;# 
  6150  0097                     	;# 
  6151  0098                     	;# 
  6152  0099                     	;# 
  6153  009A                     	;# 
  6154  009B                     	;# 
  6155  009B                     	;# 
  6156  009C                     	;# 
  6157  009D                     	;# 
  6158  009D                     	;# 
  6159  009E                     	;# 
  6160  009F                     	;# 
  6161  010C                     	;# 
  6162  010C                     	;# 
  6163  010D                     	;# 
  6164  010E                     	;# 
  6165  010F                     	;# 
  6166  010F                     	;# 
  6167  0110                     	;# 
  6168  0111                     	;# 
  6169  0112                     	;# 
  6170  0113                     	;# 
  6171  0114                     	;# 
  6172  0115                     	;# 
  6173  0116                     	;# 
  6174  0117                     	;# 
  6175  0118                     	;# 
  6176  0119                     	;# 
  6177  0119                     	;# 
  6178  0119                     	;# 
  6179  011A                     	;# 
  6180  011A                     	;# 
  6181  011A                     	;# 
  6182  011B                     	;# 
  6183  011B                     	;# 
  6184  011B                     	;# 
  6185  011B                     	;# 
  6186  011B                     	;# 
  6187  011C                     	;# 
  6188  011C                     	;# 
  6189  011C                     	;# 
  6190  011D                     	;# 
  6191  011D                     	;# 
  6192  011D                     	;# 
  6193  011E                     	;# 
  6194  011E                     	;# 
  6195  011E                     	;# 
  6196  011F                     	;# 
  6197  011F                     	;# 
  6198  011F                     	;# 
  6199  011F                     	;# 
  6200  011F                     	;# 
  6201  018C                     	;# 
  6202  018D                     	;# 
  6203  018E                     	;# 
  6204  018F                     	;# 
  6205  0190                     	;# 
  6206  0191                     	;# 
  6207  0192                     	;# 
  6208  0196                     	;# 
  6209  0197                     	;# 
  6210  0198                     	;# 
  6211  0199                     	;# 
  6212  019A                     	;# 
  6213  019B                     	;# 
  6214  019C                     	;# 
  6215  020C                     	;# 
  6216  020D                     	;# 
  6217  020E                     	;# 
  6218  020E                     	;# 
  6219  020F                     	;# 
  6220  020F                     	;# 
  6221  0210                     	;# 
  6222  0210                     	;# 
  6223  0211                     	;# 
  6224  0211                     	;# 
  6225  0212                     	;# 
  6226  0213                     	;# 
  6227  0214                     	;# 
  6228  0214                     	;# 
  6229  0215                     	;# 
  6230  0215                     	;# 
  6231  0216                     	;# 
  6232  0216                     	;# 
  6233  0217                     	;# 
  6234  0217                     	;# 
  6235  0218                     	;# 
  6236  0219                     	;# 
  6237  021A                     	;# 
  6238  021A                     	;# 
  6239  021B                     	;# 
  6240  021B                     	;# 
  6241  021C                     	;# 
  6242  021C                     	;# 
  6243  021D                     	;# 
  6244  021D                     	;# 
  6245  021E                     	;# 
  6246  021F                     	;# 
  6247  028C                     	;# 
  6248  028C                     	;# 
  6249  028D                     	;# 
  6250  028D                     	;# 
  6251  028E                     	;# 
  6252  028F                     	;# 
  6253  0290                     	;# 
  6254  0291                     	;# 
  6255  0292                     	;# 
  6256  0292                     	;# 
  6257  0293                     	;# 
  6258  0293                     	;# 
  6259  0294                     	;# 
  6260  0295                     	;# 
  6261  0296                     	;# 
  6262  0297                     	;# 
  6263  0298                     	;# 
  6264  0298                     	;# 
  6265  0299                     	;# 
  6266  0299                     	;# 
  6267  029A                     	;# 
  6268  029B                     	;# 
  6269  029C                     	;# 
  6270  029D                     	;# 
  6271  029F                     	;# 
  6272  030C                     	;# 
  6273  030C                     	;# 
  6274  030D                     	;# 
  6275  030E                     	;# 
  6276  030F                     	;# 
  6277  0310                     	;# 
  6278  0310                     	;# 
  6279  0311                     	;# 
  6280  0312                     	;# 
  6281  0313                     	;# 
  6282  0314                     	;# 
  6283  0314                     	;# 
  6284  0315                     	;# 
  6285  0316                     	;# 
  6286  0317                     	;# 
  6287  0318                     	;# 
  6288  0318                     	;# 
  6289  0319                     	;# 
  6290  031A                     	;# 
  6291  031B                     	;# 
  6292  038C                     	;# 
  6293  038C                     	;# 
  6294  038D                     	;# 
  6295  038E                     	;# 
  6296  0390                     	;# 
  6297  0390                     	;# 
  6298  0391                     	;# 
  6299  0392                     	;# 
  6300  048C                     	;# 
  6301  048C                     	;# 
  6302  048D                     	;# 
  6303  048E                     	;# 
  6304  048F                     	;# 
  6305  048F                     	;# 
  6306  0490                     	;# 
  6307  0491                     	;# 
  6308  0492                     	;# 
  6309  0492                     	;# 
  6310  0493                     	;# 
  6311  0494                     	;# 
  6312  0495                     	;# 
  6313  0495                     	;# 
  6314  0496                     	;# 
  6315  0497                     	;# 
  6316  0498                     	;# 
  6317  0499                     	;# 
  6318  049A                     	;# 
  6319  049B                     	;# 
  6320  049C                     	;# 
  6321  049D                     	;# 
  6322  058C                     	;# 
  6323  058C                     	;# 
  6324  058D                     	;# 
  6325  058E                     	;# 
  6326  058F                     	;# 
  6327  058F                     	;# 
  6328  0590                     	;# 
  6329  0591                     	;# 
  6330  0592                     	;# 
  6331  0593                     	;# 
  6332  059C                     	;# 
  6333  059C                     	;# 
  6334  059D                     	;# 
  6335  059D                     	;# 
  6336  059E                     	;# 
  6337  059F                     	;# 
  6338  060C                     	;# 
  6339  060C                     	;# 
  6340  060D                     	;# 
  6341  060D                     	;# 
  6342  060E                     	;# 
  6343  060F                     	;# 
  6344  0610                     	;# 
  6345  0611                     	;# 
  6346  0612                     	;# 
  6347  0613                     	;# 
  6348  0614                     	;# 
  6349  0616                     	;# 
  6350  0616                     	;# 
  6351  0617                     	;# 
  6352  0617                     	;# 
  6353  0618                     	;# 
  6354  0619                     	;# 
  6355  061A                     	;# 
  6356  061B                     	;# 
  6357  061C                     	;# 
  6358  061D                     	;# 
  6359  061E                     	;# 
  6360  070C                     	;# 
  6361  070D                     	;# 
  6362  070E                     	;# 
  6363  070F                     	;# 
  6364  0710                     	;# 
  6365  0711                     	;# 
  6366  0712                     	;# 
  6367  0713                     	;# 
  6368  0714                     	;# 
  6369  0716                     	;# 
  6370  0717                     	;# 
  6371  0718                     	;# 
  6372  0719                     	;# 
  6373  071A                     	;# 
  6374  071B                     	;# 
  6375  071C                     	;# 
  6376  071D                     	;# 
  6377  071E                     	;# 
  6378  0796                     	;# 
  6379  0797                     	;# 
  6380  0798                     	;# 
  6381  0799                     	;# 
  6382  079A                     	;# 
  6383  079B                     	;# 
  6384  079C                     	;# 
  6385  079D                     	;# 
  6386  080C                     	;# 
  6387  080D                     	;# 
  6388  080E                     	;# 
  6389  080F                     	;# 
  6390  0810                     	;# 
  6391  0811                     	;# 
  6392  0812                     	;# 
  6393  0813                     	;# 
  6394  0814                     	;# 
  6395  081A                     	;# 
  6396  081A                     	;# 
  6397  081B                     	;# 
  6398  081C                     	;# 
  6399  081C                     	;# 
  6400  081D                     	;# 
  6401  081E                     	;# 
  6402  081F                     	;# 
  6403  088C                     	;# 
  6404  088D                     	;# 
  6405  088E                     	;# 
  6406  088F                     	;# 
  6407  0890                     	;# 
  6408  0891                     	;# 
  6409  0892                     	;# 
  6410  0893                     	;# 
  6411  0895                     	;# 
  6412  0896                     	;# 
  6413  0897                     	;# 
  6414  0898                     	;# 
  6415  0899                     	;# 
  6416  089A                     	;# 
  6417  089B                     	;# 
  6418  090C                     	;# 
  6419  090E                     	;# 
  6420  090F                     	;# 
  6421  091F                     	;# 
  6422  098F                     	;# 
  6423  098F                     	;# 
  6424  0990                     	;# 
  6425  0991                     	;# 
  6426  0992                     	;# 
  6427  0993                     	;# 
  6428  0994                     	;# 
  6429  0995                     	;# 
  6430  0996                     	;# 
  6431  0997                     	;# 
  6432  1E0F                     	;# 
  6433  1E10                     	;# 
  6434  1E11                     	;# 
  6435  1E12                     	;# 
  6436  1E13                     	;# 
  6437  1E14                     	;# 
  6438  1E15                     	;# 
  6439  1E16                     	;# 
  6440  1E17                     	;# 
  6441  1E18                     	;# 
  6442  1E19                     	;# 
  6443  1E1A                     	;# 
  6444  1E1B                     	;# 
  6445  1E1C                     	;# 
  6446  1E1D                     	;# 
  6447  1E1E                     	;# 
  6448  1E1F                     	;# 
  6449  1E20                     	;# 
  6450  1E21                     	;# 
  6451  1E22                     	;# 
  6452  1E23                     	;# 
  6453  1E24                     	;# 
  6454  1E25                     	;# 
  6455  1E26                     	;# 
  6456  1E27                     	;# 
  6457  1E28                     	;# 
  6458  1E29                     	;# 
  6459  1E2A                     	;# 
  6460  1E2B                     	;# 
  6461  1E2C                     	;# 
  6462  1E2D                     	;# 
  6463  1E2E                     	;# 
  6464  1E2F                     	;# 
  6465  1E30                     	;# 
  6466  1E31                     	;# 
  6467  1E32                     	;# 
  6468  1E33                     	;# 
  6469  1E34                     	;# 
  6470  1E35                     	;# 
  6471  1E36                     	;# 
  6472  1E37                     	;# 
  6473  1E8F                     	;# 
  6474  1E90                     	;# 
  6475  1E91                     	;# 
  6476  1E92                     	;# 
  6477  1E93                     	;# 
  6478  1E94                     	;# 
  6479  1E95                     	;# 
  6480  1E96                     	;# 
  6481  1E97                     	;# 
  6482  1E9C                     	;# 
  6483  1E9D                     	;# 
  6484  1E9E                     	;# 
  6485  1EA1                     	;# 
  6486  1EA2                     	;# 
  6487  1EA3                     	;# 
  6488  1EA4                     	;# 
  6489  1EA9                     	;# 
  6490  1EAA                     	;# 
  6491  1EB1                     	;# 
  6492  1EB2                     	;# 
  6493  1EB8                     	;# 
  6494  1EB9                     	;# 
  6495  1EBA                     	;# 
  6496  1EBB                     	;# 
  6497  1EBC                     	;# 
  6498  1EBD                     	;# 
  6499  1EBE                     	;# 
  6500  1EC3                     	;# 
  6501  1EC5                     	;# 
  6502  1EC6                     	;# 
  6503  1EC7                     	;# 
  6504  1EC8                     	;# 
  6505  1EC9                     	;# 
  6506  1ECA                     	;# 
  6507  1ECB                     	;# 
  6508  1ECB                     	;# 
  6509  1ECB                     	;# 
  6510  1ECC                     	;# 
  6511  1ECC                     	;# 
  6512  1ECC                     	;# 
  6513  1F10                     	;# 
  6514  1F11                     	;# 
  6515  1F12                     	;# 
  6516  1F14                     	;# 
  6517  1F15                     	;# 
  6518  1F1C                     	;# 
  6519  1F1D                     	;# 
  6520  1F1E                     	;# 
  6521  1F1F                     	;# 
  6522  1F20                     	;# 
  6523  1F21                     	;# 
  6524  1F22                     	;# 
  6525  1F23                     	;# 
  6526  1F24                     	;# 
  6527  1F25                     	;# 
  6528  1F26                     	;# 
  6529  1F27                     	;# 
  6530  1F38                     	;# 
  6531  1F39                     	;# 
  6532  1F3A                     	;# 
  6533  1F3B                     	;# 
  6534  1F3C                     	;# 
  6535  1F3D                     	;# 
  6536  1F3E                     	;# 
  6537  1F3F                     	;# 
  6538  1F43                     	;# 
  6539  1F44                     	;# 
  6540  1F45                     	;# 
  6541  1F46                     	;# 
  6542  1F47                     	;# 
  6543  1F48                     	;# 
  6544  1F49                     	;# 
  6545  1F4A                     	;# 
  6546  1F4E                     	;# 
  6547  1F4F                     	;# 
  6548  1F50                     	;# 
  6549  1F51                     	;# 
  6550  1F52                     	;# 
  6551  1F53                     	;# 
  6552  1F54                     	;# 
  6553  1F55                     	;# 
  6554  1FE4                     	;# 
  6555  1FE5                     	;# 
  6556  1FE6                     	;# 
  6557  1FE7                     	;# 
  6558  1FE8                     	;# 
  6559  1FE8                     	;# 
  6560  1FE9                     	;# 
  6561  1FEA                     	;# 
  6562  1FEB                     	;# 
  6563  1FED                     	;# 
  6564  1FEE                     	;# 
  6565  1FEF                     	;# 
  6566  0000                     	;# 
  6567  0001                     	;# 
  6568  0002                     	;# 
  6569  0003                     	;# 
  6570  0004                     	;# 
  6571  0005                     	;# 
  6572  0006                     	;# 
  6573  0007                     	;# 
  6574  0008                     	;# 
  6575  0009                     	;# 
  6576  000A                     	;# 
  6577  000B                     	;# 
  6578  000C                     	;# 
  6579  000D                     	;# 
  6580  000E                     	;# 
  6581  0012                     	;# 
  6582  0013                     	;# 
  6583  0014                     	;# 
  6584  0018                     	;# 
  6585  0019                     	;# 
  6586  001A                     	;# 
  6587  008C                     	;# 
  6588  008C                     	;# 
  6589  008D                     	;# 
  6590  008E                     	;# 
  6591  008E                     	;# 
  6592  008F                     	;# 
  6593  0090                     	;# 
  6594  0090                     	;# 
  6595  0091                     	;# 
  6596  0092                     	;# 
  6597  0092                     	;# 
  6598  0093                     	;# 
  6599  0094                     	;# 
  6600  0094                     	;# 
  6601  0095                     	;# 
  6602  0096                     	;# 
  6603  0096                     	;# 
  6604  0097                     	;# 
  6605  0098                     	;# 
  6606  0099                     	;# 
  6607  009A                     	;# 
  6608  009B                     	;# 
  6609  009B                     	;# 
  6610  009C                     	;# 
  6611  009D                     	;# 
  6612  009D                     	;# 
  6613  009E                     	;# 
  6614  009F                     	;# 
  6615  010C                     	;# 
  6616  010C                     	;# 
  6617  010D                     	;# 
  6618  010E                     	;# 
  6619  010F                     	;# 
  6620  010F                     	;# 
  6621  0110                     	;# 
  6622  0111                     	;# 
  6623  0112                     	;# 
  6624  0113                     	;# 
  6625  0114                     	;# 
  6626  0115                     	;# 
  6627  0116                     	;# 
  6628  0117                     	;# 
  6629  0118                     	;# 
  6630  0119                     	;# 
  6631  0119                     	;# 
  6632  0119                     	;# 
  6633  011A                     	;# 
  6634  011A                     	;# 
  6635  011A                     	;# 
  6636  011B                     	;# 
  6637  011B                     	;# 
  6638  011B                     	;# 
  6639  011B                     	;# 
  6640  011B                     	;# 
  6641  011C                     	;# 
  6642  011C                     	;# 
  6643  011C                     	;# 
  6644  011D                     	;# 
  6645  011D                     	;# 
  6646  011D                     	;# 
  6647  011E                     	;# 
  6648  011E                     	;# 
  6649  011E                     	;# 
  6650  011F                     	;# 
  6651  011F                     	;# 
  6652  011F                     	;# 
  6653  011F                     	;# 
  6654  011F                     	;# 
  6655  018C                     	;# 
  6656  018D                     	;# 
  6657  018E                     	;# 
  6658  018F                     	;# 
  6659  0190                     	;# 
  6660  0191                     	;# 
  6661  0192                     	;# 
  6662  0196                     	;# 
  6663  0197                     	;# 
  6664  0198                     	;# 
  6665  0199                     	;# 
  6666  019A                     	;# 
  6667  019B                     	;# 
  6668  019C                     	;# 
  6669  020C                     	;# 
  6670  020D                     	;# 
  6671  020E                     	;# 
  6672  020E                     	;# 
  6673  020F                     	;# 
  6674  020F                     	;# 
  6675  0210                     	;# 
  6676  0210                     	;# 
  6677  0211                     	;# 
  6678  0211                     	;# 
  6679  0212                     	;# 
  6680  0213                     	;# 
  6681  0214                     	;# 
  6682  0214                     	;# 
  6683  0215                     	;# 
  6684  0215                     	;# 
  6685  0216                     	;# 
  6686  0216                     	;# 
  6687  0217                     	;# 
  6688  0217                     	;# 
  6689  0218                     	;# 
  6690  0219                     	;# 
  6691  021A                     	;# 
  6692  021A                     	;# 
  6693  021B                     	;# 
  6694  021B                     	;# 
  6695  021C                     	;# 
  6696  021C                     	;# 
  6697  021D                     	;# 
  6698  021D                     	;# 
  6699  021E                     	;# 
  6700  021F                     	;# 
  6701  028C                     	;# 
  6702  028C                     	;# 
  6703  028D                     	;# 
  6704  028D                     	;# 
  6705  028E                     	;# 
  6706  028F                     	;# 
  6707  0290                     	;# 
  6708  0291                     	;# 
  6709  0292                     	;# 
  6710  0292                     	;# 
  6711  0293                     	;# 
  6712  0293                     	;# 
  6713  0294                     	;# 
  6714  0295                     	;# 
  6715  0296                     	;# 
  6716  0297                     	;# 
  6717  0298                     	;# 
  6718  0298                     	;# 
  6719  0299                     	;# 
  6720  0299                     	;# 
  6721  029A                     	;# 
  6722  029B                     	;# 
  6723  029C                     	;# 
  6724  029D                     	;# 
  6725  029F                     	;# 
  6726  030C                     	;# 
  6727  030C                     	;# 
  6728  030D                     	;# 
  6729  030E                     	;# 
  6730  030F                     	;# 
  6731  0310                     	;# 
  6732  0310                     	;# 
  6733  0311                     	;# 
  6734  0312                     	;# 
  6735  0313                     	;# 
  6736  0314                     	;# 
  6737  0314                     	;# 
  6738  0315                     	;# 
  6739  0316                     	;# 
  6740  0317                     	;# 
  6741  0318                     	;# 
  6742  0318                     	;# 
  6743  0319                     	;# 
  6744  031A                     	;# 
  6745  031B                     	;# 
  6746  038C                     	;# 
  6747  038C                     	;# 
  6748  038D                     	;# 
  6749  038E                     	;# 
  6750  0390                     	;# 
  6751  0390                     	;# 
  6752  0391                     	;# 
  6753  0392                     	;# 
  6754  048C                     	;# 
  6755  048C                     	;# 
  6756  048D                     	;# 
  6757  048E                     	;# 
  6758  048F                     	;# 
  6759  048F                     	;# 
  6760  0490                     	;# 
  6761  0491                     	;# 
  6762  0492                     	;# 
  6763  0492                     	;# 
  6764  0493                     	;# 
  6765  0494                     	;# 
  6766  0495                     	;# 
  6767  0495                     	;# 
  6768  0496                     	;# 
  6769  0497                     	;# 
  6770  0498                     	;# 
  6771  0499                     	;# 
  6772  049A                     	;# 
  6773  049B                     	;# 
  6774  049C                     	;# 
  6775  049D                     	;# 
  6776  058C                     	;# 
  6777  058C                     	;# 
  6778  058D                     	;# 
  6779  058E                     	;# 
  6780  058F                     	;# 
  6781  058F                     	;# 
  6782  0590                     	;# 
  6783  0591                     	;# 
  6784  0592                     	;# 
  6785  0593                     	;# 
  6786  059C                     	;# 
  6787  059C                     	;# 
  6788  059D                     	;# 
  6789  059D                     	;# 
  6790  059E                     	;# 
  6791  059F                     	;# 
  6792  060C                     	;# 
  6793  060C                     	;# 
  6794  060D                     	;# 
  6795  060D                     	;# 
  6796  060E                     	;# 
  6797  060F                     	;# 
  6798  0610                     	;# 
  6799  0611                     	;# 
  6800  0612                     	;# 
  6801  0613                     	;# 
  6802  0614                     	;# 
  6803  0616                     	;# 
  6804  0616                     	;# 
  6805  0617                     	;# 
  6806  0617                     	;# 
  6807  0618                     	;# 
  6808  0619                     	;# 
  6809  061A                     	;# 
  6810  061B                     	;# 
  6811  061C                     	;# 
  6812  061D                     	;# 
  6813  061E                     	;# 
  6814  070C                     	;# 
  6815  070D                     	;# 
  6816  070E                     	;# 
  6817  070F                     	;# 
  6818  0710                     	;# 
  6819  0711                     	;# 
  6820  0712                     	;# 
  6821  0713                     	;# 
  6822  0714                     	;# 
  6823  0716                     	;# 
  6824  0717                     	;# 
  6825  0718                     	;# 
  6826  0719                     	;# 
  6827  071A                     	;# 
  6828  071B                     	;# 
  6829  071C                     	;# 
  6830  071D                     	;# 
  6831  071E                     	;# 
  6832  0796                     	;# 
  6833  0797                     	;# 
  6834  0798                     	;# 
  6835  0799                     	;# 
  6836  079A                     	;# 
  6837  079B                     	;# 
  6838  079C                     	;# 
  6839  079D                     	;# 
  6840  080C                     	;# 
  6841  080D                     	;# 
  6842  080E                     	;# 
  6843  080F                     	;# 
  6844  0810                     	;# 
  6845  0811                     	;# 
  6846  0812                     	;# 
  6847  0813                     	;# 
  6848  0814                     	;# 
  6849  081A                     	;# 
  6850  081A                     	;# 
  6851  081B                     	;# 
  6852  081C                     	;# 
  6853  081C                     	;# 
  6854  081D                     	;# 
  6855  081E                     	;# 
  6856  081F                     	;# 
  6857  088C                     	;# 
  6858  088D                     	;# 
  6859  088E                     	;# 
  6860  088F                     	;# 
  6861  0890                     	;# 
  6862  0891                     	;# 
  6863  0892                     	;# 
  6864  0893                     	;# 
  6865  0895                     	;# 
  6866  0896                     	;# 
  6867  0897                     	;# 
  6868  0898                     	;# 
  6869  0899                     	;# 
  6870  089A                     	;# 
  6871  089B                     	;# 
  6872  090C                     	;# 
  6873  090E                     	;# 
  6874  090F                     	;# 
  6875  091F                     	;# 
  6876  098F                     	;# 
  6877  098F                     	;# 
  6878  0990                     	;# 
  6879  0991                     	;# 
  6880  0992                     	;# 
  6881  0993                     	;# 
  6882  0994                     	;# 
  6883  0995                     	;# 
  6884  0996                     	;# 
  6885  0997                     	;# 
  6886  1E0F                     	;# 
  6887  1E10                     	;# 
  6888  1E11                     	;# 
  6889  1E12                     	;# 
  6890  1E13                     	;# 
  6891  1E14                     	;# 
  6892  1E15                     	;# 
  6893  1E16                     	;# 
  6894  1E17                     	;# 
  6895  1E18                     	;# 
  6896  1E19                     	;# 
  6897  1E1A                     	;# 
  6898  1E1B                     	;# 
  6899  1E1C                     	;# 
  6900  1E1D                     	;# 
  6901  1E1E                     	;# 
  6902  1E1F                     	;# 
  6903  1E20                     	;# 
  6904  1E21                     	;# 
  6905  1E22                     	;# 
  6906  1E23                     	;# 
  6907  1E24                     	;# 
  6908  1E25                     	;# 
  6909  1E26                     	;# 
  6910  1E27                     	;# 
  6911  1E28                     	;# 
  6912  1E29                     	;# 
  6913  1E2A                     	;# 
  6914  1E2B                     	;# 
  6915  1E2C                     	;# 
  6916  1E2D                     	;# 
  6917  1E2E                     	;# 
  6918  1E2F                     	;# 
  6919  1E30                     	;# 
  6920  1E31                     	;# 
  6921  1E32                     	;# 
  6922  1E33                     	;# 
  6923  1E34                     	;# 
  6924  1E35                     	;# 
  6925  1E36                     	;# 
  6926  1E37                     	;# 
  6927  1E8F                     	;# 
  6928  1E90                     	;# 
  6929  1E91                     	;# 
  6930  1E92                     	;# 
  6931  1E93                     	;# 
  6932  1E94                     	;# 
  6933  1E95                     	;# 
  6934  1E96                     	;# 
  6935  1E97                     	;# 
  6936  1E9C                     	;# 
  6937  1E9D                     	;# 
  6938  1E9E                     	;# 
  6939  1EA1                     	;# 
  6940  1EA2                     	;# 
  6941  1EA3                     	;# 
  6942  1EA4                     	;# 
  6943  1EA9                     	;# 
  6944  1EAA                     	;# 
  6945  1EB1                     	;# 
  6946  1EB2                     	;# 
  6947  1EB8                     	;# 
  6948  1EB9                     	;# 
  6949  1EBA                     	;# 
  6950  1EBB                     	;# 
  6951  1EBC                     	;# 
  6952  1EBD                     	;# 
  6953  1EBE                     	;# 
  6954  1EC3                     	;# 
  6955  1EC5                     	;# 
  6956  1EC6                     	;# 
  6957  1EC7                     	;# 
  6958  1EC8                     	;# 
  6959  1EC9                     	;# 
  6960  1ECA                     	;# 
  6961  1ECB                     	;# 
  6962  1ECB                     	;# 
  6963  1ECB                     	;# 
  6964  1ECC                     	;# 
  6965  1ECC                     	;# 
  6966  1ECC                     	;# 
  6967  1F10                     	;# 
  6968  1F11                     	;# 
  6969  1F12                     	;# 
  6970  1F14                     	;# 
  6971  1F15                     	;# 
  6972  1F1C                     	;# 
  6973  1F1D                     	;# 
  6974  1F1E                     	;# 
  6975  1F1F                     	;# 
  6976  1F20                     	;# 
  6977  1F21                     	;# 
  6978  1F22                     	;# 
  6979  1F23                     	;# 
  6980  1F24                     	;# 
  6981  1F25                     	;# 
  6982  1F26                     	;# 
  6983  1F27                     	;# 
  6984  1F38                     	;# 
  6985  1F39                     	;# 
  6986  1F3A                     	;# 
  6987  1F3B                     	;# 
  6988  1F3C                     	;# 
  6989  1F3D                     	;# 
  6990  1F3E                     	;# 
  6991  1F3F                     	;# 
  6992  1F43                     	;# 
  6993  1F44                     	;# 
  6994  1F45                     	;# 
  6995  1F46                     	;# 
  6996  1F47                     	;# 
  6997  1F48                     	;# 
  6998  1F49                     	;# 
  6999  1F4A                     	;# 
  7000  1F4E                     	;# 
  7001  1F4F                     	;# 
  7002  1F50                     	;# 
  7003  1F51                     	;# 
  7004  1F52                     	;# 
  7005  1F53                     	;# 
  7006  1F54                     	;# 
  7007  1F55                     	;# 
  7008  1FE4                     	;# 
  7009  1FE5                     	;# 
  7010  1FE6                     	;# 
  7011  1FE7                     	;# 
  7012  1FE8                     	;# 
  7013  1FE8                     	;# 
  7014  1FE9                     	;# 
  7015  1FEA                     	;# 
  7016  1FEB                     	;# 
  7017  1FED                     	;# 
  7018  1FEE                     	;# 
  7019  1FEF                     	;# 
  7020  0000                     	;# 
  7021  0001                     	;# 
  7022  0002                     	;# 
  7023  0003                     	;# 
  7024  0004                     	;# 
  7025  0005                     	;# 
  7026  0006                     	;# 
  7027  0007                     	;# 
  7028  0008                     	;# 
  7029  0009                     	;# 
  7030  000A                     	;# 
  7031  000B                     	;# 
  7032  000C                     	;# 
  7033  000D                     	;# 
  7034  000E                     	;# 
  7035  0012                     	;# 
  7036  0013                     	;# 
  7037  0014                     	;# 
  7038  0018                     	;# 
  7039  0019                     	;# 
  7040  001A                     	;# 
  7041  008C                     	;# 
  7042  008C                     	;# 
  7043  008D                     	;# 
  7044  008E                     	;# 
  7045  008E                     	;# 
  7046  008F                     	;# 
  7047  0090                     	;# 
  7048  0090                     	;# 
  7049  0091                     	;# 
  7050  0092                     	;# 
  7051  0092                     	;# 
  7052  0093                     	;# 
  7053  0094                     	;# 
  7054  0094                     	;# 
  7055  0095                     	;# 
  7056  0096                     	;# 
  7057  0096                     	;# 
  7058  0097                     	;# 
  7059  0098                     	;# 
  7060  0099                     	;# 
  7061  009A                     	;# 
  7062  009B                     	;# 
  7063  009B                     	;# 
  7064  009C                     	;# 
  7065  009D                     	;# 
  7066  009D                     	;# 
  7067  009E                     	;# 
  7068  009F                     	;# 
  7069  010C                     	;# 
  7070  010C                     	;# 
  7071  010D                     	;# 
  7072  010E                     	;# 
  7073  010F                     	;# 
  7074  010F                     	;# 
  7075  0110                     	;# 
  7076  0111                     	;# 
  7077  0112                     	;# 
  7078  0113                     	;# 
  7079  0114                     	;# 
  7080  0115                     	;# 
  7081  0116                     	;# 
  7082  0117                     	;# 
  7083  0118                     	;# 
  7084  0119                     	;# 
  7085  0119                     	;# 
  7086  0119                     	;# 
  7087  011A                     	;# 
  7088  011A                     	;# 
  7089  011A                     	;# 
  7090  011B                     	;# 
  7091  011B                     	;# 
  7092  011B                     	;# 
  7093  011B                     	;# 
  7094  011B                     	;# 
  7095  011C                     	;# 
  7096  011C                     	;# 
  7097  011C                     	;# 
  7098  011D                     	;# 
  7099  011D                     	;# 
  7100  011D                     	;# 
  7101  011E                     	;# 
  7102  011E                     	;# 
  7103  011E                     	;# 
  7104  011F                     	;# 
  7105  011F                     	;# 
  7106  011F                     	;# 
  7107  011F                     	;# 
  7108  011F                     	;# 
  7109  018C                     	;# 
  7110  018D                     	;# 
  7111  018E                     	;# 
  7112  018F                     	;# 
  7113  0190                     	;# 
  7114  0191                     	;# 
  7115  0192                     	;# 
  7116  0196                     	;# 
  7117  0197                     	;# 
  7118  0198                     	;# 
  7119  0199                     	;# 
  7120  019A                     	;# 
  7121  019B                     	;# 
  7122  019C                     	;# 
  7123  020C                     	;# 
  7124  020D                     	;# 
  7125  020E                     	;# 
  7126  020E                     	;# 
  7127  020F                     	;# 
  7128  020F                     	;# 
  7129  0210                     	;# 
  7130  0210                     	;# 
  7131  0211                     	;# 
  7132  0211                     	;# 
  7133  0212                     	;# 
  7134  0213                     	;# 
  7135  0214                     	;# 
  7136  0214                     	;# 
  7137  0215                     	;# 
  7138  0215                     	;# 
  7139  0216                     	;# 
  7140  0216                     	;# 
  7141  0217                     	;# 
  7142  0217                     	;# 
  7143  0218                     	;# 
  7144  0219                     	;# 
  7145  021A                     	;# 
  7146  021A                     	;# 
  7147  021B                     	;# 
  7148  021B                     	;# 
  7149  021C                     	;# 
  7150  021C                     	;# 
  7151  021D                     	;# 
  7152  021D                     	;# 
  7153  021E                     	;# 
  7154  021F                     	;# 
  7155  028C                     	;# 
  7156  028C                     	;# 
  7157  028D                     	;# 
  7158  028D                     	;# 
  7159  028E                     	;# 
  7160  028F                     	;# 
  7161  0290                     	;# 
  7162  0291                     	;# 
  7163  0292                     	;# 
  7164  0292                     	;# 
  7165  0293                     	;# 
  7166  0293                     	;# 
  7167  0294                     	;# 
  7168  0295                     	;# 
  7169  0296                     	;# 
  7170  0297                     	;# 
  7171  0298                     	;# 
  7172  0298                     	;# 
  7173  0299                     	;# 
  7174  0299                     	;# 
  7175  029A                     	;# 
  7176  029B                     	;# 
  7177  029C                     	;# 
  7178  029D                     	;# 
  7179  029F                     	;# 
  7180  030C                     	;# 
  7181  030C                     	;# 
  7182  030D                     	;# 
  7183  030E                     	;# 
  7184  030F                     	;# 
  7185  0310                     	;# 
  7186  0310                     	;# 
  7187  0311                     	;# 
  7188  0312                     	;# 
  7189  0313                     	;# 
  7190  0314                     	;# 
  7191  0314                     	;# 
  7192  0315                     	;# 
  7193  0316                     	;# 
  7194  0317                     	;# 
  7195  0318                     	;# 
  7196  0318                     	;# 
  7197  0319                     	;# 
  7198  031A                     	;# 
  7199  031B                     	;# 
  7200  038C                     	;# 
  7201  038C                     	;# 
  7202  038D                     	;# 
  7203  038E                     	;# 
  7204  0390                     	;# 
  7205  0390                     	;# 
  7206  0391                     	;# 
  7207  0392                     	;# 
  7208  048C                     	;# 
  7209  048C                     	;# 
  7210  048D                     	;# 
  7211  048E                     	;# 
  7212  048F                     	;# 
  7213  048F                     	;# 
  7214  0490                     	;# 
  7215  0491                     	;# 
  7216  0492                     	;# 
  7217  0492                     	;# 
  7218  0493                     	;# 
  7219  0494                     	;# 
  7220  0495                     	;# 
  7221  0495                     	;# 
  7222  0496                     	;# 
  7223  0497                     	;# 
  7224  0498                     	;# 
  7225  0499                     	;# 
  7226  049A                     	;# 
  7227  049B                     	;# 
  7228  049C                     	;# 
  7229  049D                     	;# 
  7230  058C                     	;# 
  7231  058C                     	;# 
  7232  058D                     	;# 
  7233  058E                     	;# 
  7234  058F                     	;# 
  7235  058F                     	;# 
  7236  0590                     	;# 
  7237  0591                     	;# 
  7238  0592                     	;# 
  7239  0593                     	;# 
  7240  059C                     	;# 
  7241  059C                     	;# 
  7242  059D                     	;# 
  7243  059D                     	;# 
  7244  059E                     	;# 
  7245  059F                     	;# 
  7246  060C                     	;# 
  7247  060C                     	;# 
  7248  060D                     	;# 
  7249  060D                     	;# 
  7250  060E                     	;# 
  7251  060F                     	;# 
  7252  0610                     	;# 
  7253  0611                     	;# 
  7254  0612                     	;# 
  7255  0613                     	;# 
  7256  0614                     	;# 
  7257  0616                     	;# 
  7258  0616                     	;# 
  7259  0617                     	;# 
  7260  0617                     	;# 
  7261  0618                     	;# 
  7262  0619                     	;# 
  7263  061A                     	;# 
  7264  061B                     	;# 
  7265  061C                     	;# 
  7266  061D                     	;# 
  7267  061E                     	;# 
  7268  070C                     	;# 
  7269  070D                     	;# 
  7270  070E                     	;# 
  7271  070F                     	;# 
  7272  0710                     	;# 
  7273  0711                     	;# 
  7274  0712                     	;# 
  7275  0713                     	;# 
  7276  0714                     	;# 
  7277  0716                     	;# 
  7278  0717                     	;# 
  7279  0718                     	;# 
  7280  0719                     	;# 
  7281  071A                     	;# 
  7282  071B                     	;# 
  7283  071C                     	;# 
  7284  071D                     	;# 
  7285  071E                     	;# 
  7286  0796                     	;# 
  7287  0797                     	;# 
  7288  0798                     	;# 
  7289  0799                     	;# 
  7290  079A                     	;# 
  7291  079B                     	;# 
  7292  079C                     	;# 
  7293  079D                     	;# 
  7294  080C                     	;# 
  7295  080D                     	;# 
  7296  080E                     	;# 
  7297  080F                     	;# 
  7298  0810                     	;# 
  7299  0811                     	;# 
  7300  0812                     	;# 
  7301  0813                     	;# 
  7302  0814                     	;# 
  7303  081A                     	;# 
  7304  081A                     	;# 
  7305  081B                     	;# 
  7306  081C                     	;# 
  7307  081C                     	;# 
  7308  081D                     	;# 
  7309  081E                     	;# 
  7310  081F                     	;# 
  7311  088C                     	;# 
  7312  088D                     	;# 
  7313  088E                     	;# 
  7314  088F                     	;# 
  7315  0890                     	;# 
  7316  0891                     	;# 
  7317  0892                     	;# 
  7318  0893                     	;# 
  7319  0895                     	;# 
  7320  0896                     	;# 
  7321  0897                     	;# 
  7322  0898                     	;# 
  7323  0899                     	;# 
  7324  089A                     	;# 
  7325  089B                     	;# 
  7326  090C                     	;# 
  7327  090E                     	;# 
  7328  090F                     	;# 
  7329  091F                     	;# 
  7330  098F                     	;# 
  7331  098F                     	;# 
  7332  0990                     	;# 
  7333  0991                     	;# 
  7334  0992                     	;# 
  7335  0993                     	;# 
  7336  0994                     	;# 
  7337  0995                     	;# 
  7338  0996                     	;# 
  7339  0997                     	;# 
  7340  1E0F                     	;# 
  7341  1E10                     	;# 
  7342  1E11                     	;# 
  7343  1E12                     	;# 
  7344  1E13                     	;# 
  7345  1E14                     	;# 
  7346  1E15                     	;# 
  7347  1E16                     	;# 
  7348  1E17                     	;# 
  7349  1E18                     	;# 
  7350  1E19                     	;# 
  7351  1E1A                     	;# 
  7352  1E1B                     	;# 
  7353  1E1C                     	;# 
  7354  1E1D                     	;# 
  7355  1E1E                     	;# 
  7356  1E1F                     	;# 
  7357  1E20                     	;# 
  7358  1E21                     	;# 
  7359  1E22                     	;# 
  7360  1E23                     	;# 
  7361  1E24                     	;# 
  7362  1E25                     	;# 
  7363  1E26                     	;# 
  7364  1E27                     	;# 
  7365  1E28                     	;# 
  7366  1E29                     	;# 
  7367  1E2A                     	;# 
  7368  1E2B                     	;# 
  7369  1E2C                     	;# 
  7370  1E2D                     	;# 
  7371  1E2E                     	;# 
  7372  1E2F                     	;# 
  7373  1E30                     	;# 
  7374  1E31                     	;# 
  7375  1E32                     	;# 
  7376  1E33                     	;# 
  7377  1E34                     	;# 
  7378  1E35                     	;# 
  7379  1E36                     	;# 
  7380  1E37                     	;# 
  7381  1E8F                     	;# 
  7382  1E90                     	;# 
  7383  1E91                     	;# 
  7384  1E92                     	;# 
  7385  1E93                     	;# 
  7386  1E94                     	;# 
  7387  1E95                     	;# 
  7388  1E96                     	;# 
  7389  1E97                     	;# 
  7390  1E9C                     	;# 
  7391  1E9D                     	;# 
  7392  1E9E                     	;# 
  7393  1EA1                     	;# 
  7394  1EA2                     	;# 
  7395  1EA3                     	;# 
  7396  1EA4                     	;# 
  7397  1EA9                     	;# 
  7398  1EAA                     	;# 
  7399  1EB1                     	;# 
  7400  1EB2                     	;# 
  7401  1EB8                     	;# 
  7402  1EB9                     	;# 
  7403  1EBA                     	;# 
  7404  1EBB                     	;# 
  7405  1EBC                     	;# 
  7406  1EBD                     	;# 
  7407  1EBE                     	;# 
  7408  1EC3                     	;# 
  7409  1EC5                     	;# 
  7410  1EC6                     	;# 
  7411  1EC7                     	;# 
  7412  1EC8                     	;# 
  7413  1EC9                     	;# 
  7414  1ECA                     	;# 
  7415  1ECB                     	;# 
  7416  1ECB                     	;# 
  7417  1ECB                     	;# 
  7418  1ECC                     	;# 
  7419  1ECC                     	;# 
  7420  1ECC                     	;# 
  7421  1F10                     	;# 
  7422  1F11                     	;# 
  7423  1F12                     	;# 
  7424  1F14                     	;# 
  7425  1F15                     	;# 
  7426  1F1C                     	;# 
  7427  1F1D                     	;# 
  7428  1F1E                     	;# 
  7429  1F1F                     	;# 
  7430  1F20                     	;# 
  7431  1F21                     	;# 
  7432  1F22                     	;# 
  7433  1F23                     	;# 
  7434  1F24                     	;# 
  7435  1F25                     	;# 
  7436  1F26                     	;# 
  7437  1F27                     	;# 
  7438  1F38                     	;# 
  7439  1F39                     	;# 
  7440  1F3A                     	;# 
  7441  1F3B                     	;# 
  7442  1F3C                     	;# 
  7443  1F3D                     	;# 
  7444  1F3E                     	;# 
  7445  1F3F                     	;# 
  7446  1F43                     	;# 
  7447  1F44                     	;# 
  7448  1F45                     	;# 
  7449  1F46                     	;# 
  7450  1F47                     	;# 
  7451  1F48                     	;# 
  7452  1F49                     	;# 
  7453  1F4A                     	;# 
  7454  1F4E                     	;# 
  7455  1F4F                     	;# 
  7456  1F50                     	;# 
  7457  1F51                     	;# 
  7458  1F52                     	;# 
  7459  1F53                     	;# 
  7460  1F54                     	;# 
  7461  1F55                     	;# 
  7462  1FE4                     	;# 
  7463  1FE5                     	;# 
  7464  1FE6                     	;# 
  7465  1FE7                     	;# 
  7466  1FE8                     	;# 
  7467  1FE8                     	;# 
  7468  1FE9                     	;# 
  7469  1FEA                     	;# 
  7470  1FEB                     	;# 
  7471  1FED                     	;# 
  7472  1FEE                     	;# 
  7473  1FEF                     	;# 
  7474  0000                     	;# 
  7475  0001                     	;# 
  7476  0002                     	;# 
  7477  0003                     	;# 
  7478  0004                     	;# 
  7479  0005                     	;# 
  7480  0006                     	;# 
  7481  0007                     	;# 
  7482  0008                     	;# 
  7483  0009                     	;# 
  7484  000A                     	;# 
  7485  000B                     	;# 
  7486  000C                     	;# 
  7487  000D                     	;# 
  7488  000E                     	;# 
  7489  0012                     	;# 
  7490  0013                     	;# 
  7491  0014                     	;# 
  7492  0018                     	;# 
  7493  0019                     	;# 
  7494  001A                     	;# 
  7495  008C                     	;# 
  7496  008C                     	;# 
  7497  008D                     	;# 
  7498  008E                     	;# 
  7499  008E                     	;# 
  7500  008F                     	;# 
  7501  0090                     	;# 
  7502  0090                     	;# 
  7503  0091                     	;# 
  7504  0092                     	;# 
  7505  0092                     	;# 
  7506  0093                     	;# 
  7507  0094                     	;# 
  7508  0094                     	;# 
  7509  0095                     	;# 
  7510  0096                     	;# 
  7511  0096                     	;# 
  7512  0097                     	;# 
  7513  0098                     	;# 
  7514  0099                     	;# 
  7515  009A                     	;# 
  7516  009B                     	;# 
  7517  009B                     	;# 
  7518  009C                     	;# 
  7519  009D                     	;# 
  7520  009D                     	;# 
  7521  009E                     	;# 
  7522  009F                     	;# 
  7523  010C                     	;# 
  7524  010C                     	;# 
  7525  010D                     	;# 
  7526  010E                     	;# 
  7527  010F                     	;# 
  7528  010F                     	;# 
  7529  0110                     	;# 
  7530  0111                     	;# 
  7531  0112                     	;# 
  7532  0113                     	;# 
  7533  0114                     	;# 
  7534  0115                     	;# 
  7535  0116                     	;# 
  7536  0117                     	;# 
  7537  0118                     	;# 
  7538  0119                     	;# 
  7539  0119                     	;# 
  7540  0119                     	;# 
  7541  011A                     	;# 
  7542  011A                     	;# 
  7543  011A                     	;# 
  7544  011B                     	;# 
  7545  011B                     	;# 
  7546  011B                     	;# 
  7547  011B                     	;# 
  7548  011B                     	;# 
  7549  011C                     	;# 
  7550  011C                     	;# 
  7551  011C                     	;# 
  7552  011D                     	;# 
  7553  011D                     	;# 
  7554  011D                     	;# 
  7555  011E                     	;# 
  7556  011E                     	;# 
  7557  011E                     	;# 
  7558  011F                     	;# 
  7559  011F                     	;# 
  7560  011F                     	;# 
  7561  011F                     	;# 
  7562  011F                     	;# 
  7563  018C                     	;# 
  7564  018D                     	;# 
  7565  018E                     	;# 
  7566  018F                     	;# 
  7567  0190                     	;# 
  7568  0191                     	;# 
  7569  0192                     	;# 
  7570  0196                     	;# 
  7571  0197                     	;# 
  7572  0198                     	;# 
  7573  0199                     	;# 
  7574  019A                     	;# 
  7575  019B                     	;# 
  7576  019C                     	;# 
  7577  020C                     	;# 
  7578  020D                     	;# 
  7579  020E                     	;# 
  7580  020E                     	;# 
  7581  020F                     	;# 
  7582  020F                     	;# 
  7583  0210                     	;# 
  7584  0210                     	;# 
  7585  0211                     	;# 
  7586  0211                     	;# 
  7587  0212                     	;# 
  7588  0213                     	;# 
  7589  0214                     	;# 
  7590  0214                     	;# 
  7591  0215                     	;# 
  7592  0215                     	;# 
  7593  0216                     	;# 
  7594  0216                     	;# 
  7595  0217                     	;# 
  7596  0217                     	;# 
  7597  0218                     	;# 
  7598  0219                     	;# 
  7599  021A                     	;# 
  7600  021A                     	;# 
  7601  021B                     	;# 
  7602  021B                     	;# 
  7603  021C                     	;# 
  7604  021C                     	;# 
  7605  021D                     	;# 
  7606  021D                     	;# 
  7607  021E                     	;# 
  7608  021F                     	;# 
  7609  028C                     	;# 
  7610  028C                     	;# 
  7611  028D                     	;# 
  7612  028D                     	;# 
  7613  028E                     	;# 
  7614  028F                     	;# 
  7615  0290                     	;# 
  7616  0291                     	;# 
  7617  0292                     	;# 
  7618  0292                     	;# 
  7619  0293                     	;# 
  7620  0293                     	;# 
  7621  0294                     	;# 
  7622  0295                     	;# 
  7623  0296                     	;# 
  7624  0297                     	;# 
  7625  0298                     	;# 
  7626  0298                     	;# 
  7627  0299                     	;# 
  7628  0299                     	;# 
  7629  029A                     	;# 
  7630  029B                     	;# 
  7631  029C                     	;# 
  7632  029D                     	;# 
  7633  029F                     	;# 
  7634  030C                     	;# 
  7635  030C                     	;# 
  7636  030D                     	;# 
  7637  030E                     	;# 
  7638  030F                     	;# 
  7639  0310                     	;# 
  7640  0310                     	;# 
  7641  0311                     	;# 
  7642  0312                     	;# 
  7643  0313                     	;# 
  7644  0314                     	;# 
  7645  0314                     	;# 
  7646  0315                     	;# 
  7647  0316                     	;# 
  7648  0317                     	;# 
  7649  0318                     	;# 
  7650  0318                     	;# 
  7651  0319                     	;# 
  7652  031A                     	;# 
  7653  031B                     	;# 
  7654  038C                     	;# 
  7655  038C                     	;# 
  7656  038D                     	;# 
  7657  038E                     	;# 
  7658  0390                     	;# 
  7659  0390                     	;# 
  7660  0391                     	;# 
  7661  0392                     	;# 
  7662  048C                     	;# 
  7663  048C                     	;# 
  7664  048D                     	;# 
  7665  048E                     	;# 
  7666  048F                     	;# 
  7667  048F                     	;# 
  7668  0490                     	;# 
  7669  0491                     	;# 
  7670  0492                     	;# 
  7671  0492                     	;# 
  7672  0493                     	;# 
  7673  0494                     	;# 
  7674  0495                     	;# 
  7675  0495                     	;# 
  7676  0496                     	;# 
  7677  0497                     	;# 
  7678  0498                     	;# 
  7679  0499                     	;# 
  7680  049A                     	;# 
  7681  049B                     	;# 
  7682  049C                     	;# 
  7683  049D                     	;# 
  7684  058C                     	;# 
  7685  058C                     	;# 
  7686  058D                     	;# 
  7687  058E                     	;# 
  7688  058F                     	;# 
  7689  058F                     	;# 
  7690  0590                     	;# 
  7691  0591                     	;# 
  7692  0592                     	;# 
  7693  0593                     	;# 
  7694  059C                     	;# 
  7695  059C                     	;# 
  7696  059D                     	;# 
  7697  059D                     	;# 
  7698  059E                     	;# 
  7699  059F                     	;# 
  7700  060C                     	;# 
  7701  060C                     	;# 
  7702  060D                     	;# 
  7703  060D                     	;# 
  7704  060E                     	;# 
  7705  060F                     	;# 
  7706  0610                     	;# 
  7707  0611                     	;# 
  7708  0612                     	;# 
  7709  0613                     	;# 
  7710  0614                     	;# 
  7711  0616                     	;# 
  7712  0616                     	;# 
  7713  0617                     	;# 
  7714  0617                     	;# 
  7715  0618                     	;# 
  7716  0619                     	;# 
  7717  061A                     	;# 
  7718  061B                     	;# 
  7719  061C                     	;# 
  7720  061D                     	;# 
  7721  061E                     	;# 
  7722  070C                     	;# 
  7723  070D                     	;# 
  7724  070E                     	;# 
  7725  070F                     	;# 
  7726  0710                     	;# 
  7727  0711                     	;# 
  7728  0712                     	;# 
  7729  0713                     	;# 
  7730  0714                     	;# 
  7731  0716                     	;# 
  7732  0717                     	;# 
  7733  0718                     	;# 
  7734  0719                     	;# 
  7735  071A                     	;# 
  7736  071B                     	;# 
  7737  071C                     	;# 
  7738  071D                     	;# 
  7739  071E                     	;# 
  7740  0796                     	;# 
  7741  0797                     	;# 
  7742  0798                     	;# 
  7743  0799                     	;# 
  7744  079A                     	;# 
  7745  079B                     	;# 
  7746  079C                     	;# 
  7747  079D                     	;# 
  7748  080C                     	;# 
  7749  080D                     	;# 
  7750  080E                     	;# 
  7751  080F                     	;# 
  7752  0810                     	;# 
  7753  0811                     	;# 
  7754  0812                     	;# 
  7755  0813                     	;# 
  7756  0814                     	;# 
  7757  081A                     	;# 
  7758  081A                     	;# 
  7759  081B                     	;# 
  7760  081C                     	;# 
  7761  081C                     	;# 
  7762  081D                     	;# 
  7763  081E                     	;# 
  7764  081F                     	;# 
  7765  088C                     	;# 
  7766  088D                     	;# 
  7767  088E                     	;# 
  7768  088F                     	;# 
  7769  0890                     	;# 
  7770  0891                     	;# 
  7771  0892                     	;# 
  7772  0893                     	;# 
  7773  0895                     	;# 
  7774  0896                     	;# 
  7775  0897                     	;# 
  7776  0898                     	;# 
  7777  0899                     	;# 
  7778  089A                     	;# 
  7779  089B                     	;# 
  7780  090C                     	;# 
  7781  090E                     	;# 
  7782  090F                     	;# 
  7783  091F                     	;# 
  7784  098F                     	;# 
  7785  098F                     	;# 
  7786  0990                     	;# 
  7787  0991                     	;# 
  7788  0992                     	;# 
  7789  0993                     	;# 
  7790  0994                     	;# 
  7791  0995                     	;# 
  7792  0996                     	;# 
  7793  0997                     	;# 
  7794  1E0F                     	;# 
  7795  1E10                     	;# 
  7796  1E11                     	;# 
  7797  1E12                     	;# 
  7798  1E13                     	;# 
  7799  1E14                     	;# 
  7800  1E15                     	;# 
  7801  1E16                     	;# 
  7802  1E17                     	;# 
  7803  1E18                     	;# 
  7804  1E19                     	;# 
  7805  1E1A                     	;# 
  7806  1E1B                     	;# 
  7807  1E1C                     	;# 
  7808  1E1D                     	;# 
  7809  1E1E                     	;# 
  7810  1E1F                     	;# 
  7811  1E20                     	;# 
  7812  1E21                     	;# 
  7813  1E22                     	;# 
  7814  1E23                     	;# 
  7815  1E24                     	;# 
  7816  1E25                     	;# 
  7817  1E26                     	;# 
  7818  1E27                     	;# 
  7819  1E28                     	;# 
  7820  1E29                     	;# 
  7821  1E2A                     	;# 
  7822  1E2B                     	;# 
  7823  1E2C                     	;# 
  7824  1E2D                     	;# 
  7825  1E2E                     	;# 
  7826  1E2F                     	;# 
  7827  1E30                     	;# 
  7828  1E31                     	;# 
  7829  1E32                     	;# 
  7830  1E33                     	;# 
  7831  1E34                     	;# 
  7832  1E35                     	;# 
  7833  1E36                     	;# 
  7834  1E37                     	;# 
  7835  1E8F                     	;# 
  7836  1E90                     	;# 
  7837  1E91                     	;# 
  7838  1E92                     	;# 
  7839  1E93                     	;# 
  7840  1E94                     	;# 
  7841  1E95                     	;# 
  7842  1E96                     	;# 
  7843  1E97                     	;# 
  7844  1E9C                     	;# 
  7845  1E9D                     	;# 
  7846  1E9E                     	;# 
  7847  1EA1                     	;# 
  7848  1EA2                     	;# 
  7849  1EA3                     	;# 
  7850  1EA4                     	;# 
  7851  1EA9                     	;# 
  7852  1EAA                     	;# 
  7853  1EB1                     	;# 
  7854  1EB2                     	;# 
  7855  1EB8                     	;# 
  7856  1EB9                     	;# 
  7857  1EBA                     	;# 
  7858  1EBB                     	;# 
  7859  1EBC                     	;# 
  7860  1EBD                     	;# 
  7861  1EBE                     	;# 
  7862  1EC3                     	;# 
  7863  1EC5                     	;# 
  7864  1EC6                     	;# 
  7865  1EC7                     	;# 
  7866  1EC8                     	;# 
  7867  1EC9                     	;# 
  7868  1ECA                     	;# 
  7869  1ECB                     	;# 
  7870  1ECB                     	;# 
  7871  1ECB                     	;# 
  7872  1ECC                     	;# 
  7873  1ECC                     	;# 
  7874  1ECC                     	;# 
  7875  1F10                     	;# 
  7876  1F11                     	;# 
  7877  1F12                     	;# 
  7878  1F14                     	;# 
  7879  1F15                     	;# 
  7880  1F1C                     	;# 
  7881  1F1D                     	;# 
  7882  1F1E                     	;# 
  7883  1F1F                     	;# 
  7884  1F20                     	;# 
  7885  1F21                     	;# 
  7886  1F22                     	;# 
  7887  1F23                     	;# 
  7888  1F24                     	;# 
  7889  1F25                     	;# 
  7890  1F26                     	;# 
  7891  1F27                     	;# 
  7892  1F38                     	;# 
  7893  1F39                     	;# 
  7894  1F3A                     	;# 
  7895  1F3B                     	;# 
  7896  1F3C                     	;# 
  7897  1F3D                     	;# 
  7898  1F3E                     	;# 
  7899  1F3F                     	;# 
  7900  1F43                     	;# 
  7901  1F44                     	;# 
  7902  1F45                     	;# 
  7903  1F46                     	;# 
  7904  1F47                     	;# 
  7905  1F48                     	;# 
  7906  1F49                     	;# 
  7907  1F4A                     	;# 
  7908  1F4E                     	;# 
  7909  1F4F                     	;# 
  7910  1F50                     	;# 
  7911  1F51                     	;# 
  7912  1F52                     	;# 
  7913  1F53                     	;# 
  7914  1F54                     	;# 
  7915  1F55                     	;# 
  7916  1FE4                     	;# 
  7917  1FE5                     	;# 
  7918  1FE6                     	;# 
  7919  1FE7                     	;# 
  7920  1FE8                     	;# 
  7921  1FE8                     	;# 
  7922  1FE9                     	;# 
  7923  1FEA                     	;# 
  7924  1FEB                     	;# 
  7925  1FED                     	;# 
  7926  1FEE                     	;# 
  7927  1FEF                     	;# 
  7928  0000                     	;# 
  7929  0001                     	;# 
  7930  0002                     	;# 
  7931  0003                     	;# 
  7932  0004                     	;# 
  7933  0005                     	;# 
  7934  0006                     	;# 
  7935  0007                     	;# 
  7936  0008                     	;# 
  7937  0009                     	;# 
  7938  000A                     	;# 
  7939  000B                     	;# 
  7940  000C                     	;# 
  7941  000D                     	;# 
  7942  000E                     	;# 
  7943  0012                     	;# 
  7944  0013                     	;# 
  7945  0014                     	;# 
  7946  0018                     	;# 
  7947  0019                     	;# 
  7948  001A                     	;# 
  7949  008C                     	;# 
  7950  008C                     	;# 
  7951  008D                     	;# 
  7952  008E                     	;# 
  7953  008E                     	;# 
  7954  008F                     	;# 
  7955  0090                     	;# 
  7956  0090                     	;# 
  7957  0091                     	;# 
  7958  0092                     	;# 
  7959  0092                     	;# 
  7960  0093                     	;# 
  7961  0094                     	;# 
  7962  0094                     	;# 
  7963  0095                     	;# 
  7964  0096                     	;# 
  7965  0096                     	;# 
  7966  0097                     	;# 
  7967  0098                     	;# 
  7968  0099                     	;# 
  7969  009A                     	;# 
  7970  009B                     	;# 
  7971  009B                     	;# 
  7972  009C                     	;# 
  7973  009D                     	;# 
  7974  009D                     	;# 
  7975  009E                     	;# 
  7976  009F                     	;# 
  7977  010C                     	;# 
  7978  010C                     	;# 
  7979  010D                     	;# 
  7980  010E                     	;# 
  7981  010F                     	;# 
  7982  010F                     	;# 
  7983  0110                     	;# 
  7984  0111                     	;# 
  7985  0112                     	;# 
  7986  0113                     	;# 
  7987  0114                     	;# 
  7988  0115                     	;# 
  7989  0116                     	;# 
  7990  0117                     	;# 
  7991  0118                     	;# 
  7992  0119                     	;# 
  7993  0119                     	;# 
  7994  0119                     	;# 
  7995  011A                     	;# 
  7996  011A                     	;# 
  7997  011A                     	;# 
  7998  011B                     	;# 
  7999  011B                     	;# 
  8000  011B                     	;# 
  8001  011B                     	;# 
  8002  011B                     	;# 
  8003  011C                     	;# 
  8004  011C                     	;# 
  8005  011C                     	;# 
  8006  011D                     	;# 
  8007  011D                     	;# 
  8008  011D                     	;# 
  8009  011E                     	;# 
  8010  011E                     	;# 
  8011  011E                     	;# 
  8012  011F                     	;# 
  8013  011F                     	;# 
  8014  011F                     	;# 
  8015  011F                     	;# 
  8016  011F                     	;# 
  8017  018C                     	;# 
  8018  018D                     	;# 
  8019  018E                     	;# 
  8020  018F                     	;# 
  8021  0190                     	;# 
  8022  0191                     	;# 
  8023  0192                     	;# 
  8024  0196                     	;# 
  8025  0197                     	;# 
  8026  0198                     	;# 
  8027  0199                     	;# 
  8028  019A                     	;# 
  8029  019B                     	;# 
  8030  019C                     	;# 
  8031  020C                     	;# 
  8032  020D                     	;# 
  8033  020E                     	;# 
  8034  020E                     	;# 
  8035  020F                     	;# 
  8036  020F                     	;# 
  8037  0210                     	;# 
  8038  0210                     	;# 
  8039  0211                     	;# 
  8040  0211                     	;# 
  8041  0212                     	;# 
  8042  0213                     	;# 
  8043  0214                     	;# 
  8044  0214                     	;# 
  8045  0215                     	;# 
  8046  0215                     	;# 
  8047  0216                     	;# 
  8048  0216                     	;# 
  8049  0217                     	;# 
  8050  0217                     	;# 
  8051  0218                     	;# 
  8052  0219                     	;# 
  8053  021A                     	;# 
  8054  021A                     	;# 
  8055  021B                     	;# 
  8056  021B                     	;# 
  8057  021C                     	;# 
  8058  021C                     	;# 
  8059  021D                     	;# 
  8060  021D                     	;# 
  8061  021E                     	;# 
  8062  021F                     	;# 
  8063  028C                     	;# 
  8064  028C                     	;# 
  8065  028D                     	;# 
  8066  028D                     	;# 
  8067  028E                     	;# 
  8068  028F                     	;# 
  8069  0290                     	;# 
  8070  0291                     	;# 
  8071  0292                     	;# 
  8072  0292                     	;# 
  8073  0293                     	;# 
  8074  0293                     	;# 
  8075  0294                     	;# 
  8076  0295                     	;# 
  8077  0296                     	;# 
  8078  0297                     	;# 
  8079  0298                     	;# 
  8080  0298                     	;# 
  8081  0299                     	;# 
  8082  0299                     	;# 
  8083  029A                     	;# 
  8084  029B                     	;# 
  8085  029C                     	;# 
  8086  029D                     	;# 
  8087  029F                     	;# 
  8088  030C                     	;# 
  8089  030C                     	;# 
  8090  030D                     	;# 
  8091  030E                     	;# 
  8092  030F                     	;# 
  8093  0310                     	;# 
  8094  0310                     	;# 
  8095  0311                     	;# 
  8096  0312                     	;# 
  8097  0313                     	;# 
  8098  0314                     	;# 
  8099  0314                     	;# 
  8100  0315                     	;# 
  8101  0316                     	;# 
  8102  0317                     	;# 
  8103  0318                     	;# 
  8104  0318                     	;# 
  8105  0319                     	;# 
  8106  031A                     	;# 
  8107  031B                     	;# 
  8108  038C                     	;# 
  8109  038C                     	;# 
  8110  038D                     	;# 
  8111  038E                     	;# 
  8112  0390                     	;# 
  8113  0390                     	;# 
  8114  0391                     	;# 
  8115  0392                     	;# 
  8116  048C                     	;# 
  8117  048C                     	;# 
  8118  048D                     	;# 
  8119  048E                     	;# 
  8120  048F                     	;# 
  8121  048F                     	;# 
  8122  0490                     	;# 
  8123  0491                     	;# 
  8124  0492                     	;# 
  8125  0492                     	;# 
  8126  0493                     	;# 
  8127  0494                     	;# 
  8128  0495                     	;# 
  8129  0495                     	;# 
  8130  0496                     	;# 
  8131  0497                     	;# 
  8132  0498                     	;# 
  8133  0499                     	;# 
  8134  049A                     	;# 
  8135  049B                     	;# 
  8136  049C                     	;# 
  8137  049D                     	;# 
  8138  058C                     	;# 
  8139  058C                     	;# 
  8140  058D                     	;# 
  8141  058E                     	;# 
  8142  058F                     	;# 
  8143  058F                     	;# 
  8144  0590                     	;# 
  8145  0591                     	;# 
  8146  0592                     	;# 
  8147  0593                     	;# 
  8148  059C                     	;# 
  8149  059C                     	;# 
  8150  059D                     	;# 
  8151  059D                     	;# 
  8152  059E                     	;# 
  8153  059F                     	;# 
  8154  060C                     	;# 
  8155  060C                     	;# 
  8156  060D                     	;# 
  8157  060D                     	;# 
  8158  060E                     	;# 
  8159  060F                     	;# 
  8160  0610                     	;# 
  8161  0611                     	;# 
  8162  0612                     	;# 
  8163  0613                     	;# 
  8164  0614                     	;# 
  8165  0616                     	;# 
  8166  0616                     	;# 
  8167  0617                     	;# 
  8168  0617                     	;# 
  8169  0618                     	;# 
  8170  0619                     	;# 
  8171  061A                     	;# 
  8172  061B                     	;# 
  8173  061C                     	;# 
  8174  061D                     	;# 
  8175  061E                     	;# 
  8176  070C                     	;# 
  8177  070D                     	;# 
  8178  070E                     	;# 
  8179  070F                     	;# 
  8180  0710                     	;# 
  8181  0711                     	;# 
  8182  0712                     	;# 
  8183  0713                     	;# 
  8184  0714                     	;# 
  8185  0716                     	;# 
  8186  0717                     	;# 
  8187  0718                     	;# 
  8188  0719                     	;# 
  8189  071A                     	;# 
  8190  071B                     	;# 
  8191  071C                     	;# 
  8192  071D                     	;# 
  8193  071E                     	;# 
  8194  0796                     	;# 
  8195  0797                     	;# 
  8196  0798                     	;# 
  8197  0799                     	;# 
  8198  079A                     	;# 
  8199  079B                     	;# 
  8200  079C                     	;# 
  8201  079D                     	;# 
  8202  080C                     	;# 
  8203  080D                     	;# 
  8204  080E                     	;# 
  8205  080F                     	;# 
  8206  0810                     	;# 
  8207  0811                     	;# 
  8208  0812                     	;# 
  8209  0813                     	;# 
  8210  0814                     	;# 
  8211  081A                     	;# 
  8212  081A                     	;# 
  8213  081B                     	;# 
  8214  081C                     	;# 
  8215  081C                     	;# 
  8216  081D                     	;# 
  8217  081E                     	;# 
  8218  081F                     	;# 
  8219  088C                     	;# 
  8220  088D                     	;# 
  8221  088E                     	;# 
  8222  088F                     	;# 
  8223  0890                     	;# 
  8224  0891                     	;# 
  8225  0892                     	;# 
  8226  0893                     	;# 
  8227  0895                     	;# 
  8228  0896                     	;# 
  8229  0897                     	;# 
  8230  0898                     	;# 
  8231  0899                     	;# 
  8232  089A                     	;# 
  8233  089B                     	;# 
  8234  090C                     	;# 
  8235  090E                     	;# 
  8236  090F                     	;# 
  8237  091F                     	;# 
  8238  098F                     	;# 
  8239  098F                     	;# 
  8240  0990                     	;# 
  8241  0991                     	;# 
  8242  0992                     	;# 
  8243  0993                     	;# 
  8244  0994                     	;# 
  8245  0995                     	;# 
  8246  0996                     	;# 
  8247  0997                     	;# 
  8248  1E0F                     	;# 
  8249  1E10                     	;# 
  8250  1E11                     	;# 
  8251  1E12                     	;# 
  8252  1E13                     	;# 
  8253  1E14                     	;# 
  8254  1E15                     	;# 
  8255  1E16                     	;# 
  8256  1E17                     	;# 
  8257  1E18                     	;# 
  8258  1E19                     	;# 
  8259  1E1A                     	;# 
  8260  1E1B                     	;# 
  8261  1E1C                     	;# 
  8262  1E1D                     	;# 
  8263  1E1E                     	;# 
  8264  1E1F                     	;# 
  8265  1E20                     	;# 
  8266  1E21                     	;# 
  8267  1E22                     	;# 
  8268  1E23                     	;# 
  8269  1E24                     	;# 
  8270  1E25                     	;# 
  8271  1E26                     	;# 
  8272  1E27                     	;# 
  8273  1E28                     	;# 
  8274  1E29                     	;# 
  8275  1E2A                     	;# 
  8276  1E2B                     	;# 
  8277  1E2C                     	;# 
  8278  1E2D                     	;# 
  8279  1E2E                     	;# 
  8280  1E2F                     	;# 
  8281  1E30                     	;# 
  8282  1E31                     	;# 
  8283  1E32                     	;# 
  8284  1E33                     	;# 
  8285  1E34                     	;# 
  8286  1E35                     	;# 
  8287  1E36                     	;# 
  8288  1E37                     	;# 
  8289  1E8F                     	;# 
  8290  1E90                     	;# 
  8291  1E91                     	;# 
  8292  1E92                     	;# 
  8293  1E93                     	;# 
  8294  1E94                     	;# 
  8295  1E95                     	;# 
  8296  1E96                     	;# 
  8297  1E97                     	;# 
  8298  1E9C                     	;# 
  8299  1E9D                     	;# 
  8300  1E9E                     	;# 
  8301  1EA1                     	;# 
  8302  1EA2                     	;# 
  8303  1EA3                     	;# 
  8304  1EA4                     	;# 
  8305  1EA9                     	;# 
  8306  1EAA                     	;# 
  8307  1EB1                     	;# 
  8308  1EB2                     	;# 
  8309  1EB8                     	;# 
  8310  1EB9                     	;# 
  8311  1EBA                     	;# 
  8312  1EBB                     	;# 
  8313  1EBC                     	;# 
  8314  1EBD                     	;# 
  8315  1EBE                     	;# 
  8316  1EC3                     	;# 
  8317  1EC5                     	;# 
  8318  1EC6                     	;# 
  8319  1EC7                     	;# 
  8320  1EC8                     	;# 
  8321  1EC9                     	;# 
  8322  1ECA                     	;# 
  8323  1ECB                     	;# 
  8324  1ECB                     	;# 
  8325  1ECB                     	;# 
  8326  1ECC                     	;# 
  8327  1ECC                     	;# 
  8328  1ECC                     	;# 
  8329  1F10                     	;# 
  8330  1F11                     	;# 
  8331  1F12                     	;# 
  8332  1F14                     	;# 
  8333  1F15                     	;# 
  8334  1F1C                     	;# 
  8335  1F1D                     	;# 
  8336  1F1E                     	;# 
  8337  1F1F                     	;# 
  8338  1F20                     	;# 
  8339  1F21                     	;# 
  8340  1F22                     	;# 
  8341  1F23                     	;# 
  8342  1F24                     	;# 
  8343  1F25                     	;# 
  8344  1F26                     	;# 
  8345  1F27                     	;# 
  8346  1F38                     	;# 
  8347  1F39                     	;# 
  8348  1F3A                     	;# 
  8349  1F3B                     	;# 
  8350  1F3C                     	;# 
  8351  1F3D                     	;# 
  8352  1F3E                     	;# 
  8353  1F3F                     	;# 
  8354  1F43                     	;# 
  8355  1F44                     	;# 
  8356  1F45                     	;# 
  8357  1F46                     	;# 
  8358  1F47                     	;# 
  8359  1F48                     	;# 
  8360  1F49                     	;# 
  8361  1F4A                     	;# 
  8362  1F4E                     	;# 
  8363  1F4F                     	;# 
  8364  1F50                     	;# 
  8365  1F51                     	;# 
  8366  1F52                     	;# 
  8367  1F53                     	;# 
  8368  1F54                     	;# 
  8369  1F55                     	;# 
  8370  1FE4                     	;# 
  8371  1FE5                     	;# 
  8372  1FE6                     	;# 
  8373  1FE7                     	;# 
  8374  1FE8                     	;# 
  8375  1FE8                     	;# 
  8376  1FE9                     	;# 
  8377  1FEA                     	;# 
  8378  1FEB                     	;# 
  8379  1FED                     	;# 
  8380  1FEE                     	;# 
  8381  1FEF                     	;# 
  8382  0000                     	;# 
  8383  0001                     	;# 
  8384  0002                     	;# 
  8385  0003                     	;# 
  8386  0004                     	;# 
  8387  0005                     	;# 
  8388  0006                     	;# 
  8389  0007                     	;# 
  8390  0008                     	;# 
  8391  0009                     	;# 
  8392  000A                     	;# 
  8393  000B                     	;# 
  8394  000C                     	;# 
  8395  000D                     	;# 
  8396  000E                     	;# 
  8397  0012                     	;# 
  8398  0013                     	;# 
  8399  0014                     	;# 
  8400  0018                     	;# 
  8401  0019                     	;# 
  8402  001A                     	;# 
  8403  008C                     	;# 
  8404  008C                     	;# 
  8405  008D                     	;# 
  8406  008E                     	;# 
  8407  008E                     	;# 
  8408  008F                     	;# 
  8409  0090                     	;# 
  8410  0090                     	;# 
  8411  0091                     	;# 
  8412  0092                     	;# 
  8413  0092                     	;# 
  8414  0093                     	;# 
  8415  0094                     	;# 
  8416  0094                     	;# 
  8417  0095                     	;# 
  8418  0096                     	;# 
  8419  0096                     	;# 
  8420  0097                     	;# 
  8421  0098                     	;# 
  8422  0099                     	;# 
  8423  009A                     	;# 
  8424  009B                     	;# 
  8425  009B                     	;# 
  8426  009C                     	;# 
  8427  009D                     	;# 
  8428  009D                     	;# 
  8429  009E                     	;# 
  8430  009F                     	;# 
  8431  010C                     	;# 
  8432  010C                     	;# 
  8433  010D                     	;# 
  8434  010E                     	;# 
  8435  010F                     	;# 
  8436  010F                     	;# 
  8437  0110                     	;# 
  8438  0111                     	;# 
  8439  0112                     	;# 
  8440  0113                     	;# 
  8441  0114                     	;# 
  8442  0115                     	;# 
  8443  0116                     	;# 
  8444  0117                     	;# 
  8445  0118                     	;# 
  8446  0119                     	;# 
  8447  0119                     	;# 
  8448  0119                     	;# 
  8449  011A                     	;# 
  8450  011A                     	;# 
  8451  011A                     	;# 
  8452  011B                     	;# 
  8453  011B                     	;# 
  8454  011B                     	;# 
  8455  011B                     	;# 
  8456  011B                     	;# 
  8457  011C                     	;# 
  8458  011C                     	;# 
  8459  011C                     	;# 
  8460  011D                     	;# 
  8461  011D                     	;# 
  8462  011D                     	;# 
  8463  011E                     	;# 
  8464  011E                     	;# 
  8465  011E                     	;# 
  8466  011F                     	;# 
  8467  011F                     	;# 
  8468  011F                     	;# 
  8469  011F                     	;# 
  8470  011F                     	;# 
  8471  018C                     	;# 
  8472  018D                     	;# 
  8473  018E                     	;# 
  8474  018F                     	;# 
  8475  0190                     	;# 
  8476  0191                     	;# 
  8477  0192                     	;# 
  8478  0196                     	;# 
  8479  0197                     	;# 
  8480  0198                     	;# 
  8481  0199                     	;# 
  8482  019A                     	;# 
  8483  019B                     	;# 
  8484  019C                     	;# 
  8485  020C                     	;# 
  8486  020D                     	;# 
  8487  020E                     	;# 
  8488  020E                     	;# 
  8489  020F                     	;# 
  8490  020F                     	;# 
  8491  0210                     	;# 
  8492  0210                     	;# 
  8493  0211                     	;# 
  8494  0211                     	;# 
  8495  0212                     	;# 
  8496  0213                     	;# 
  8497  0214                     	;# 
  8498  0214                     	;# 
  8499  0215                     	;# 
  8500  0215                     	;# 
  8501  0216                     	;# 
  8502  0216                     	;# 
  8503  0217                     	;# 
  8504  0217                     	;# 
  8505  0218                     	;# 
  8506  0219                     	;# 
  8507  021A                     	;# 
  8508  021A                     	;# 
  8509  021B                     	;# 
  8510  021B                     	;# 
  8511  021C                     	;# 
  8512  021C                     	;# 
  8513  021D                     	;# 
  8514  021D                     	;# 
  8515  021E                     	;# 
  8516  021F                     	;# 
  8517  028C                     	;# 
  8518  028C                     	;# 
  8519  028D                     	;# 
  8520  028D                     	;# 
  8521  028E                     	;# 
  8522  028F                     	;# 
  8523  0290                     	;# 
  8524  0291                     	;# 
  8525  0292                     	;# 
  8526  0292                     	;# 
  8527  0293                     	;# 
  8528  0293                     	;# 
  8529  0294                     	;# 
  8530  0295                     	;# 
  8531  0296                     	;# 
  8532  0297                     	;# 
  8533  0298                     	;# 
  8534  0298                     	;# 
  8535  0299                     	;# 
  8536  0299                     	;# 
  8537  029A                     	;# 
  8538  029B                     	;# 
  8539  029C                     	;# 
  8540  029D                     	;# 
  8541  029F                     	;# 
  8542  030C                     	;# 
  8543  030C                     	;# 
  8544  030D                     	;# 
  8545  030E                     	;# 
  8546  030F                     	;# 
  8547  0310                     	;# 
  8548  0310                     	;# 
  8549  0311                     	;# 
  8550  0312                     	;# 
  8551  0313                     	;# 
  8552  0314                     	;# 
  8553  0314                     	;# 
  8554  0315                     	;# 
  8555  0316                     	;# 
  8556  0317                     	;# 
  8557  0318                     	;# 
  8558  0318                     	;# 
  8559  0319                     	;# 
  8560  031A                     	;# 
  8561  031B                     	;# 
  8562  038C                     	;# 
  8563  038C                     	;# 
  8564  038D                     	;# 
  8565  038E                     	;# 
  8566  0390                     	;# 
  8567  0390                     	;# 
  8568  0391                     	;# 
  8569  0392                     	;# 
  8570  048C                     	;# 
  8571  048C                     	;# 
  8572  048D                     	;# 
  8573  048E                     	;# 
  8574  048F                     	;# 
  8575  048F                     	;# 
  8576  0490                     	;# 
  8577  0491                     	;# 
  8578  0492                     	;# 
  8579  0492                     	;# 
  8580  0493                     	;# 
  8581  0494                     	;# 
  8582  0495                     	;# 
  8583  0495                     	;# 
  8584  0496                     	;# 
  8585  0497                     	;# 
  8586  0498                     	;# 
  8587  0499                     	;# 
  8588  049A                     	;# 
  8589  049B                     	;# 
  8590  049C                     	;# 
  8591  049D                     	;# 
  8592  058C                     	;# 
  8593  058C                     	;# 
  8594  058D                     	;# 
  8595  058E                     	;# 
  8596  058F                     	;# 
  8597  058F                     	;# 
  8598  0590                     	;# 
  8599  0591                     	;# 
  8600  0592                     	;# 
  8601  0593                     	;# 
  8602  059C                     	;# 
  8603  059C                     	;# 
  8604  059D                     	;# 
  8605  059D                     	;# 
  8606  059E                     	;# 
  8607  059F                     	;# 
  8608  060C                     	;# 
  8609  060C                     	;# 
  8610  060D                     	;# 
  8611  060D                     	;# 
  8612  060E                     	;# 
  8613  060F                     	;# 
  8614  0610                     	;# 
  8615  0611                     	;# 
  8616  0612                     	;# 
  8617  0613                     	;# 
  8618  0614                     	;# 
  8619  0616                     	;# 
  8620  0616                     	;# 
  8621  0617                     	;# 
  8622  0617                     	;# 
  8623  0618                     	;# 
  8624  0619                     	;# 
  8625  061A                     	;# 
  8626  061B                     	;# 
  8627  061C                     	;# 
  8628  061D                     	;# 
  8629  061E                     	;# 
  8630  070C                     	;# 
  8631  070D                     	;# 
  8632  070E                     	;# 
  8633  070F                     	;# 
  8634  0710                     	;# 
  8635  0711                     	;# 
  8636  0712                     	;# 
  8637  0713                     	;# 
  8638  0714                     	;# 
  8639  0716                     	;# 
  8640  0717                     	;# 
  8641  0718                     	;# 
  8642  0719                     	;# 
  8643  071A                     	;# 
  8644  071B                     	;# 
  8645  071C                     	;# 
  8646  071D                     	;# 
  8647  071E                     	;# 
  8648  0796                     	;# 
  8649  0797                     	;# 
  8650  0798                     	;# 
  8651  0799                     	;# 
  8652  079A                     	;# 
  8653  079B                     	;# 
  8654  079C                     	;# 
  8655  079D                     	;# 
  8656  080C                     	;# 
  8657  080D                     	;# 
  8658  080E                     	;# 
  8659  080F                     	;# 
  8660  0810                     	;# 
  8661  0811                     	;# 
  8662  0812                     	;# 
  8663  0813                     	;# 
  8664  0814                     	;# 
  8665  081A                     	;# 
  8666  081A                     	;# 
  8667  081B                     	;# 
  8668  081C                     	;# 
  8669  081C                     	;# 
  8670  081D                     	;# 
  8671  081E                     	;# 
  8672  081F                     	;# 
  8673  088C                     	;# 
  8674  088D                     	;# 
  8675  088E                     	;# 
  8676  088F                     	;# 
  8677  0890                     	;# 
  8678  0891                     	;# 
  8679  0892                     	;# 
  8680  0893                     	;# 
  8681  0895                     	;# 
  8682  0896                     	;# 
  8683  0897                     	;# 
  8684  0898                     	;# 
  8685  0899                     	;# 
  8686  089A                     	;# 
  8687  089B                     	;# 
  8688  090C                     	;# 
  8689  090E                     	;# 
  8690  090F                     	;# 
  8691  091F                     	;# 
  8692  098F                     	;# 
  8693  098F                     	;# 
  8694  0990                     	;# 
  8695  0991                     	;# 
  8696  0992                     	;# 
  8697  0993                     	;# 
  8698  0994                     	;# 
  8699  0995                     	;# 
  8700  0996                     	;# 
  8701  0997                     	;# 
  8702  1E0F                     	;# 
  8703  1E10                     	;# 
  8704  1E11                     	;# 
  8705  1E12                     	;# 
  8706  1E13                     	;# 
  8707  1E14                     	;# 
  8708  1E15                     	;# 
  8709  1E16                     	;# 
  8710  1E17                     	;# 
  8711  1E18                     	;# 
  8712  1E19                     	;# 
  8713  1E1A                     	;# 
  8714  1E1B                     	;# 
  8715  1E1C                     	;# 
  8716  1E1D                     	;# 
  8717  1E1E                     	;# 
  8718  1E1F                     	;# 
  8719  1E20                     	;# 
  8720  1E21                     	;# 
  8721  1E22                     	;# 
  8722  1E23                     	;# 
  8723  1E24                     	;# 
  8724  1E25                     	;# 
  8725  1E26                     	;# 
  8726  1E27                     	;# 
  8727  1E28                     	;# 
  8728  1E29                     	;# 
  8729  1E2A                     	;# 
  8730  1E2B                     	;# 
  8731  1E2C                     	;# 
  8732  1E2D                     	;# 
  8733  1E2E                     	;# 
  8734  1E2F                     	;# 
  8735  1E30                     	;# 
  8736  1E31                     	;# 
  8737  1E32                     	;# 
  8738  1E33                     	;# 
  8739  1E34                     	;# 
  8740  1E35                     	;# 
  8741  1E36                     	;# 
  8742  1E37                     	;# 
  8743  1E8F                     	;# 
  8744  1E90                     	;# 
  8745  1E91                     	;# 
  8746  1E92                     	;# 
  8747  1E93                     	;# 
  8748  1E94                     	;# 
  8749  1E95                     	;# 
  8750  1E96                     	;# 
  8751  1E97                     	;# 
  8752  1E9C                     	;# 
  8753  1E9D                     	;# 
  8754  1E9E                     	;# 
  8755  1EA1                     	;# 
  8756  1EA2                     	;# 
  8757  1EA3                     	;# 
  8758  1EA4                     	;# 
  8759  1EA9                     	;# 
  8760  1EAA                     	;# 
  8761  1EB1                     	;# 
  8762  1EB2                     	;# 
  8763  1EB8                     	;# 
  8764  1EB9                     	;# 
  8765  1EBA                     	;# 
  8766  1EBB                     	;# 
  8767  1EBC                     	;# 
  8768  1EBD                     	;# 
  8769  1EBE                     	;# 
  8770  1EC3                     	;# 
  8771  1EC5                     	;# 
  8772  1EC6                     	;# 
  8773  1EC7                     	;# 
  8774  1EC8                     	;# 
  8775  1EC9                     	;# 
  8776  1ECA                     	;# 
  8777  1ECB                     	;# 
  8778  1ECB                     	;# 
  8779  1ECB                     	;# 
  8780  1ECC                     	;# 
  8781  1ECC                     	;# 
  8782  1ECC                     	;# 
  8783  1F10                     	;# 
  8784  1F11                     	;# 
  8785  1F12                     	;# 
  8786  1F14                     	;# 
  8787  1F15                     	;# 
  8788  1F1C                     	;# 
  8789  1F1D                     	;# 
  8790  1F1E                     	;# 
  8791  1F1F                     	;# 
  8792  1F20                     	;# 
  8793  1F21                     	;# 
  8794  1F22                     	;# 
  8795  1F23                     	;# 
  8796  1F24                     	;# 
  8797  1F25                     	;# 
  8798  1F26                     	;# 
  8799  1F27                     	;# 
  8800  1F38                     	;# 
  8801  1F39                     	;# 
  8802  1F3A                     	;# 
  8803  1F3B                     	;# 
  8804  1F3C                     	;# 
  8805  1F3D                     	;# 
  8806  1F3E                     	;# 
  8807  1F3F                     	;# 
  8808  1F43                     	;# 
  8809  1F44                     	;# 
  8810  1F45                     	;# 
  8811  1F46                     	;# 
  8812  1F47                     	;# 
  8813  1F48                     	;# 
  8814  1F49                     	;# 
  8815  1F4A                     	;# 
  8816  1F4E                     	;# 
  8817  1F4F                     	;# 
  8818  1F50                     	;# 
  8819  1F51                     	;# 
  8820  1F52                     	;# 
  8821  1F53                     	;# 
  8822  1F54                     	;# 
  8823  1F55                     	;# 
  8824  1FE4                     	;# 
  8825  1FE5                     	;# 
  8826  1FE6                     	;# 
  8827  1FE7                     	;# 
  8828  1FE8                     	;# 
  8829  1FE8                     	;# 
  8830  1FE9                     	;# 
  8831  1FEA                     	;# 
  8832  1FEB                     	;# 
  8833  1FED                     	;# 
  8834  1FEE                     	;# 
  8835  1FEF                     	;# 
  8836  0000                     	;# 
  8837  0001                     	;# 
  8838  0002                     	;# 
  8839  0003                     	;# 
  8840  0004                     	;# 
  8841  0005                     	;# 
  8842  0006                     	;# 
  8843  0007                     	;# 
  8844  0008                     	;# 
  8845  0009                     	;# 
  8846  000A                     	;# 
  8847  000B                     	;# 
  8848  000C                     	;# 
  8849  000D                     	;# 
  8850  000E                     	;# 
  8851  0012                     	;# 
  8852  0013                     	;# 
  8853  0014                     	;# 
  8854  0018                     	;# 
  8855  0019                     	;# 
  8856  001A                     	;# 
  8857  008C                     	;# 
  8858  008C                     	;# 
  8859  008D                     	;# 
  8860  008E                     	;# 
  8861  008E                     	;# 
  8862  008F                     	;# 
  8863  0090                     	;# 
  8864  0090                     	;# 
  8865  0091                     	;# 
  8866  0092                     	;# 
  8867  0092                     	;# 
  8868  0093                     	;# 
  8869  0094                     	;# 
  8870  0094                     	;# 
  8871  0095                     	;# 
  8872  0096                     	;# 
  8873  0096                     	;# 
  8874  0097                     	;# 
  8875  0098                     	;# 
  8876  0099                     	;# 
  8877  009A                     	;# 
  8878  009B                     	;# 
  8879  009B                     	;# 
  8880  009C                     	;# 
  8881  009D                     	;# 
  8882  009D                     	;# 
  8883  009E                     	;# 
  8884  009F                     	;# 
  8885  010C                     	;# 
  8886  010C                     	;# 
  8887  010D                     	;# 
  8888  010E                     	;# 
  8889  010F                     	;# 
  8890  010F                     	;# 
  8891  0110                     	;# 
  8892  0111                     	;# 
  8893  0112                     	;# 
  8894  0113                     	;# 
  8895  0114                     	;# 
  8896  0115                     	;# 
  8897  0116                     	;# 
  8898  0117                     	;# 
  8899  0118                     	;# 
  8900  0119                     	;# 
  8901  0119                     	;# 
  8902  0119                     	;# 
  8903  011A                     	;# 
  8904  011A                     	;# 
  8905  011A                     	;# 
  8906  011B                     	;# 
  8907  011B                     	;# 
  8908  011B                     	;# 
  8909  011B                     	;# 
  8910  011B                     	;# 
  8911  011C                     	;# 
  8912  011C                     	;# 
  8913  011C                     	;# 
  8914  011D                     	;# 
  8915  011D                     	;# 
  8916  011D                     	;# 
  8917  011E                     	;# 
  8918  011E                     	;# 
  8919  011E                     	;# 
  8920  011F                     	;# 
  8921  011F                     	;# 
  8922  011F                     	;# 
  8923  011F                     	;# 
  8924  011F                     	;# 
  8925  018C                     	;# 
  8926  018D                     	;# 
  8927  018E                     	;# 
  8928  018F                     	;# 
  8929  0190                     	;# 
  8930  0191                     	;# 
  8931  0192                     	;# 
  8932  0196                     	;# 
  8933  0197                     	;# 
  8934  0198                     	;# 
  8935  0199                     	;# 
  8936  019A                     	;# 
  8937  019B                     	;# 
  8938  019C                     	;# 
  8939  020C                     	;# 
  8940  020D                     	;# 
  8941  020E                     	;# 
  8942  020E                     	;# 
  8943  020F                     	;# 
  8944  020F                     	;# 
  8945  0210                     	;# 
  8946  0210                     	;# 
  8947  0211                     	;# 
  8948  0211                     	;# 
  8949  0212                     	;# 
  8950  0213                     	;# 
  8951  0214                     	;# 
  8952  0214                     	;# 
  8953  0215                     	;# 
  8954  0215                     	;# 
  8955  0216                     	;# 
  8956  0216                     	;# 
  8957  0217                     	;# 
  8958  0217                     	;# 
  8959  0218                     	;# 
  8960  0219                     	;# 
  8961  021A                     	;# 
  8962  021A                     	;# 
  8963  021B                     	;# 
  8964  021B                     	;# 
  8965  021C                     	;# 
  8966  021C                     	;# 
  8967  021D                     	;# 
  8968  021D                     	;# 
  8969  021E                     	;# 
  8970  021F                     	;# 
  8971  028C                     	;# 
  8972  028C                     	;# 
  8973  028D                     	;# 
  8974  028D                     	;# 
  8975  028E                     	;# 
  8976  028F                     	;# 
  8977  0290                     	;# 
  8978  0291                     	;# 
  8979  0292                     	;# 
  8980  0292                     	;# 
  8981  0293                     	;# 
  8982  0293                     	;# 
  8983  0294                     	;# 
  8984  0295                     	;# 
  8985  0296                     	;# 
  8986  0297                     	;# 
  8987  0298                     	;# 
  8988  0298                     	;# 
  8989  0299                     	;# 
  8990  0299                     	;# 
  8991  029A                     	;# 
  8992  029B                     	;# 
  8993  029C                     	;# 
  8994  029D                     	;# 
  8995  029F                     	;# 
  8996  030C                     	;# 
  8997  030C                     	;# 
  8998  030D                     	;# 
  8999  030E                     	;# 
  9000  030F                     	;# 
  9001  0310                     	;# 
  9002  0310                     	;# 
  9003  0311                     	;# 
  9004  0312                     	;# 
  9005  0313                     	;# 
  9006  0314                     	;# 
  9007  0314                     	;# 
  9008  0315                     	;# 
  9009  0316                     	;# 
  9010  0317                     	;# 
  9011  0318                     	;# 
  9012  0318                     	;# 
  9013  0319                     	;# 
  9014  031A                     	;# 
  9015  031B                     	;# 
  9016  038C                     	;# 
  9017  038C                     	;# 
  9018  038D                     	;# 
  9019  038E                     	;# 
  9020  0390                     	;# 
  9021  0390                     	;# 
  9022  0391                     	;# 
  9023  0392                     	;# 
  9024  048C                     	;# 
  9025  048C                     	;# 
  9026  048D                     	;# 
  9027  048E                     	;# 
  9028  048F                     	;# 
  9029  048F                     	;# 
  9030  0490                     	;# 
  9031  0491                     	;# 
  9032  0492                     	;# 
  9033  0492                     	;# 
  9034  0493                     	;# 
  9035  0494                     	;# 
  9036  0495                     	;# 
  9037  0495                     	;# 
  9038  0496                     	;# 
  9039  0497                     	;# 
  9040  0498                     	;# 
  9041  0499                     	;# 
  9042  049A                     	;# 
  9043  049B                     	;# 
  9044  049C                     	;# 
  9045  049D                     	;# 
  9046  058C                     	;# 
  9047  058C                     	;# 
  9048  058D                     	;# 
  9049  058E                     	;# 
  9050  058F                     	;# 
  9051  058F                     	;# 
  9052  0590                     	;# 
  9053  0591                     	;# 
  9054  0592                     	;# 
  9055  0593                     	;# 
  9056  059C                     	;# 
  9057  059C                     	;# 
  9058  059D                     	;# 
  9059  059D                     	;# 
  9060  059E                     	;# 
  9061  059F                     	;# 
  9062  060C                     	;# 
  9063  060C                     	;# 
  9064  060D                     	;# 
  9065  060D                     	;# 
  9066  060E                     	;# 
  9067  060F                     	;# 
  9068  0610                     	;# 
  9069  0611                     	;# 
  9070  0612                     	;# 
  9071  0613                     	;# 
  9072  0614                     	;# 
  9073  0616                     	;# 
  9074  0616                     	;# 
  9075  0617                     	;# 
  9076  0617                     	;# 
  9077  0618                     	;# 
  9078  0619                     	;# 
  9079  061A                     	;# 
  9080  061B                     	;# 
  9081  061C                     	;# 
  9082  061D                     	;# 
  9083  061E                     	;# 
  9084  070C                     	;# 
  9085  070D                     	;# 
  9086  070E                     	;# 
  9087  070F                     	;# 
  9088  0710                     	;# 
  9089  0711                     	;# 
  9090  0712                     	;# 
  9091  0713                     	;# 
  9092  0714                     	;# 
  9093  0716                     	;# 
  9094  0717                     	;# 
  9095  0718                     	;# 
  9096  0719                     	;# 
  9097  071A                     	;# 
  9098  071B                     	;# 
  9099  071C                     	;# 
  9100  071D                     	;# 
  9101  071E                     	;# 
  9102  0796                     	;# 
  9103  0797                     	;# 
  9104  0798                     	;# 
  9105  0799                     	;# 
  9106  079A                     	;# 
  9107  079B                     	;# 
  9108  079C                     	;# 
  9109  079D                     	;# 
  9110  080C                     	;# 
  9111  080D                     	;# 
  9112  080E                     	;# 
  9113  080F                     	;# 
  9114  0810                     	;# 
  9115  0811                     	;# 
  9116  0812                     	;# 
  9117  0813                     	;# 
  9118  0814                     	;# 
  9119  081A                     	;# 
  9120  081A                     	;# 
  9121  081B                     	;# 
  9122  081C                     	;# 
  9123  081C                     	;# 
  9124  081D                     	;# 
  9125  081E                     	;# 
  9126  081F                     	;# 
  9127  088C                     	;# 
  9128  088D                     	;# 
  9129  088E                     	;# 
  9130  088F                     	;# 
  9131  0890                     	;# 
  9132  0891                     	;# 
  9133  0892                     	;# 
  9134  0893                     	;# 
  9135  0895                     	;# 
  9136  0896                     	;# 
  9137  0897                     	;# 
  9138  0898                     	;# 
  9139  0899                     	;# 
  9140  089A                     	;# 
  9141  089B                     	;# 
  9142  090C                     	;# 
  9143  090E                     	;# 
  9144  090F                     	;# 
  9145  091F                     	;# 
  9146  098F                     	;# 
  9147  098F                     	;# 
  9148  0990                     	;# 
  9149  0991                     	;# 
  9150  0992                     	;# 
  9151  0993                     	;# 
  9152  0994                     	;# 
  9153  0995                     	;# 
  9154  0996                     	;# 
  9155  0997                     	;# 
  9156  1E0F                     	;# 
  9157  1E10                     	;# 
  9158  1E11                     	;# 
  9159  1E12                     	;# 
  9160  1E13                     	;# 
  9161  1E14                     	;# 
  9162  1E15                     	;# 
  9163  1E16                     	;# 
  9164  1E17                     	;# 
  9165  1E18                     	;# 
  9166  1E19                     	;# 
  9167  1E1A                     	;# 
  9168  1E1B                     	;# 
  9169  1E1C                     	;# 
  9170  1E1D                     	;# 
  9171  1E1E                     	;# 
  9172  1E1F                     	;# 
  9173  1E20                     	;# 
  9174  1E21                     	;# 
  9175  1E22                     	;# 
  9176  1E23                     	;# 
  9177  1E24                     	;# 
  9178  1E25                     	;# 
  9179  1E26                     	;# 
  9180  1E27                     	;# 
  9181  1E28                     	;# 
  9182  1E29                     	;# 
  9183  1E2A                     	;# 
  9184  1E2B                     	;# 
  9185  1E2C                     	;# 
  9186  1E2D                     	;# 
  9187  1E2E                     	;# 
  9188  1E2F                     	;# 
  9189  1E30                     	;# 
  9190  1E31                     	;# 
  9191  1E32                     	;# 
  9192  1E33                     	;# 
  9193  1E34                     	;# 
  9194  1E35                     	;# 
  9195  1E36                     	;# 
  9196  1E37                     	;# 
  9197  1E8F                     	;# 
  9198  1E90                     	;# 
  9199  1E91                     	;# 
  9200  1E92                     	;# 
  9201  1E93                     	;# 
  9202  1E94                     	;# 
  9203  1E95                     	;# 
  9204  1E96                     	;# 
  9205  1E97                     	;# 
  9206  1E9C                     	;# 
  9207  1E9D                     	;# 
  9208  1E9E                     	;# 
  9209  1EA1                     	;# 
  9210  1EA2                     	;# 
  9211  1EA3                     	;# 
  9212  1EA4                     	;# 
  9213  1EA9                     	;# 
  9214  1EAA                     	;# 
  9215  1EB1                     	;# 
  9216  1EB2                     	;# 
  9217  1EB8                     	;# 
  9218  1EB9                     	;# 
  9219  1EBA                     	;# 
  9220  1EBB                     	;# 
  9221  1EBC                     	;# 
  9222  1EBD                     	;# 
  9223  1EBE                     	;# 
  9224  1EC3                     	;# 
  9225  1EC5                     	;# 
  9226  1EC6                     	;# 
  9227  1EC7                     	;# 
  9228  1EC8                     	;# 
  9229  1EC9                     	;# 
  9230  1ECA                     	;# 
  9231  1ECB                     	;# 
  9232  1ECB                     	;# 
  9233  1ECB                     	;# 
  9234  1ECC                     	;# 
  9235  1ECC                     	;# 
  9236  1ECC                     	;# 
  9237  1F10                     	;# 
  9238  1F11                     	;# 
  9239  1F12                     	;# 
  9240  1F14                     	;# 
  9241  1F15                     	;# 
  9242  1F1C                     	;# 
  9243  1F1D                     	;# 
  9244  1F1E                     	;# 
  9245  1F1F                     	;# 
  9246  1F20                     	;# 
  9247  1F21                     	;# 
  9248  1F22                     	;# 
  9249  1F23                     	;# 
  9250  1F24                     	;# 
  9251  1F25                     	;# 
  9252  1F26                     	;# 
  9253  1F27                     	;# 
  9254  1F38                     	;# 
  9255  1F39                     	;# 
  9256  1F3A                     	;# 
  9257  1F3B                     	;# 
  9258  1F3C                     	;# 
  9259  1F3D                     	;# 
  9260  1F3E                     	;# 
  9261  1F3F                     	;# 
  9262  1F43                     	;# 
  9263  1F44                     	;# 
  9264  1F45                     	;# 
  9265  1F46                     	;# 
  9266  1F47                     	;# 
  9267  1F48                     	;# 
  9268  1F49                     	;# 
  9269  1F4A                     	;# 
  9270  1F4E                     	;# 
  9271  1F4F                     	;# 
  9272  1F50                     	;# 
  9273  1F51                     	;# 
  9274  1F52                     	;# 
  9275  1F53                     	;# 
  9276  1F54                     	;# 
  9277  1F55                     	;# 
  9278  1FE4                     	;# 
  9279  1FE5                     	;# 
  9280  1FE6                     	;# 
  9281  1FE7                     	;# 
  9282  1FE8                     	;# 
  9283  1FE8                     	;# 
  9284  1FE9                     	;# 
  9285  1FEA                     	;# 
  9286  1FEB                     	;# 
  9287  1FED                     	;# 
  9288  1FEE                     	;# 
  9289  1FEF                     	;# 
  9290  0000                     	;# 
  9291  0001                     	;# 
  9292  0002                     	;# 
  9293  0003                     	;# 
  9294  0004                     	;# 
  9295  0005                     	;# 
  9296  0006                     	;# 
  9297  0007                     	;# 
  9298  0008                     	;# 
  9299  0009                     	;# 
  9300  000A                     	;# 
  9301  000B                     	;# 
  9302  000C                     	;# 
  9303  000D                     	;# 
  9304  000E                     	;# 
  9305  0012                     	;# 
  9306  0013                     	;# 
  9307  0014                     	;# 
  9308  0018                     	;# 
  9309  0019                     	;# 
  9310  001A                     	;# 
  9311  008C                     	;# 
  9312  008C                     	;# 
  9313  008D                     	;# 
  9314  008E                     	;# 
  9315  008E                     	;# 
  9316  008F                     	;# 
  9317  0090                     	;# 
  9318  0090                     	;# 
  9319  0091                     	;# 
  9320  0092                     	;# 
  9321  0092                     	;# 
  9322  0093                     	;# 
  9323  0094                     	;# 
  9324  0094                     	;# 
  9325  0095                     	;# 
  9326  0096                     	;# 
  9327  0096                     	;# 
  9328  0097                     	;# 
  9329  0098                     	;# 
  9330  0099                     	;# 
  9331  009A                     	;# 
  9332  009B                     	;# 
  9333  009B                     	;# 
  9334  009C                     	;# 
  9335  009D                     	;# 
  9336  009D                     	;# 
  9337  009E                     	;# 
  9338  009F                     	;# 
  9339  010C                     	;# 
  9340  010C                     	;# 
  9341  010D                     	;# 
  9342  010E                     	;# 
  9343  010F                     	;# 
  9344  010F                     	;# 
  9345  0110                     	;# 
  9346  0111                     	;# 
  9347  0112                     	;# 
  9348  0113                     	;# 
  9349  0114                     	;# 
  9350  0115                     	;# 
  9351  0116                     	;# 
  9352  0117                     	;# 
  9353  0118                     	;# 
  9354  0119                     	;# 
  9355  0119                     	;# 
  9356  0119                     	;# 
  9357  011A                     	;# 
  9358  011A                     	;# 
  9359  011A                     	;# 
  9360  011B                     	;# 
  9361  011B                     	;# 
  9362  011B                     	;# 
  9363  011B                     	;# 
  9364  011B                     	;# 
  9365  011C                     	;# 
  9366  011C                     	;# 
  9367  011C                     	;# 
  9368  011D                     	;# 
  9369  011D                     	;# 
  9370  011D                     	;# 
  9371  011E                     	;# 
  9372  011E                     	;# 
  9373  011E                     	;# 
  9374  011F                     	;# 
  9375  011F                     	;# 
  9376  011F                     	;# 
  9377  011F                     	;# 
  9378  011F                     	;# 
  9379  018C                     	;# 
  9380  018D                     	;# 
  9381  018E                     	;# 
  9382  018F                     	;# 
  9383  0190                     	;# 
  9384  0191                     	;# 
  9385  0192                     	;# 
  9386  0196                     	;# 
  9387  0197                     	;# 
  9388  0198                     	;# 
  9389  0199                     	;# 
  9390  019A                     	;# 
  9391  019B                     	;# 
  9392  019C                     	;# 
  9393  020C                     	;# 
  9394  020D                     	;# 
  9395  020E                     	;# 
  9396  020E                     	;# 
  9397  020F                     	;# 
  9398  020F                     	;# 
  9399  0210                     	;# 
  9400  0210                     	;# 
  9401  0211                     	;# 
  9402  0211                     	;# 
  9403  0212                     	;# 
  9404  0213                     	;# 
  9405  0214                     	;# 
  9406  0214                     	;# 
  9407  0215                     	;# 
  9408  0215                     	;# 
  9409  0216                     	;# 
  9410  0216                     	;# 
  9411  0217                     	;# 
  9412  0217                     	;# 
  9413  0218                     	;# 
  9414  0219                     	;# 
  9415  021A                     	;# 
  9416  021A                     	;# 
  9417  021B                     	;# 
  9418  021B                     	;# 
  9419  021C                     	;# 
  9420  021C                     	;# 
  9421  021D                     	;# 
  9422  021D                     	;# 
  9423  021E                     	;# 
  9424  021F                     	;# 
  9425  028C                     	;# 
  9426  028C                     	;# 
  9427  028D                     	;# 
  9428  028D                     	;# 
  9429  028E                     	;# 
  9430  028F                     	;# 
  9431  0290                     	;# 
  9432  0291                     	;# 
  9433  0292                     	;# 
  9434  0292                     	;# 
  9435  0293                     	;# 
  9436  0293                     	;# 
  9437  0294                     	;# 
  9438  0295                     	;# 
  9439  0296                     	;# 
  9440  0297                     	;# 
  9441  0298                     	;# 
  9442  0298                     	;# 
  9443  0299                     	;# 
  9444  0299                     	;# 
  9445  029A                     	;# 
  9446  029B                     	;# 
  9447  029C                     	;# 
  9448  029D                     	;# 
  9449  029F                     	;# 
  9450  030C                     	;# 
  9451  030C                     	;# 
  9452  030D                     	;# 
  9453  030E                     	;# 
  9454  030F                     	;# 
  9455  0310                     	;# 
  9456  0310                     	;# 
  9457  0311                     	;# 
  9458  0312                     	;# 
  9459  0313                     	;# 
  9460  0314                     	;# 
  9461  0314                     	;# 
  9462  0315                     	;# 
  9463  0316                     	;# 
  9464  0317                     	;# 
  9465  0318                     	;# 
  9466  0318                     	;# 
  9467  0319                     	;# 
  9468  031A                     	;# 
  9469  031B                     	;# 
  9470  038C                     	;# 
  9471  038C                     	;# 
  9472  038D                     	;# 
  9473  038E                     	;# 
  9474  0390                     	;# 
  9475  0390                     	;# 
  9476  0391                     	;# 
  9477  0392                     	;# 
  9478  048C                     	;# 
  9479  048C                     	;# 
  9480  048D                     	;# 
  9481  048E                     	;# 
  9482  048F                     	;# 
  9483  048F                     	;# 
  9484  0490                     	;# 
  9485  0491                     	;# 
  9486  0492                     	;# 
  9487  0492                     	;# 
  9488  0493                     	;# 
  9489  0494                     	;# 
  9490  0495                     	;# 
  9491  0495                     	;# 
  9492  0496                     	;# 
  9493  0497                     	;# 
  9494  0498                     	;# 
  9495  0499                     	;# 
  9496  049A                     	;# 
  9497  049B                     	;# 
  9498  049C                     	;# 
  9499  049D                     	;# 
  9500  058C                     	;# 
  9501  058C                     	;# 
  9502  058D                     	;# 
  9503  058E                     	;# 
  9504  058F                     	;# 
  9505  058F                     	;# 
  9506  0590                     	;# 
  9507  0591                     	;# 
  9508  0592                     	;# 
  9509  0593                     	;# 
  9510  059C                     	;# 
  9511  059C                     	;# 
  9512  059D                     	;# 
  9513  059D                     	;# 
  9514  059E                     	;# 
  9515  059F                     	;# 
  9516  060C                     	;# 
  9517  060C                     	;# 
  9518  060D                     	;# 
  9519  060D                     	;# 
  9520  060E                     	;# 
  9521  060F                     	;# 
  9522  0610                     	;# 
  9523  0611                     	;# 
  9524  0612                     	;# 
  9525  0613                     	;# 
  9526  0614                     	;# 
  9527  0616                     	;# 
  9528  0616                     	;# 
  9529  0617                     	;# 
  9530  0617                     	;# 
  9531  0618                     	;# 
  9532  0619                     	;# 
  9533  061A                     	;# 
  9534  061B                     	;# 
  9535  061C                     	;# 
  9536  061D                     	;# 
  9537  061E                     	;# 
  9538  070C                     	;# 
  9539  070D                     	;# 
  9540  070E                     	;# 
  9541  070F                     	;# 
  9542  0710                     	;# 
  9543  0711                     	;# 
  9544  0712                     	;# 
  9545  0713                     	;# 
  9546  0714                     	;# 
  9547  0716                     	;# 
  9548  0717                     	;# 
  9549  0718                     	;# 
  9550  0719                     	;# 
  9551  071A                     	;# 
  9552  071B                     	;# 
  9553  071C                     	;# 
  9554  071D                     	;# 
  9555  071E                     	;# 
  9556  0796                     	;# 
  9557  0797                     	;# 
  9558  0798                     	;# 
  9559  0799                     	;# 
  9560  079A                     	;# 
  9561  079B                     	;# 
  9562  079C                     	;# 
  9563  079D                     	;# 
  9564  080C                     	;# 
  9565  080D                     	;# 
  9566  080E                     	;# 
  9567  080F                     	;# 
  9568  0810                     	;# 
  9569  0811                     	;# 
  9570  0812                     	;# 
  9571  0813                     	;# 
  9572  0814                     	;# 
  9573  081A                     	;# 
  9574  081A                     	;# 
  9575  081B                     	;# 
  9576  081C                     	;# 
  9577  081C                     	;# 
  9578  081D                     	;# 
  9579  081E                     	;# 
  9580  081F                     	;# 
  9581  088C                     	;# 
  9582  088D                     	;# 
  9583  088E                     	;# 
  9584  088F                     	;# 
  9585  0890                     	;# 
  9586  0891                     	;# 
  9587  0892                     	;# 
  9588  0893                     	;# 
  9589  0895                     	;# 
  9590  0896                     	;# 
  9591  0897                     	;# 
  9592  0898                     	;# 
  9593  0899                     	;# 
  9594  089A                     	;# 
  9595  089B                     	;# 
  9596  090C                     	;# 
  9597  090E                     	;# 
  9598  090F                     	;# 
  9599  091F                     	;# 
  9600  098F                     	;# 
  9601  098F                     	;# 
  9602  0990                     	;# 
  9603  0991                     	;# 
  9604  0992                     	;# 
  9605  0993                     	;# 
  9606  0994                     	;# 
  9607  0995                     	;# 
  9608  0996                     	;# 
  9609  0997                     	;# 
  9610  1E0F                     	;# 
  9611  1E10                     	;# 
  9612  1E11                     	;# 
  9613  1E12                     	;# 
  9614  1E13                     	;# 
  9615  1E14                     	;# 
  9616  1E15                     	;# 
  9617  1E16                     	;# 
  9618  1E17                     	;# 
  9619  1E18                     	;# 
  9620  1E19                     	;# 
  9621  1E1A                     	;# 
  9622  1E1B                     	;# 
  9623  1E1C                     	;# 
  9624  1E1D                     	;# 
  9625  1E1E                     	;# 
  9626  1E1F                     	;# 
  9627  1E20                     	;# 
  9628  1E21                     	;# 
  9629  1E22                     	;# 
  9630  1E23                     	;# 
  9631  1E24                     	;# 
  9632  1E25                     	;# 
  9633  1E26                     	;# 
  9634  1E27                     	;# 
  9635  1E28                     	;# 
  9636  1E29                     	;# 
  9637  1E2A                     	;# 
  9638  1E2B                     	;# 
  9639  1E2C                     	;# 
  9640  1E2D                     	;# 
  9641  1E2E                     	;# 
  9642  1E2F                     	;# 
  9643  1E30                     	;# 
  9644  1E31                     	;# 
  9645  1E32                     	;# 
  9646  1E33                     	;# 
  9647  1E34                     	;# 
  9648  1E35                     	;# 
  9649  1E36                     	;# 
  9650  1E37                     	;# 
  9651  1E8F                     	;# 
  9652  1E90                     	;# 
  9653  1E91                     	;# 
  9654  1E92                     	;# 
  9655  1E93                     	;# 
  9656  1E94                     	;# 
  9657  1E95                     	;# 
  9658  1E96                     	;# 
  9659  1E97                     	;# 
  9660  1E9C                     	;# 
  9661  1E9D                     	;# 
  9662  1E9E                     	;# 
  9663  1EA1                     	;# 
  9664  1EA2                     	;# 
  9665  1EA3                     	;# 
  9666  1EA4                     	;# 
  9667  1EA9                     	;# 
  9668  1EAA                     	;# 
  9669  1EB1                     	;# 
  9670  1EB2                     	;# 
  9671  1EB8                     	;# 
  9672  1EB9                     	;# 
  9673  1EBA                     	;# 
  9674  1EBB                     	;# 
  9675  1EBC                     	;# 
  9676  1EBD                     	;# 
  9677  1EBE                     	;# 
  9678  1EC3                     	;# 
  9679  1EC5                     	;# 
  9680  1EC6                     	;# 
  9681  1EC7                     	;# 
  9682  1EC8                     	;# 
  9683  1EC9                     	;# 
  9684  1ECA                     	;# 
  9685  1ECB                     	;# 
  9686  1ECB                     	;# 
  9687  1ECB                     	;# 
  9688  1ECC                     	;# 
  9689  1ECC                     	;# 
  9690  1ECC                     	;# 
  9691  1F10                     	;# 
  9692  1F11                     	;# 
  9693  1F12                     	;# 
  9694  1F14                     	;# 
  9695  1F15                     	;# 
  9696  1F1C                     	;# 
  9697  1F1D                     	;# 
  9698  1F1E                     	;# 
  9699  1F1F                     	;# 
  9700  1F20                     	;# 
  9701  1F21                     	;# 
  9702  1F22                     	;# 
  9703  1F23                     	;# 
  9704  1F24                     	;# 
  9705  1F25                     	;# 
  9706  1F26                     	;# 
  9707  1F27                     	;# 
  9708  1F38                     	;# 
  9709  1F39                     	;# 
  9710  1F3A                     	;# 
  9711  1F3B                     	;# 
  9712  1F3C                     	;# 
  9713  1F3D                     	;# 
  9714  1F3E                     	;# 
  9715  1F3F                     	;# 
  9716  1F43                     	;# 
  9717  1F44                     	;# 
  9718  1F45                     	;# 
  9719  1F46                     	;# 
  9720  1F47                     	;# 
  9721  1F48                     	;# 
  9722  1F49                     	;# 
  9723  1F4A                     	;# 
  9724  1F4E                     	;# 
  9725  1F4F                     	;# 
  9726  1F50                     	;# 
  9727  1F51                     	;# 
  9728  1F52                     	;# 
  9729  1F53                     	;# 
  9730  1F54                     	;# 
  9731  1F55                     	;# 
  9732  1FE4                     	;# 
  9733  1FE5                     	;# 
  9734  1FE6                     	;# 
  9735  1FE7                     	;# 
  9736  1FE8                     	;# 
  9737  1FE8                     	;# 
  9738  1FE9                     	;# 
  9739  1FEA                     	;# 
  9740  1FEB                     	;# 
  9741  1FED                     	;# 
  9742  1FEE                     	;# 
  9743  1FEF                     	;_dmxArray
  9744                           
  9745                           	psect	idataCOMMON
  9746  0002                     __pidataCOMMON:	
  9747                           
  9748                           ;initializer for _incInterval
  9749  0002  3464               	retlw	100
  9750  0003  3400               	retlw	0
  9751                           
  9752                           	psect	idataBANK1
  9753  07F9                     __pidataBANK1:	
  9754                           
  9755                           ;initializer for _address
  9756  07F9  3401               	retlw	1
  9757  07FA  3400               	retlw	0
  9758                           
  9759                           ;initializer for _animationBrightness
  9760  07FB  3405               	retlw	5
  9761                           
  9762                           ;initializer for _animationModeSelected
  9763  07FC  3401               	retlw	1
  9764                           
  9765                           ;initializer for _startup
  9766  07FD  3401               	retlw	1
  9767                           
  9768                           ;initializer for _beatBrightness
  9769  07FE  3405               	retlw	5
  9770                           
  9771                           	psect	idataBANK2
  9772  1C38                     __pidataBANK2:	
  9773                           
  9774                           ;initializer for _initial
  9775  1C38  3401               	retlw	1
  9776  1C39  3400               	retlw	0
  9777                           
  9778                           ;initializer for _delay
  9779  1C3A  340A               	retlw	10
  9780  1C3B  3400               	retlw	0
  9781                           
  9782                           ;initializer for _threshold
  9783  1C3C  3490               	retlw	144
  9784  1C3D  3406               	retlw	6
  9785                           
  9786                           	psect	stringtext1
  9787  1800                     __pstringtext1:	
  9788  1800                     _charTable:	
  9789  1800  3400               	retlw	0
  9790  1801  3482               	retlw	130
  9791  1802  3421               	retlw	33
  9792  1803  3400               	retlw	0
  9793  1804  3400               	retlw	0
  9794  1805  3400               	retlw	0
  9795  1806  3400               	retlw	0
  9796  1807  3402               	retlw	2
  9797  1808  3439               	retlw	57
  9798  1809  340F               	retlw	15
  9799  180A  3400               	retlw	0
  9800  180B  3400               	retlw	0
  9801  180C  3400               	retlw	0
  9802  180D  3440               	retlw	64
  9803  180E  3480               	retlw	128
  9804  180F  3400               	retlw	0
  9805  1810  343F               	retlw	63
  9806  1811  3406               	retlw	6
  9807  1812  345B               	retlw	91
  9808  1813  344F               	retlw	79
  9809  1814  3466               	retlw	102
  9810  1815  346D               	retlw	109
  9811  1816  347D               	retlw	125
  9812  1817  3407               	retlw	7
  9813  1818  347F               	retlw	127
  9814  1819  346F               	retlw	111
  9815  181A  3400               	retlw	0
  9816  181B  3400               	retlw	0
  9817  181C  3400               	retlw	0
  9818  181D  3448               	retlw	72
  9819  181E  3400               	retlw	0
  9820  181F  3453               	retlw	83
  9821  1820  3400               	retlw	0
  9822  1821  3477               	retlw	119
  9823  1822  347C               	retlw	124
  9824  1823  3439               	retlw	57
  9825  1824  345E               	retlw	94
  9826  1825  3479               	retlw	121
  9827  1826  3471               	retlw	113
  9828  1827  346F               	retlw	111
  9829  1828  3476               	retlw	118
  9830  1829  3406               	retlw	6
  9831  182A  341E               	retlw	30
  9832  182B  3400               	retlw	0
  9833  182C  3438               	retlw	56
  9834  182D  3400               	retlw	0
  9835  182E  3454               	retlw	84
  9836  182F  343F               	retlw	63
  9837  1830  3473               	retlw	115
  9838  1831  3467               	retlw	103
  9839  1832  3450               	retlw	80
  9840  1833  346D               	retlw	109
  9841  1834  3478               	retlw	120
  9842  1835  343E               	retlw	62
  9843  1836  3400               	retlw	0
  9844  1837  3400               	retlw	0
  9845  1838  3400               	retlw	0
  9846  1839  346E               	retlw	110
  9847  183A  3400               	retlw	0
  9848  183B  3439               	retlw	57
  9849  183C  3400               	retlw	0
  9850  183D  340F               	retlw	15
  9851  183E  3400               	retlw	0
  9852  183F  3408               	retlw	8
  9853  1840  3463               	retlw	99
  9854  1841  345F               	retlw	95
  9855  1842  347C               	retlw	124
  9856  1843  3458               	retlw	88
  9857  1844  345E               	retlw	94
  9858  1845  347B               	retlw	123
  9859  1846  3471               	retlw	113
  9860  1847  346F               	retlw	111
  9861  1848  3474               	retlw	116
  9862  1849  3402               	retlw	2
  9863  184A  341E               	retlw	30
  9864  184B  3400               	retlw	0
  9865  184C  3406               	retlw	6
  9866  184D  3400               	retlw	0
  9867  184E  3454               	retlw	84
  9868  184F  345C               	retlw	92
  9869  1850  3473               	retlw	115
  9870  1851  3467               	retlw	103
  9871  1852  3450               	retlw	80
  9872  1853  346D               	retlw	109
  9873  1854  3478               	retlw	120
  9874  1855  341C               	retlw	28
  9875  1856  3400               	retlw	0
  9876  1857  3400               	retlw	0
  9877  1858  3400               	retlw	0
  9878  1859  346E               	retlw	110
  9879  185A  3400               	retlw	0
  9880  185B  3439               	retlw	57
  9881  185C  3430               	retlw	48
  9882  185D  340F               	retlw	15
  9883  185E  3400               	retlw	0
  9884  185F  3400               	retlw	0
  9885  1860                     __end_of_charTable:	
  9886                           
  9887                           	psect	nvBANK2
  9888  015B                     __pnvBANK2:	
  9889  015B                     _ADCC_ADTI_InterruptHandler:	
  9890  015B                     	ds	2
  9891  015D                     _TMR0_InterruptHandler:	
  9892  015D                     	ds	2
  9893  015F                     _EUSART1_ErrorHandler:	
  9894  015F                     	ds	2
  9895  0161                     _EUSART1_OverrunErrorHandler:	
  9896  0161                     	ds	2
  9897  0163                     _EUSART1_FramingErrorHandler:	
  9898  0163                     	ds	2
  9899  0165                     _EUSART1_RxDefaultInterruptHandler:	
  9900  0165                     	ds	2
  9901  0014                     _TRISCbits	set	20
  9902  0012                     _TRISAbits	set	18
  9903  000B                     _INTCONbits	set	11
  9904  0014                     _TRISC	set	20
  9905  0013                     _TRISB	set	19
  9906  0012                     _TRISA	set	18
  9907  001A                     _LATC	set	26
  9908  0019                     _LATB	set	25
  9909  0018                     _LATA	set	24
  9910  000C                     _PORTA	set	12
  9911  000E                     _PORTC	set	14
  9912  00D5                     _LATC5	set	213
  9913  0090                     _ADERRL	set	144
  9914  0091                     _ADERRH	set	145
  9915  009B                     _ADPREVL	set	155
  9916  009C                     _ADPREVH	set	156
  9917  0094                     _ADFLTRL	set	148
  9918  0095                     _ADFLTRH	set	149
  9919  0096                     _ADACCL	set	150
  9920  0097                     _ADACCH	set	151
  9921  0099                     _ADCNT	set	153
  9922  009D                     _ADRESL	set	157
  9923  009E                     _ADRESH	set	158
  9924  009F                     _ADPCH	set	159
  9925  009A                     _ADRPT	set	154
  9926  0098                     _ADACCU	set	152
  9927  0093                     _ADSTPTH	set	147
  9928  0092                     _ADSTPTL	set	146
  9929  008F                     _ADUTHH	set	143
  9930  008E                     _ADUTHL	set	142
  9931  008D                     _ADLTHH	set	141
  9932  008C                     _ADLTHL	set	140
  9933  0112                     _ADCON1bits	set	274
  9934  0115                     _ADSTATbits	set	277
  9935  0113                     _ADCON2bits	set	275
  9936  0114                     _ADCON3bits	set	276
  9937  0111                     _ADCON0bits	set	273
  9938  0111                     _ADCON0	set	273
  9939  0118                     _ADCLK	set	280
  9940  0117                     _ADACT	set	279
  9941  0116                     _ADREF	set	278
  9942  0115                     _ADSTAT	set	277
  9943  0114                     _ADCON3	set	276
  9944  0113                     _ADCON2	set	275
  9945  0112                     _ADCON1	set	274
  9946  0110                     _ADPREH	set	272
  9947  010F                     _ADPREL	set	271
  9948  010E                     _ADCAP	set	270
  9949  010D                     _ADACQH	set	269
  9950  010C                     _ADACQL	set	268
  9951  0119                     _RC1REG	set	281
  9952  011D                     _RC1STAbits	set	285
  9953  011A                     _TX1REG	set	282
  9954  011E                     _TX1STAbits	set	286
  9955  011C                     _SP1BRGH	set	284
  9956  011B                     _SP1BRGL	set	283
  9957  011E                     _TX1STA	set	286
  9958  011D                     _RC1STA	set	285
  9959  011F                     _BAUD1CON	set	287
  9960  018C                     _SSP1BUF	set	396
  9961  0191                     _SSP1CON2bits	set	401
  9962  0190                     _SSP1CON1bits	set	400
  9963  018D                     _SSP1ADD	set	397
  9964  0192                     _SSP1CON3	set	402
  9965  0190                     _SSP1CON1	set	400
  9966  018F                     _SSP1STAT	set	399
  9967  021E                     _CCPTMRS0bits	set	542
  9968  028D                     _PR2	set	653
  9969  028C                     _TMR2	set	652
  9970  028E                     _T2CONbits	set	654
  9971  0291                     _T2RSTbits	set	657
  9972  028F                     _T2HLTbits	set	655
  9973  028E                     _T2CON	set	654
  9974  028C                     _T2TMR	set	652
  9975  028D                     _T2PR	set	653
  9976  0291                     _T2RST	set	657
  9977  028F                     _T2HLT	set	655
  9978  0290                     _T2CLKCON	set	656
  9979  0312                     _CCP2CONbits	set	786
  9980  0310                     _CCPR2L	set	784
  9981  0311                     _CCPR2H	set	785
  9982  0312                     _CCP2CON	set	786
  9983  030E                     _CCP1CONbits	set	782
  9984  030C                     _CCPR1L	set	780
  9985  030D                     _CCPR1H	set	781
  9986  030E                     _CCP1CON	set	782
  9987  031A                     _CCP4CONbits	set	794
  9988  0318                     _CCPR4L	set	792
  9989  0319                     _CCPR4H	set	793
  9990  031A                     _CCP4CON	set	794
  9991  0316                     _CCP3CONbits	set	790
  9992  0314                     _CCPR3L	set	788
  9993  0315                     _CCPR3H	set	789
  9994  0316                     _CCP3CON	set	790
  9995  059E                     _T0CON0bits	set	1438
  9996  059E                     _T0CON0	set	1438
  9997  059C                     _TMR0L	set	1436
  9998  059D                     _TMR0H	set	1437
  9999  059F                     _T0CON1	set	1439
 10000  070D                     _PIR1bits	set	1805
 10001  0717                     _PIE1bits	set	1815
 10002  070C                     _PIR0bits	set	1804
 10003  0716                     _PIE0bits	set	1814
 10004  070F                     _PIR3bits	set	1807
 10005  0719                     _PIE3bits	set	1817
 10006  0710                     _PIR4bits	set	1808
 10007  079D                     _PMD7	set	1949
 10008  079C                     _PMD6	set	1948
 10009  079B                     _PMD5	set	1947
 10010  079A                     _PMD4	set	1946
 10011  0799                     _PMD3	set	1945
 10012  0798                     _PMD2	set	1944
 10013  0797                     _PMD1	set	1943
 10014  0796                     _PMD0	set	1942
 10015  0892                     _OSCTUNE	set	2194
 10016  0893                     _OSCFRQ	set	2195
 10017  0891                     _OSCEN	set	2193
 10018  088F                     _OSCCON3	set	2191
 10019  088D                     _OSCCON1	set	2189
 10020  1ECB                     _RX1DTPPS	set	7883
 10021  1EC6                     _SSP1DATPPS	set	7878
 10022  1EC5                     _SSP1CLKPPS	set	7877
 10023  1F4F                     _WPUCbits	set	8015
 10024  1F4E                     _ANSELCbits	set	8014
 10025  1F39                     _WPUAbits	set	7993
 10026  1F38                     _ANSELAbits	set	7992
 10027  1F27                     _RC7PPS	set	7975
 10028  1F26                     _RC6PPS	set	7974
 10029  1F15                     _RA5PPS	set	7957
 10030  1F24                     _RC4PPS	set	7972
 10031  1F23                     _RC3PPS	set	7971
 10032  1F14                     _RA4PPS	set	7956
 10033  1F51                     _SLRCONC	set	8017
 10034  1F46                     _SLRCONB	set	8006
 10035  1F3B                     _SLRCONA	set	7995
 10036  1F50                     _ODCONC	set	8016
 10037  1F45                     _ODCONB	set	8005
 10038  1F3A                     _ODCONA	set	7994
 10039  1F4F                     _WPUC	set	8015
 10040  1F39                     _WPUA	set	7993
 10041  1F44                     _WPUB	set	8004
 10042  1F38                     _ANSELA	set	7992
 10043  1F43                     _ANSELB	set	8003
 10044  1F4E                     _ANSELC	set	8014
 10045                           
 10046                           	psect	stringtext2
 10047  2000                     __pstringtext2:	
 10048  2000                     STR_33:	
 10049  2000  3425               	retlw	37	;'%'
 10050  2001  3463               	retlw	99	;'c'
 10051  2002  3425               	retlw	37	;'%'
 10052  2003  3463               	retlw	99	;'c'
 10053  2004  3425               	retlw	37	;'%'
 10054  2005  3463               	retlw	99	;'c'
 10055  2006  3425               	retlw	37	;'%'
 10056  2007  3463               	retlw	99	;'c'
 10057  2008  340D               	retlw	13
 10058  2009  3400               	retlw	0
 10059                           
 10060                           	psect	stringtext3
 10061  200A                     __pstringtext3:	
 10062  200A                     STR_34:	
 10063  200A  3425               	retlw	37	;'%'
 10064  200B  3463               	retlw	99	;'c'
 10065  200C  3425               	retlw	37	;'%'
 10066  200D  3463               	retlw	99	;'c'
 10067  200E  3425               	retlw	37	;'%'
 10068  200F  3463               	retlw	99	;'c'
 10069  2010  3420               	retlw	32	;' '
 10070  2011  340D               	retlw	13
 10071  2012  3400               	retlw	0
 10072                           
 10073                           	psect	stringtext4
 10074  2013                     __pstringtext4:	
 10075  2013                     STR_32:	
 10076  2013  3420               	retlw	32	;' '
 10077  2014  3425               	retlw	37	;'%'
 10078  2015  3463               	retlw	99	;'c'
 10079  2016  3425               	retlw	37	;'%'
 10080  2017  3463               	retlw	99	;'c'
 10081  2018  3425               	retlw	37	;'%'
 10082  2019  3463               	retlw	99	;'c'
 10083  201A  340D               	retlw	13
 10084  201B  3400               	retlw	0
 10085                           
 10086                           	psect	stringtext5
 10087  201C                     __pstringtext5:	
 10088  201C                     STR_29:	
 10089  201C  3448               	retlw	72	;'H'
 10090  201D  3445               	retlw	69	;'E'
 10091  201E  3459               	retlw	89	;'Y'
 10092  201F  3459               	retlw	89	;'Y'
 10093  2020  3459               	retlw	89	;'Y'
 10094  2021  3459               	retlw	89	;'Y'
 10095  2022  3459               	retlw	89	;'Y'
 10096  2023  3459               	retlw	89	;'Y'
 10097  2024  3400               	retlw	0
 10098                           
 10099                           	psect	stringtext6
 10100  2025                     __pstringtext6:	
 10101  2025                     STR_35:	
 10102  2025  3425               	retlw	37	;'%'
 10103  2026  3463               	retlw	99	;'c'
 10104  2027  3425               	retlw	37	;'%'
 10105  2028  3463               	retlw	99	;'c'
 10106  2029  3420               	retlw	32	;' '
 10107  202A  3420               	retlw	32	;' '
 10108  202B  340D               	retlw	13
 10109  202C  3400               	retlw	0
 10110                           
 10111                           	psect	stringtext7
 10112  202D                     __pstringtext7:	
 10113  202D                     STR_31:	
 10114  202D  3420               	retlw	32	;' '
 10115  202E  3420               	retlw	32	;' '
 10116  202F  3425               	retlw	37	;'%'
 10117  2030  3463               	retlw	99	;'c'
 10118  2031  3425               	retlw	37	;'%'
 10119  2032  3463               	retlw	99	;'c'
 10120  2033  340D               	retlw	13
 10121  2034  3400               	retlw	0
 10122                           
 10123                           	psect	stringtext8
 10124  2035                     __pstringtext8:	
 10125  2035                     STR_36:	
 10126  2035  3425               	retlw	37	;'%'
 10127  2036  3463               	retlw	99	;'c'
 10128  2037  3420               	retlw	32	;' '
 10129  2038  3420               	retlw	32	;' '
 10130  2039  3420               	retlw	32	;' '
 10131  203A  340D               	retlw	13
 10132  203B  3400               	retlw	0
 10133                           
 10134                           	psect	stringtext9
 10135  203C                     __pstringtext9:	
 10136  203C                     STR_30:	
 10137  203C  3420               	retlw	32	;' '
 10138  203D  3420               	retlw	32	;' '
 10139  203E  3420               	retlw	32	;' '
 10140  203F  3425               	retlw	37	;'%'
 10141  2040  3463               	retlw	99	;'c'
 10142  2041  340D               	retlw	13
 10143  2042  3400               	retlw	0
 10144                           
 10145                           	psect	stringtext10
 10146  2043                     __pstringtext10:	
 10147  2043                     STR_37:	
 10148  2043  3420               	retlw	32	;' '
 10149  2044  3420               	retlw	32	;' '
 10150  2045  3420               	retlw	32	;' '
 10151  2046  3420               	retlw	32	;' '
 10152  2047  340D               	retlw	13
 10153  2048  3400               	retlw	0
 10154                           
 10155                           	psect	stringtext11
 10156  2049                     __pstringtext11:	
 10157  2049                     STR_25:	
 10158  2049  3450               	retlw	80	;'P'
 10159  204A  3443               	retlw	67	;'C'
 10160  204B  3420               	retlw	32	;' '
 10161  204C  3420               	retlw	32	;' '
 10162  204D  340D               	retlw	13
 10163  204E  3400               	retlw	0
 10164                           
 10165                           	psect	stringtext12
 10166  204F                     __pstringtext12:	
 10167  204F                     STR_26:	
 10168  204F  344C               	retlw	76	;'L'
 10169  2050  3445               	retlw	69	;'E'
 10170  2051  3444               	retlw	68	;'D'
 10171  2052  3420               	retlw	32	;' '
 10172  2053  340D               	retlw	13
 10173  2054  3400               	retlw	0
 10174                           
 10175                           	psect	stringtext13
 10176  2055                     __pstringtext13:	
 10177  2055                     STR_22:	
 10178  2055  3441               	retlw	65	;'A'
 10179  2056  344E               	retlw	78	;'N'
 10180  2057  3449               	retlw	73	;'I'
 10181  2058  3420               	retlw	32	;' '
 10182  2059  340D               	retlw	13
 10183  205A  3400               	retlw	0
 10184                           
 10185                           	psect	stringtext14
 10186  205B                     __pstringtext14:	
 10187  205B                     STR_1:	
 10188  205B  3448               	retlw	72	;'H'
 10189  205C  344F               	retlw	79	;'O'
 10190  205D  344C               	retlw	76	;'L'
 10191  205E  3444               	retlw	68	;'D'
 10192  205F  340D               	retlw	13
 10193  2060  3400               	retlw	0
 10194                           
 10195                           	psect	stringtext15
 10196  2061                     __pstringtext15:	
 10197  2061                     STR_23:	
 10198  2061  3442               	retlw	66	;'B'
 10199  2062  3445               	retlw	69	;'E'
 10200  2063  3441               	retlw	65	;'A'
 10201  2064  3454               	retlw	84	;'T'
 10202  2065  340D               	retlw	13
 10203  2066  3400               	retlw	0
 10204                           
 10205                           	psect	stringtext16
 10206  2067                     __pstringtext16:	
 10207  2067                     STR_27:	
 10208  2067  3420               	retlw	32	;' '
 10209  2068  3420               	retlw	32	;' '
 10210  2069  3420               	retlw	32	;' '
 10211  206A  3420               	retlw	32	;' '
 10212  206B  3400               	retlw	0
 10213                           
 10214                           	psect	stringtext17
 10215  206C                     __pstringtext17:	
 10216  206C                     STR_12:	
 10217  206C  3441               	retlw	65	;'A'
 10218  206D  342D               	retlw	45	;'-'
 10219  206E  3400               	retlw	0
 10220                           
 10221                           	psect	stringtext18
 10222  206F                     __pstringtext18:	
 10223  206F                     STR_6:	
 10224  206F  3442               	retlw	66	;'B'
 10225  2070  342D               	retlw	45	;'-'
 10226  2071  3400               	retlw	0
 10227                           
 10228                           	psect	stringtext19
 10229  2072                     __pstringtext19:	
 10230  2072                     STR_10:	
 10231  2072  3443               	retlw	67	;'C'
 10232  2073  342D               	retlw	45	;'-'
 10233  2074  3400               	retlw	0
 10234                           
 10235                           	psect	stringtext20
 10236  2075                     __pstringtext20:	
 10237  2075                     STR_8:	
 10238  2075  3446               	retlw	70	;'F'
 10239  2076  342D               	retlw	45	;'-'
 10240  2077  3400               	retlw	0
 10241                           
 10242                           	psect	stringtext21
 10243  2078                     __pstringtext21:	
 10244  2078                     STR_4:	
 10245  2078  3441               	retlw	65	;'A'
 10246  2079  344E               	retlw	78	;'N'
 10247  207A  3400               	retlw	0
 10248                           
 10249                           	psect	stringtext22
 10250  207B                     __pstringtext22:	
 10251  207B                     STR_2:	
 10252  207B  3442               	retlw	66	;'B'
 10253  207C  3452               	retlw	82	;'R'
 10254  207D  3400               	retlw	0
 10255                           
 10256                           	psect	stringtext23
 10257  207E                     __pstringtext23:	
 10258  207E                     STR_18:	
 10259  207E  3442               	retlw	66	;'B'
 10260  207F  3400               	retlw	0
 10261                           
 10262                           	psect	stringtext24
 10263  2080                     __pstringtext24:	
 10264  2080                     STR_16:	
 10265  2080  3447               	retlw	71	;'G'
 10266  2081  3400               	retlw	0
 10267                           
 10268                           	psect	stringtext25
 10269  2082                     __pstringtext25:	
 10270  2082                     STR_20:	
 10271  2082  3448               	retlw	72	;'H'
 10272  2083  3400               	retlw	0
 10273                           
 10274                           	psect	stringtext26
 10275  2084                     __pstringtext26:	
 10276  2084                     STR_14:	
 10277  2084  3472               	retlw	114	;'r'
 10278  2085  3400               	retlw	0
 10279                           
 10280                           	psect	stringtext27
 10281  0000                     __pstringtext27:	
 10282  2047                     
 10283                           ; #config settings
 10284  0000                     
 10285                           	psect	cinit
 10286  0032                     start_initialization:	
 10287  0032                     __initialization:		;BIGRAM
 10288                           
 10289                           ; Initialize objects allocated to COMMON
 10290  0032  3180  2002  3180   	fcall	__pidataCOMMON	;fetch initializer
 10291  0035  00FC               	movwf	__pdataCOMMON& (0+127)
 10292  0036  3180  2003  3180   	fcall	__pidataCOMMON+1	;fetch initializer
 10293  0039  00FD               	movwf	(__pdataCOMMON+1)& (0+127)
 10294                           
 10295                           ; Initialize objects allocated to BANK1
 10296  003A  30F9               	movlw	low __pidataBANK1
 10297  003B  0084               	movwf	4
 10298  003C  3087               	movlw	(high __pidataBANK1)| (0+128)
 10299  003D  0085               	movwf	5
 10300  003E  30EA               	movlw	low __pdataBANK1
 10301  003F  0086               	movwf	6
 10302  0040  3000               	movlw	high __pdataBANK1
 10303  0041  0087               	movwf	7
 10304  0042  3000               	movlw	0
 10305  0043  00FF               	movwf	btemp+1
 10306  0044  3006               	movlw	6
 10307  0045  319C  24F3  3180   	fcall	init_ram
 10308                           
 10309                           ; Initialize objects allocated to BANK2
 10310  0048  3038               	movlw	low __pidataBANK2
 10311  0049  0084               	movwf	4
 10312  004A  309C               	movlw	(high __pidataBANK2)| (0+128)
 10313  004B  0085               	movwf	5
 10314  004C  3067               	movlw	low __pdataBANK2
 10315  004D  0086               	movwf	6
 10316  004E  3001               	movlw	high __pdataBANK2
 10317  004F  0087               	movwf	7
 10318  0050  3000               	movlw	0
 10319  0051  00FF               	movwf	btemp+1
 10320  0052  3006               	movlw	6
 10321  0053  319C  24F3  3180   	fcall	init_ram
 10322                           
 10323                           ; Clear objects allocated to BIGRAM
 10324  0056  30EE               	movlw	low (0+9198)
 10325  0057  0084               	movwf	4
 10326  0058  3023               	movlw	high (0+9198)
 10327  0059  0085               	movwf	5
 10328  005A  3002               	movlw	2
 10329  005B  00FE               	movwf	btemp
 10330  005C  3004               	movlw	4
 10331  005D  00FF               	movwf	btemp+1
 10332  005E  319C  24E7  3180   	fcall	clear_ram0
 10333                           
 10334                           ; Clear objects allocated to COMMON
 10335  0061  01F7               	clrf	__pbssCOMMON& (0+127)
 10336  0062  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
 10337  0063  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
 10338  0064  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
 10339  0065  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
 10340                           
 10341                           ; Clear objects allocated to BANK1
 10342  0066  30A0               	movlw	low __pbssBANK1
 10343  0067  0084               	movwf	4
 10344  0068  3000               	movlw	high __pbssBANK1
 10345  0069  0085               	movwf	5
 10346  006A  3025               	movlw	37
 10347  006B  00FE               	movwf	btemp
 10348  006C  3000               	movlw	0
 10349  006D  00FF               	movwf	btemp+1
 10350  006E  319C  24E7  3180   	fcall	clear_ram0
 10351                           
 10352                           ; Clear objects allocated to BANK2
 10353  0071  3020               	movlw	low __pbssBANK2
 10354  0072  0084               	movwf	4
 10355  0073  3001               	movlw	high __pbssBANK2
 10356  0074  0085               	movwf	5
 10357  0075  303B               	movlw	59
 10358  0076  00FE               	movwf	btemp
 10359  0077  3000               	movlw	0
 10360  0078  00FF               	movwf	btemp+1
 10361  0079  319C  24E7  3180   	fcall	clear_ram0
 10362                           
 10363                           ; Clear objects allocated to BANK3
 10364  007C  30A0               	movlw	low __pbssBANK3
 10365  007D  0084               	movwf	4
 10366  007E  3001               	movlw	high __pbssBANK3
 10367  007F  0085               	movwf	5
 10368  0080  3040               	movlw	64
 10369  0081  00FE               	movwf	btemp
 10370  0082  3000               	movlw	0
 10371  0083  00FF               	movwf	btemp+1
 10372  0084  319C  24E7         	fcall	clear_ram0
 10373  0086                     end_of_initialization:	
 10374                           ;End of C runtime variable initialization code
 10375                           
 10376  0086                     __end_of__initialization:	
 10377  0086  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10378  0087  0140               	movlb	0
 10379  0088  3192  2A8F         	ljmp	_main	;jump to C main() function
 10380                           
 10381                           	psect	bssCOMMON
 10382  0077                     __pbssCOMMON:	
 10383  0077                     _p_i2c1_trb_current:	
 10384  0077                     	ds	1
 10385  0078                     _eusart1RxTail:	
 10386  0078                     	ds	1
 10387  0079                     _eusart1RxHead:	
 10388  0079                     	ds	1
 10389  007A                     I2C1_ISR@i2c_address:	
 10390  007A                     	ds	2
 10391                           
 10392                           	psect	dataCOMMON
 10393  007C                     __pdataCOMMON:	
 10394  007C                     _incInterval:	
 10395  007C                     	ds	2
 10396                           
 10397                           	psect	bssBANK1
 10398  00A0                     __pbssBANK1:	
 10399  00A0                     _i2c1_object:	
 10400  00A0                     	ds	5
 10401  00A5                     _manual:	
 10402  00A5                     	ds	4
 10403  00A9                     _currentState:	
 10404  00A9                     	ds	2
 10405  00AB                     _lastIncTime:	
 10406  00AB                     	ds	2
 10407  00AD                     _thresholdExceeded:	
 10408  00AD                     	ds	1
 10409  00AE                     _detected:	
 10410  00AE                     	ds	1
 10411  00AF                     _position:	
 10412  00AF                     	ds	1
 10413  00B0                     _colorModeSelected:	
 10414  00B0                     	ds	1
 10415  00B1                     _beatHold:	
 10416  00B1                     	ds	1
 10417  00B2                     _enterState:	
 10418  00B2                     	ds	1
 10419  00B3                     _menuState:	
 10420  00B3                     	ds	1
 10421  00B4                     _downState:	
 10422  00B4                     	ds	1
 10423  00B5                     _upState:	
 10424  00B5                     	ds	1
 10425  00B6                     _enterPressed:	
 10426  00B6                     	ds	1
 10427  00B7                     _menuPressed:	
 10428  00B7                     	ds	1
 10429  00B8                     _currentSelection:	
 10430  00B8                     	ds	1
 10431  00B9                     _menuSelected:	
 10432  00B9                     	ds	1
 10433  00BA                     _enter:	
 10434  00BA                     	ds	1
 10435  00BB                     _down:	
 10436  00BB                     	ds	1
 10437  00BC                     _up:	
 10438  00BC                     	ds	1
 10439  00BD                     _menu:	
 10440  00BD                     	ds	1
 10441  00BE                     I2C1_ISR@i2c_10bit_address_restart:	
 10442  00BE                     	ds	1
 10443  00BF                     I2C1_ISR@i2c_bytes_left:	
 10444  00BF                     	ds	1
 10445  00C0                     I2C1_ISR@pi2c_buf_ptr:	
 10446  00C0                     	ds	1
 10447  00C1                     _p_i2c1_current:	
 10448  00C1                     	ds	1
 10449  00C2                     _i2c1_trb_count:	
 10450  00C2                     	ds	1
 10451  00C3                     _i2c1_state:	
 10452  00C3                     	ds	1
 10453  00C4                     _eusart1RxCount:	
 10454  00C4                     	ds	1
 10455                           
 10456                           	psect	dataBANK1
 10457  00EA                     __pdataBANK1:	
 10458  00EA                     _address:	
 10459  00EA                     	ds	2
 10460  00EC                     _animationBrightness:	
 10461  00EC                     	ds	1
 10462  00ED                     _animationModeSelected:	
 10463  00ED                     	ds	1
 10464  00EE                     _startup:	
 10465  00EE                     	ds	1
 10466  00EF                     _beatBrightness:	
 10467  00EF                     	ds	1
 10468                           
 10469                           	psect	bssBANK2
 10470  0120                     __pbssBANK2:	
 10471  0120                     _eusart1RxStatusBuffer:	
 10472  0120                     	ds	8
 10473  0128                     _eusart1RxBuffer:	
 10474  0128                     	ds	8
 10475  0130                     _nout:	
 10476  0130                     	ds	2
 10477  0132                     _width:	
 10478  0132                     	ds	2
 10479  0134                     _prec:	
 10480  0134                     	ds	2
 10481  0136                     _flags:	
 10482  0136                     	ds	2
 10483  0138                     _lastLedActiveTime:	
 10484  0138                     	ds	2
 10485  013A                     _arrayIndex:	
 10486  013A                     	ds	2
 10487  013C                     _thresholdCount:	
 10488  013C                     	ds	2
 10489  013E                     _lastRun:	
 10490  013E                     	ds	2
 10491  0140                     _bpm:	
 10492  0140                     	ds	2
 10493  0142                     _lastBeat:	
 10494  0142                     	ds	2
 10495  0144                     _lastActiveTime:	
 10496  0144                     	ds	2
 10497  0146                     _currentTime:	
 10498  0146                     	ds	2
 10499  0148                     _lastTime:	
 10500  0148                     	ds	2
 10501  014A                     _startTime:	
 10502  014A                     	ds	2
 10503  014C                     _lastDetected:	
 10504  014C                     	ds	1
 10505  014D                     _tm1650_status:	
 10506  014D                     	ds	1
 10507  014E                     _animationBrightnessControl:	
 10508  014E                     	ds	1
 10509  014F                     _eusart1RxLastError:	
 10510  014F                     	ds	1
 10511  0150                     I2C1_MasterRead@trBlock:	
 10512  0150                     	ds	4
 10513  0154                     I2C1_MasterWrite@trBlock:	
 10514  0154                     	ds	4
 10515  0158                     _i2c1_tr_queue:	
 10516  0158                     	ds	3
 10517                           
 10518                           	psect	dataBANK2
 10519  0167                     __pdataBANK2:	
 10520  0167                     _initial:	
 10521  0167                     	ds	2
 10522  0169                     _delay:	
 10523  0169                     	ds	2
 10524  016B                     _threshold:	
 10525  016B                     	ds	2
 10526                           
 10527                           	psect	bssBANK3
 10528  01A0                     __pbssBANK3:	
 10529  01A0                     _dbuf:	
 10530  01A0                     	ds	32
 10531  01C0                     _buttons:	
 10532  01C0                     	ds	32
 10533                           
 10534                           	psect	inittext
 10535  1CF3                     init_ram:	
 10536  1CF3  00FE               	movwf	126
 10537  1CF4                     initloop:	
 10538  1CF4  0012               	moviw fsr0++
 10539  1CF5  001E               	movwi fsr1++
 10540  1CF6  3001               	movlw	1
 10541  1CF7  02FE               	subwf	126,f
 10542  1CF8  3000               	movlw	0
 10543  1CF9  3BFF               	subwfb	127,f
 10544  1CFA  087F               	movf	127,w
 10545  1CFB  047E               	iorwf	126,w
 10546  1CFC  1903               	btfsc	3,2
 10547  1CFD  3400               	retlw	0
 10548  1CFE  2CF4               	goto	initloop
 10549                           
 10550                           	psect	clrtext
 10551  1CE7                     clear_ram0:	
 10552                           ;	Called with FSR0 containing the base address, and
 10553                           ;	btemp/btemp+1 has the size to clear
 10554                           
 10555  1CE7  0064               	clrwdt	;clear the watchdog before getting into this loop
 10556  1CE8                     clrloop0:	
 10557  1CE8  0180               	clrf	0	;clear RAM location pointed to by FSR
 10558  1CE9  3101               	addfsr 0,1
 10559  1CEA  3001               	movlw	1
 10560  1CEB  02FE               	subwf	126,f
 10561  1CEC  3000               	movlw	0
 10562  1CED  3BFF               	subwfb	127,f
 10563  1CEE  087F               	movf	127,w
 10564  1CEF  047E               	iorwf	126,w
 10565  1CF0  1903               	btfsc	3,2
 10566  1CF1  3400               	retlw	0	;all done for this memory range, return
 10567  1CF2  2CE8               	goto	clrloop0	;have we reached the end yet?
 10568                           
 10569                           	psect	cstackBANK3
 10570  01E0                     __pcstackBANK3:	
 10571  01E0                     LED_task_DMX@dmx:	
 10572                           
 10573                           ; 4 bytes @ 0x0
 10574  01E0                     	ds	4
 10575                           
 10576                           	psect	cstackBANK2
 10577  016D                     __pcstackBANK2:	
 10578  016D                     ??_main:	
 10579                           
 10580                           ; 1 bytes @ 0x0
 10581  016D                     	ds	2
 10582                           
 10583                           	psect	cstackBANK1
 10584  00C5                     __pcstackBANK1:	
 10585  00C5                     ?_PWM3_LoadDutyValue:	
 10586  00C5                     ?_PWM4_LoadDutyValue:	
 10587                           ; 1 bytes @ 0x0
 10588                           
 10589  00C5                     ?_PWM1_LoadDutyValue:	
 10590                           ; 1 bytes @ 0x0
 10591                           
 10592  00C5                     ?_PWM2_LoadDutyValue:	
 10593                           ; 1 bytes @ 0x0
 10594                           
 10595  00C5                     ?_printf:	
 10596                           ; 1 bytes @ 0x0
 10597                           
 10598  00C5                     ?_beatBrightnessCalculation:	
 10599                           ; 2 bytes @ 0x0
 10600                           
 10601  00C5                     PWM3_LoadDutyValue@dutyValue:	
 10602                           ; 4 bytes @ 0x0
 10603                           
 10604  00C5                     PWM4_LoadDutyValue@dutyValue:	
 10605                           ; 2 bytes @ 0x0
 10606                           
 10607  00C5                     PWM1_LoadDutyValue@dutyValue:	
 10608                           ; 2 bytes @ 0x0
 10609                           
 10610  00C5                     PWM2_LoadDutyValue@dutyValue:	
 10611                           ; 2 bytes @ 0x0
 10612                           
 10613  00C5                     printf@fmt:	
 10614                           ; 2 bytes @ 0x0
 10615                           
 10616                           
 10617                           ; 2 bytes @ 0x0
 10618  00C5                     	ds	4
 10619  00C9                     ??_beatBrightnessCalculation:	
 10620                           
 10621                           ; 1 bytes @ 0x4
 10622  00C9                     	ds	5
 10623  00CE                     ?_beatColorCreator:	
 10624  00CE                     beatColorCreator@inGreen:	
 10625                           ; 4 bytes @ 0x9
 10626                           
 10627                           
 10628                           ; 1 bytes @ 0x9
 10629  00CE                     	ds	1
 10630  00CF                     ??_menuSelection:	
 10631  00CF                     beatColorCreator@inBlue:	
 10632                           ; 1 bytes @ 0xA
 10633                           
 10634                           
 10635                           ; 1 bytes @ 0xA
 10636  00CF                     	ds	1
 10637  00D0                     beatColorCreator@inWhite:	
 10638                           
 10639                           ; 1 bytes @ 0xB
 10640  00D0                     	ds	1
 10641  00D1                     ??_CONTROLLER_task:	
 10642                           
 10643                           ; 1 bytes @ 0xC
 10644  00D1                     	ds	1
 10645  00D2                     beatColorCreator@inRed:	
 10646                           
 10647                           ; 1 bytes @ 0xD
 10648  00D2                     	ds	1
 10649  00D3                     _beatColorCreator$3606:	
 10650                           
 10651                           ; 4 bytes @ 0xE
 10652  00D3                     	ds	4
 10653  00D7                     beatColorCreator@tempColor:	
 10654                           
 10655                           ; 4 bytes @ 0x12
 10656  00D7                     	ds	4
 10657  00DB                     ?_LED_setColor:	
 10658  00DB                     LED_setColor@input:	
 10659                           ; 1 bytes @ 0x16
 10660                           
 10661                           
 10662                           ; 4 bytes @ 0x16
 10663  00DB                     	ds	4
 10664  00DF                     ??_LED_setColor:	
 10665                           
 10666                           ; 1 bytes @ 0x1A
 10667  00DF                     	ds	4
 10668  00E3                     ??_LED_task_BEAT_STROBE:	
 10669  00E3                     ??_LED_task_DMX:	
 10670                           ; 1 bytes @ 0x1E
 10671                           
 10672                           
 10673                           ; 1 bytes @ 0x1E
 10674  00E3                     	ds	5
 10675  00E8                     ??_LED_task:	
 10676                           
 10677                           ; 1 bytes @ 0x23
 10678  00E8                     	ds	2
 10679                           
 10680                           	psect	cstackCOMMON
 10681  0070                     __pcstackCOMMON:	
 10682  0070                     ?_PMD_Initialize:	
 10683  0070                     ?_PIN_MANAGER_Initialize:	
 10684                           ; 1 bytes @ 0x0
 10685                           
 10686  0070                     ?_OSCILLATOR_Initialize:	
 10687                           ; 1 bytes @ 0x0
 10688                           
 10689  0070                     ?_I2C1_Initialize:	
 10690                           ; 1 bytes @ 0x0
 10691                           
 10692  0070                     ?_PWM1_Initialize:	
 10693                           ; 1 bytes @ 0x0
 10694                           
 10695  0070                     ?_PWM2_Initialize:	
 10696                           ; 1 bytes @ 0x0
 10697                           
 10698  0070                     ?_ADCC_Initialize:	
 10699                           ; 1 bytes @ 0x0
 10700                           
 10701  0070                     ?_PWM4_Initialize:	
 10702                           ; 1 bytes @ 0x0
 10703                           
 10704  0070                     ?_PWM3_Initialize:	
 10705                           ; 1 bytes @ 0x0
 10706                           
 10707  0070                     ?_TMR2_Initialize:	
 10708                           ; 1 bytes @ 0x0
 10709                           
 10710  0070                     ?_TMR0_Initialize:	
 10711                           ; 1 bytes @ 0x0
 10712                           
 10713  0070                     ?_EUSART1_Initialize:	
 10714                           ; 1 bytes @ 0x0
 10715                           
 10716  0070                     ?_EUSART1_Receive_ISR:	
 10717                           ; 1 bytes @ 0x0
 10718                           
 10719  0070                     ?_EUSART1_DefaultFramingErrorHandler:	
 10720                           ; 1 bytes @ 0x0
 10721                           
 10722  0070                     ??_EUSART1_DefaultFramingErrorHandler:	
 10723                           ; 1 bytes @ 0x0
 10724                           
 10725  0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
 10726                           ; 1 bytes @ 0x0
 10727                           
 10728  0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
 10729                           ; 1 bytes @ 0x0
 10730                           
 10731  0070                     ?_EUSART1_DefaultErrorHandler:	
 10732                           ; 1 bytes @ 0x0
 10733                           
 10734  0070                     ?_EUSART1_RxDataHandler:	
 10735                           ; 1 bytes @ 0x0
 10736                           
 10737  0070                     ??_EUSART1_RxDataHandler:	
 10738                           ; 1 bytes @ 0x0
 10739                           
 10740  0070                     ?_TMR0_ISR:	
 10741                           ; 1 bytes @ 0x0
 10742                           
 10743  0070                     ??_TMR0_ISR:	
 10744                           ; 1 bytes @ 0x0
 10745                           
 10746  0070                     ?_I2C1_BusCollisionISR:	
 10747                           ; 1 bytes @ 0x0
 10748                           
 10749  0070                     ??_I2C1_BusCollisionISR:	
 10750                           ; 1 bytes @ 0x0
 10751                           
 10752  0070                     ?_I2C1_ISR:	
 10753                           ; 1 bytes @ 0x0
 10754                           
 10755  0070                     ?_ADCC_ThresholdISR:	
 10756                           ; 1 bytes @ 0x0
 10757                           
 10758  0070                     ??_ADCC_ThresholdISR:	
 10759                           ; 1 bytes @ 0x0
 10760                           
 10761  0070                     ?_TMR0_DefaultInterruptHandler:	
 10762                           ; 1 bytes @ 0x0
 10763                           
 10764  0070                     ??_TMR0_DefaultInterruptHandler:	
 10765                           ; 1 bytes @ 0x0
 10766                           
 10767  0070                     ?_I2C1_Stop:	
 10768                           ; 1 bytes @ 0x0
 10769                           
 10770  0070                     ??_I2C1_Stop:	
 10771                           ; 1 bytes @ 0x0
 10772                           
 10773  0070                     ?_I2C1_FunctionComplete:	
 10774                           ; 1 bytes @ 0x0
 10775                           
 10776  0070                     ??_I2C1_FunctionComplete:	
 10777                           ; 1 bytes @ 0x0
 10778                           
 10779  0070                     ?_ADCC_DefaultInterruptHandler:	
 10780                           ; 1 bytes @ 0x0
 10781                           
 10782  0070                     ??_ADCC_DefaultInterruptHandler:	
 10783                           ; 1 bytes @ 0x0
 10784                           
 10785  0070                     ?_CLOCK_init:	
 10786                           ; 1 bytes @ 0x0
 10787                           
 10788  0070                     ?_BUTTONS_init:	
 10789                           ; 1 bytes @ 0x0
 10790                           
 10791  0070                     ?_BEAT_init:	
 10792                           ; 1 bytes @ 0x0
 10793                           
 10794  0070                     ?_LED_init:	
 10795                           ; 1 bytes @ 0x0
 10796                           
 10797  0070                     ?_TM1650_init:	
 10798                           ; 1 bytes @ 0x0
 10799                           
 10800  0070                     ?_DMX_init:	
 10801                           ; 1 bytes @ 0x0
 10802                           
 10803  0070                     ?_BUTTONS_task:	
 10804                           ; 1 bytes @ 0x0
 10805                           
 10806  0070                     ?_CONTROLLER_task:	
 10807                           ; 1 bytes @ 0x0
 10808                           
 10809  0070                     ?_BEAT_task:	
 10810                           ; 1 bytes @ 0x0
 10811                           
 10812  0070                     ?_LED_task:	
 10813                           ; 1 bytes @ 0x0
 10814                           
 10815  0070                     ?_GPIO_init:	
 10816                           ; 1 bytes @ 0x0
 10817                           
 10818  0070                     ?_CLOCK_timerCallback:	
 10819                           ; 1 bytes @ 0x0
 10820                           
 10821  0070                     ??_CLOCK_timerCallback:	
 10822                           ; 1 bytes @ 0x0
 10823                           
 10824  0070                     ?_menuSelection:	
 10825                           ; 1 bytes @ 0x0
 10826                           
 10827  0070                     ?_CONTROL_DMX:	
 10828                           ; 1 bytes @ 0x0
 10829                           
 10830  0070                     ?_CONTROL_ANIMATION:	
 10831                           ; 1 bytes @ 0x0
 10832                           
 10833  0070                     ?_CONTROL_BEAT:	
 10834                           ; 1 bytes @ 0x0
 10835                           
 10836  0070                     ?_CONTROL_MANUAL:	
 10837                           ; 1 bytes @ 0x0
 10838                           
 10839  0070                     ?_TM1650_enable:	
 10840                           ; 1 bytes @ 0x0
 10841                           
 10842  0070                     ?_TM1650_fastPrintNum_2digit:	
 10843                           ; 1 bytes @ 0x0
 10844                           
 10845  0070                     ?_getManualColor:	
 10846                           ; 1 bytes @ 0x0
 10847                           
 10848  0070                     ?_address_inc:	
 10849                           ; 1 bytes @ 0x0
 10850                           
 10851  0070                     ?_address_dec:	
 10852                           ; 1 bytes @ 0x0
 10853                           
 10854  0070                     ?_colorInc:	
 10855                           ; 1 bytes @ 0x0
 10856                           
 10857  0070                     ?_colorDec:	
 10858                           ; 1 bytes @ 0x0
 10859                           
 10860  0070                     ?_DMX_interrupt:	
 10861                           ; 1 bytes @ 0x0
 10862                           
 10863  0070                     ??_DMX_interrupt:	
 10864                           ; 1 bytes @ 0x0
 10865                           
 10866  0070                     ?_LED_task_BEAT_STROBE:	
 10867                           ; 1 bytes @ 0x0
 10868                           
 10869  0070                     ?_LED_task_BEAT_FADE:	
 10870                           ; 1 bytes @ 0x0
 10871                           
 10872  0070                     ?_LED_task_BEAT_CONTINUOUS:	
 10873                           ; 1 bytes @ 0x0
 10874                           
 10875  0070                     ?_LED_task_BEAT_MIXED:	
 10876                           ; 1 bytes @ 0x0
 10877                           
 10878  0070                     ?_LED_task_ANIMATION:	
 10879                           ; 1 bytes @ 0x0
 10880                           
 10881  0070                     ?_SYSTEM_Initialize:	
 10882                           ; 1 bytes @ 0x0
 10883                           
 10884  0070                     ?_INTERRUPT_InterruptManager:	
 10885                           ; 1 bytes @ 0x0
 10886                           
 10887  0070                     ?_I2C1_WaitForLastPacketToComplete:	
 10888                           ; 1 bytes @ 0x0
 10889                           
 10890  0070                     ?_ADCC_StartConversion:	
 10891                           ; 1 bytes @ 0x0
 10892                           
 10893  0070                     ?_main:	
 10894                           ; 1 bytes @ 0x0
 10895                           
 10896  0070                     ?_BUTTONS_isClicked:	
 10897                           ; 1 bytes @ 0x0
 10898                           
 10899  0070                     ?_BUTTONS_isHeld:	
 10900                           ; 1 bytes @ 0x0
 10901                           
 10902  0070                     ?_getMode:	
 10903                           ; 1 bytes @ 0x0
 10904                           
 10905  0070                     ?_getIsHold:	
 10906                           ; 1 bytes @ 0x0
 10907                           
 10908  0070                     ?_putch:	
 10909                           ; 1 bytes @ 0x0
 10910                           
 10911  0070                     ?_adcThresholdHandler:	
 10912                           ; 1 bytes @ 0x0
 10913                           
 10914  0070                     ??_adcThresholdHandler:	
 10915                           ; 1 bytes @ 0x0
 10916                           
 10917  0070                     ?_BEAT_detected:	
 10918                           ; 1 bytes @ 0x0
 10919                           
 10920  0070                     ?_DMX_getAddress:	
 10921                           ; 1 bytes @ 0x0
 10922                           
 10923  0070                     ?_LED_task_DMX:	
 10924                           ; 1 bytes @ 0x0
 10925                           
 10926                           
 10927                           ; 1 bytes @ 0x0
 10928  0070                     	ds	1
 10929  0071                     ??_EUSART1_Receive_ISR:	
 10930  0071                     ??_EUSART1_DefaultErrorHandler:	
 10931                           ; 1 bytes @ 0x1
 10932                           
 10933  0071                     I2C1_Stop@completion_code:	
 10934                           ; 1 bytes @ 0x1
 10935                           
 10936                           
 10937                           ; 1 bytes @ 0x1
 10938  0071                     	ds	1
 10939  0072                     ??_I2C1_ISR:	
 10940                           
 10941                           ; 1 bytes @ 0x2
 10942  0072                     	ds	4
 10943  0076                     DMX_interrupt@dummy:	
 10944                           
 10945                           ; 1 bytes @ 0x6
 10946  0076                     	ds	1
 10947  0077                     ??_INTERRUPT_InterruptManager:	
 10948                           
 10949                           	psect	cstackBANK0
 10950  0020                     __pcstackBANK0:	
 10951                           ; 1 bytes @ 0x7
 10952                           
 10953  0020                     ??_PMD_Initialize:	
 10954  0020                     ??_PIN_MANAGER_Initialize:	
 10955                           ; 1 bytes @ 0x0
 10956                           
 10957  0020                     ??_OSCILLATOR_Initialize:	
 10958                           ; 1 bytes @ 0x0
 10959                           
 10960  0020                     ??_I2C1_Initialize:	
 10961                           ; 1 bytes @ 0x0
 10962                           
 10963  0020                     ??_PWM1_Initialize:	
 10964                           ; 1 bytes @ 0x0
 10965                           
 10966  0020                     ??_PWM2_Initialize:	
 10967                           ; 1 bytes @ 0x0
 10968                           
 10969  0020                     ??_PWM4_Initialize:	
 10970                           ; 1 bytes @ 0x0
 10971                           
 10972  0020                     ??_PWM3_Initialize:	
 10973                           ; 1 bytes @ 0x0
 10974                           
 10975  0020                     ??_TMR2_Initialize:	
 10976                           ; 1 bytes @ 0x0
 10977                           
 10978  0020                     ?_EUSART1_SetRxInterruptHandler:	
 10979                           ; 1 bytes @ 0x0
 10980                           
 10981  0020                     ?_EUSART1_SetFramingErrorHandler:	
 10982                           ; 1 bytes @ 0x0
 10983                           
 10984  0020                     ?_EUSART1_SetOverrunErrorHandler:	
 10985                           ; 1 bytes @ 0x0
 10986                           
 10987  0020                     ?_EUSART1_SetErrorHandler:	
 10988                           ; 1 bytes @ 0x0
 10989                           
 10990  0020                     ?_TMR0_SetInterruptHandler:	
 10991                           ; 1 bytes @ 0x0
 10992                           
 10993  0020                     ?_I2C1_MasterWriteTRBBuild:	
 10994                           ; 1 bytes @ 0x0
 10995                           
 10996  0020                     ?_I2C1_MasterTRBInsert:	
 10997                           ; 1 bytes @ 0x0
 10998                           
 10999  0020                     ?_ADCC_SetADTIInterruptHandler:	
 11000                           ; 1 bytes @ 0x0
 11001                           
 11002  0020                     ??_LED_init:	
 11003                           ; 1 bytes @ 0x0
 11004                           
 11005  0020                     ??_GPIO_init:	
 11006                           ; 1 bytes @ 0x0
 11007                           
 11008  0020                     ??_CONTROL_ANIMATION:	
 11009                           ; 1 bytes @ 0x0
 11010                           
 11011  0020                     ??_getManualColor:	
 11012                           ; 1 bytes @ 0x0
 11013                           
 11014  0020                     ??_colorInc:	
 11015                           ; 1 bytes @ 0x0
 11016                           
 11017  0020                     ??_colorDec:	
 11018                           ; 1 bytes @ 0x0
 11019                           
 11020  0020                     ??_LED_task_BEAT_FADE:	
 11021                           ; 1 bytes @ 0x0
 11022                           
 11023  0020                     ??_LED_task_BEAT_CONTINUOUS:	
 11024                           ; 1 bytes @ 0x0
 11025                           
 11026  0020                     ??_LED_task_BEAT_MIXED:	
 11027                           ; 1 bytes @ 0x0
 11028                           
 11029  0020                     ??_LED_task_ANIMATION:	
 11030                           ; 1 bytes @ 0x0
 11031                           
 11032  0020                     ??_I2C1_WaitForLastPacketToComplete:	
 11033                           ; 1 bytes @ 0x0
 11034                           
 11035  0020                     ??_ADCC_StartConversion:	
 11036                           ; 1 bytes @ 0x0
 11037                           
 11038  0020                     ?_ADCC_SetUpperThreshold:	
 11039                           ; 1 bytes @ 0x0
 11040                           
 11041  0020                     ?_init:	
 11042                           ; 1 bytes @ 0x0
 11043                           
 11044  0020                     ??_BUTTONS_isClicked:	
 11045                           ; 1 bytes @ 0x0
 11046                           
 11047  0020                     ??_BUTTONS_isHeld:	
 11048                           ; 1 bytes @ 0x0
 11049                           
 11050  0020                     ??_getMode:	
 11051                           ; 1 bytes @ 0x0
 11052                           
 11053  0020                     ??_getIsHold:	
 11054                           ; 1 bytes @ 0x0
 11055                           
 11056  0020                     ??_BEAT_detected:	
 11057                           ; 1 bytes @ 0x0
 11058                           
 11059  0020                     ??_DMX_getAddress:	
 11060                           ; 1 bytes @ 0x0
 11061                           
 11062  0020                     ?_CLOCK_getTime:	
 11063                           ; 1 bytes @ 0x0
 11064                           
 11065  0020                     ?_strlen:	
 11066                           ; 2 bytes @ 0x0
 11067                           
 11068  0020                     ?__Umul8_16:	
 11069                           ; 2 bytes @ 0x0
 11070                           
 11071  0020                     ?___awdiv:	
 11072                           ; 2 bytes @ 0x0
 11073                           
 11074  0020                     ?___lwdiv:	
 11075                           ; 2 bytes @ 0x0
 11076                           
 11077  0020                     ?___xxtofl:	
 11078                           ; 2 bytes @ 0x0
 11079                           
 11080  0020                     I2C1_MasterTRBInsert@ptrb_list:	
 11081                           ; 4 bytes @ 0x0
 11082                           
 11083  0020                     I2C1_MasterWriteTRBBuild@pdata:	
 11084                           ; 1 bytes @ 0x0
 11085                           
 11086  0020                     ADCC_StartConversion@channel:	
 11087                           ; 1 bytes @ 0x0
 11088                           
 11089  0020                     BUTTONS_isClicked@button:	
 11090                           ; 1 bytes @ 0x0
 11091                           
 11092  0020                     BUTTONS_isHeld@button:	
 11093                           ; 1 bytes @ 0x0
 11094                           
 11095  0020                     __Umul8_16@multiplicand:	
 11096                           ; 1 bytes @ 0x0
 11097                           
 11098  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11099                           ; 1 bytes @ 0x0
 11100                           
 11101  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11102                           ; 2 bytes @ 0x0
 11103                           
 11104  0020                     EUSART1_SetErrorHandler@interruptHandler:	
 11105                           ; 2 bytes @ 0x0
 11106                           
 11107  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11108                           ; 2 bytes @ 0x0
 11109                           
 11110  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
 11111                           ; 2 bytes @ 0x0
 11112                           
 11113  0020                     ADCC_SetUpperThreshold@upperThreshold:	
 11114                           ; 2 bytes @ 0x0
 11115                           
 11116  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
 11117                           ; 2 bytes @ 0x0
 11118                           
 11119  0020                     init@port:	
 11120                           ; 2 bytes @ 0x0
 11121                           
 11122  0020                     ___awdiv@divisor:	
 11123                           ; 2 bytes @ 0x0
 11124                           
 11125  0020                     ___lwdiv@divisor:	
 11126                           ; 2 bytes @ 0x0
 11127                           
 11128  0020                     strlen@s:	
 11129                           ; 2 bytes @ 0x0
 11130                           
 11131  0020                     ___xxtofl@val:	
 11132                           ; 2 bytes @ 0x0
 11133                           
 11134                           
 11135                           ; 4 bytes @ 0x0
 11136  0020                     	ds	1
 11137  0021                     ??_CONTROL_BEAT:	
 11138  0021                     I2C1_MasterTRBInsert@pflag:	
 11139                           ; 1 bytes @ 0x1
 11140                           
 11141  0021                     I2C1_MasterWriteTRBBuild@length:	
 11142                           ; 1 bytes @ 0x1
 11143                           
 11144                           
 11145                           ; 1 bytes @ 0x1
 11146  0021                     	ds	1
 11147  0022                     ??_ADCC_Initialize:	
 11148  0022                     ??_TMR0_Initialize:	
 11149                           ; 1 bytes @ 0x2
 11150                           
 11151  0022                     ??_EUSART1_Initialize:	
 11152                           ; 1 bytes @ 0x2
 11153                           
 11154  0022                     ??_EUSART1_SetRxInterruptHandler:	
 11155                           ; 1 bytes @ 0x2
 11156                           
 11157  0022                     ??_EUSART1_SetFramingErrorHandler:	
 11158                           ; 1 bytes @ 0x2
 11159                           
 11160  0022                     ??_EUSART1_SetOverrunErrorHandler:	
 11161                           ; 1 bytes @ 0x2
 11162                           
 11163  0022                     ??_EUSART1_SetErrorHandler:	
 11164                           ; 1 bytes @ 0x2
 11165                           
 11166  0022                     ??_TMR0_SetInterruptHandler:	
 11167                           ; 1 bytes @ 0x2
 11168                           
 11169  0022                     ??_I2C1_MasterTRBInsert:	
 11170                           ; 1 bytes @ 0x2
 11171                           
 11172  0022                     ??_ADCC_SetADTIInterruptHandler:	
 11173                           ; 1 bytes @ 0x2
 11174                           
 11175  0022                     ??_CLOCK_init:	
 11176                           ; 1 bytes @ 0x2
 11177                           
 11178  0022                     ??_BEAT_init:	
 11179                           ; 1 bytes @ 0x2
 11180                           
 11181  0022                     ??_CLOCK_getTime:	
 11182                           ; 1 bytes @ 0x2
 11183                           
 11184  0022                     ??_BUTTONS_task:	
 11185                           ; 1 bytes @ 0x2
 11186                           
 11187  0022                     ??_strlen:	
 11188                           ; 1 bytes @ 0x2
 11189                           
 11190  0022                     ??__Umul8_16:	
 11191                           ; 1 bytes @ 0x2
 11192                           
 11193  0022                     ??_SYSTEM_Initialize:	
 11194                           ; 1 bytes @ 0x2
 11195                           
 11196  0022                     ??_ADCC_SetUpperThreshold:	
 11197                           ; 1 bytes @ 0x2
 11198                           
 11199  0022                     init@pin:	
 11200                           ; 1 bytes @ 0x2
 11201                           
 11202  0022                     colorInc@input:	
 11203                           ; 1 bytes @ 0x2
 11204                           
 11205  0022                     colorDec@input:	
 11206                           ; 1 bytes @ 0x2
 11207                           
 11208  0022                     getManualColor@input:	
 11209                           ; 1 bytes @ 0x2
 11210                           
 11211  0022                     I2C1_MasterWriteTRBBuild@address:	
 11212                           ; 1 bytes @ 0x2
 11213                           
 11214  0022                     ___awdiv@dividend:	
 11215                           ; 2 bytes @ 0x2
 11216                           
 11217  0022                     ___lwdiv@dividend:	
 11218                           ; 2 bytes @ 0x2
 11219                           
 11220                           
 11221                           ; 2 bytes @ 0x2
 11222  0022                     	ds	1
 11223  0023                     ??_CONTROL_MANUAL:	
 11224  0023                     ??_init:	
 11225                           ; 1 bytes @ 0x3
 11226                           
 11227  0023                     I2C1_MasterTRBInsert@count:	
 11228                           ; 1 bytes @ 0x3
 11229                           
 11230  0023                     strlen@a:	
 11231                           ; 1 bytes @ 0x3
 11232                           
 11233                           
 11234                           ; 2 bytes @ 0x3
 11235  0023                     	ds	1
 11236  0024                     ??_I2C1_MasterWriteTRBBuild:	
 11237  0024                     ??___awdiv:	
 11238                           ; 1 bytes @ 0x4
 11239                           
 11240  0024                     ??___lwdiv:	
 11241                           ; 1 bytes @ 0x4
 11242                           
 11243  0024                     ??___xxtofl:	
 11244                           ; 1 bytes @ 0x4
 11245                           
 11246  0024                     init@btn:	
 11247                           ; 1 bytes @ 0x4
 11248                           
 11249  0024                     __Umul8_16@product:	
 11250                           ; 1 bytes @ 0x4
 11251                           
 11252                           
 11253                           ; 2 bytes @ 0x4
 11254  0024                     	ds	1
 11255  0025                     ??_BUTTONS_init:	
 11256  0025                     BUTTONS_task@i:	
 11257                           ; 1 bytes @ 0x5
 11258                           
 11259  0025                     CONTROL_MANUAL@input:	
 11260                           ; 1 bytes @ 0x5
 11261                           
 11262  0025                     ___awdiv@counter:	
 11263                           ; 1 bytes @ 0x5
 11264                           
 11265  0025                     ___lwdiv@quotient:	
 11266                           ; 1 bytes @ 0x5
 11267                           
 11268                           
 11269                           ; 2 bytes @ 0x5
 11270  0025                     	ds	1
 11271  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
 11272  0026                     ___awdiv@sign:	
 11273                           ; 1 bytes @ 0x6
 11274                           
 11275  0026                     BUTTONS_task@time:	
 11276                           ; 1 bytes @ 0x6
 11277                           
 11278  0026                     __Umul8_16@word_mpld:	
 11279                           ; 2 bytes @ 0x6
 11280                           
 11281                           
 11282                           ; 2 bytes @ 0x6
 11283  0026                     	ds	1
 11284  0027                     ?_I2C1_MasterWrite:	
 11285  0027                     I2C1_MasterWrite@length:	
 11286                           ; 1 bytes @ 0x7
 11287                           
 11288  0027                     ___lwdiv@counter:	
 11289                           ; 1 bytes @ 0x7
 11290                           
 11291  0027                     ___awdiv@quotient:	
 11292                           ; 1 bytes @ 0x7
 11293                           
 11294                           
 11295                           ; 2 bytes @ 0x7
 11296  0027                     	ds	1
 11297  0028                     ??_BEAT_task:	
 11298  0028                     ?___lwmod:	
 11299                           ; 1 bytes @ 0x8
 11300                           
 11301  0028                     BUTTONS_task@btn:	
 11302                           ; 2 bytes @ 0x8
 11303                           
 11304  0028                     ___xxtofl@sign:	
 11305                           ; 1 bytes @ 0x8
 11306                           
 11307  0028                     __Umul8_16@multiplier:	
 11308                           ; 1 bytes @ 0x8
 11309                           
 11310  0028                     I2C1_MasterWrite@address:	
 11311                           ; 1 bytes @ 0x8
 11312                           
 11313  0028                     ___lwmod@divisor:	
 11314                           ; 2 bytes @ 0x8
 11315                           
 11316                           
 11317                           ; 2 bytes @ 0x8
 11318  0028                     	ds	1
 11319  0029                     ?___awmod:	
 11320  0029                     ___xxtofl@exp:	
 11321                           ; 2 bytes @ 0x9
 11322                           
 11323  0029                     ___awmod@divisor:	
 11324                           ; 1 bytes @ 0x9
 11325                           
 11326                           
 11327                           ; 2 bytes @ 0x9
 11328  0029                     	ds	1
 11329  002A                     I2C1_MasterWrite@pflag:	
 11330  002A                     BEAT_task@offset:	
 11331                           ; 1 bytes @ 0xA
 11332                           
 11333  002A                     ___lwmod@dividend:	
 11334                           ; 2 bytes @ 0xA
 11335                           
 11336  002A                     ___xxtofl@arg:	
 11337                           ; 2 bytes @ 0xA
 11338                           
 11339                           
 11340                           ; 4 bytes @ 0xA
 11341  002A                     	ds	1
 11342  002B                     ??_I2C1_MasterWrite:	
 11343  002B                     ___awmod@dividend:	
 11344                           ; 1 bytes @ 0xB
 11345                           
 11346                           
 11347                           ; 2 bytes @ 0xB
 11348  002B                     	ds	1
 11349  002C                     ??___lwmod:	
 11350                           
 11351                           ; 1 bytes @ 0xC
 11352  002C                     	ds	1
 11353  002D                     ??___awmod:	
 11354  002D                     I2C1_MasterWrite@pdata:	
 11355                           ; 1 bytes @ 0xD
 11356                           
 11357  002D                     ___lwmod@counter:	
 11358                           ; 1 bytes @ 0xD
 11359                           
 11360                           
 11361                           ; 1 bytes @ 0xD
 11362  002D                     	ds	1
 11363  002E                     ?___fldiv:	
 11364  002E                     ___awmod@counter:	
 11365                           ; 4 bytes @ 0xE
 11366                           
 11367  002E                     ___fldiv@a:	
 11368                           ; 1 bytes @ 0xE
 11369                           
 11370                           
 11371                           ; 4 bytes @ 0xE
 11372  002E                     	ds	1
 11373  002F                     ___awmod@sign:	
 11374                           
 11375                           ; 1 bytes @ 0xF
 11376  002F                     	ds	1
 11377  0030                     ?_writeData:	
 11378  0030                     writeData@data:	
 11379                           ; 1 bytes @ 0x10
 11380                           
 11381                           
 11382                           ; 1 bytes @ 0x10
 11383  0030                     	ds	1
 11384  0031                     ??_writeData:	
 11385                           
 11386                           ; 1 bytes @ 0x11
 11387  0031                     	ds	1
 11388  0032                     ___fldiv@b:	
 11389                           
 11390                           ; 4 bytes @ 0x12
 11391  0032                     	ds	2
 11392  0034                     writeData@address:	
 11393                           
 11394                           ; 1 bytes @ 0x14
 11395  0034                     	ds	1
 11396  0035                     writeData@status:	
 11397                           
 11398                           ; 1 bytes @ 0x15
 11399  0035                     	ds	1
 11400  0036                     ??_TM1650_enable:	
 11401  0036                     ?_TM1650_fastPrintNum:	
 11402                           ; 1 bytes @ 0x16
 11403                           
 11404  0036                     ??_TM1650_fastPrintNum_2digit:	
 11405                           ; 1 bytes @ 0x16
 11406                           
 11407  0036                     ?_TM1650_fastPrintNum_3digit:	
 11408                           ; 1 bytes @ 0x16
 11409                           
 11410  0036                     ?_TM1650_setDigit:	
 11411                           ; 1 bytes @ 0x16
 11412                           
 11413  0036                     ??___fldiv:	
 11414                           ; 1 bytes @ 0x16
 11415                           
 11416  0036                     TM1650_enable@enable:	
 11417                           ; 1 bytes @ 0x16
 11418                           
 11419  0036                     TM1650_setDigit@data:	
 11420                           ; 1 bytes @ 0x16
 11421                           
 11422  0036                     TM1650_fastPrintNum@num:	
 11423                           ; 1 bytes @ 0x16
 11424                           
 11425  0036                     TM1650_fastPrintNum_3digit@num:	
 11426                           ; 2 bytes @ 0x16
 11427                           
 11428                           
 11429                           ; 2 bytes @ 0x16
 11430  0036                     	ds	1
 11431  0037                     ??_TM1650_setDigit:	
 11432                           
 11433                           ; 1 bytes @ 0x17
 11434  0037                     	ds	1
 11435  0038                     ??_TM1650_fastPrintNum:	
 11436  0038                     ??_TM1650_fastPrintNum_3digit:	
 11437                           ; 1 bytes @ 0x18
 11438                           
 11439  0038                     TM1650_setDigit@digit:	
 11440                           ; 1 bytes @ 0x18
 11441                           
 11442                           
 11443                           ; 1 bytes @ 0x18
 11444  0038                     	ds	1
 11445  0039                     ??_DMX_init:	
 11446  0039                     ??_CONTROL_DMX:	
 11447                           ; 1 bytes @ 0x19
 11448                           
 11449  0039                     ??_address_inc:	
 11450                           ; 1 bytes @ 0x19
 11451                           
 11452  0039                     ??_address_dec:	
 11453                           ; 1 bytes @ 0x19
 11454                           
 11455  0039                     ??_putch:	
 11456                           ; 1 bytes @ 0x19
 11457                           
 11458  0039                     TM1650_fastPrintNum_2digit@num:	
 11459                           ; 1 bytes @ 0x19
 11460                           
 11461                           
 11462                           ; 1 bytes @ 0x19
 11463  0039                     	ds	1
 11464  003A                     putch@n:	
 11465                           
 11466                           ; 1 bytes @ 0x1A
 11467  003A                     	ds	1
 11468  003B                     ?_fputc:	
 11469  003B                     fputc@c:	
 11470                           ; 2 bytes @ 0x1B
 11471                           
 11472  003B                     ___fldiv@rem:	
 11473                           ; 2 bytes @ 0x1B
 11474                           
 11475                           
 11476                           ; 4 bytes @ 0x1B
 11477  003B                     	ds	2
 11478  003D                     fputc@fp:	
 11479                           
 11480                           ; 1 bytes @ 0x1D
 11481  003D                     	ds	1
 11482  003E                     ??_fputc:	
 11483                           
 11484                           ; 1 bytes @ 0x1E
 11485  003E                     	ds	1
 11486  003F                     ___fldiv@sign:	
 11487                           
 11488                           ; 1 bytes @ 0x1F
 11489  003F                     	ds	1
 11490  0040                     ___fldiv@new_exp:	
 11491                           
 11492                           ; 2 bytes @ 0x20
 11493  0040                     	ds	2
 11494  0042                     ___fldiv@grs:	
 11495                           
 11496                           ; 4 bytes @ 0x22
 11497  0042                     	ds	1
 11498  0043                     ?_fputs:	
 11499  0043                     fputs@fp:	
 11500                           ; 2 bytes @ 0x23
 11501                           
 11502                           
 11503                           ; 1 bytes @ 0x23
 11504  0043                     	ds	1
 11505  0044                     ??_fputs:	
 11506                           
 11507                           ; 1 bytes @ 0x24
 11508  0044                     	ds	2
 11509  0046                     ___fldiv@bexp:	
 11510                           
 11511                           ; 1 bytes @ 0x26
 11512  0046                     	ds	1
 11513  0047                     ___fldiv@aexp:	
 11514  0047                     fputs@c:	
 11515                           ; 1 bytes @ 0x27
 11516                           
 11517                           
 11518                           ; 1 bytes @ 0x27
 11519  0047                     	ds	1
 11520  0048                     ?___flmul:	
 11521  0048                     fputs@i:	
 11522                           ; 4 bytes @ 0x28
 11523                           
 11524  0048                     ___flmul@b:	
 11525                           ; 2 bytes @ 0x28
 11526                           
 11527                           
 11528                           ; 4 bytes @ 0x28
 11529  0048                     	ds	2
 11530  004A                     fputs@s:	
 11531                           
 11532                           ; 1 bytes @ 0x2A
 11533  004A                     	ds	1
 11534  004B                     ?_pad:	
 11535  004B                     pad@buf:	
 11536                           ; 2 bytes @ 0x2B
 11537                           
 11538                           
 11539                           ; 1 bytes @ 0x2B
 11540  004B                     	ds	1
 11541  004C                     pad@p:	
 11542  004C                     ___flmul@a:	
 11543                           ; 2 bytes @ 0x2C
 11544                           
 11545                           
 11546                           ; 4 bytes @ 0x2C
 11547  004C                     	ds	2
 11548  004E                     ??_pad:	
 11549                           
 11550                           ; 1 bytes @ 0x2E
 11551  004E                     	ds	1
 11552  004F                     pad@i:	
 11553                           
 11554                           ; 2 bytes @ 0x2F
 11555  004F                     	ds	1
 11556  0050                     ??___flmul:	
 11557                           
 11558                           ; 1 bytes @ 0x30
 11559  0050                     	ds	1
 11560  0051                     pad@w:	
 11561                           
 11562                           ; 2 bytes @ 0x31
 11563  0051                     	ds	2
 11564  0053                     pad@fp:	
 11565                           
 11566                           ; 1 bytes @ 0x33
 11567  0053                     	ds	1
 11568  0054                     ?_ctoa:	
 11569  0054                     ctoa@c:	
 11570                           ; 2 bytes @ 0x34
 11571                           
 11572                           
 11573                           ; 1 bytes @ 0x34
 11574  0054                     	ds	1
 11575  0055                     ___flmul@sign:	
 11576                           
 11577                           ; 1 bytes @ 0x35
 11578  0055                     	ds	1
 11579  0056                     ??_ctoa:	
 11580  0056                     ___flmul@aexp:	
 11581                           ; 1 bytes @ 0x36
 11582                           
 11583                           
 11584                           ; 1 bytes @ 0x36
 11585  0056                     	ds	1
 11586  0057                     ctoa@w:	
 11587  0057                     ___flmul@grs:	
 11588                           ; 2 bytes @ 0x37
 11589                           
 11590                           
 11591                           ; 4 bytes @ 0x37
 11592  0057                     	ds	2
 11593  0059                     ctoa@fp:	
 11594                           
 11595                           ; 1 bytes @ 0x39
 11596  0059                     	ds	1
 11597  005A                     ?_vfpfcnvrt:	
 11598  005A                     vfpfcnvrt@fmt:	
 11599                           ; 2 bytes @ 0x3A
 11600                           
 11601                           
 11602                           ; 1 bytes @ 0x3A
 11603  005A                     	ds	1
 11604  005B                     vfpfcnvrt@ap:	
 11605  005B                     ___flmul@bexp:	
 11606                           ; 1 bytes @ 0x3B
 11607                           
 11608                           
 11609                           ; 1 bytes @ 0x3B
 11610  005B                     	ds	1
 11611  005C                     ??_vfpfcnvrt:	
 11612  005C                     ___flmul@prod:	
 11613                           ; 1 bytes @ 0x3C
 11614                           
 11615                           
 11616                           ; 4 bytes @ 0x3C
 11617  005C                     	ds	4
 11618  0060                     ___flmul@temp:	
 11619                           
 11620                           ; 2 bytes @ 0x40
 11621  0060                     	ds	1
 11622  0061                     vfpfcnvrt@c:	
 11623                           
 11624                           ; 1 bytes @ 0x41
 11625  0061                     	ds	1
 11626  0062                     ?___fltol:	
 11627  0062                     vfpfcnvrt@fp:	
 11628                           ; 4 bytes @ 0x42
 11629                           
 11630  0062                     ___fltol@f1:	
 11631                           ; 1 bytes @ 0x42
 11632                           
 11633                           
 11634                           ; 4 bytes @ 0x42
 11635  0062                     	ds	1
 11636  0063                     ?_vfprintf:	
 11637  0063                     vfprintf@fmt:	
 11638                           ; 2 bytes @ 0x43
 11639                           
 11640                           
 11641                           ; 2 bytes @ 0x43
 11642  0063                     	ds	2
 11643  0065                     vfprintf@ap:	
 11644                           
 11645                           ; 1 bytes @ 0x45
 11646  0065                     	ds	1
 11647  0066                     ??_vfprintf:	
 11648  0066                     ??___fltol:	
 11649                           ; 1 bytes @ 0x46
 11650                           
 11651                           
 11652                           ; 1 bytes @ 0x46
 11653  0066                     	ds	2
 11654  0068                     vfprintf@fp:	
 11655                           
 11656                           ; 1 bytes @ 0x48
 11657  0068                     	ds	1
 11658  0069                     vfprintf@cfmt:	
 11659                           
 11660                           ; 2 bytes @ 0x49
 11661  0069                     	ds	2
 11662  006B                     ??_printf:	
 11663  006B                     ___fltol@sign1:	
 11664                           ; 1 bytes @ 0x4B
 11665                           
 11666                           
 11667                           ; 1 bytes @ 0x4B
 11668  006B                     	ds	1
 11669  006C                     ___fltol@exp1:	
 11670                           
 11671                           ; 1 bytes @ 0x4C
 11672  006C                     	ds	1
 11673  006D                     ??_PWM3_LoadDutyValue:	
 11674  006D                     ??_PWM4_LoadDutyValue:	
 11675                           ; 1 bytes @ 0x4D
 11676                           
 11677  006D                     ??_PWM1_LoadDutyValue:	
 11678                           ; 1 bytes @ 0x4D
 11679                           
 11680  006D                     ??_PWM2_LoadDutyValue:	
 11681                           ; 1 bytes @ 0x4D
 11682                           
 11683  006D                     beatBrightnessCalculation@temp:	
 11684                           ; 1 bytes @ 0x4D
 11685                           
 11686                           
 11687                           ; 1 bytes @ 0x4D
 11688  006D                     	ds	1
 11689  006E                     ??_beatColorCreator:	
 11690  006E                     printf@ap:	
 11691                           ; 1 bytes @ 0x4E
 11692                           
 11693                           
 11694                           ; 1 bytes @ 0x4E
 11695  006E                     	ds	1
 11696  006F                     ??_TM1650_init:	
 11697  006F                     CONTROLLER_task@isActive:	
 11698                           ; 1 bytes @ 0x4F
 11699                           
 11700  006F                     LED_task_BEAT_STROBE@beatState:	
 11701                           ; 1 bytes @ 0x4F
 11702                           
 11703                           
 11704                           ; 1 bytes @ 0x4F
 11705  006F                     	ds	1
 11706                           
 11707                           	psect	maintext
 11708  128F                     __pmaintext:	
 11709 ;;
 11710 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 11711 ;;
 11712 ;; *************** function _main *****************
 11713 ;; Defined at:
 11714 ;;		line 58 in file "main.c"
 11715 ;; Parameters:    Size  Location     Type
 11716 ;;		None
 11717 ;; Auto vars:     Size  Location     Type
 11718 ;;		None
 11719 ;; Return value:  Size  Location     Type
 11720 ;;                  1    wreg      void 
 11721 ;; Registers used:
 11722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11723 ;; Tracked objects:
 11724 ;;		On entry : B3F/0
 11725 ;;		On exit  : 0/0
 11726 ;;		Unchanged: 0/0
 11727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11730 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11731 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11732 ;;Total ram usage:        2 bytes
 11733 ;; Hardware stack levels required when called:   19
 11734 ;; This function calls:
 11735 ;;		_BEAT_init
 11736 ;;		_BEAT_task
 11737 ;;		_BUTTONS_init
 11738 ;;		_BUTTONS_task
 11739 ;;		_CLOCK_getTime
 11740 ;;		_CLOCK_init
 11741 ;;		_CONTROLLER_task
 11742 ;;		_DMX_init
 11743 ;;		_LED_init
 11744 ;;		_LED_task
 11745 ;;		_SYSTEM_Initialize
 11746 ;;		_TM1650_init
 11747 ;; This function is called by:
 11748 ;;		Startup code after reset
 11749 ;; This function uses a non-reentrant model
 11750 ;;
 11751                           
 11752                           
 11753                           ;psect for function _main
 11754  128F                     _main:	
 11755                           
 11756                           ;main.c: 61:     SYSTEM_Initialize();
 11757                           
 11758                           ;incstack = 0
 11759 ;; hardware stack exceeded
 11760                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11761  128F  319F  2790  3192   	fcall	_SYSTEM_Initialize
 11762                           
 11763                           ;main.c: 62:     _delay((unsigned long)((500)*(32000000/4000.0)));
 11764  1292  3015               	movlw	21
 11765  1293  0142               	movlb	2	; select bank2
 11766  1294  00EE               	movwf	(??_main^(0+256)+1)
 11767  1295  304B               	movlw	75
 11768  1296  00ED               	movwf	??_main^(0+256)
 11769  1297  30BE               	movlw	190
 11770  1298                     u9797:	
 11771  1298  0B89               	decfsz	9,f
 11772  1299  2A98               	goto	u9797
 11773  129A  0BED               	decfsz	??_main^(0+256),f
 11774  129B  2A98               	goto	u9797
 11775  129C  0BEE               	decfsz	(??_main^(0+256)+1),f
 11776  129D  2A98               	goto	u9797
 11777  129E  0000               	nop
 11778                           
 11779                           ;main.c: 63:     CLOCK_init();
 11780  129F  319C  243E  3192   	fcall	_CLOCK_init
 11781                           
 11782                           ;main.c: 64:     BUTTONS_init();
 11783  12A2  3193  2357  3192   	fcall	_BUTTONS_init
 11784                           
 11785                           ;main.c: 65:     BEAT_init();
 11786  12A5  319D  25E3  3192   	fcall	_BEAT_init
 11787                           
 11788                           ;main.c: 66:     LED_init();
 11789  12A8  319C  2446  3192   	fcall	_LED_init
 11790                           
 11791                           ;main.c: 68:     (INTCONbits.GIE = 1);
 11792  12AB  178B               	bsf	11,7	;volatile
 11793                           
 11794                           ;main.c: 69:     (INTCONbits.PEIE = 1);
 11795  12AC  170B               	bsf	11,6	;volatile
 11796                           
 11797                           ;main.c: 71:     TM1650_init();
 11798  12AD  319D  25A5  3192   	fcall	_TM1650_init
 11799                           
 11800                           ;main.c: 72:     DMX_init();
 11801  12B0  319D  256A  3192   	fcall	_DMX_init
 11802                           
 11803                           ;main.c: 73:     startTime = CLOCK_getTime();
 11804  12B3  319C  2469  3192   	fcall	_CLOCK_getTime
 11805  12B6  0140               	movlb	0	; select bank0
 11806  12B7  0821               	movf	?_CLOCK_getTime+1,w
 11807  12B8  0142               	movlb	2	; select bank2
 11808  12B9  00CB               	movwf	(_startTime+1)^(0+256)
 11809  12BA  0140               	movlb	0	; select bank0
 11810  12BB  0820               	movf	?_CLOCK_getTime,w
 11811  12BC  0142               	movlb	2	; select bank2
 11812  12BD  00CA               	movwf	_startTime^(0+256)
 11813  12BE                     l9210:	
 11814                           
 11815                           ;main.c: 78:     {;main.c: 79:         BUTTONS_task();
 11816  12BE  318D  25C0  3192   	fcall	_BUTTONS_task
 11817                           
 11818                           ;main.c: 80:         CONTROLLER_task();
 11819  12C1  3182  22B6  3192   	fcall	_CONTROLLER_task
 11820                           
 11821                           ;main.c: 81:         BEAT_task();
 11822  12C4  318C  240C  3192   	fcall	_BEAT_task
 11823                           
 11824                           ;main.c: 82:         LED_task();
 11825  12C7  318B  2349  3192   	fcall	_LED_task
 11826  12CA  2ABE               	goto	l9210
 11827  12CB                     __end_of_main:	
 11828                           
 11829                           	psect	text1
 11830  1DA5                     __ptext1:	
 11831 ;; *************** function _TM1650_init *****************
 11832 ;; Defined at:
 11833 ;;		line 51 in file "tm1650.c"
 11834 ;; Parameters:    Size  Location     Type
 11835 ;;		None
 11836 ;; Auto vars:     Size  Location     Type
 11837 ;;		None
 11838 ;; Return value:  Size  Location     Type
 11839 ;;                  1    wreg      void 
 11840 ;; Registers used:
 11841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11842 ;; Tracked objects:
 11843 ;;		On entry : 0/0
 11844 ;;		On exit  : 0/0
 11845 ;;		Unchanged: 0/0
 11846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11851 ;;Total ram usage:        0 bytes
 11852 ;; Hardware stack levels used:    1
 11853 ;; Hardware stack levels required when called:   17
 11854 ;; This function calls:
 11855 ;;		_TM1650_enable
 11856 ;;		_printf
 11857 ;; This function is called by:
 11858 ;;		_main
 11859 ;; This function uses a non-reentrant model
 11860 ;;
 11861                           
 11862                           
 11863                           ;psect for function _TM1650_init
 11864  1DA5                     _TM1650_init:	
 11865                           
 11866                           ;tm1650.c: 53:     TM1650_enable(1);
 11867                           
 11868                           ;incstack = 0
 11869 ;; hardware stack exceeded
 11870                           ; Regs used in _TM1650_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11871  1DA5  3001               	movlw	1
 11872  1DA6  319D  25B9  319D   	fcall	_TM1650_enable
 11873                           
 11874                           ;tm1650.c: 54:     printf("    ");
 11875  1DA9  3067               	movlw	low (STR_27| (0+32768))
 11876  1DAA  0141               	movlb	1	; select bank1
 11877  1DAB  00C5               	movwf	printf@fmt^(0+128)
 11878  1DAC  30A0               	movlw	high (STR_27| (0+32768))
 11879  1DAD  00C6               	movwf	(printf@fmt^(0+128)+1)
 11880  1DAE  319D  25CE  319D   	fcall	_printf
 11881                           
 11882                           ;tm1650.c: 55:     printf("\r");
 11883  1DB1  3047               	movlw	low ((STR_37+4)| (0+32768))
 11884  1DB2  0141               	movlb	1	; select bank1
 11885  1DB3  00C5               	movwf	printf@fmt^(0+128)
 11886  1DB4  30A0               	movlw	high ((STR_37+4)| (0+32768))
 11887  1DB5  00C6               	movwf	(printf@fmt^(0+128)+1)
 11888  1DB6  319D  25CE         	fcall	_printf
 11889  1DB8  0008               	return
 11890  1DB9                     __end_of_TM1650_init:	
 11891                           
 11892                           	psect	text2
 11893  1F90                     __ptext2:	
 11894 ;; *************** function _SYSTEM_Initialize *****************
 11895 ;; Defined at:
 11896 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11897 ;; Parameters:    Size  Location     Type
 11898 ;;		None
 11899 ;; Auto vars:     Size  Location     Type
 11900 ;;		None
 11901 ;; Return value:  Size  Location     Type
 11902 ;;                  1    wreg      void 
 11903 ;; Registers used:
 11904 ;;		wreg, status,2, status,0, pclath, cstack
 11905 ;; Tracked objects:
 11906 ;;		On entry : 0/0
 11907 ;;		On exit  : 0/0
 11908 ;;		Unchanged: 0/0
 11909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11914 ;;Total ram usage:        0 bytes
 11915 ;; Hardware stack levels used:    1
 11916 ;; Hardware stack levels required when called:    6
 11917 ;; This function calls:
 11918 ;;		_ADCC_Initialize
 11919 ;;		_EUSART1_Initialize
 11920 ;;		_I2C1_Initialize
 11921 ;;		_OSCILLATOR_Initialize
 11922 ;;		_PIN_MANAGER_Initialize
 11923 ;;		_PMD_Initialize
 11924 ;;		_PWM1_Initialize
 11925 ;;		_PWM2_Initialize
 11926 ;;		_PWM3_Initialize
 11927 ;;		_PWM4_Initialize
 11928 ;;		_TMR0_Initialize
 11929 ;;		_TMR2_Initialize
 11930 ;; This function is called by:
 11931 ;;		_main
 11932 ;; This function uses a non-reentrant model
 11933 ;;
 11934                           
 11935                           
 11936                           ;psect for function _SYSTEM_Initialize
 11937  1F90                     _SYSTEM_Initialize:	
 11938                           
 11939                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 11940                           
 11941                           ;incstack = 0
 11942                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11943  1F90  319C  24B1  319F   	fcall	_PMD_Initialize
 11944                           
 11945                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 11946  1F93  3191  2152  319F   	fcall	_PIN_MANAGER_Initialize
 11947                           
 11948                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 11949  1F96  319C  24A8  319F   	fcall	_OSCILLATOR_Initialize
 11950                           
 11951                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
 11952  1F99  319E  2675  319F   	fcall	_I2C1_Initialize
 11953                           
 11954                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
 11955  1F9C  319C  24BB  319F   	fcall	_PWM1_Initialize
 11956                           
 11957                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
 11958  1F9F  319C  24C6  319F   	fcall	_PWM2_Initialize
 11959                           
 11960                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 11961  1FA2  3190  201D  319F   	fcall	_ADCC_Initialize
 11962                           
 11963                           ;mcc_generated_files/mcc.c: 59:     PWM4_Initialize();
 11964  1FA5  319C  24DC  319F   	fcall	_PWM4_Initialize
 11965                           
 11966                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
 11967  1FA8  319C  24D1  319F   	fcall	_PWM3_Initialize
 11968                           
 11969                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 11970  1FAB  319D  2519  319F   	fcall	_TMR2_Initialize
 11971                           
 11972                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 11973  1FAE  319D  2591  319F   	fcall	_TMR0_Initialize
 11974                           
 11975                           ;mcc_generated_files/mcc.c: 63:     EUSART1_Initialize();
 11976  1FB1  3191  21B9         	fcall	_EUSART1_Initialize
 11977  1FB3  0008               	return
 11978  1FB4                     __end_of_SYSTEM_Initialize:	
 11979                           
 11980                           	psect	text3
 11981  1D19                     __ptext3:	
 11982 ;; *************** function _TMR2_Initialize *****************
 11983 ;; Defined at:
 11984 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 11985 ;; Parameters:    Size  Location     Type
 11986 ;;		None
 11987 ;; Auto vars:     Size  Location     Type
 11988 ;;		None
 11989 ;; Return value:  Size  Location     Type
 11990 ;;                  1    wreg      void 
 11991 ;; Registers used:
 11992 ;;		wreg, status,2
 11993 ;; Tracked objects:
 11994 ;;		On entry : 0/0
 11995 ;;		On exit  : 0/0
 11996 ;;		Unchanged: 0/0
 11997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12002 ;;Total ram usage:        0 bytes
 12003 ;; Hardware stack levels used:    1
 12004 ;; Hardware stack levels required when called:    4
 12005 ;; This function calls:
 12006 ;;		Nothing
 12007 ;; This function is called by:
 12008 ;;		_SYSTEM_Initialize
 12009 ;; This function uses a non-reentrant model
 12010 ;;
 12011                           
 12012                           
 12013                           ;psect for function _TMR2_Initialize
 12014  1D19                     _TMR2_Initialize:	
 12015                           
 12016                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 12017                           
 12018                           ;incstack = 0
 12019                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 12020  1D19  3001               	movlw	1
 12021  1D1A  0145               	movlb	5	; select bank5
 12022  1D1B  0090               	movwf	16	;volatile
 12023                           
 12024                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 12025  1D1C  018F               	clrf	15	;volatile
 12026                           
 12027                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 12028  1D1D  0191               	clrf	17	;volatile
 12029                           
 12030                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 12031  1D1E  30FF               	movlw	255
 12032  1D1F  008D               	movwf	13	;volatile
 12033                           
 12034                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 12035  1D20  018C               	clrf	12	;volatile
 12036                           
 12037                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 12038  1D21  014E               	movlb	14	; select bank14
 12039  1D22  1090               	bcf	16,1	;volatile
 12040                           
 12041                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xF0;
 12042  1D23  30F0               	movlw	240
 12043  1D24  0145               	movlb	5	; select bank5
 12044  1D25  008E               	movwf	14	;volatile
 12045  1D26  0008               	return
 12046  1D27                     __end_of_TMR2_Initialize:	
 12047                           
 12048                           	psect	text4
 12049  1D91                     __ptext4:	
 12050 ;; *************** function _TMR0_Initialize *****************
 12051 ;; Defined at:
 12052 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 12053 ;; Parameters:    Size  Location     Type
 12054 ;;		None
 12055 ;; Auto vars:     Size  Location     Type
 12056 ;;		None
 12057 ;; Return value:  Size  Location     Type
 12058 ;;                  1    wreg      void 
 12059 ;; Registers used:
 12060 ;;		wreg, status,2, status,0, pclath, cstack
 12061 ;; Tracked objects:
 12062 ;;		On entry : 0/0
 12063 ;;		On exit  : 0/0
 12064 ;;		Unchanged: 0/0
 12065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12070 ;;Total ram usage:        0 bytes
 12071 ;; Hardware stack levels used:    1
 12072 ;; Hardware stack levels required when called:    5
 12073 ;; This function calls:
 12074 ;;		_TMR0_SetInterruptHandler
 12075 ;; This function is called by:
 12076 ;;		_SYSTEM_Initialize
 12077 ;; This function uses a non-reentrant model
 12078 ;;
 12079                           
 12080                           
 12081                           ;psect for function _TMR0_Initialize
 12082  1D91                     _TMR0_Initialize:	
 12083                           
 12084                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
 12085                           
 12086                           ;incstack = 0
 12087                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12088  1D91  3045               	movlw	69
 12089  1D92  014B               	movlb	11	; select bank11
 12090  1D93  009F               	movwf	31	;volatile
 12091                           
 12092                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
 12093  1D94  30F9               	movlw	249
 12094  1D95  009D               	movwf	29	;volatile
 12095                           
 12096                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 12097  1D96  019C               	clrf	28	;volatile
 12098                           
 12099                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 12100  1D97  014E               	movlb	14	; select bank14
 12101  1D98  128C               	bcf	12,5	;volatile
 12102                           
 12103                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 12104  1D99  1696               	bsf	22,5	;volatile
 12105                           
 12106                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 12107  1D9A  3017               	movlw	low _TMR0_DefaultInterruptHandler
 12108  1D9B  0140               	movlb	0	; select bank0
 12109  1D9C  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12110  1D9D  301C               	movlw	high _TMR0_DefaultInterruptHandler
 12111  1D9E  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12112  1D9F  319C  2472         	fcall	_TMR0_SetInterruptHandler
 12113                           
 12114                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 12115  1DA1  3080               	movlw	128
 12116  1DA2  014B               	movlb	11	; select bank11
 12117  1DA3  009E               	movwf	30	;volatile
 12118  1DA4  0008               	return
 12119  1DA5                     __end_of_TMR0_Initialize:	
 12120                           
 12121                           	psect	text5
 12122  1CDC                     __ptext5:	
 12123 ;; *************** function _PWM4_Initialize *****************
 12124 ;; Defined at:
 12125 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 12126 ;; Parameters:    Size  Location     Type
 12127 ;;		None
 12128 ;; Auto vars:     Size  Location     Type
 12129 ;;		None
 12130 ;; Return value:  Size  Location     Type
 12131 ;;                  1    wreg      void 
 12132 ;; Registers used:
 12133 ;;		wreg, status,2, status,0
 12134 ;; Tracked objects:
 12135 ;;		On entry : 0/0
 12136 ;;		On exit  : 0/0
 12137 ;;		Unchanged: 0/0
 12138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12143 ;;Total ram usage:        0 bytes
 12144 ;; Hardware stack levels used:    1
 12145 ;; Hardware stack levels required when called:    4
 12146 ;; This function calls:
 12147 ;;		Nothing
 12148 ;; This function is called by:
 12149 ;;		_SYSTEM_Initialize
 12150 ;; This function uses a non-reentrant model
 12151 ;;
 12152                           
 12153                           
 12154                           ;psect for function _PWM4_Initialize
 12155  1CDC                     _PWM4_Initialize:	
 12156                           
 12157                           ;mcc_generated_files/pwm4.c: 69:  CCP4CON = 0x8C;
 12158                           
 12159                           ;incstack = 0
 12160                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 12161  1CDC  308C               	movlw	140
 12162  1CDD  0146               	movlb	6	; select bank6
 12163  1CDE  009A               	movwf	26	;volatile
 12164                           
 12165                           ;mcc_generated_files/pwm4.c: 72:  CCPR4H = 0x00;
 12166  1CDF  0199               	clrf	25	;volatile
 12167                           
 12168                           ;mcc_generated_files/pwm4.c: 75:  CCPR4L = 0x00;
 12169  1CE0  0198               	clrf	24	;volatile
 12170                           
 12171                           ;mcc_generated_files/pwm4.c: 78:  CCPTMRS0bits.C4TSEL = 0x1;
 12172  1CE1  0144               	movlb	4	; select bank4
 12173  1CE2  081E               	movf	30,w	;volatile
 12174  1CE3  393F               	andlw	-193
 12175  1CE4  3840               	iorlw	64
 12176  1CE5  009E               	movwf	30	;volatile
 12177  1CE6  0008               	return
 12178  1CE7                     __end_of_PWM4_Initialize:	
 12179                           
 12180                           	psect	text6
 12181  1CD1                     __ptext6:	
 12182 ;; *************** function _PWM3_Initialize *****************
 12183 ;; Defined at:
 12184 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 12185 ;; Parameters:    Size  Location     Type
 12186 ;;		None
 12187 ;; Auto vars:     Size  Location     Type
 12188 ;;		None
 12189 ;; Return value:  Size  Location     Type
 12190 ;;                  1    wreg      void 
 12191 ;; Registers used:
 12192 ;;		wreg, status,2, status,0
 12193 ;; Tracked objects:
 12194 ;;		On entry : 0/0
 12195 ;;		On exit  : 0/0
 12196 ;;		Unchanged: 0/0
 12197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12202 ;;Total ram usage:        0 bytes
 12203 ;; Hardware stack levels used:    1
 12204 ;; Hardware stack levels required when called:    4
 12205 ;; This function calls:
 12206 ;;		Nothing
 12207 ;; This function is called by:
 12208 ;;		_SYSTEM_Initialize
 12209 ;; This function uses a non-reentrant model
 12210 ;;
 12211                           
 12212                           
 12213                           ;psect for function _PWM3_Initialize
 12214  1CD1                     _PWM3_Initialize:	
 12215                           
 12216                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x8C;
 12217                           
 12218                           ;incstack = 0
 12219                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 12220  1CD1  308C               	movlw	140
 12221  1CD2  0146               	movlb	6	; select bank6
 12222  1CD3  0096               	movwf	22	;volatile
 12223                           
 12224                           ;mcc_generated_files/pwm3.c: 72:  CCPR3H = 0x00;
 12225  1CD4  0195               	clrf	21	;volatile
 12226                           
 12227                           ;mcc_generated_files/pwm3.c: 75:  CCPR3L = 0x00;
 12228  1CD5  0194               	clrf	20	;volatile
 12229                           
 12230                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x1;
 12231  1CD6  0144               	movlb	4	; select bank4
 12232  1CD7  081E               	movf	30,w	;volatile
 12233  1CD8  39CF               	andlw	-49
 12234  1CD9  3810               	iorlw	16
 12235  1CDA  009E               	movwf	30	;volatile
 12236  1CDB  0008               	return
 12237  1CDC                     __end_of_PWM3_Initialize:	
 12238                           
 12239                           	psect	text7
 12240  1CC6                     __ptext7:	
 12241 ;; *************** function _PWM2_Initialize *****************
 12242 ;; Defined at:
 12243 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 12244 ;; Parameters:    Size  Location     Type
 12245 ;;		None
 12246 ;; Auto vars:     Size  Location     Type
 12247 ;;		None
 12248 ;; Return value:  Size  Location     Type
 12249 ;;                  1    wreg      void 
 12250 ;; Registers used:
 12251 ;;		wreg, status,2, status,0
 12252 ;; Tracked objects:
 12253 ;;		On entry : 0/0
 12254 ;;		On exit  : 0/0
 12255 ;;		Unchanged: 0/0
 12256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12261 ;;Total ram usage:        0 bytes
 12262 ;; Hardware stack levels used:    1
 12263 ;; Hardware stack levels required when called:    4
 12264 ;; This function calls:
 12265 ;;		Nothing
 12266 ;; This function is called by:
 12267 ;;		_SYSTEM_Initialize
 12268 ;; This function uses a non-reentrant model
 12269 ;;
 12270                           
 12271                           
 12272                           ;psect for function _PWM2_Initialize
 12273  1CC6                     _PWM2_Initialize:	
 12274                           
 12275                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8C;
 12276                           
 12277                           ;incstack = 0
 12278                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 12279  1CC6  308C               	movlw	140
 12280  1CC7  0146               	movlb	6	; select bank6
 12281  1CC8  0092               	movwf	18	;volatile
 12282                           
 12283                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x00;
 12284  1CC9  0191               	clrf	17	;volatile
 12285                           
 12286                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0x00;
 12287  1CCA  0190               	clrf	16	;volatile
 12288                           
 12289                           ;mcc_generated_files/pwm2.c: 78:  CCPTMRS0bits.C2TSEL = 0x1;
 12290  1CCB  0144               	movlb	4	; select bank4
 12291  1CCC  081E               	movf	30,w	;volatile
 12292  1CCD  39F3               	andlw	-13
 12293  1CCE  3804               	iorlw	4
 12294  1CCF  009E               	movwf	30	;volatile
 12295  1CD0  0008               	return
 12296  1CD1                     __end_of_PWM2_Initialize:	
 12297                           
 12298                           	psect	text8
 12299  1CBB                     __ptext8:	
 12300 ;; *************** function _PWM1_Initialize *****************
 12301 ;; Defined at:
 12302 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 12303 ;; Parameters:    Size  Location     Type
 12304 ;;		None
 12305 ;; Auto vars:     Size  Location     Type
 12306 ;;		None
 12307 ;; Return value:  Size  Location     Type
 12308 ;;                  1    wreg      void 
 12309 ;; Registers used:
 12310 ;;		wreg, status,2, status,0
 12311 ;; Tracked objects:
 12312 ;;		On entry : 0/0
 12313 ;;		On exit  : 0/0
 12314 ;;		Unchanged: 0/0
 12315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12320 ;;Total ram usage:        0 bytes
 12321 ;; Hardware stack levels used:    1
 12322 ;; Hardware stack levels required when called:    4
 12323 ;; This function calls:
 12324 ;;		Nothing
 12325 ;; This function is called by:
 12326 ;;		_SYSTEM_Initialize
 12327 ;; This function uses a non-reentrant model
 12328 ;;
 12329                           
 12330                           
 12331                           ;psect for function _PWM1_Initialize
 12332  1CBB                     _PWM1_Initialize:	
 12333                           
 12334                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
 12335                           
 12336                           ;incstack = 0
 12337                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 12338  1CBB  308C               	movlw	140
 12339  1CBC  0146               	movlb	6	; select bank6
 12340  1CBD  008E               	movwf	14	;volatile
 12341                           
 12342                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x00;
 12343  1CBE  018D               	clrf	13	;volatile
 12344                           
 12345                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x00;
 12346  1CBF  018C               	clrf	12	;volatile
 12347                           
 12348                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRS0bits.C1TSEL = 0x1;
 12349  1CC0  0144               	movlb	4	; select bank4
 12350  1CC1  081E               	movf	30,w	;volatile
 12351  1CC2  39FC               	andlw	-4
 12352  1CC3  3801               	iorlw	1
 12353  1CC4  009E               	movwf	30	;volatile
 12354  1CC5  0008               	return
 12355  1CC6                     __end_of_PWM1_Initialize:	
 12356                           
 12357                           	psect	text9
 12358  1CB1                     __ptext9:	
 12359 ;; *************** function _PMD_Initialize *****************
 12360 ;; Defined at:
 12361 ;;		line 80 in file "mcc_generated_files/mcc.c"
 12362 ;; Parameters:    Size  Location     Type
 12363 ;;		None
 12364 ;; Auto vars:     Size  Location     Type
 12365 ;;		None
 12366 ;; Return value:  Size  Location     Type
 12367 ;;                  1    wreg      void 
 12368 ;; Registers used:
 12369 ;;		status,2
 12370 ;; Tracked objects:
 12371 ;;		On entry : 0/0
 12372 ;;		On exit  : 0/0
 12373 ;;		Unchanged: 0/0
 12374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12379 ;;Total ram usage:        0 bytes
 12380 ;; Hardware stack levels used:    1
 12381 ;; Hardware stack levels required when called:    4
 12382 ;; This function calls:
 12383 ;;		Nothing
 12384 ;; This function is called by:
 12385 ;;		_SYSTEM_Initialize
 12386 ;; This function uses a non-reentrant model
 12387 ;;
 12388                           
 12389                           
 12390                           ;psect for function _PMD_Initialize
 12391  1CB1                     _PMD_Initialize:	
 12392                           
 12393                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
 12394                           
 12395                           ;incstack = 0
 12396                           ; Regs used in _PMD_Initialize: [status,2]
 12397  1CB1  014F               	movlb	15	; select bank15
 12398  1CB2  0196               	clrf	22	;volatile
 12399                           
 12400                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
 12401  1CB3  0197               	clrf	23	;volatile
 12402                           
 12403                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
 12404  1CB4  0198               	clrf	24	;volatile
 12405                           
 12406                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
 12407  1CB5  0199               	clrf	25	;volatile
 12408                           
 12409                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
 12410  1CB6  019A               	clrf	26	;volatile
 12411                           
 12412                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
 12413  1CB7  019B               	clrf	27	;volatile
 12414                           
 12415                           ;mcc_generated_files/mcc.c: 95:     PMD6 = 0x00;
 12416  1CB8  019C               	clrf	28	;volatile
 12417                           
 12418                           ;mcc_generated_files/mcc.c: 97:     PMD7 = 0x00;
 12419  1CB9  019D               	clrf	29	;volatile
 12420  1CBA  0008               	return
 12421  1CBB                     __end_of_PMD_Initialize:	
 12422                           
 12423                           	psect	text10
 12424  1152                     __ptext10:	
 12425 ;; *************** function _PIN_MANAGER_Initialize *****************
 12426 ;; Defined at:
 12427 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12428 ;; Parameters:    Size  Location     Type
 12429 ;;		None
 12430 ;; Auto vars:     Size  Location     Type
 12431 ;;		None
 12432 ;; Return value:  Size  Location     Type
 12433 ;;                  1    wreg      void 
 12434 ;; Registers used:
 12435 ;;		wreg, status,2
 12436 ;; Tracked objects:
 12437 ;;		On entry : 0/0
 12438 ;;		On exit  : 0/0
 12439 ;;		Unchanged: 0/0
 12440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12445 ;;Total ram usage:        0 bytes
 12446 ;; Hardware stack levels used:    1
 12447 ;; Hardware stack levels required when called:    4
 12448 ;; This function calls:
 12449 ;;		Nothing
 12450 ;; This function is called by:
 12451 ;;		_SYSTEM_Initialize
 12452 ;; This function uses a non-reentrant model
 12453 ;;
 12454                           
 12455                           
 12456                           ;psect for function _PIN_MANAGER_Initialize
 12457  1152                     _PIN_MANAGER_Initialize:	
 12458                           
 12459                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12460                           
 12461                           ;incstack = 0
 12462                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12463  1152  0140               	movlb	0	; select bank0
 12464  1153  0198               	clrf	24	;volatile
 12465                           
 12466                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 12467  1154  0199               	clrf	25	;volatile
 12468                           
 12469                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12470  1155  019A               	clrf	26	;volatile
 12471                           
 12472                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
 12473  1156  303F               	movlw	63
 12474  1157  0092               	movwf	18	;volatile
 12475                           
 12476                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
 12477  1158  30F0               	movlw	240
 12478  1159  0093               	movwf	19	;volatile
 12479                           
 12480                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x26;
 12481  115A  3026               	movlw	38
 12482  115B  0094               	movwf	20	;volatile
 12483                           
 12484                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
 12485  115C  30FF               	movlw	255
 12486  115D  017E               	movlb	62	; select bank62
 12487  115E  00CE               	movwf	78	;volatile
 12488                           
 12489                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
 12490  115F  30E0               	movlw	224
 12491  1160  00C3               	movwf	67	;volatile
 12492                           
 12493                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
 12494  1161  3007               	movlw	7
 12495  1162  00B8               	movwf	56	;volatile
 12496                           
 12497                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 12498  1163  01C4               	clrf	68	;volatile
 12499                           
 12500                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 12501  1164  01B9               	clrf	57	;volatile
 12502                           
 12503                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 12504  1165  01CF               	clrf	79	;volatile
 12505                           
 12506                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 12507  1166  01BA               	clrf	58	;volatile
 12508                           
 12509                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 12510  1167  01C5               	clrf	69	;volatile
 12511                           
 12512                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 12513  1168  01D0               	clrf	80	;volatile
 12514                           
 12515                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 12516  1169  3037               	movlw	55
 12517  116A  00BB               	movwf	59	;volatile
 12518                           
 12519                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 12520  116B  30F0               	movlw	240
 12521  116C  00C6               	movwf	70	;volatile
 12522                           
 12523                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 12524  116D  30FF               	movlw	255
 12525  116E  00D1               	movwf	81	;volatile
 12526                           
 12527                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
 12528  116F  3005               	movlw	5
 12529  1170  017D               	movlb	61	; select bank61
 12530  1171  00C5               	movwf	69	;volatile
 12531                           
 12532                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
 12533  1172  3014               	movlw	20
 12534  1173  017E               	movlb	62	; select bank62
 12535  1174  0094               	movwf	20	;volatile
 12536                           
 12537                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x0B;
 12538  1175  300B               	movlw	11
 12539  1176  00A3               	movwf	35	;volatile
 12540                           
 12541                           ;mcc_generated_files/pin_manager.c: 109:     RC4PPS = 0x0C;
 12542  1177  300C               	movlw	12
 12543  1178  00A4               	movwf	36	;volatile
 12544                           
 12545                           ;mcc_generated_files/pin_manager.c: 110:     RA5PPS = 0x13;
 12546  1179  3013               	movlw	19
 12547  117A  0095               	movwf	21	;volatile
 12548                           
 12549                           ;mcc_generated_files/pin_manager.c: 111:     RC6PPS = 0x0A;
 12550  117B  300A               	movlw	10
 12551  117C  00A6               	movwf	38	;volatile
 12552                           
 12553                           ;mcc_generated_files/pin_manager.c: 112:     RC7PPS = 0x09;
 12554  117D  3009               	movlw	9
 12555  117E  00A7               	movwf	39	;volatile
 12556                           
 12557                           ;mcc_generated_files/pin_manager.c: 113:     SSP1DATPPS = 0x04;
 12558  117F  3004               	movlw	4
 12559  1180  017D               	movlb	61	; select bank61
 12560  1181  00C6               	movwf	70	;volatile
 12561                           
 12562                           ;mcc_generated_files/pin_manager.c: 114:     RX1DTPPS = 0x0C;
 12563  1182  300C               	movlw	12
 12564  1183  00CB               	movwf	75	;volatile
 12565  1184  0008               	return
 12566  1185                     __end_of_PIN_MANAGER_Initialize:	
 12567                           
 12568                           	psect	text11
 12569  1CA8                     __ptext11:	
 12570 ;; *************** function _OSCILLATOR_Initialize *****************
 12571 ;; Defined at:
 12572 ;;		line 66 in file "mcc_generated_files/mcc.c"
 12573 ;; Parameters:    Size  Location     Type
 12574 ;;		None
 12575 ;; Auto vars:     Size  Location     Type
 12576 ;;		None
 12577 ;; Return value:  Size  Location     Type
 12578 ;;                  1    wreg      void 
 12579 ;; Registers used:
 12580 ;;		wreg, status,2
 12581 ;; Tracked objects:
 12582 ;;		On entry : 0/0
 12583 ;;		On exit  : 0/0
 12584 ;;		Unchanged: 0/0
 12585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12590 ;;Total ram usage:        0 bytes
 12591 ;; Hardware stack levels used:    1
 12592 ;; Hardware stack levels required when called:    4
 12593 ;; This function calls:
 12594 ;;		Nothing
 12595 ;; This function is called by:
 12596 ;;		_SYSTEM_Initialize
 12597 ;; This function uses a non-reentrant model
 12598 ;;
 12599                           
 12600                           
 12601                           ;psect for function _OSCILLATOR_Initialize
 12602  1CA8                     _OSCILLATOR_Initialize:	
 12603                           
 12604                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x60;
 12605                           
 12606                           ;incstack = 0
 12607                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12608  1CA8  3060               	movlw	96
 12609  1CA9  0151               	movlb	17	; select bank17
 12610  1CAA  008D               	movwf	13	;volatile
 12611                           
 12612                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
 12613  1CAB  018F               	clrf	15	;volatile
 12614                           
 12615                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
 12616  1CAC  0191               	clrf	17	;volatile
 12617                           
 12618                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x06;
 12619  1CAD  3006               	movlw	6
 12620  1CAE  0093               	movwf	19	;volatile
 12621                           
 12622                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
 12623  1CAF  0192               	clrf	18	;volatile
 12624  1CB0  0008               	return
 12625  1CB1                     __end_of_OSCILLATOR_Initialize:	
 12626                           
 12627                           	psect	text12
 12628  1E75                     __ptext12:	
 12629 ;; *************** function _I2C1_Initialize *****************
 12630 ;; Defined at:
 12631 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 12632 ;; Parameters:    Size  Location     Type
 12633 ;;		None
 12634 ;; Auto vars:     Size  Location     Type
 12635 ;;		None
 12636 ;; Return value:  Size  Location     Type
 12637 ;;                  1    wreg      void 
 12638 ;; Registers used:
 12639 ;;		wreg, status,2
 12640 ;; Tracked objects:
 12641 ;;		On entry : 0/0
 12642 ;;		On exit  : 0/0
 12643 ;;		Unchanged: 0/0
 12644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12647 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12648 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12649 ;;Total ram usage:        1 bytes
 12650 ;; Hardware stack levels used:    1
 12651 ;; Hardware stack levels required when called:    4
 12652 ;; This function calls:
 12653 ;;		Nothing
 12654 ;; This function is called by:
 12655 ;;		_SYSTEM_Initialize
 12656 ;; This function uses a non-reentrant model
 12657 ;;
 12658                           
 12659                           
 12660                           ;psect for function _I2C1_Initialize
 12661  1E75                     _I2C1_Initialize:	
 12662                           
 12663                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
 12664                           
 12665                           ;incstack = 0
 12666                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12667  1E75  3058               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 12668  1E76  0140               	movlb	0	; select bank0
 12669  1E77  00A0               	movwf	??_I2C1_Initialize
 12670  1E78  0820               	movf	??_I2C1_Initialize,w
 12671  1E79  0141               	movlb	1	; select bank1
 12672  1E7A  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 12673                           
 12674                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
 12675  1E7B  3058               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 12676  1E7C  0140               	movlb	0	; select bank0
 12677  1E7D  00A0               	movwf	??_I2C1_Initialize
 12678  1E7E  0820               	movf	??_I2C1_Initialize,w
 12679  1E7F  0141               	movlb	1	; select bank1
 12680  1E80  00A0               	movwf	_i2c1_object^(0+128)
 12681                           
 12682                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
 12683  1E81  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 12684                           
 12685                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
 12686  1E82  1022               	bcf	(_i2c1_object^(0+128)+2),0
 12687                           
 12688                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
 12689  1E83  01A4               	clrf	(_i2c1_object^(0+128)+4)
 12690                           
 12691                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
 12692  1E84  0143               	movlb	3	; select bank3
 12693  1E85  018F               	clrf	15	;volatile
 12694                           
 12695                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
 12696  1E86  3028               	movlw	40
 12697  1E87  0090               	movwf	16	;volatile
 12698                           
 12699                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
 12700  1E88  0192               	clrf	18	;volatile
 12701                           
 12702                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x4F;
 12703  1E89  304F               	movlw	79
 12704  1E8A  008D               	movwf	13	;volatile
 12705                           
 12706                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
 12707  1E8B  014E               	movlb	14	; select bank14
 12708  1E8C  100F               	bcf	15,0	;volatile
 12709                           
 12710                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
 12711  1E8D  108F               	bcf	15,1	;volatile
 12712                           
 12713                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
 12714  1E8E  1419               	bsf	25,0	;volatile
 12715                           
 12716                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
 12717  1E8F  1499               	bsf	25,1	;volatile
 12718  1E90  0008               	return
 12719  1E91                     __end_of_I2C1_Initialize:	
 12720                           
 12721                           	psect	text13
 12722  11B9                     __ptext13:	
 12723 ;; *************** function _EUSART1_Initialize *****************
 12724 ;; Defined at:
 12725 ;;		line 81 in file "mcc_generated_files/eusart1.c"
 12726 ;; Parameters:    Size  Location     Type
 12727 ;;		None
 12728 ;; Auto vars:     Size  Location     Type
 12729 ;;		None
 12730 ;; Return value:  Size  Location     Type
 12731 ;;                  1    wreg      void 
 12732 ;; Registers used:
 12733 ;;		wreg, status,2, status,0, pclath, cstack
 12734 ;; Tracked objects:
 12735 ;;		On entry : 0/0
 12736 ;;		On exit  : 0/0
 12737 ;;		Unchanged: 0/0
 12738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12743 ;;Total ram usage:        0 bytes
 12744 ;; Hardware stack levels used:    1
 12745 ;; Hardware stack levels required when called:    5
 12746 ;; This function calls:
 12747 ;;		_EUSART1_SetErrorHandler
 12748 ;;		_EUSART1_SetFramingErrorHandler
 12749 ;;		_EUSART1_SetOverrunErrorHandler
 12750 ;;		_EUSART1_SetRxInterruptHandler
 12751 ;; This function is called by:
 12752 ;;		_SYSTEM_Initialize
 12753 ;; This function uses a non-reentrant model
 12754 ;;
 12755                           
 12756                           
 12757                           ;psect for function _EUSART1_Initialize
 12758  11B9                     _EUSART1_Initialize:	
 12759                           
 12760                           ;mcc_generated_files/eusart1.c: 84:     PIE3bits.RC1IE = 0;
 12761                           
 12762                           ;incstack = 0
 12763                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12764  11B9  014E               	movlb	14	; select bank14
 12765  11BA  1299               	bcf	25,5	;volatile
 12766                           
 12767                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 12768  11BB  3085               	movlw	low _EUSART1_Receive_ISR
 12769  11BC  0140               	movlb	0	; select bank0
 12770  11BD  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 12771  11BE  3011               	movlw	high _EUSART1_Receive_ISR
 12772  11BF  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 12773  11C0  319C  247B  3191   	fcall	_EUSART1_SetRxInterruptHandler
 12774                           
 12775                           ;mcc_generated_files/eusart1.c: 89:     BAUD1CON = 0x08;
 12776  11C3  3008               	movlw	8
 12777  11C4  0142               	movlb	2	; select bank2
 12778  11C5  009F               	movwf	31	;volatile
 12779                           
 12780                           ;mcc_generated_files/eusart1.c: 92:     RC1STA = 0x90;
 12781  11C6  3090               	movlw	144
 12782  11C7  009D               	movwf	29	;volatile
 12783                           
 12784                           ;mcc_generated_files/eusart1.c: 95:     TX1STA = 0x04;
 12785  11C8  3004               	movlw	4
 12786  11C9  009E               	movwf	30	;volatile
 12787                           
 12788                           ;mcc_generated_files/eusart1.c: 98:     SP1BRGL = 0x1F;
 12789  11CA  301F               	movlw	31
 12790  11CB  009B               	movwf	27	;volatile
 12791                           
 12792                           ;mcc_generated_files/eusart1.c: 101:     SP1BRGH = 0x00;
 12793  11CC  019C               	clrf	28	;volatile
 12794                           
 12795                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 12796  11CD  3016               	movlw	low _EUSART1_DefaultFramingErrorHandler
 12797  11CE  0140               	movlb	0	; select bank0
 12798  11CF  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 12799  11D0  301C               	movlw	high _EUSART1_DefaultFramingErrorHandler
 12800  11D1  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 12801  11D2  319C  2496  3191   	fcall	_EUSART1_SetFramingErrorHandler
 12802                           
 12803                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 12804  11D5  3000               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 12805  11D6  0140               	movlb	0	; select bank0
 12806  11D7  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 12807  11D8  3008               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 12808  11D9  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 12809  11DA  319C  249F  3191   	fcall	_EUSART1_SetOverrunErrorHandler
 12810                           
 12811                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 12812  11DD  301D               	movlw	low _EUSART1_DefaultErrorHandler
 12813  11DE  0140               	movlb	0	; select bank0
 12814  11DF  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 12815  11E0  301C               	movlw	high _EUSART1_DefaultErrorHandler
 12816  11E1  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 12817  11E2  319C  248D         	fcall	_EUSART1_SetErrorHandler
 12818                           
 12819                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
 12820  11E4  0142               	movlb	2	; select bank2
 12821  11E5  01CF               	clrf	_eusart1RxLastError^(0+256)	;volatile
 12822                           
 12823                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
 12824  11E6  01F9               	clrf	_eusart1RxHead	;volatile
 12825                           
 12826                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
 12827  11E7  01F8               	clrf	_eusart1RxTail	;volatile
 12828                           
 12829                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
 12830  11E8  0141               	movlb	1	; select bank1
 12831  11E9  01C4               	clrf	_eusart1RxCount^(0+128)	;volatile
 12832                           
 12833                           ;mcc_generated_files/eusart1.c: 116:     PIE3bits.RC1IE = 1;
 12834  11EA  014E               	movlb	14	; select bank14
 12835  11EB  1699               	bsf	25,5	;volatile
 12836  11EC  0008               	return
 12837  11ED                     __end_of_EUSART1_Initialize:	
 12838                           
 12839                           	psect	text14
 12840  1C9F                     __ptext14:	
 12841 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 12842 ;; Defined at:
 12843 ;;		line 223 in file "mcc_generated_files/eusart1.c"
 12844 ;; Parameters:    Size  Location     Type
 12845 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12846 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 12847 ;; Auto vars:     Size  Location     Type
 12848 ;;		None
 12849 ;; Return value:  Size  Location     Type
 12850 ;;                  1    wreg      void 
 12851 ;; Registers used:
 12852 ;;		wreg
 12853 ;; Tracked objects:
 12854 ;;		On entry : 0/0
 12855 ;;		On exit  : 0/0
 12856 ;;		Unchanged: 0/0
 12857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12858 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12861 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12862 ;;Total ram usage:        2 bytes
 12863 ;; Hardware stack levels used:    1
 12864 ;; Hardware stack levels required when called:    4
 12865 ;; This function calls:
 12866 ;;		Nothing
 12867 ;; This function is called by:
 12868 ;;		_EUSART1_Initialize
 12869 ;; This function uses a non-reentrant model
 12870 ;;
 12871                           
 12872                           
 12873                           ;psect for function _EUSART1_SetOverrunErrorHandler
 12874  1C9F                     _EUSART1_SetOverrunErrorHandler:	
 12875                           
 12876                           ;mcc_generated_files/eusart1.c: 224:     EUSART1_OverrunErrorHandler = interruptHandler;
 12877                           
 12878                           ;incstack = 0
 12879                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 12880  1C9F  0140               	movlb	0	; select bank0
 12881  1CA0  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 12882  1CA1  0142               	movlb	2	; select bank2
 12883  1CA2  00E2               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 12884  1CA3  0140               	movlb	0	; select bank0
 12885  1CA4  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 12886  1CA5  0142               	movlb	2	; select bank2
 12887  1CA6  00E1               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 12888  1CA7  0008               	return
 12889  1CA8                     __end_of_EUSART1_SetOverrunErrorHandler:	
 12890                           
 12891                           	psect	text15
 12892  1C96                     __ptext15:	
 12893 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 12894 ;; Defined at:
 12895 ;;		line 219 in file "mcc_generated_files/eusart1.c"
 12896 ;; Parameters:    Size  Location     Type
 12897 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12898 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 12899 ;; Auto vars:     Size  Location     Type
 12900 ;;		None
 12901 ;; Return value:  Size  Location     Type
 12902 ;;                  1    wreg      void 
 12903 ;; Registers used:
 12904 ;;		wreg
 12905 ;; Tracked objects:
 12906 ;;		On entry : 0/0
 12907 ;;		On exit  : 0/0
 12908 ;;		Unchanged: 0/0
 12909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12910 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12913 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12914 ;;Total ram usage:        2 bytes
 12915 ;; Hardware stack levels used:    1
 12916 ;; Hardware stack levels required when called:    4
 12917 ;; This function calls:
 12918 ;;		Nothing
 12919 ;; This function is called by:
 12920 ;;		_EUSART1_Initialize
 12921 ;; This function uses a non-reentrant model
 12922 ;;
 12923                           
 12924                           
 12925                           ;psect for function _EUSART1_SetFramingErrorHandler
 12926  1C96                     _EUSART1_SetFramingErrorHandler:	
 12927                           
 12928                           ;mcc_generated_files/eusart1.c: 220:     EUSART1_FramingErrorHandler = interruptHandler;
 12929                           
 12930                           ;incstack = 0
 12931                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 12932  1C96  0140               	movlb	0	; select bank0
 12933  1C97  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 12934  1C98  0142               	movlb	2	; select bank2
 12935  1C99  00E4               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 12936  1C9A  0140               	movlb	0	; select bank0
 12937  1C9B  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 12938  1C9C  0142               	movlb	2	; select bank2
 12939  1C9D  00E3               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 12940  1C9E  0008               	return
 12941  1C9F                     __end_of_EUSART1_SetFramingErrorHandler:	
 12942                           
 12943                           	psect	text16
 12944  1C8D                     __ptext16:	
 12945 ;; *************** function _EUSART1_SetErrorHandler *****************
 12946 ;; Defined at:
 12947 ;;		line 227 in file "mcc_generated_files/eusart1.c"
 12948 ;; Parameters:    Size  Location     Type
 12949 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 12950 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 12951 ;; Auto vars:     Size  Location     Type
 12952 ;;		None
 12953 ;; Return value:  Size  Location     Type
 12954 ;;                  1    wreg      void 
 12955 ;; Registers used:
 12956 ;;		wreg
 12957 ;; Tracked objects:
 12958 ;;		On entry : 0/0
 12959 ;;		On exit  : 0/0
 12960 ;;		Unchanged: 0/0
 12961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12962 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12965 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12966 ;;Total ram usage:        2 bytes
 12967 ;; Hardware stack levels used:    1
 12968 ;; Hardware stack levels required when called:    4
 12969 ;; This function calls:
 12970 ;;		Nothing
 12971 ;; This function is called by:
 12972 ;;		_EUSART1_Initialize
 12973 ;; This function uses a non-reentrant model
 12974 ;;
 12975                           
 12976                           
 12977                           ;psect for function _EUSART1_SetErrorHandler
 12978  1C8D                     _EUSART1_SetErrorHandler:	
 12979                           
 12980                           ;mcc_generated_files/eusart1.c: 228:     EUSART1_ErrorHandler = interruptHandler;
 12981                           
 12982                           ;incstack = 0
 12983                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 12984  1C8D  0140               	movlb	0	; select bank0
 12985  1C8E  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 12986  1C8F  0142               	movlb	2	; select bank2
 12987  1C90  00E0               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
 12988  1C91  0140               	movlb	0	; select bank0
 12989  1C92  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 12990  1C93  0142               	movlb	2	; select bank2
 12991  1C94  00DF               	movwf	_EUSART1_ErrorHandler^(0+256)
 12992  1C95  0008               	return
 12993  1C96                     __end_of_EUSART1_SetErrorHandler:	
 12994                           
 12995                           	psect	text17
 12996  101D                     __ptext17:	
 12997 ;; *************** function _ADCC_Initialize *****************
 12998 ;; Defined at:
 12999 ;;		line 64 in file "mcc_generated_files/adcc.c"
 13000 ;; Parameters:    Size  Location     Type
 13001 ;;		None
 13002 ;; Auto vars:     Size  Location     Type
 13003 ;;		None
 13004 ;; Return value:  Size  Location     Type
 13005 ;;                  1    wreg      void 
 13006 ;; Registers used:
 13007 ;;		wreg, status,2, status,0, pclath, cstack
 13008 ;; Tracked objects:
 13009 ;;		On entry : 0/0
 13010 ;;		On exit  : 0/0
 13011 ;;		Unchanged: 0/0
 13012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13017 ;;Total ram usage:        0 bytes
 13018 ;; Hardware stack levels used:    1
 13019 ;; Hardware stack levels required when called:    5
 13020 ;; This function calls:
 13021 ;;		_ADCC_SetADTIInterruptHandler
 13022 ;; This function is called by:
 13023 ;;		_SYSTEM_Initialize
 13024 ;; This function uses a non-reentrant model
 13025 ;;
 13026                           
 13027                           
 13028                           ;psect for function _ADCC_Initialize
 13029  101D                     _ADCC_Initialize:	
 13030                           
 13031                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 13032                           
 13033                           ;incstack = 0
 13034                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13035  101D  0141               	movlb	1	; select bank1
 13036  101E  018C               	clrf	12	;volatile
 13037                           
 13038                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 13039  101F  018D               	clrf	13	;volatile
 13040                           
 13041                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 13042  1020  018E               	clrf	14	;volatile
 13043                           
 13044                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 13045  1021  018F               	clrf	15	;volatile
 13046                           
 13047                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 13048  1022  0192               	clrf	18	;volatile
 13049                           
 13050                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 13051  1023  0193               	clrf	19	;volatile
 13052                           
 13053                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 13054  1024  0198               	clrf	24	;volatile
 13055                           
 13056                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 13057  1025  019A               	clrf	26	;volatile
 13058                           
 13059                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 13060  1026  019F               	clrf	31	;volatile
 13061                           
 13062                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 13063  1027  0142               	movlb	2	; select bank2
 13064  1028  018C               	clrf	12	;volatile
 13065                           
 13066                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 13067  1029  018D               	clrf	13	;volatile
 13068                           
 13069                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 13070  102A  018E               	clrf	14	;volatile
 13071                           
 13072                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 13073  102B  018F               	clrf	15	;volatile
 13074                           
 13075                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 13076  102C  0190               	clrf	16	;volatile
 13077                           
 13078                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 13079  102D  0192               	clrf	18	;volatile
 13080                           
 13081                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
 13082  102E  3054               	movlw	84
 13083  102F  0093               	movwf	19	;volatile
 13084                           
 13085                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
 13086  1030  3056               	movlw	86
 13087  1031  0094               	movwf	20	;volatile
 13088                           
 13089                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 13090  1032  0195               	clrf	21	;volatile
 13091                           
 13092                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
 13093  1033  0196               	clrf	22	;volatile
 13094                           
 13095                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 13096  1034  0197               	clrf	23	;volatile
 13097                           
 13098                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 13099  1035  0198               	clrf	24	;volatile
 13100                           
 13101                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
 13102  1036  30D4               	movlw	212
 13103  1037  0091               	movwf	17	;volatile
 13104                           
 13105                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
 13106  1038  014E               	movlb	14	; select bank14
 13107  1039  108D               	bcf	13,1	;volatile
 13108                           
 13109                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
 13110  103A  1497               	bsf	23,1	;volatile
 13111                           
 13112                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 13113  103B  3015               	movlw	low _ADCC_DefaultInterruptHandler
 13114  103C  0140               	movlb	0	; select bank0
 13115  103D  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 13116  103E  301C               	movlw	high _ADCC_DefaultInterruptHandler
 13117  103F  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 13118  1040  319C  244E         	fcall	_ADCC_SetADTIInterruptHandler
 13119  1042  0008               	return
 13120  1043                     __end_of_ADCC_Initialize:	
 13121                           
 13122                           	psect	text18
 13123  0B49                     __ptext18:	
 13124 ;; *************** function _LED_task *****************
 13125 ;; Defined at:
 13126 ;;		line 55 in file "led.c"
 13127 ;; Parameters:    Size  Location     Type
 13128 ;;		None
 13129 ;; Auto vars:     Size  Location     Type
 13130 ;;		None
 13131 ;; Return value:  Size  Location     Type
 13132 ;;                  1    wreg      void 
 13133 ;; Registers used:
 13134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13135 ;; Tracked objects:
 13136 ;;		On entry : 0/0
 13137 ;;		On exit  : 0/0
 13138 ;;		Unchanged: 0/0
 13139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13142 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13143 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13144 ;;Total ram usage:        2 bytes
 13145 ;; Hardware stack levels used:    1
 13146 ;; Hardware stack levels required when called:    9
 13147 ;; This function calls:
 13148 ;;		_LED_setColor
 13149 ;;		_LED_task_ANIMATION
 13150 ;;		_LED_task_BEAT_CONTINUOUS
 13151 ;;		_LED_task_BEAT_FADE
 13152 ;;		_LED_task_BEAT_MIXED
 13153 ;;		_LED_task_BEAT_STROBE
 13154 ;;		_LED_task_DMX
 13155 ;;		_beatColorCreator
 13156 ;;		_getIsHold
 13157 ;;		_getMode
 13158 ;; This function is called by:
 13159 ;;		_main
 13160 ;; This function uses a non-reentrant model
 13161 ;;
 13162                           
 13163                           
 13164                           ;psect for function _LED_task
 13165  0B49                     _LED_task:	
 13166                           
 13167                           ;led.c: 57:     switch(getMode()) {
 13168                           
 13169                           ;incstack = 0
 13170                           ; Regs used in _LED_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13171  0B49  2BE9               	goto	l9176
 13172  0B4A                     l9140:	
 13173                           
 13174                           ;led.c: 59:             LED_task_DMX();
 13175  0B4A  3195  2505         	fcall	_LED_task_DMX
 13176                           
 13177                           ;led.c: 60:             break;
 13178  0B4C  0008               	return
 13179  0B4D                     l9142:	
 13180                           
 13181                           ;led.c: 63:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13182  0B4D  319C  241B  318B   	fcall	_getIsHold
 13183  0B50  3A00               	xorlw	0
 13184  0B51  1903               	skipnz
 13185  0B52  2B67               	goto	l9146
 13186  0B53  0141               	movlb	1	; select bank1
 13187  0B54  01CE               	clrf	beatColorCreator@inGreen^(0+128)
 13188  0B55  01CF               	clrf	beatColorCreator@inBlue^(0+128)
 13189  0B56  01D0               	clrf	beatColorCreator@inWhite^(0+128)
 13190  0B57  3000               	movlw	0
 13191  0B58  3189  2120  318B   	fcall	_beatColorCreator
 13192  0B5B  0141               	movlb	1	; select bank1
 13193  0B5C  0851               	movf	(?_beatColorCreator+3)^(0+128),w
 13194  0B5D  00DE               	movwf	(LED_setColor@input+3)^(0+128)
 13195  0B5E  0850               	movf	(?_beatColorCreator+2)^(0+128),w
 13196  0B5F  00DD               	movwf	(LED_setColor@input+2)^(0+128)
 13197  0B60  084F               	movf	(?_beatColorCreator+1)^(0+128),w
 13198  0B61  00DC               	movwf	(LED_setColor@input+1)^(0+128)
 13199  0B62  084E               	movf	?_beatColorCreator^(0+128),w
 13200  0B63  00DB               	movwf	LED_setColor@input^(0+128)
 13201  0B64  3185  25FD         	fcall	_LED_setColor
 13202  0B66  0008               	return
 13203  0B67                     l9146:	
 13204  0B67  318C  24E1         	fcall	_LED_task_BEAT_STROBE
 13205  0B69  0008               	return
 13206  0B6A                     l9148:	
 13207                           
 13208                           ;led.c: 68:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13209  0B6A  319C  241B  318B   	fcall	_getIsHold
 13210  0B6D  3A00               	xorlw	0
 13211  0B6E  1903               	skipnz
 13212  0B6F  2B84               	goto	l9152
 13213  0B70  0141               	movlb	1	; select bank1
 13214  0B71  01CE               	clrf	beatColorCreator@inGreen^(0+128)
 13215  0B72  01CF               	clrf	beatColorCreator@inBlue^(0+128)
 13216  0B73  01D0               	clrf	beatColorCreator@inWhite^(0+128)
 13217  0B74  3000               	movlw	0
 13218  0B75  3189  2120  318B   	fcall	_beatColorCreator
 13219  0B78  0141               	movlb	1	; select bank1
 13220  0B79  0851               	movf	(?_beatColorCreator+3)^(0+128),w
 13221  0B7A  00DE               	movwf	(LED_setColor@input+3)^(0+128)
 13222  0B7B  0850               	movf	(?_beatColorCreator+2)^(0+128),w
 13223  0B7C  00DD               	movwf	(LED_setColor@input+2)^(0+128)
 13224  0B7D  084F               	movf	(?_beatColorCreator+1)^(0+128),w
 13225  0B7E  00DC               	movwf	(LED_setColor@input+1)^(0+128)
 13226  0B7F  084E               	movf	?_beatColorCreator^(0+128),w
 13227  0B80  00DB               	movwf	LED_setColor@input^(0+128)
 13228  0B81  3185  25FD         	fcall	_LED_setColor
 13229  0B83  0008               	return
 13230  0B84                     l9152:	
 13231  0B84  319C  241A         	fcall	_LED_task_BEAT_FADE
 13232  0B86  0008               	return
 13233  0B87                     l9154:	
 13234                           
 13235                           ;led.c: 73:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13236  0B87  319C  241B  318B   	fcall	_getIsHold
 13237  0B8A  3A00               	xorlw	0
 13238  0B8B  1903               	skipnz
 13239  0B8C  2BA1               	goto	l9158
 13240  0B8D  0141               	movlb	1	; select bank1
 13241  0B8E  01CE               	clrf	beatColorCreator@inGreen^(0+128)
 13242  0B8F  01CF               	clrf	beatColorCreator@inBlue^(0+128)
 13243  0B90  01D0               	clrf	beatColorCreator@inWhite^(0+128)
 13244  0B91  3000               	movlw	0
 13245  0B92  3189  2120  318B   	fcall	_beatColorCreator
 13246  0B95  0141               	movlb	1	; select bank1
 13247  0B96  0851               	movf	(?_beatColorCreator+3)^(0+128),w
 13248  0B97  00DE               	movwf	(LED_setColor@input+3)^(0+128)
 13249  0B98  0850               	movf	(?_beatColorCreator+2)^(0+128),w
 13250  0B99  00DD               	movwf	(LED_setColor@input+2)^(0+128)
 13251  0B9A  084F               	movf	(?_beatColorCreator+1)^(0+128),w
 13252  0B9B  00DC               	movwf	(LED_setColor@input+1)^(0+128)
 13253  0B9C  084E               	movf	?_beatColorCreator^(0+128),w
 13254  0B9D  00DB               	movwf	LED_setColor@input^(0+128)
 13255  0B9E  3185  25FD         	fcall	_LED_setColor
 13256  0BA0  0008               	return
 13257  0BA1                     l9158:	
 13258  0BA1  319C  2419         	fcall	_LED_task_BEAT_CONTINUOUS
 13259  0BA3  0008               	return
 13260  0BA4                     l9160:	
 13261                           
 13262                           ;led.c: 78:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13263  0BA4  319C  241B  318B   	fcall	_getIsHold
 13264  0BA7  3A00               	xorlw	0
 13265  0BA8  1903               	skipnz
 13266  0BA9  2BBE               	goto	l9164
 13267  0BAA  0141               	movlb	1	; select bank1
 13268  0BAB  01CE               	clrf	beatColorCreator@inGreen^(0+128)
 13269  0BAC  01CF               	clrf	beatColorCreator@inBlue^(0+128)
 13270  0BAD  01D0               	clrf	beatColorCreator@inWhite^(0+128)
 13271  0BAE  3000               	movlw	0
 13272  0BAF  3189  2120  318B   	fcall	_beatColorCreator
 13273  0BB2  0141               	movlb	1	; select bank1
 13274  0BB3  0851               	movf	(?_beatColorCreator+3)^(0+128),w
 13275  0BB4  00DE               	movwf	(LED_setColor@input+3)^(0+128)
 13276  0BB5  0850               	movf	(?_beatColorCreator+2)^(0+128),w
 13277  0BB6  00DD               	movwf	(LED_setColor@input+2)^(0+128)
 13278  0BB7  084F               	movf	(?_beatColorCreator+1)^(0+128),w
 13279  0BB8  00DC               	movwf	(LED_setColor@input+1)^(0+128)
 13280  0BB9  084E               	movf	?_beatColorCreator^(0+128),w
 13281  0BBA  00DB               	movwf	LED_setColor@input^(0+128)
 13282  0BBB  3185  25FD         	fcall	_LED_setColor
 13283  0BBD  0008               	return
 13284  0BBE                     l9164:	
 13285  0BBE  3187  27FF         	fcall	_LED_task_BEAT_MIXED
 13286  0BC0  0008               	return
 13287  0BC1                     l9166:	
 13288                           
 13289                           ;led.c: 83:             if(getIsHold()) LED_setColor(beatColorCreator(0,0,0,0));
 13290  0BC1  319C  241B  318B   	fcall	_getIsHold
 13291  0BC4  3A00               	xorlw	0
 13292  0BC5  1903               	skipnz
 13293  0BC6  2BDB               	goto	l9170
 13294  0BC7  0141               	movlb	1	; select bank1
 13295  0BC8  01CE               	clrf	beatColorCreator@inGreen^(0+128)
 13296  0BC9  01CF               	clrf	beatColorCreator@inBlue^(0+128)
 13297  0BCA  01D0               	clrf	beatColorCreator@inWhite^(0+128)
 13298  0BCB  3000               	movlw	0
 13299  0BCC  3189  2120  318B   	fcall	_beatColorCreator
 13300  0BCF  0141               	movlb	1	; select bank1
 13301  0BD0  0851               	movf	(?_beatColorCreator+3)^(0+128),w
 13302  0BD1  00DE               	movwf	(LED_setColor@input+3)^(0+128)
 13303  0BD2  0850               	movf	(?_beatColorCreator+2)^(0+128),w
 13304  0BD3  00DD               	movwf	(LED_setColor@input+2)^(0+128)
 13305  0BD4  084F               	movf	(?_beatColorCreator+1)^(0+128),w
 13306  0BD5  00DC               	movwf	(LED_setColor@input+1)^(0+128)
 13307  0BD6  084E               	movf	?_beatColorCreator^(0+128),w
 13308  0BD7  00DB               	movwf	LED_setColor@input^(0+128)
 13309  0BD8  3185  25FD         	fcall	_LED_setColor
 13310  0BDA  0008               	return
 13311  0BDB                     l9170:	
 13312  0BDB  319C  2418         	fcall	_LED_task_ANIMATION
 13313  0BDD  0008               	return
 13314  0BDE                     l9172:	
 13315                           
 13316                           ;led.c: 88:             LED_setColor(manual);
 13317  0BDE  0828               	movf	(_manual+3)^(0+128),w
 13318  0BDF  00DE               	movwf	(LED_setColor@input+3)^(0+128)
 13319  0BE0  0827               	movf	(_manual+2)^(0+128),w
 13320  0BE1  00DD               	movwf	(LED_setColor@input+2)^(0+128)
 13321  0BE2  0826               	movf	(_manual+1)^(0+128),w
 13322  0BE3  00DC               	movwf	(LED_setColor@input+1)^(0+128)
 13323  0BE4  0825               	movf	_manual^(0+128),w
 13324  0BE5  00DB               	movwf	LED_setColor@input^(0+128)
 13325  0BE6  3185  25FD         	fcall	_LED_setColor
 13326                           
 13327                           ;led.c: 89:             break;
 13328  0BE8  0008               	return
 13329  0BE9                     l9176:	
 13330  0BE9  319C  2426  318B   	fcall	_getMode
 13331  0BEC  0141               	movlb	1	; select bank1
 13332  0BED  00E8               	movwf	??_LED_task^(0+128)
 13333  0BEE  01E9               	clrf	(??_LED_task^(0+128)+1)
 13334                           
 13335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13336                           ; Switch size 1, requested type "simple"
 13337                           ; Number of cases is 1, Range of values is 0 to 0
 13338                           ; switch strategies available:
 13339                           ; Name         Instructions Cycles
 13340                           ; simple_byte            4     3 (average)
 13341                           ; direct_byte            8     6 (fixed)
 13342                           ; jumptable            260     6 (fixed)
 13343                           ;	Chosen strategy is simple_byte
 13344  0BEF  0869               	movf	(??_LED_task+1)^(0+128),w
 13345  0BF0  3A00               	xorlw	0	; case 0
 13346  0BF1  1903               	skipnz
 13347  0BF2  2BF4               	goto	l9504
 13348  0BF3  2C0B               	goto	l1429
 13349  0BF4                     l9504:	
 13350                           
 13351                           ; Switch size 1, requested type "simple"
 13352                           ; Number of cases is 7, Range of values is 0 to 6
 13353                           ; switch strategies available:
 13354                           ; Name         Instructions Cycles
 13355                           ; direct_byte           20     6 (fixed)
 13356                           ; simple_byte           22    12 (average)
 13357                           ; jumptable            260     6 (fixed)
 13358                           ;	Chosen strategy is simple_byte
 13359  0BF4  0868               	movf	??_LED_task^(0+128),w
 13360  0BF5  3A00               	xorlw	0	; case 0
 13361  0BF6  1903               	skipnz
 13362  0BF7  2B4A               	goto	l9140
 13363  0BF8  3A01               	xorlw	1	; case 1
 13364  0BF9  1903               	skipnz
 13365  0BFA  2B4D               	goto	l9142
 13366  0BFB  3A03               	xorlw	3	; case 2
 13367  0BFC  1903               	skipnz
 13368  0BFD  2BC1               	goto	l9166
 13369  0BFE  3A01               	xorlw	1	; case 3
 13370  0BFF  1903               	skipnz
 13371  0C00  2BDE               	goto	l9172
 13372  0C01  3A07               	xorlw	7	; case 4
 13373  0C02  1903               	skipnz
 13374  0C03  2B6A               	goto	l9148
 13375  0C04  3A01               	xorlw	1	; case 5
 13376  0C05  1903               	skipnz
 13377  0C06  2B87               	goto	l9154
 13378  0C07  3A03               	xorlw	3	; case 6
 13379  0C08  1903               	skipnz
 13380  0C09  2BA4               	goto	l9160
 13381  0C0A  2C0B               	goto	l1429
 13382  0C0B                     l1429:	
 13383  0C0B  0008               	return
 13384  0C0C                     __end_of_LED_task:	
 13385                           
 13386                           	psect	text19
 13387  1C26                     __ptext19:	
 13388 ;; *************** function _getMode *****************
 13389 ;; Defined at:
 13390 ;;		line 195 in file "controller.c"
 13391 ;; Parameters:    Size  Location     Type
 13392 ;;		None
 13393 ;; Auto vars:     Size  Location     Type
 13394 ;;		None
 13395 ;; Return value:  Size  Location     Type
 13396 ;;                  1    wreg      enum E10869
 13397 ;; Registers used:
 13398 ;;		wreg
 13399 ;; Tracked objects:
 13400 ;;		On entry : 0/0
 13401 ;;		On exit  : 0/0
 13402 ;;		Unchanged: 0/0
 13403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13408 ;;Total ram usage:        0 bytes
 13409 ;; Hardware stack levels used:    1
 13410 ;; Hardware stack levels required when called:    4
 13411 ;; This function calls:
 13412 ;;		Nothing
 13413 ;; This function is called by:
 13414 ;;		_LED_task
 13415 ;; This function uses a non-reentrant model
 13416 ;;
 13417                           
 13418                           
 13419                           ;psect for function _getMode
 13420  1C26                     _getMode:	
 13421                           
 13422                           ;controller.c: 196:     return currentSelection;
 13423                           
 13424                           ;incstack = 0
 13425                           ; Regs used in _getMode: [wreg]
 13426  1C26  0141               	movlb	1	; select bank1
 13427  1C27  0838               	movf	_currentSelection^(0+128),w
 13428  1C28  0008               	return
 13429  1C29                     __end_of_getMode:	
 13430                           
 13431                           	psect	text20
 13432  1C1B                     __ptext20:	
 13433 ;; *************** function _getIsHold *****************
 13434 ;; Defined at:
 13435 ;;		line 276 in file "controller.c"
 13436 ;; Parameters:    Size  Location     Type
 13437 ;;		None
 13438 ;; Auto vars:     Size  Location     Type
 13439 ;;		None
 13440 ;; Return value:  Size  Location     Type
 13441 ;;                  1    wreg      _Bool 
 13442 ;; Registers used:
 13443 ;;		wreg
 13444 ;; Tracked objects:
 13445 ;;		On entry : 0/0
 13446 ;;		On exit  : 0/0
 13447 ;;		Unchanged: 0/0
 13448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13453 ;;Total ram usage:        0 bytes
 13454 ;; Hardware stack levels used:    1
 13455 ;; Hardware stack levels required when called:    4
 13456 ;; This function calls:
 13457 ;;		Nothing
 13458 ;; This function is called by:
 13459 ;;		_LED_task
 13460 ;; This function uses a non-reentrant model
 13461 ;;
 13462                           
 13463                           
 13464                           ;psect for function _getIsHold
 13465  1C1B                     _getIsHold:	
 13466                           
 13467                           ;controller.c: 277:     return 0;
 13468                           
 13469                           ;incstack = 0
 13470                           ; Regs used in _getIsHold: [wreg]
 13471  1C1B  3000               	movlw	0
 13472  1C1C  0008               	return
 13473  1C1D                     __end_of_getIsHold:	
 13474                           
 13475                           	psect	text21
 13476  1505                     __ptext21:	
 13477 ;; *************** function _LED_task_DMX *****************
 13478 ;; Defined at:
 13479 ;;		line 34 in file "led.c"
 13480 ;; Parameters:    Size  Location     Type
 13481 ;;		None
 13482 ;; Auto vars:     Size  Location     Type
 13483 ;;  dmx             4    0[BANK3 ] struct .
 13484 ;; Return value:  Size  Location     Type
 13485 ;;                  1    wreg      void 
 13486 ;; Registers used:
 13487 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13488 ;; Tracked objects:
 13489 ;;		On entry : 0/0
 13490 ;;		On exit  : 0/0
 13491 ;;		Unchanged: 0/0
 13492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13494 ;;      Locals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13495 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13496 ;;      Totals:         0       0       5       0       4       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13497 ;;Total ram usage:        9 bytes
 13498 ;; Hardware stack levels used:    1
 13499 ;; Hardware stack levels required when called:    7
 13500 ;; This function calls:
 13501 ;;		_DMX_getAddress
 13502 ;;		_LED_setColor
 13503 ;; This function is called by:
 13504 ;;		_LED_task
 13505 ;; This function uses a non-reentrant model
 13506 ;;
 13507                           
 13508                           
 13509                           ;psect for function _LED_task_DMX
 13510  1505                     _LED_task_DMX:	
 13511                           
 13512                           ;led.c: 36:     color_t dmx;;led.c: 38:     dmx.red = dmxArray[DMX_getAddress()];
 13513                           
 13514                           ;incstack = 0
 13515                           ; Regs used in _LED_task_DMX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13516  1505  319C  2423  3195   	fcall	_DMX_getAddress
 13517  1508  0141               	movlb	1	; select bank1
 13518  1509  00E3               	movwf	??_LED_task_DMX^(0+128)
 13519  150A  01E4               	clrf	(??_LED_task_DMX^(0+128)+1)
 13520  150B  35E3               	lslf	??_LED_task_DMX^(0+128),f
 13521  150C  0DE4               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13522  150D  30EE               	movlw	238
 13523  150E  00E5               	movwf	(??_LED_task_DMX+2)^(0+128)
 13524  150F  3023               	movlw	35
 13525  1510  00E6               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13526  1511  0863               	movf	??_LED_task_DMX^(0+128),w
 13527  1512  0765               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13528  1513  0086               	movwf	6
 13529  1514  0864               	movf	(??_LED_task_DMX+1)^(0+128),w
 13530  1515  3D66               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13531  1516  0087               	movwf	7
 13532  1517  0801               	movf	1,w
 13533  1518  00E7               	movwf	(??_LED_task_DMX+4)^(0+128)
 13534  1519  0867               	movf	(??_LED_task_DMX+4)^(0+128),w
 13535  151A  0143               	movlb	3	; select bank3
 13536  151B  00E1               	movwf	(LED_task_DMX@dmx^(0+384)+1)
 13537                           
 13538                           ;led.c: 39:     dmx.green = dmxArray[DMX_getAddress() + 1];
 13539  151C  319C  2423  3195   	fcall	_DMX_getAddress
 13540  151F  0141               	movlb	1	; select bank1
 13541  1520  00E3               	movwf	??_LED_task_DMX^(0+128)
 13542  1521  01E4               	clrf	(??_LED_task_DMX^(0+128)+1)
 13543  1522  35E3               	lslf	??_LED_task_DMX^(0+128),f
 13544  1523  0DE4               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13545  1524  30F0               	movlw	240
 13546  1525  00E5               	movwf	(??_LED_task_DMX+2)^(0+128)
 13547  1526  3023               	movlw	35
 13548  1527  00E6               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13549  1528  0863               	movf	??_LED_task_DMX^(0+128),w
 13550  1529  0765               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13551  152A  0086               	movwf	6
 13552  152B  0864               	movf	(??_LED_task_DMX+1)^(0+128),w
 13553  152C  3D66               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13554  152D  0087               	movwf	7
 13555  152E  0801               	movf	1,w
 13556  152F  00E7               	movwf	(??_LED_task_DMX+4)^(0+128)
 13557  1530  0867               	movf	(??_LED_task_DMX+4)^(0+128),w
 13558  1531  0143               	movlb	3	; select bank3
 13559  1532  00E2               	movwf	(LED_task_DMX@dmx^(0+384)+2)
 13560                           
 13561                           ;led.c: 40:     dmx.blue = dmxArray[DMX_getAddress() + 2];
 13562  1533  319C  2423  3195   	fcall	_DMX_getAddress
 13563  1536  0141               	movlb	1	; select bank1
 13564  1537  00E3               	movwf	??_LED_task_DMX^(0+128)
 13565  1538  01E4               	clrf	(??_LED_task_DMX^(0+128)+1)
 13566  1539  35E3               	lslf	??_LED_task_DMX^(0+128),f
 13567  153A  0DE4               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13568  153B  30F2               	movlw	242
 13569  153C  00E5               	movwf	(??_LED_task_DMX+2)^(0+128)
 13570  153D  3023               	movlw	35
 13571  153E  00E6               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13572  153F  0863               	movf	??_LED_task_DMX^(0+128),w
 13573  1540  0765               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13574  1541  0086               	movwf	6
 13575  1542  0864               	movf	(??_LED_task_DMX+1)^(0+128),w
 13576  1543  3D66               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13577  1544  0087               	movwf	7
 13578  1545  0801               	movf	1,w
 13579  1546  00E7               	movwf	(??_LED_task_DMX+4)^(0+128)
 13580  1547  0867               	movf	(??_LED_task_DMX+4)^(0+128),w
 13581  1548  0143               	movlb	3	; select bank3
 13582  1549  00E3               	movwf	(LED_task_DMX@dmx^(0+384)+3)
 13583                           
 13584                           ;led.c: 41:     dmx.white = dmxArray[DMX_getAddress() + 3];
 13585  154A  319C  2423  3195   	fcall	_DMX_getAddress
 13586  154D  0141               	movlb	1	; select bank1
 13587  154E  00E3               	movwf	??_LED_task_DMX^(0+128)
 13588  154F  01E4               	clrf	(??_LED_task_DMX^(0+128)+1)
 13589  1550  35E3               	lslf	??_LED_task_DMX^(0+128),f
 13590  1551  0DE4               	rlf	(??_LED_task_DMX^(0+128)+1),f
 13591  1552  30F4               	movlw	244
 13592  1553  00E5               	movwf	(??_LED_task_DMX+2)^(0+128)
 13593  1554  3023               	movlw	35
 13594  1555  00E6               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 13595  1556  0863               	movf	??_LED_task_DMX^(0+128),w
 13596  1557  0765               	addwf	(??_LED_task_DMX+2)^(0+128),w
 13597  1558  0086               	movwf	6
 13598  1559  0864               	movf	(??_LED_task_DMX+1)^(0+128),w
 13599  155A  3D66               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 13600  155B  0087               	movwf	7
 13601  155C  0801               	movf	1,w
 13602  155D  00E7               	movwf	(??_LED_task_DMX+4)^(0+128)
 13603  155E  0867               	movf	(??_LED_task_DMX+4)^(0+128),w
 13604  155F  0143               	movlb	3	; select bank3
 13605  1560  00E0               	movwf	LED_task_DMX@dmx^(0+384)
 13606                           
 13607                           ;led.c: 43:     LED_setColor(dmx);
 13608  1561  0863               	movf	(LED_task_DMX@dmx+3)^(0+384),w
 13609  1562  0141               	movlb	1	; select bank1
 13610  1563  00DE               	movwf	(LED_setColor@input+3)^(0+128)
 13611  1564  0143               	movlb	3	; select bank3
 13612  1565  0862               	movf	(LED_task_DMX@dmx+2)^(0+384),w
 13613  1566  0141               	movlb	1	; select bank1
 13614  1567  00DD               	movwf	(LED_setColor@input+2)^(0+128)
 13615  1568  0143               	movlb	3	; select bank3
 13616  1569  0861               	movf	(LED_task_DMX@dmx+1)^(0+384),w
 13617  156A  0141               	movlb	1	; select bank1
 13618  156B  00DC               	movwf	(LED_setColor@input+1)^(0+128)
 13619  156C  0143               	movlb	3	; select bank3
 13620  156D  0860               	movf	LED_task_DMX@dmx^(0+384),w
 13621  156E  0141               	movlb	1	; select bank1
 13622  156F  00DB               	movwf	LED_setColor@input^(0+128)
 13623  1570  3185  25FD         	fcall	_LED_setColor
 13624  1572  0008               	return
 13625  1573                     __end_of_LED_task_DMX:	
 13626                           
 13627                           	psect	text22
 13628  1C23                     __ptext22:	
 13629 ;; *************** function _DMX_getAddress *****************
 13630 ;; Defined at:
 13631 ;;		line 73 in file "dmx.c"
 13632 ;; Parameters:    Size  Location     Type
 13633 ;;		None
 13634 ;; Auto vars:     Size  Location     Type
 13635 ;;		None
 13636 ;; Return value:  Size  Location     Type
 13637 ;;                  1    wreg      unsigned char 
 13638 ;; Registers used:
 13639 ;;		wreg
 13640 ;; Tracked objects:
 13641 ;;		On entry : 0/0
 13642 ;;		On exit  : 0/0
 13643 ;;		Unchanged: 0/0
 13644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13649 ;;Total ram usage:        0 bytes
 13650 ;; Hardware stack levels used:    1
 13651 ;; Hardware stack levels required when called:    4
 13652 ;; This function calls:
 13653 ;;		Nothing
 13654 ;; This function is called by:
 13655 ;;		_LED_task_DMX
 13656 ;; This function uses a non-reentrant model
 13657 ;;
 13658                           
 13659                           
 13660                           ;psect for function _DMX_getAddress
 13661  1C23                     _DMX_getAddress:	
 13662                           
 13663                           ;dmx.c: 74:     return address;
 13664                           
 13665                           ;incstack = 0
 13666                           ; Regs used in _DMX_getAddress: [wreg]
 13667  1C23  0141               	movlb	1	; select bank1
 13668  1C24  086A               	movf	_address^(0+128),w
 13669  1C25  0008               	return
 13670  1C26                     __end_of_DMX_getAddress:	
 13671                           
 13672                           	psect	text23
 13673  0CE1                     __ptext23:	
 13674 ;; *************** function _LED_task_BEAT_STROBE *****************
 13675 ;; Defined at:
 13676 ;;		line 94 in file "led.c"
 13677 ;; Parameters:    Size  Location     Type
 13678 ;;		None
 13679 ;; Auto vars:     Size  Location     Type
 13680 ;;  beatState       1   79[BANK0 ] _Bool 
 13681 ;; Return value:  Size  Location     Type
 13682 ;;                  1    wreg      void 
 13683 ;; Registers used:
 13684 ;;		wreg, status,2, status,0, pclath, cstack
 13685 ;; Tracked objects:
 13686 ;;		On entry : 0/0
 13687 ;;		On exit  : 0/0
 13688 ;;		Unchanged: 0/0
 13689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13691 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13692 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13693 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13694 ;;Total ram usage:        3 bytes
 13695 ;; Hardware stack levels used:    1
 13696 ;; Hardware stack levels required when called:    8
 13697 ;; This function calls:
 13698 ;;		_BEAT_detected
 13699 ;;		_CLOCK_getTime
 13700 ;;		_LED_setColor
 13701 ;;		_beatColorCreator
 13702 ;; This function is called by:
 13703 ;;		_LED_task
 13704 ;; This function uses a non-reentrant model
 13705 ;;
 13706                           
 13707                           
 13708                           ;psect for function _LED_task_BEAT_STROBE
 13709  0CE1                     _LED_task_BEAT_STROBE:	
 13710                           
 13711                           ;led.c: 96:     if(CLOCK_getTime() - lastLedActiveTime < 50){
 13712                           
 13713                           ;incstack = 0
 13714                           ; Regs used in _LED_task_BEAT_STROBE: [wreg+status,2+status,0+pclath+cstack]
 13715  0CE1  319C  2469  318C   	fcall	_CLOCK_getTime
 13716  0CE4  0142               	movlb	2	; select bank2
 13717  0CE5  0838               	movf	_lastLedActiveTime^(0+256),w
 13718  0CE6  0140               	movlb	0	; select bank0
 13719  0CE7  0220               	subwf	?_CLOCK_getTime,w
 13720  0CE8  0141               	movlb	1	; select bank1
 13721  0CE9  00E3               	movwf	??_LED_task_BEAT_STROBE^(0+128)
 13722  0CEA  0142               	movlb	2	; select bank2
 13723  0CEB  0839               	movf	(_lastLedActiveTime+1)^(0+256),w
 13724  0CEC  0140               	movlb	0	; select bank0
 13725  0CED  3B21               	subwfb	?_CLOCK_getTime+1,w
 13726  0CEE  0141               	movlb	1	; select bank1
 13727  0CEF  00E4               	movwf	(??_LED_task_BEAT_STROBE+1)^(0+128)
 13728  0CF0  3000               	movlw	0
 13729  0CF1  0264               	subwf	(??_LED_task_BEAT_STROBE+1)^(0+128),w
 13730  0CF2  3032               	movlw	50
 13731  0CF3  1903               	skipnz
 13732  0CF4  0263               	subwf	??_LED_task_BEAT_STROBE^(0+128),w
 13733  0CF5  1C03               	btfss	3,0
 13734  0CF6  0008               	return
 13735                           
 13736                           ;led.c: 101:     lastLedActiveTime = CLOCK_getTime();
 13737  0CF7  319C  2469  318C   	fcall	_CLOCK_getTime
 13738  0CFA  0140               	movlb	0	; select bank0
 13739  0CFB  0821               	movf	?_CLOCK_getTime+1,w
 13740  0CFC  0142               	movlb	2	; select bank2
 13741  0CFD  00B9               	movwf	(_lastLedActiveTime+1)^(0+256)
 13742  0CFE  0140               	movlb	0	; select bank0
 13743  0CFF  0820               	movf	?_CLOCK_getTime,w
 13744  0D00  0142               	movlb	2	; select bank2
 13745  0D01  00B8               	movwf	_lastLedActiveTime^(0+256)
 13746                           
 13747                           ;led.c: 103:     LATC5 = 0;
 13748  0D02  0140               	movlb	0	; select bank0
 13749  0D03  129A               	bcf	26,5	;volatile
 13750                           
 13751                           ;led.c: 104:     _Bool beatState = BEAT_detected();
 13752  0D04  319C  2484  318C   	fcall	_BEAT_detected
 13753  0D07  0141               	movlb	1	; select bank1
 13754  0D08  00E3               	movwf	??_LED_task_BEAT_STROBE^(0+128)
 13755  0D09  0863               	movf	??_LED_task_BEAT_STROBE^(0+128),w
 13756  0D0A  0140               	movlb	0	; select bank0
 13757  0D0B  00EF               	movwf	LED_task_BEAT_STROBE@beatState
 13758                           
 13759                           ;led.c: 106:     if (beatState) {
 13760  0D0C  086F               	movf	LED_task_BEAT_STROBE@beatState,w
 13761  0D0D  1D03               	btfss	3,2
 13762                           
 13763                           ;led.c: 107:         LATC5 = 1;
 13764  0D0E  169A               	bsf	26,5	;volatile
 13765                           
 13766                           ;led.c: 110:      if(!beatState){
 13767  0D0F  086F               	movf	LED_task_BEAT_STROBE@beatState,w
 13768  0D10  1D03               	btfss	3,2
 13769  0D11  2D26               	goto	l8726
 13770                           
 13771                           ;led.c: 111:          LED_setColor(beatColorCreator(0,0,0,0));
 13772  0D12  0141               	movlb	1	; select bank1
 13773  0D13  01CE               	clrf	beatColorCreator@inGreen^(0+128)
 13774  0D14  01CF               	clrf	beatColorCreator@inBlue^(0+128)
 13775  0D15  01D0               	clrf	beatColorCreator@inWhite^(0+128)
 13776  0D16  3000               	movlw	0
 13777  0D17  3189  2120  318C   	fcall	_beatColorCreator
 13778  0D1A  0141               	movlb	1	; select bank1
 13779  0D1B  0851               	movf	(?_beatColorCreator+3)^(0+128),w
 13780  0D1C  00DE               	movwf	(LED_setColor@input+3)^(0+128)
 13781  0D1D  0850               	movf	(?_beatColorCreator+2)^(0+128),w
 13782  0D1E  00DD               	movwf	(LED_setColor@input+2)^(0+128)
 13783  0D1F  084F               	movf	(?_beatColorCreator+1)^(0+128),w
 13784  0D20  00DC               	movwf	(LED_setColor@input+1)^(0+128)
 13785  0D21  084E               	movf	?_beatColorCreator^(0+128),w
 13786  0D22  00DB               	movwf	LED_setColor@input^(0+128)
 13787  0D23  3185  25FD         	fcall	_LED_setColor
 13788                           
 13789                           ;led.c: 112:     } else if (currentState == 1){
 13790  0D25  0008               	return
 13791  0D26                     l8726:	
 13792  0D26  0141               	movlb	1	; select bank1
 13793  0D27  0329               	decf	_currentState^(0+128),w
 13794  0D28  042A               	iorwf	(_currentState+1)^(0+128),w
 13795  0D29  1D03               	btfss	3,2
 13796  0D2A  2D69               	goto	l8732
 13797                           
 13798                           ;led.c: 113:         LED_setColor(beatColorCreator(0,0,0,1));
 13799  0D2B  01CE               	clrf	beatColorCreator@inGreen^(0+128)
 13800  0D2C  2D51               	goto	L1
 13801  0D2D                     l8746:	
 13802                           ;led.c: 119:          LED_setColor(beatColorCreator(0,1,1,0));
 13803                           
 13804                           ;led.c: 116:          LED_setColor(beatColorCreator(0,1,0,1));
 13805                           
 13806                           
 13807                           ;led.c: 122:          LED_setColor(beatColorCreator(1,0,1,1));
 13808  0D2D  01CE               	clrf	beatColorCreator@inGreen^(0+128)
 13809  0D2E  2D49               	goto	L13
 13810  0D2F                     l8752:	
 13811                           
 13812                           ;led.c: 125:         LED_setColor(beatColorCreator(0,1,1,0));
 13813  0D2F  01CE               	clrf	beatColorCreator@inGreen^(0+128)
 13814  0D30  0ACE               	incf	beatColorCreator@inGreen^(0+128),f
 13815  0D31  01CF               	clrf	beatColorCreator@inBlue^(0+128)
 13816  0D32  0ACF               	incf	beatColorCreator@inBlue^(0+128),f
 13817  0D33  01D0               	clrf	beatColorCreator@inWhite^(0+128)
 13818  0D34  2D54               	goto	L2
 13819  0D35                     l8758:	
 13820                           
 13821                           ;led.c: 128:         LED_setColor(beatColorCreator(1,1,1,0));
 13822  0D35  01CE               	clrf	beatColorCreator@inGreen^(0+128)
 13823  0D36  0ACE               	incf	beatColorCreator@inGreen^(0+128),f
 13824  0D37  2D40               	goto	L10
 13825  0D38                     l8764:	
 13826                           
 13827                           ;led.c: 131:         LED_setColor(beatColorCreator(1,1,0,1));
 13828  0D38  01CE               	clrf	beatColorCreator@inGreen^(0+128)
 13829  0D39  0ACE               	incf	beatColorCreator@inGreen^(0+128),f
 13830  0D3A  2D45               	goto	L12
 13831  0D3B                     l8776:	
 13832                           ;led.c: 134:          LED_setColor(beatColorCreator(0,1,0,1));
 13833                           
 13834                           
 13835                           ;led.c: 137:          LED_setColor(beatColorCreator(0,0,1,1));
 13836  0D3B  01CE               	clrf	beatColorCreator@inGreen^(0+128)
 13837  0D3C  01CF               	clrf	beatColorCreator@inBlue^(0+128)
 13838  0D3D  0ACF               	incf	beatColorCreator@inBlue^(0+128),f
 13839  0D3E  2D52               	goto	L9
 13840  0D3F                     l8782:	
 13841                           
 13842                           ;led.c: 140:          LED_setColor(beatColorCreator(1,0,1,0));
 13843  0D3F  01CE               	clrf	beatColorCreator@inGreen^(0+128)
 13844  0D40                     L10:	
 13845  0D40  01CF               	clrf	beatColorCreator@inBlue^(0+128)
 13846  0D41  0ACF               	incf	beatColorCreator@inBlue^(0+128),f
 13847  0D42  01D0               	clrf	beatColorCreator@inWhite^(0+128)
 13848  0D43  2D4D               	goto	L8
 13849  0D44                     l8788:	
 13850                           
 13851                           ;led.c: 143:         LED_setColor(beatColorCreator(1,0,0,1));
 13852  0D44  01CE               	clrf	beatColorCreator@inGreen^(0+128)
 13853  0D45                     L12:	
 13854  0D45  01CF               	clrf	beatColorCreator@inBlue^(0+128)
 13855  0D46  2D4B               	goto	L11
 13856  0D47                     l8794:	
 13857                           
 13858                           ;led.c: 146:         LED_setColor(beatColorCreator(1,1,1,1));
 13859  0D47  01CE               	clrf	beatColorCreator@inGreen^(0+128)
 13860  0D48  0ACE               	incf	beatColorCreator@inGreen^(0+128),f
 13861  0D49                     L13:	
 13862  0D49  01CF               	clrf	beatColorCreator@inBlue^(0+128)
 13863  0D4A  0ACF               	incf	beatColorCreator@inBlue^(0+128),f
 13864  0D4B                     L11:	
 13865  0D4B  01D0               	clrf	beatColorCreator@inWhite^(0+128)
 13866  0D4C  0AD0               	incf	beatColorCreator@inWhite^(0+128),f
 13867  0D4D                     L8:	
 13868  0D4D  3001               	movlw	1
 13869  0D4E  2D55               	goto	L3
 13870  0D4F                     l8800:	
 13871                           
 13872                           ;led.c: 149:         LED_setColor(beatColorCreator(0,1,0,1));
 13873  0D4F  01CE               	clrf	beatColorCreator@inGreen^(0+128)
 13874  0D50  0ACE               	incf	beatColorCreator@inGreen^(0+128),f
 13875  0D51                     L1:	
 13876  0D51  01CF               	clrf	beatColorCreator@inBlue^(0+128)
 13877  0D52                     L9:	
 13878  0D52  01D0               	clrf	beatColorCreator@inWhite^(0+128)
 13879  0D53  0AD0               	incf	beatColorCreator@inWhite^(0+128),f
 13880  0D54                     L2:	
 13881  0D54  3000               	movlw	0
 13882  0D55                     L3:	
 13883  0D55  3189  2120  318C   	fcall	_beatColorCreator
 13884  0D58  0141               	movlb	1	; select bank1
 13885  0D59  0851               	movf	(?_beatColorCreator+3)^(0+128),w
 13886  0D5A  00DE               	movwf	(LED_setColor@input+3)^(0+128)
 13887  0D5B  0850               	movf	(?_beatColorCreator+2)^(0+128),w
 13888  0D5C  00DD               	movwf	(LED_setColor@input+2)^(0+128)
 13889  0D5D  084F               	movf	(?_beatColorCreator+1)^(0+128),w
 13890  0D5E  00DC               	movwf	(LED_setColor@input+1)^(0+128)
 13891  0D5F  084E               	movf	?_beatColorCreator^(0+128),w
 13892  0D60  00DB               	movwf	LED_setColor@input^(0+128)
 13893  0D61  3185  25FD         	fcall	_LED_setColor
 13894                           
 13895                           ;led.c: 114:         currentState++;
 13896  0D63  3001               	movlw	1
 13897  0D64  0141               	movlb	1	; select bank1
 13898  0D65  07A9               	addwf	_currentState^(0+128),f
 13899  0D66  3000               	movlw	0
 13900  0D67  3DAA               	addwfc	(_currentState+1)^(0+128),f
 13901                           
 13902                           ;led.c: 115:     } else if(currentState == 2){
 13903  0D68  0008               	return
 13904  0D69                     l8732:	
 13905  0D69  3002               	movlw	2
 13906  0D6A  0629               	xorwf	_currentState^(0+128),w
 13907  0D6B  042A               	iorwf	(_currentState+1)^(0+128),w
 13908  0D6C  1903               	btfsc	3,2
 13909  0D6D  2D4F               	goto	l8800
 13910  0D6E  3003               	movlw	3
 13911  0D6F  0629               	xorwf	_currentState^(0+128),w
 13912  0D70  042A               	iorwf	(_currentState+1)^(0+128),w
 13913  0D71  1903               	btfsc	3,2
 13914  0D72  2D2F               	goto	l8752
 13915  0D73  3004               	movlw	4
 13916  0D74  0629               	xorwf	_currentState^(0+128),w
 13917  0D75  042A               	iorwf	(_currentState+1)^(0+128),w
 13918  0D76  1903               	btfsc	3,2
 13919  0D77  2D2D               	goto	l8746
 13920  0D78  3005               	movlw	5
 13921  0D79  0629               	xorwf	_currentState^(0+128),w
 13922  0D7A  042A               	iorwf	(_currentState+1)^(0+128),w
 13923  0D7B  1903               	btfsc	3,2
 13924  0D7C  2D2F               	goto	l8752
 13925  0D7D  3006               	movlw	6
 13926  0D7E  0629               	xorwf	_currentState^(0+128),w
 13927  0D7F  042A               	iorwf	(_currentState+1)^(0+128),w
 13928  0D80  1903               	btfsc	3,2
 13929  0D81  2D35               	goto	l8758
 13930  0D82  3008               	movlw	8
 13931  0D83  0629               	xorwf	_currentState^(0+128),w
 13932  0D84  042A               	iorwf	(_currentState+1)^(0+128),w
 13933  0D85  1903               	btfsc	3,2
 13934  0D86  2D38               	goto	l8764
 13935  0D87  3009               	movlw	9
 13936  0D88  0629               	xorwf	_currentState^(0+128),w
 13937  0D89  042A               	iorwf	(_currentState+1)^(0+128),w
 13938  0D8A  1903               	btfsc	3,2
 13939  0D8B  2D4F               	goto	l8800
 13940  0D8C  300A               	movlw	10
 13941  0D8D  0629               	xorwf	_currentState^(0+128),w
 13942  0D8E  042A               	iorwf	(_currentState+1)^(0+128),w
 13943  0D8F  1903               	btfsc	3,2
 13944  0D90  2D3B               	goto	l8776
 13945  0D91  300B               	movlw	11
 13946  0D92  0629               	xorwf	_currentState^(0+128),w
 13947  0D93  042A               	iorwf	(_currentState+1)^(0+128),w
 13948  0D94  1903               	btfsc	3,2
 13949  0D95  2D3F               	goto	l8782
 13950  0D96  300C               	movlw	12
 13951  0D97  0629               	xorwf	_currentState^(0+128),w
 13952  0D98  042A               	iorwf	(_currentState+1)^(0+128),w
 13953  0D99  1903               	btfsc	3,2
 13954  0D9A  2D44               	goto	l8788
 13955  0D9B  300D               	movlw	13
 13956  0D9C  0629               	xorwf	_currentState^(0+128),w
 13957  0D9D  042A               	iorwf	(_currentState+1)^(0+128),w
 13958  0D9E  1903               	btfsc	3,2
 13959  0D9F  2D47               	goto	l8794
 13960  0DA0  300E               	movlw	14
 13961  0DA1  0629               	xorwf	_currentState^(0+128),w
 13962  0DA2  042A               	iorwf	(_currentState+1)^(0+128),w
 13963  0DA3  1903               	btfsc	3,2
 13964  0DA4  2D4F               	goto	l8800
 13965                           
 13966                           ;led.c: 152:         LED_setColor(beatColorCreator(0,1,1,1));
 13967  0DA5  01CE               	clrf	beatColorCreator@inGreen^(0+128)
 13968  0DA6  0ACE               	incf	beatColorCreator@inGreen^(0+128),f
 13969  0DA7  01CF               	clrf	beatColorCreator@inBlue^(0+128)
 13970  0DA8  0ACF               	incf	beatColorCreator@inBlue^(0+128),f
 13971  0DA9  01D0               	clrf	beatColorCreator@inWhite^(0+128)
 13972  0DAA  0AD0               	incf	beatColorCreator@inWhite^(0+128),f
 13973  0DAB  3000               	movlw	0
 13974  0DAC  3189  2120  318C   	fcall	_beatColorCreator
 13975  0DAF  0141               	movlb	1	; select bank1
 13976  0DB0  0851               	movf	(?_beatColorCreator+3)^(0+128),w
 13977  0DB1  00DE               	movwf	(LED_setColor@input+3)^(0+128)
 13978  0DB2  0850               	movf	(?_beatColorCreator+2)^(0+128),w
 13979  0DB3  00DD               	movwf	(LED_setColor@input+2)^(0+128)
 13980  0DB4  084F               	movf	(?_beatColorCreator+1)^(0+128),w
 13981  0DB5  00DC               	movwf	(LED_setColor@input+1)^(0+128)
 13982  0DB6  084E               	movf	?_beatColorCreator^(0+128),w
 13983  0DB7  00DB               	movwf	LED_setColor@input^(0+128)
 13984  0DB8  3185  25FD         	fcall	_LED_setColor
 13985                           
 13986                           ;led.c: 153:         currentState = 1;
 13987  0DBA  3001               	movlw	1
 13988  0DBB  0141               	movlb	1	; select bank1
 13989  0DBC  00A9               	movwf	_currentState^(0+128)
 13990  0DBD  3000               	movlw	0
 13991  0DBE  00AA               	movwf	(_currentState^(0+128)+1)
 13992  0DBF  0008               	return
 13993  0DC0                     __end_of_LED_task_BEAT_STROBE:	
 13994                           
 13995                           	psect	text24
 13996  0920                     __ptext24:	
 13997 ;; *************** function _beatColorCreator *****************
 13998 ;; Defined at:
 13999 ;;		line 173 in file "led.c"
 14000 ;; Parameters:    Size  Location     Type
 14001 ;;  inRed           1    wreg     _Bool 
 14002 ;;  inGreen         1    9[BANK1 ] _Bool 
 14003 ;;  inBlue          1   10[BANK1 ] _Bool 
 14004 ;;  inWhite         1   11[BANK1 ] _Bool 
 14005 ;; Auto vars:     Size  Location     Type
 14006 ;;  inRed           1   13[BANK1 ] _Bool 
 14007 ;;  tempColor       4   18[BANK1 ] struct .
 14008 ;; Return value:  Size  Location     Type
 14009 ;;                  4    9[BANK1 ] struct .
 14010 ;; Registers used:
 14011 ;;		wreg, status,2, status,0, pclath, cstack
 14012 ;; Tracked objects:
 14013 ;;		On entry : 0/0
 14014 ;;		On exit  : 0/0
 14015 ;;		Unchanged: 0/0
 14016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14017 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14018 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14019 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14020 ;;      Totals:         0       1      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14021 ;;Total ram usage:       14 bytes
 14022 ;; Hardware stack levels used:    1
 14023 ;; Hardware stack levels required when called:    7
 14024 ;; This function calls:
 14025 ;;		___fltol
 14026 ;;		_beatBrightnessCalculation
 14027 ;; This function is called by:
 14028 ;;		_LED_task
 14029 ;;		_LED_task_BEAT_STROBE
 14030 ;; This function uses a non-reentrant model
 14031 ;;
 14032                           
 14033                           
 14034                           ;psect for function _beatColorCreator
 14035  0920                     _beatColorCreator:	
 14036                           
 14037                           ;incstack = 0
 14038                           ; Regs used in _beatColorCreator: [wreg+status,2+status,0+pclath+cstack]
 14039                           ;beatColorCreator@inRed stored from wreg
 14040  0920  0141               	movlb	1	; select bank1
 14041  0921  00D2               	movwf	beatColorCreator@inRed^(0+128)
 14042                           
 14043                           ;led.c: 174:     color_t tempColor;;led.c: 176:     if(inRed)
 14044  0922  0852               	movf	beatColorCreator@inRed^(0+128),w
 14045  0923  1903               	btfsc	3,2
 14046  0924  294A               	goto	l8190
 14047                           
 14048                           ;led.c: 177:         tempColor.red = beatBrightnessCalculation();
 14049  0925  3196  2654  3189   	fcall	_beatBrightnessCalculation
 14050  0928  0141               	movlb	1	; select bank1
 14051  0929  0848               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 14052  092A  00D6               	movwf	(_beatColorCreator$3606+3)^(0+128)
 14053  092B  0847               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 14054  092C  00D5               	movwf	(_beatColorCreator$3606+2)^(0+128)
 14055  092D  0846               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 14056  092E  00D4               	movwf	(_beatColorCreator$3606+1)^(0+128)
 14057  092F  0845               	movf	?_beatBrightnessCalculation^(0+128),w
 14058  0930  00D3               	movwf	_beatColorCreator$3606^(0+128)
 14059                           
 14060                           ;led.c: 177:         tempColor.red = beatBrightnessCalculation();
 14061  0931  0856               	movf	(_beatColorCreator$3606+3)^(0+128),w
 14062  0932  0140               	movlb	0	; select bank0
 14063  0933  00E5               	movwf	___fltol@f1+3
 14064  0934  0141               	movlb	1	; select bank1
 14065  0935  0855               	movf	(_beatColorCreator$3606+2)^(0+128),w
 14066  0936  0140               	movlb	0	; select bank0
 14067  0937  00E4               	movwf	___fltol@f1+2
 14068  0938  0141               	movlb	1	; select bank1
 14069  0939  0854               	movf	(_beatColorCreator$3606+1)^(0+128),w
 14070  093A  0140               	movlb	0	; select bank0
 14071  093B  00E3               	movwf	___fltol@f1+1
 14072  093C  0141               	movlb	1	; select bank1
 14073  093D  0853               	movf	_beatColorCreator$3606^(0+128),w
 14074  093E  0140               	movlb	0	; select bank0
 14075  093F  00E2               	movwf	___fltol@f1
 14076  0940  3194  249F  3189   	fcall	___fltol
 14077  0943  0140               	movlb	0	; select bank0
 14078  0944  0862               	movf	?___fltol,w
 14079  0945  00EE               	movwf	??_beatColorCreator
 14080  0946  086E               	movf	??_beatColorCreator,w
 14081  0947  0141               	movlb	1	; select bank1
 14082  0948  00D8               	movwf	(beatColorCreator@tempColor^(0+128)+1)
 14083  0949  294B               	goto	l8192
 14084  094A                     l8190:	
 14085                           
 14086                           ;led.c: 179:         tempColor.red = 0;
 14087  094A  01D8               	clrf	(beatColorCreator@tempColor^(0+128)+1)
 14088  094B                     l8192:	
 14089                           
 14090                           ;led.c: 181:     if(inBlue)
 14091  094B  084F               	movf	beatColorCreator@inBlue^(0+128),w
 14092  094C  1903               	btfsc	3,2
 14093  094D  2973               	goto	l8196
 14094                           
 14095                           ;led.c: 182:         tempColor.blue = beatBrightnessCalculation();
 14096  094E  3196  2654  3189   	fcall	_beatBrightnessCalculation
 14097  0951  0141               	movlb	1	; select bank1
 14098  0952  0848               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 14099  0953  00D6               	movwf	(_beatColorCreator$3606+3)^(0+128)
 14100  0954  0847               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 14101  0955  00D5               	movwf	(_beatColorCreator$3606+2)^(0+128)
 14102  0956  0846               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 14103  0957  00D4               	movwf	(_beatColorCreator$3606+1)^(0+128)
 14104  0958  0845               	movf	?_beatBrightnessCalculation^(0+128),w
 14105  0959  00D3               	movwf	_beatColorCreator$3606^(0+128)
 14106                           
 14107                           ;led.c: 182:         tempColor.blue = beatBrightnessCalculation();
 14108  095A  0856               	movf	(_beatColorCreator$3606+3)^(0+128),w
 14109  095B  0140               	movlb	0	; select bank0
 14110  095C  00E5               	movwf	___fltol@f1+3
 14111  095D  0141               	movlb	1	; select bank1
 14112  095E  0855               	movf	(_beatColorCreator$3606+2)^(0+128),w
 14113  095F  0140               	movlb	0	; select bank0
 14114  0960  00E4               	movwf	___fltol@f1+2
 14115  0961  0141               	movlb	1	; select bank1
 14116  0962  0854               	movf	(_beatColorCreator$3606+1)^(0+128),w
 14117  0963  0140               	movlb	0	; select bank0
 14118  0964  00E3               	movwf	___fltol@f1+1
 14119  0965  0141               	movlb	1	; select bank1
 14120  0966  0853               	movf	_beatColorCreator$3606^(0+128),w
 14121  0967  0140               	movlb	0	; select bank0
 14122  0968  00E2               	movwf	___fltol@f1
 14123  0969  3194  249F  3189   	fcall	___fltol
 14124  096C  0140               	movlb	0	; select bank0
 14125  096D  0862               	movf	?___fltol,w
 14126  096E  00EE               	movwf	??_beatColorCreator
 14127  096F  086E               	movf	??_beatColorCreator,w
 14128  0970  0141               	movlb	1	; select bank1
 14129  0971  00DA               	movwf	(beatColorCreator@tempColor^(0+128)+3)
 14130  0972  2974               	goto	l8198
 14131  0973                     l8196:	
 14132                           
 14133                           ;led.c: 184:         tempColor.blue = 0;
 14134  0973  01DA               	clrf	(beatColorCreator@tempColor^(0+128)+3)
 14135  0974                     l8198:	
 14136                           
 14137                           ;led.c: 186:     if(inGreen)
 14138  0974  084E               	movf	beatColorCreator@inGreen^(0+128),w
 14139  0975  1903               	btfsc	3,2
 14140  0976  299C               	goto	l8202
 14141                           
 14142                           ;led.c: 187:         tempColor.green = beatBrightnessCalculation();
 14143  0977  3196  2654  3189   	fcall	_beatBrightnessCalculation
 14144  097A  0141               	movlb	1	; select bank1
 14145  097B  0848               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 14146  097C  00D6               	movwf	(_beatColorCreator$3606+3)^(0+128)
 14147  097D  0847               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 14148  097E  00D5               	movwf	(_beatColorCreator$3606+2)^(0+128)
 14149  097F  0846               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 14150  0980  00D4               	movwf	(_beatColorCreator$3606+1)^(0+128)
 14151  0981  0845               	movf	?_beatBrightnessCalculation^(0+128),w
 14152  0982  00D3               	movwf	_beatColorCreator$3606^(0+128)
 14153                           
 14154                           ;led.c: 187:         tempColor.green = beatBrightnessCalculation();
 14155  0983  0856               	movf	(_beatColorCreator$3606+3)^(0+128),w
 14156  0984  0140               	movlb	0	; select bank0
 14157  0985  00E5               	movwf	___fltol@f1+3
 14158  0986  0141               	movlb	1	; select bank1
 14159  0987  0855               	movf	(_beatColorCreator$3606+2)^(0+128),w
 14160  0988  0140               	movlb	0	; select bank0
 14161  0989  00E4               	movwf	___fltol@f1+2
 14162  098A  0141               	movlb	1	; select bank1
 14163  098B  0854               	movf	(_beatColorCreator$3606+1)^(0+128),w
 14164  098C  0140               	movlb	0	; select bank0
 14165  098D  00E3               	movwf	___fltol@f1+1
 14166  098E  0141               	movlb	1	; select bank1
 14167  098F  0853               	movf	_beatColorCreator$3606^(0+128),w
 14168  0990  0140               	movlb	0	; select bank0
 14169  0991  00E2               	movwf	___fltol@f1
 14170  0992  3194  249F  3189   	fcall	___fltol
 14171  0995  0140               	movlb	0	; select bank0
 14172  0996  0862               	movf	?___fltol,w
 14173  0997  00EE               	movwf	??_beatColorCreator
 14174  0998  086E               	movf	??_beatColorCreator,w
 14175  0999  0141               	movlb	1	; select bank1
 14176  099A  00D9               	movwf	(beatColorCreator@tempColor^(0+128)+2)
 14177  099B  299D               	goto	l8204
 14178  099C                     l8202:	
 14179                           
 14180                           ;led.c: 189:         tempColor.green = 0;
 14181  099C  01D9               	clrf	(beatColorCreator@tempColor^(0+128)+2)
 14182  099D                     l8204:	
 14183                           
 14184                           ;led.c: 191:     if(inWhite)
 14185  099D  0850               	movf	beatColorCreator@inWhite^(0+128),w
 14186  099E  1903               	btfsc	3,2
 14187  099F  29C5               	goto	l8208
 14188                           
 14189                           ;led.c: 192:         tempColor.white = beatBrightnessCalculation();
 14190  09A0  3196  2654  3189   	fcall	_beatBrightnessCalculation
 14191  09A3  0141               	movlb	1	; select bank1
 14192  09A4  0848               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 14193  09A5  00D6               	movwf	(_beatColorCreator$3606+3)^(0+128)
 14194  09A6  0847               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 14195  09A7  00D5               	movwf	(_beatColorCreator$3606+2)^(0+128)
 14196  09A8  0846               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 14197  09A9  00D4               	movwf	(_beatColorCreator$3606+1)^(0+128)
 14198  09AA  0845               	movf	?_beatBrightnessCalculation^(0+128),w
 14199  09AB  00D3               	movwf	_beatColorCreator$3606^(0+128)
 14200                           
 14201                           ;led.c: 192:         tempColor.white = beatBrightnessCalculation();
 14202  09AC  0856               	movf	(_beatColorCreator$3606+3)^(0+128),w
 14203  09AD  0140               	movlb	0	; select bank0
 14204  09AE  00E5               	movwf	___fltol@f1+3
 14205  09AF  0141               	movlb	1	; select bank1
 14206  09B0  0855               	movf	(_beatColorCreator$3606+2)^(0+128),w
 14207  09B1  0140               	movlb	0	; select bank0
 14208  09B2  00E4               	movwf	___fltol@f1+2
 14209  09B3  0141               	movlb	1	; select bank1
 14210  09B4  0854               	movf	(_beatColorCreator$3606+1)^(0+128),w
 14211  09B5  0140               	movlb	0	; select bank0
 14212  09B6  00E3               	movwf	___fltol@f1+1
 14213  09B7  0141               	movlb	1	; select bank1
 14214  09B8  0853               	movf	_beatColorCreator$3606^(0+128),w
 14215  09B9  0140               	movlb	0	; select bank0
 14216  09BA  00E2               	movwf	___fltol@f1
 14217  09BB  3194  249F  3189   	fcall	___fltol
 14218  09BE  0140               	movlb	0	; select bank0
 14219  09BF  0862               	movf	?___fltol,w
 14220  09C0  00EE               	movwf	??_beatColorCreator
 14221  09C1  086E               	movf	??_beatColorCreator,w
 14222  09C2  0141               	movlb	1	; select bank1
 14223  09C3  00D7               	movwf	beatColorCreator@tempColor^(0+128)
 14224  09C4  29C6               	goto	l8210
 14225  09C5                     l8208:	
 14226                           
 14227                           ;led.c: 194:         tempColor.white = 0;
 14228  09C5  01D7               	clrf	beatColorCreator@tempColor^(0+128)
 14229  09C6                     l8210:	
 14230                           
 14231                           ;led.c: 196:     return tempColor;
 14232  09C6  085A               	movf	(beatColorCreator@tempColor+3)^(0+128),w
 14233  09C7  00D1               	movwf	(?_beatColorCreator+3)^(0+128)
 14234  09C8  0859               	movf	(beatColorCreator@tempColor+2)^(0+128),w
 14235  09C9  00D0               	movwf	(?_beatColorCreator+2)^(0+128)
 14236  09CA  0858               	movf	(beatColorCreator@tempColor+1)^(0+128),w
 14237  09CB  00CF               	movwf	(?_beatColorCreator+1)^(0+128)
 14238  09CC  0857               	movf	beatColorCreator@tempColor^(0+128),w
 14239  09CD  00CE               	movwf	?_beatColorCreator^(0+128)
 14240  09CE  0008               	return
 14241  09CF                     __end_of_beatColorCreator:	
 14242                           
 14243                           	psect	text25
 14244  1654                     __ptext25:	
 14245 ;; *************** function _beatBrightnessCalculation *****************
 14246 ;; Defined at:
 14247 ;;		line 158 in file "led.c"
 14248 ;; Parameters:    Size  Location     Type
 14249 ;;		None
 14250 ;; Auto vars:     Size  Location     Type
 14251 ;;  temp            1   77[BANK0 ] unsigned char 
 14252 ;; Return value:  Size  Location     Type
 14253 ;;                  4    0[BANK1 ] float 
 14254 ;; Registers used:
 14255 ;;		wreg, status,2, status,0, pclath, cstack
 14256 ;; Tracked objects:
 14257 ;;		On entry : 0/0
 14258 ;;		On exit  : 0/0
 14259 ;;		Unchanged: 0/0
 14260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14261 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14262 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14263 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14264 ;;      Totals:         0       1       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14265 ;;Total ram usage:       10 bytes
 14266 ;; Hardware stack levels used:    1
 14267 ;; Hardware stack levels required when called:    6
 14268 ;; This function calls:
 14269 ;;		___fldiv
 14270 ;;		___flmul
 14271 ;;		___fltol
 14272 ;;		___xxtofl
 14273 ;; This function is called by:
 14274 ;;		_beatColorCreator
 14275 ;; This function uses a non-reentrant model
 14276 ;;
 14277                           
 14278                           
 14279                           ;psect for function _beatBrightnessCalculation
 14280  1654                     _beatBrightnessCalculation:	
 14281                           
 14282                           ;led.c: 159:     uint8_t temp = (float)(beatBrightness/9.0) * 255;
 14283                           
 14284                           ;incstack = 0
 14285                           ; Regs used in _beatBrightnessCalculation: [wreg+status,2+status,0+pclath+cstack]
 14286  1654  0141               	movlb	1	; select bank1
 14287  1655  086F               	movf	_beatBrightness^(0+128),w
 14288  1656  00C9               	movwf	??_beatBrightnessCalculation^(0+128)
 14289  1657  01CA               	clrf	(??_beatBrightnessCalculation^(0+128)+1)
 14290  1658  01CB               	clrf	(??_beatBrightnessCalculation^(0+128)+2)
 14291  1659  01CC               	clrf	(??_beatBrightnessCalculation^(0+128)+3)
 14292  165A  084C               	movf	(??_beatBrightnessCalculation+3)^(0+128),w
 14293  165B  0140               	movlb	0	; select bank0
 14294  165C  00A3               	movwf	___xxtofl@val+3
 14295  165D  0141               	movlb	1	; select bank1
 14296  165E  084B               	movf	(??_beatBrightnessCalculation+2)^(0+128),w
 14297  165F  0140               	movlb	0	; select bank0
 14298  1660  00A2               	movwf	___xxtofl@val+2
 14299  1661  0141               	movlb	1	; select bank1
 14300  1662  084A               	movf	(??_beatBrightnessCalculation+1)^(0+128),w
 14301  1663  0140               	movlb	0	; select bank0
 14302  1664  00A1               	movwf	___xxtofl@val+1
 14303  1665  0141               	movlb	1	; select bank1
 14304  1666  0849               	movf	??_beatBrightnessCalculation^(0+128),w
 14305  1667  0140               	movlb	0	; select bank0
 14306  1668  00A0               	movwf	___xxtofl@val
 14307  1669  3001               	movlw	1
 14308  166A  3196  26D1  3196   	fcall	___xxtofl
 14309  166D  0140               	movlb	0	; select bank0
 14310  166E  0823               	movf	?___xxtofl+3,w
 14311  166F  00B5               	movwf	___fldiv@b+3
 14312  1670  0822               	movf	?___xxtofl+2,w
 14313  1671  00B4               	movwf	___fldiv@b+2
 14314  1672  0821               	movf	?___xxtofl+1,w
 14315  1673  00B3               	movwf	___fldiv@b+1
 14316  1674  0820               	movf	?___xxtofl,w
 14317  1675  00B2               	movwf	___fldiv@b
 14318  1676  3041               	movlw	65
 14319  1677  00B1               	movwf	___fldiv@a+3
 14320  1678  3010               	movlw	16
 14321  1679  00B0               	movwf	___fldiv@a+2
 14322  167A  3000               	movlw	0
 14323  167B  00AF               	movwf	___fldiv@a+1
 14324  167C  3000               	movlw	0
 14325  167D  00AE               	movwf	___fldiv@a
 14326  167E  3184  2483  3196   	fcall	___fldiv
 14327  1681  0140               	movlb	0	; select bank0
 14328  1682  0831               	movf	?___fldiv+3,w
 14329  1683  00CF               	movwf	___flmul@a+3
 14330  1684  0830               	movf	?___fldiv+2,w
 14331  1685  00CE               	movwf	___flmul@a+2
 14332  1686  082F               	movf	?___fldiv+1,w
 14333  1687  00CD               	movwf	___flmul@a+1
 14334  1688  082E               	movf	?___fldiv,w
 14335  1689  00CC               	movwf	___flmul@a
 14336  168A  3043               	movlw	67
 14337  168B  00CB               	movwf	___flmul@b+3
 14338  168C  307F               	movlw	127
 14339  168D  00CA               	movwf	___flmul@b+2
 14340  168E  3000               	movlw	0
 14341  168F  00C9               	movwf	___flmul@b+1
 14342  1690  3000               	movlw	0
 14343  1691  00C8               	movwf	___flmul@b
 14344  1692  3180  208A  3196   	fcall	___flmul
 14345  1695  0140               	movlb	0	; select bank0
 14346  1696  084B               	movf	?___flmul+3,w
 14347  1697  00E5               	movwf	___fltol@f1+3
 14348  1698  084A               	movf	?___flmul+2,w
 14349  1699  00E4               	movwf	___fltol@f1+2
 14350  169A  0849               	movf	?___flmul+1,w
 14351  169B  00E3               	movwf	___fltol@f1+1
 14352  169C  0848               	movf	?___flmul,w
 14353  169D  00E2               	movwf	___fltol@f1
 14354  169E  3194  249F  3196   	fcall	___fltol
 14355  16A1  0140               	movlb	0	; select bank0
 14356  16A2  0862               	movf	?___fltol,w
 14357  16A3  0141               	movlb	1	; select bank1
 14358  16A4  00CD               	movwf	(??_beatBrightnessCalculation+4)^(0+128)
 14359  16A5  084D               	movf	(??_beatBrightnessCalculation+4)^(0+128),w
 14360  16A6  0140               	movlb	0	; select bank0
 14361  16A7  00ED               	movwf	beatBrightnessCalculation@temp
 14362                           
 14363                           ;led.c: 160:     return temp;
 14364  16A8  086D               	movf	beatBrightnessCalculation@temp,w
 14365  16A9  0141               	movlb	1	; select bank1
 14366  16AA  00C9               	movwf	??_beatBrightnessCalculation^(0+128)
 14367  16AB  01CA               	clrf	(??_beatBrightnessCalculation^(0+128)+1)
 14368  16AC  01CB               	clrf	(??_beatBrightnessCalculation^(0+128)+2)
 14369  16AD  01CC               	clrf	(??_beatBrightnessCalculation^(0+128)+3)
 14370  16AE  084C               	movf	(??_beatBrightnessCalculation+3)^(0+128),w
 14371  16AF  0140               	movlb	0	; select bank0
 14372  16B0  00A3               	movwf	___xxtofl@val+3
 14373  16B1  0141               	movlb	1	; select bank1
 14374  16B2  084B               	movf	(??_beatBrightnessCalculation+2)^(0+128),w
 14375  16B3  0140               	movlb	0	; select bank0
 14376  16B4  00A2               	movwf	___xxtofl@val+2
 14377  16B5  0141               	movlb	1	; select bank1
 14378  16B6  084A               	movf	(??_beatBrightnessCalculation+1)^(0+128),w
 14379  16B7  0140               	movlb	0	; select bank0
 14380  16B8  00A1               	movwf	___xxtofl@val+1
 14381  16B9  0141               	movlb	1	; select bank1
 14382  16BA  0849               	movf	??_beatBrightnessCalculation^(0+128),w
 14383  16BB  0140               	movlb	0	; select bank0
 14384  16BC  00A0               	movwf	___xxtofl@val
 14385  16BD  3000               	movlw	0
 14386  16BE  3196  26D1         	fcall	___xxtofl
 14387  16C0  0140               	movlb	0	; select bank0
 14388  16C1  0823               	movf	?___xxtofl+3,w
 14389  16C2  0141               	movlb	1	; select bank1
 14390  16C3  00C8               	movwf	(?_beatBrightnessCalculation+3)^(0+128)
 14391  16C4  0140               	movlb	0	; select bank0
 14392  16C5  0822               	movf	?___xxtofl+2,w
 14393  16C6  0141               	movlb	1	; select bank1
 14394  16C7  00C7               	movwf	(?_beatBrightnessCalculation+2)^(0+128)
 14395  16C8  0140               	movlb	0	; select bank0
 14396  16C9  0821               	movf	?___xxtofl+1,w
 14397  16CA  0141               	movlb	1	; select bank1
 14398  16CB  00C6               	movwf	(?_beatBrightnessCalculation+1)^(0+128)
 14399  16CC  0140               	movlb	0	; select bank0
 14400  16CD  0820               	movf	?___xxtofl,w
 14401  16CE  0141               	movlb	1	; select bank1
 14402  16CF  00C5               	movwf	?_beatBrightnessCalculation^(0+128)
 14403  16D0  0008               	return
 14404  16D1                     __end_of_beatBrightnessCalculation:	
 14405                           
 14406                           	psect	text26
 14407  05FD                     __ptext26:	
 14408 ;; *************** function _LED_setColor *****************
 14409 ;; Defined at:
 14410 ;;		line 25 in file "led.c"
 14411 ;; Parameters:    Size  Location     Type
 14412 ;;  input           4   22[BANK1 ] struct .
 14413 ;; Auto vars:     Size  Location     Type
 14414 ;;		None
 14415 ;; Return value:  Size  Location     Type
 14416 ;;                  1    wreg      void 
 14417 ;; Registers used:
 14418 ;;		wreg, status,2, status,0, pclath, cstack
 14419 ;; Tracked objects:
 14420 ;;		On entry : 0/0
 14421 ;;		On exit  : 0/0
 14422 ;;		Unchanged: 0/0
 14423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14424 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14426 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14427 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14428 ;;Total ram usage:        8 bytes
 14429 ;; Hardware stack levels used:    1
 14430 ;; Hardware stack levels required when called:    6
 14431 ;; This function calls:
 14432 ;;		_PWM1_LoadDutyValue
 14433 ;;		_PWM2_LoadDutyValue
 14434 ;;		_PWM3_LoadDutyValue
 14435 ;;		_PWM4_LoadDutyValue
 14436 ;;		___fldiv
 14437 ;;		___flmul
 14438 ;;		___fltol
 14439 ;;		___xxtofl
 14440 ;; This function is called by:
 14441 ;;		_LED_task_DMX
 14442 ;;		_LED_task
 14443 ;;		_LED_task_BEAT_STROBE
 14444 ;; This function uses a non-reentrant model
 14445 ;;
 14446                           
 14447                           
 14448                           ;psect for function _LED_setColor
 14449  05FD                     _LED_setColor:	
 14450                           
 14451                           ;led.c: 26:     if(!startup){
 14452                           
 14453                           ;incstack = 0
 14454                           ; Regs used in _LED_setColor: [wreg+status,2+status,0+pclath+cstack]
 14455  05FD  0141               	movlb	1	; select bank1
 14456  05FE  086E               	movf	_startup^(0+128),w
 14457  05FF  1D03               	btfss	3,2
 14458  0600  0008               	return
 14459                           
 14460                           ;led.c: 27:         PWM1_LoadDutyValue( ( ((int)input.red)/255.0 ) * 127 );
 14461  0601  085C               	movf	(LED_setColor@input^(0+128)+1),w
 14462  0602  00DF               	movwf	??_LED_setColor^(0+128)
 14463  0603  01E0               	clrf	(??_LED_setColor^(0+128)+1)
 14464  0604  01E1               	clrf	(??_LED_setColor^(0+128)+2)
 14465  0605  01E2               	clrf	(??_LED_setColor^(0+128)+3)
 14466  0606  0862               	movf	(??_LED_setColor+3)^(0+128),w
 14467  0607  0140               	movlb	0	; select bank0
 14468  0608  00A3               	movwf	___xxtofl@val+3
 14469  0609  0141               	movlb	1	; select bank1
 14470  060A  0861               	movf	(??_LED_setColor+2)^(0+128),w
 14471  060B  0140               	movlb	0	; select bank0
 14472  060C  00A2               	movwf	___xxtofl@val+2
 14473  060D  0141               	movlb	1	; select bank1
 14474  060E  0860               	movf	(??_LED_setColor+1)^(0+128),w
 14475  060F  0140               	movlb	0	; select bank0
 14476  0610  00A1               	movwf	___xxtofl@val+1
 14477  0611  0141               	movlb	1	; select bank1
 14478  0612  085F               	movf	??_LED_setColor^(0+128),w
 14479  0613  0140               	movlb	0	; select bank0
 14480  0614  00A0               	movwf	___xxtofl@val
 14481  0615  3001               	movlw	1
 14482  0616  3196  26D1  3185   	fcall	___xxtofl
 14483  0619  0140               	movlb	0	; select bank0
 14484  061A  0823               	movf	?___xxtofl+3,w
 14485  061B  00B5               	movwf	___fldiv@b+3
 14486  061C  0822               	movf	?___xxtofl+2,w
 14487  061D  00B4               	movwf	___fldiv@b+2
 14488  061E  0821               	movf	?___xxtofl+1,w
 14489  061F  00B3               	movwf	___fldiv@b+1
 14490  0620  0820               	movf	?___xxtofl,w
 14491  0621  00B2               	movwf	___fldiv@b
 14492  0622  3043               	movlw	67
 14493  0623  00B1               	movwf	___fldiv@a+3
 14494  0624  307F               	movlw	127
 14495  0625  00B0               	movwf	___fldiv@a+2
 14496  0626  3000               	movlw	0
 14497  0627  00AF               	movwf	___fldiv@a+1
 14498  0628  3000               	movlw	0
 14499  0629  00AE               	movwf	___fldiv@a
 14500  062A  3184  2483  3185   	fcall	___fldiv
 14501  062D  0140               	movlb	0	; select bank0
 14502  062E  0831               	movf	?___fldiv+3,w
 14503  062F  00CF               	movwf	___flmul@a+3
 14504  0630  0830               	movf	?___fldiv+2,w
 14505  0631  00CE               	movwf	___flmul@a+2
 14506  0632  082F               	movf	?___fldiv+1,w
 14507  0633  00CD               	movwf	___flmul@a+1
 14508  0634  082E               	movf	?___fldiv,w
 14509  0635  00CC               	movwf	___flmul@a
 14510  0636  3042               	movlw	66
 14511  0637  00CB               	movwf	___flmul@b+3
 14512  0638  30FE               	movlw	254
 14513  0639  00CA               	movwf	___flmul@b+2
 14514  063A  3000               	movlw	0
 14515  063B  00C9               	movwf	___flmul@b+1
 14516  063C  3000               	movlw	0
 14517  063D  00C8               	movwf	___flmul@b
 14518  063E  3180  208A  3185   	fcall	___flmul
 14519  0641  0140               	movlb	0	; select bank0
 14520  0642  084B               	movf	?___flmul+3,w
 14521  0643  00E5               	movwf	___fltol@f1+3
 14522  0644  084A               	movf	?___flmul+2,w
 14523  0645  00E4               	movwf	___fltol@f1+2
 14524  0646  0849               	movf	?___flmul+1,w
 14525  0647  00E3               	movwf	___fltol@f1+1
 14526  0648  0848               	movf	?___flmul,w
 14527  0649  00E2               	movwf	___fltol@f1
 14528  064A  3194  249F  3185   	fcall	___fltol
 14529  064D  0140               	movlb	0	; select bank0
 14530  064E  0863               	movf	?___fltol+1,w
 14531  064F  0141               	movlb	1	; select bank1
 14532  0650  00C6               	movwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128)
 14533  0651  0140               	movlb	0	; select bank0
 14534  0652  0862               	movf	?___fltol,w
 14535  0653  0141               	movlb	1	; select bank1
 14536  0654  00C5               	movwf	PWM1_LoadDutyValue@dutyValue^(0+128)
 14537  0655  319E  2691  3185   	fcall	_PWM1_LoadDutyValue
 14538                           
 14539                           ;led.c: 28:         PWM2_LoadDutyValue( ( ((int)input.green)/255.0 ) * 127 );
 14540  0658  0141               	movlb	1	; select bank1
 14541  0659  085D               	movf	(LED_setColor@input^(0+128)+2),w
 14542  065A  00DF               	movwf	??_LED_setColor^(0+128)
 14543  065B  01E0               	clrf	(??_LED_setColor^(0+128)+1)
 14544  065C  01E1               	clrf	(??_LED_setColor^(0+128)+2)
 14545  065D  01E2               	clrf	(??_LED_setColor^(0+128)+3)
 14546  065E  0862               	movf	(??_LED_setColor+3)^(0+128),w
 14547  065F  0140               	movlb	0	; select bank0
 14548  0660  00A3               	movwf	___xxtofl@val+3
 14549  0661  0141               	movlb	1	; select bank1
 14550  0662  0861               	movf	(??_LED_setColor+2)^(0+128),w
 14551  0663  0140               	movlb	0	; select bank0
 14552  0664  00A2               	movwf	___xxtofl@val+2
 14553  0665  0141               	movlb	1	; select bank1
 14554  0666  0860               	movf	(??_LED_setColor+1)^(0+128),w
 14555  0667  0140               	movlb	0	; select bank0
 14556  0668  00A1               	movwf	___xxtofl@val+1
 14557  0669  0141               	movlb	1	; select bank1
 14558  066A  085F               	movf	??_LED_setColor^(0+128),w
 14559  066B  0140               	movlb	0	; select bank0
 14560  066C  00A0               	movwf	___xxtofl@val
 14561  066D  3001               	movlw	1
 14562  066E  3196  26D1  3185   	fcall	___xxtofl
 14563  0671  0140               	movlb	0	; select bank0
 14564  0672  0823               	movf	?___xxtofl+3,w
 14565  0673  00B5               	movwf	___fldiv@b+3
 14566  0674  0822               	movf	?___xxtofl+2,w
 14567  0675  00B4               	movwf	___fldiv@b+2
 14568  0676  0821               	movf	?___xxtofl+1,w
 14569  0677  00B3               	movwf	___fldiv@b+1
 14570  0678  0820               	movf	?___xxtofl,w
 14571  0679  00B2               	movwf	___fldiv@b
 14572  067A  3043               	movlw	67
 14573  067B  00B1               	movwf	___fldiv@a+3
 14574  067C  307F               	movlw	127
 14575  067D  00B0               	movwf	___fldiv@a+2
 14576  067E  3000               	movlw	0
 14577  067F  00AF               	movwf	___fldiv@a+1
 14578  0680  3000               	movlw	0
 14579  0681  00AE               	movwf	___fldiv@a
 14580  0682  3184  2483  3185   	fcall	___fldiv
 14581  0685  0140               	movlb	0	; select bank0
 14582  0686  0831               	movf	?___fldiv+3,w
 14583  0687  00CF               	movwf	___flmul@a+3
 14584  0688  0830               	movf	?___fldiv+2,w
 14585  0689  00CE               	movwf	___flmul@a+2
 14586  068A  082F               	movf	?___fldiv+1,w
 14587  068B  00CD               	movwf	___flmul@a+1
 14588  068C  082E               	movf	?___fldiv,w
 14589  068D  00CC               	movwf	___flmul@a
 14590  068E  3042               	movlw	66
 14591  068F  00CB               	movwf	___flmul@b+3
 14592  0690  30FE               	movlw	254
 14593  0691  00CA               	movwf	___flmul@b+2
 14594  0692  3000               	movlw	0
 14595  0693  00C9               	movwf	___flmul@b+1
 14596  0694  3000               	movlw	0
 14597  0695  00C8               	movwf	___flmul@b
 14598  0696  3180  208A  3185   	fcall	___flmul
 14599  0699  0140               	movlb	0	; select bank0
 14600  069A  084B               	movf	?___flmul+3,w
 14601  069B  00E5               	movwf	___fltol@f1+3
 14602  069C  084A               	movf	?___flmul+2,w
 14603  069D  00E4               	movwf	___fltol@f1+2
 14604  069E  0849               	movf	?___flmul+1,w
 14605  069F  00E3               	movwf	___fltol@f1+1
 14606  06A0  0848               	movf	?___flmul,w
 14607  06A1  00E2               	movwf	___fltol@f1
 14608  06A2  3194  249F  3185   	fcall	___fltol
 14609  06A5  0140               	movlb	0	; select bank0
 14610  06A6  0863               	movf	?___fltol+1,w
 14611  06A7  0141               	movlb	1	; select bank1
 14612  06A8  00C6               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128)
 14613  06A9  0140               	movlb	0	; select bank0
 14614  06AA  0862               	movf	?___fltol,w
 14615  06AB  0141               	movlb	1	; select bank1
 14616  06AC  00C5               	movwf	PWM2_LoadDutyValue@dutyValue^(0+128)
 14617  06AD  319E  26AF  3185   	fcall	_PWM2_LoadDutyValue
 14618                           
 14619                           ;led.c: 29:         PWM3_LoadDutyValue( ( ((int)input.blue)/255.0 ) * 127 );
 14620  06B0  0141               	movlb	1	; select bank1
 14621  06B1  085E               	movf	(LED_setColor@input^(0+128)+3),w
 14622  06B2  00DF               	movwf	??_LED_setColor^(0+128)
 14623  06B3  01E0               	clrf	(??_LED_setColor^(0+128)+1)
 14624  06B4  01E1               	clrf	(??_LED_setColor^(0+128)+2)
 14625  06B5  01E2               	clrf	(??_LED_setColor^(0+128)+3)
 14626  06B6  0862               	movf	(??_LED_setColor+3)^(0+128),w
 14627  06B7  0140               	movlb	0	; select bank0
 14628  06B8  00A3               	movwf	___xxtofl@val+3
 14629  06B9  0141               	movlb	1	; select bank1
 14630  06BA  0861               	movf	(??_LED_setColor+2)^(0+128),w
 14631  06BB  0140               	movlb	0	; select bank0
 14632  06BC  00A2               	movwf	___xxtofl@val+2
 14633  06BD  0141               	movlb	1	; select bank1
 14634  06BE  0860               	movf	(??_LED_setColor+1)^(0+128),w
 14635  06BF  0140               	movlb	0	; select bank0
 14636  06C0  00A1               	movwf	___xxtofl@val+1
 14637  06C1  0141               	movlb	1	; select bank1
 14638  06C2  085F               	movf	??_LED_setColor^(0+128),w
 14639  06C3  0140               	movlb	0	; select bank0
 14640  06C4  00A0               	movwf	___xxtofl@val
 14641  06C5  3001               	movlw	1
 14642  06C6  3196  26D1  3185   	fcall	___xxtofl
 14643  06C9  0140               	movlb	0	; select bank0
 14644  06CA  0823               	movf	?___xxtofl+3,w
 14645  06CB  00B5               	movwf	___fldiv@b+3
 14646  06CC  0822               	movf	?___xxtofl+2,w
 14647  06CD  00B4               	movwf	___fldiv@b+2
 14648  06CE  0821               	movf	?___xxtofl+1,w
 14649  06CF  00B3               	movwf	___fldiv@b+1
 14650  06D0  0820               	movf	?___xxtofl,w
 14651  06D1  00B2               	movwf	___fldiv@b
 14652  06D2  3043               	movlw	67
 14653  06D3  00B1               	movwf	___fldiv@a+3
 14654  06D4  307F               	movlw	127
 14655  06D5  00B0               	movwf	___fldiv@a+2
 14656  06D6  3000               	movlw	0
 14657  06D7  00AF               	movwf	___fldiv@a+1
 14658  06D8  3000               	movlw	0
 14659  06D9  00AE               	movwf	___fldiv@a
 14660  06DA  3184  2483  3185   	fcall	___fldiv
 14661  06DD  0140               	movlb	0	; select bank0
 14662  06DE  0831               	movf	?___fldiv+3,w
 14663  06DF  00CF               	movwf	___flmul@a+3
 14664  06E0  0830               	movf	?___fldiv+2,w
 14665  06E1  00CE               	movwf	___flmul@a+2
 14666  06E2  082F               	movf	?___fldiv+1,w
 14667  06E3  00CD               	movwf	___flmul@a+1
 14668  06E4  082E               	movf	?___fldiv,w
 14669  06E5  00CC               	movwf	___flmul@a
 14670  06E6  3042               	movlw	66
 14671  06E7  00CB               	movwf	___flmul@b+3
 14672  06E8  30FE               	movlw	254
 14673  06E9  00CA               	movwf	___flmul@b+2
 14674  06EA  3000               	movlw	0
 14675  06EB  00C9               	movwf	___flmul@b+1
 14676  06EC  3000               	movlw	0
 14677  06ED  00C8               	movwf	___flmul@b
 14678  06EE  3180  208A  3185   	fcall	___flmul
 14679  06F1  0140               	movlb	0	; select bank0
 14680  06F2  084B               	movf	?___flmul+3,w
 14681  06F3  00E5               	movwf	___fltol@f1+3
 14682  06F4  084A               	movf	?___flmul+2,w
 14683  06F5  00E4               	movwf	___fltol@f1+2
 14684  06F6  0849               	movf	?___flmul+1,w
 14685  06F7  00E3               	movwf	___fltol@f1+1
 14686  06F8  0848               	movf	?___flmul,w
 14687  06F9  00E2               	movwf	___fltol@f1
 14688  06FA  3194  249F  3185   	fcall	___fltol
 14689  06FD  0140               	movlb	0	; select bank0
 14690  06FE  0863               	movf	?___fltol+1,w
 14691  06FF  0141               	movlb	1	; select bank1
 14692  0700  00C6               	movwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128)
 14693  0701  0140               	movlb	0	; select bank0
 14694  0702  0862               	movf	?___fltol,w
 14695  0703  0141               	movlb	1	; select bank1
 14696  0704  00C5               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
 14697  0705  319E  26CD  3185   	fcall	_PWM3_LoadDutyValue
 14698                           
 14699                           ;led.c: 30:         PWM4_LoadDutyValue( ( ((int)input.white)/255.0 ) * 127 );
 14700  0708  0141               	movlb	1	; select bank1
 14701  0709  085B               	movf	LED_setColor@input^(0+128),w
 14702  070A  00DF               	movwf	??_LED_setColor^(0+128)
 14703  070B  01E0               	clrf	(??_LED_setColor^(0+128)+1)
 14704  070C  01E1               	clrf	(??_LED_setColor^(0+128)+2)
 14705  070D  01E2               	clrf	(??_LED_setColor^(0+128)+3)
 14706  070E  0862               	movf	(??_LED_setColor+3)^(0+128),w
 14707  070F  0140               	movlb	0	; select bank0
 14708  0710  00A3               	movwf	___xxtofl@val+3
 14709  0711  0141               	movlb	1	; select bank1
 14710  0712  0861               	movf	(??_LED_setColor+2)^(0+128),w
 14711  0713  0140               	movlb	0	; select bank0
 14712  0714  00A2               	movwf	___xxtofl@val+2
 14713  0715  0141               	movlb	1	; select bank1
 14714  0716  0860               	movf	(??_LED_setColor+1)^(0+128),w
 14715  0717  0140               	movlb	0	; select bank0
 14716  0718  00A1               	movwf	___xxtofl@val+1
 14717  0719  0141               	movlb	1	; select bank1
 14718  071A  085F               	movf	??_LED_setColor^(0+128),w
 14719  071B  0140               	movlb	0	; select bank0
 14720  071C  00A0               	movwf	___xxtofl@val
 14721  071D  3001               	movlw	1
 14722  071E  3196  26D1  3185   	fcall	___xxtofl
 14723  0721  0140               	movlb	0	; select bank0
 14724  0722  0823               	movf	?___xxtofl+3,w
 14725  0723  00B5               	movwf	___fldiv@b+3
 14726  0724  0822               	movf	?___xxtofl+2,w
 14727  0725  00B4               	movwf	___fldiv@b+2
 14728  0726  0821               	movf	?___xxtofl+1,w
 14729  0727  00B3               	movwf	___fldiv@b+1
 14730  0728  0820               	movf	?___xxtofl,w
 14731  0729  00B2               	movwf	___fldiv@b
 14732  072A  3043               	movlw	67
 14733  072B  00B1               	movwf	___fldiv@a+3
 14734  072C  307F               	movlw	127
 14735  072D  00B0               	movwf	___fldiv@a+2
 14736  072E  3000               	movlw	0
 14737  072F  00AF               	movwf	___fldiv@a+1
 14738  0730  3000               	movlw	0
 14739  0731  00AE               	movwf	___fldiv@a
 14740  0732  3184  2483  3185   	fcall	___fldiv
 14741  0735  0140               	movlb	0	; select bank0
 14742  0736  0831               	movf	?___fldiv+3,w
 14743  0737  00CF               	movwf	___flmul@a+3
 14744  0738  0830               	movf	?___fldiv+2,w
 14745  0739  00CE               	movwf	___flmul@a+2
 14746  073A  082F               	movf	?___fldiv+1,w
 14747  073B  00CD               	movwf	___flmul@a+1
 14748  073C  082E               	movf	?___fldiv,w
 14749  073D  00CC               	movwf	___flmul@a
 14750  073E  3042               	movlw	66
 14751  073F  00CB               	movwf	___flmul@b+3
 14752  0740  30FE               	movlw	254
 14753  0741  00CA               	movwf	___flmul@b+2
 14754  0742  3000               	movlw	0
 14755  0743  00C9               	movwf	___flmul@b+1
 14756  0744  3000               	movlw	0
 14757  0745  00C8               	movwf	___flmul@b
 14758  0746  3180  208A  3185   	fcall	___flmul
 14759  0749  0140               	movlb	0	; select bank0
 14760  074A  084B               	movf	?___flmul+3,w
 14761  074B  00E5               	movwf	___fltol@f1+3
 14762  074C  084A               	movf	?___flmul+2,w
 14763  074D  00E4               	movwf	___fltol@f1+2
 14764  074E  0849               	movf	?___flmul+1,w
 14765  074F  00E3               	movwf	___fltol@f1+1
 14766  0750  0848               	movf	?___flmul,w
 14767  0751  00E2               	movwf	___fltol@f1
 14768  0752  3194  249F  3185   	fcall	___fltol
 14769  0755  0140               	movlb	0	; select bank0
 14770  0756  0863               	movf	?___fltol+1,w
 14771  0757  0141               	movlb	1	; select bank1
 14772  0758  00C6               	movwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128)
 14773  0759  0140               	movlb	0	; select bank0
 14774  075A  0862               	movf	?___fltol,w
 14775  075B  0141               	movlb	1	; select bank1
 14776  075C  00C5               	movwf	PWM4_LoadDutyValue@dutyValue^(0+128)
 14777  075D  319E  26EB         	fcall	_PWM4_LoadDutyValue
 14778  075F  0008               	return
 14779  0760                     __end_of_LED_setColor:	
 14780                           
 14781                           	psect	text27
 14782  16D1                     __ptext27:	
 14783 ;; *************** function ___xxtofl *****************
 14784 ;; Defined at:
 14785 ;;		line 10 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
 14786 ;; Parameters:    Size  Location     Type
 14787 ;;  sign            1    wreg     unsigned char 
 14788 ;;  val             4    0[BANK0 ] long 
 14789 ;; Auto vars:     Size  Location     Type
 14790 ;;  sign            1    8[BANK0 ] unsigned char 
 14791 ;;  arg             4   10[BANK0 ] unsigned long 
 14792 ;;  exp             1    9[BANK0 ] unsigned char 
 14793 ;; Return value:  Size  Location     Type
 14794 ;;                  4    0[BANK0 ] unsigned char 
 14795 ;; Registers used:
 14796 ;;		wreg, status,2, status,0
 14797 ;; Tracked objects:
 14798 ;;		On entry : 0/0
 14799 ;;		On exit  : 0/0
 14800 ;;		Unchanged: 0/0
 14801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14802 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14803 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14804 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14805 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14806 ;;Total ram usage:       14 bytes
 14807 ;; Hardware stack levels used:    1
 14808 ;; Hardware stack levels required when called:    4
 14809 ;; This function calls:
 14810 ;;		Nothing
 14811 ;; This function is called by:
 14812 ;;		_LED_setColor
 14813 ;;		_beatBrightnessCalculation
 14814 ;; This function uses a non-reentrant model
 14815 ;;
 14816                           
 14817                           
 14818                           ;psect for function ___xxtofl
 14819  16D1                     ___xxtofl:	
 14820                           
 14821                           ;incstack = 0
 14822                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 14823                           ;___xxtofl@sign stored from wreg
 14824  16D1  0140               	movlb	0	; select bank0
 14825  16D2  00A8               	movwf	___xxtofl@sign
 14826  16D3  0828               	movf	___xxtofl@sign,w
 14827  16D4  1D03               	btfss	3,2
 14828  16D5  1FA3               	btfss	___xxtofl@val+3,7
 14829  16D6  2EE7               	goto	l7992
 14830  16D7  0920               	comf	___xxtofl@val,w
 14831  16D8  00AA               	movwf	___xxtofl@arg
 14832  16D9  0921               	comf	___xxtofl@val+1,w
 14833  16DA  00AB               	movwf	___xxtofl@arg+1
 14834  16DB  0922               	comf	___xxtofl@val+2,w
 14835  16DC  00AC               	movwf	___xxtofl@arg+2
 14836  16DD  0923               	comf	___xxtofl@val+3,w
 14837  16DE  00AD               	movwf	___xxtofl@arg+3
 14838  16DF  0AAA               	incf	___xxtofl@arg,f
 14839  16E0  1903               	skipnz
 14840  16E1  0AAB               	incf	___xxtofl@arg+1,f
 14841  16E2  1903               	skipnz
 14842  16E3  0AAC               	incf	___xxtofl@arg+2,f
 14843  16E4  1903               	skipnz
 14844  16E5  0AAD               	incf	___xxtofl@arg+3,f
 14845  16E6  2EEF               	goto	l2162
 14846  16E7                     l7992:	
 14847  16E7  0823               	movf	___xxtofl@val+3,w
 14848  16E8  00AD               	movwf	___xxtofl@arg+3
 14849  16E9  0822               	movf	___xxtofl@val+2,w
 14850  16EA  00AC               	movwf	___xxtofl@arg+2
 14851  16EB  0821               	movf	___xxtofl@val+1,w
 14852  16EC  00AB               	movwf	___xxtofl@arg+1
 14853  16ED  0820               	movf	___xxtofl@val,w
 14854  16EE  00AA               	movwf	___xxtofl@arg
 14855  16EF                     l2162:	
 14856  16EF  0823               	movf	___xxtofl@val+3,w
 14857  16F0  0422               	iorwf	___xxtofl@val+2,w
 14858  16F1  0421               	iorwf	___xxtofl@val+1,w
 14859  16F2  0420               	iorwf	___xxtofl@val,w
 14860  16F3  1D03               	skipz
 14861  16F4  2EFE               	goto	l7998
 14862  16F5  3000               	movlw	0
 14863  16F6  00A3               	movwf	?___xxtofl+3
 14864  16F7  3000               	movlw	0
 14865  16F8  00A2               	movwf	?___xxtofl+2
 14866  16F9  3000               	movlw	0
 14867  16FA  00A1               	movwf	?___xxtofl+1
 14868  16FB  3000               	movlw	0
 14869  16FC  00A0               	movwf	?___xxtofl
 14870  16FD  0008               	return
 14871  16FE                     l7998:	
 14872  16FE  3096               	movlw	150
 14873  16FF  00A4               	movwf	??___xxtofl
 14874  1700  0824               	movf	??___xxtofl,w
 14875  1701  00A9               	movwf	___xxtofl@exp
 14876  1702                     l8002:	
 14877  1702  30FE               	movlw	254
 14878  1703  052D               	andwf	___xxtofl@arg+3,w
 14879  1704  1903               	btfsc	3,2
 14880  1705  2F25               	goto	l2168
 14881  1706  3001               	movlw	1
 14882  1707  00A4               	movwf	??___xxtofl
 14883  1708  0824               	movf	??___xxtofl,w
 14884  1709  07A9               	addwf	___xxtofl@exp,f
 14885  170A  3001               	movlw	1
 14886  170B                     u8015:	
 14887  170B  36AD               	lsrf	___xxtofl@arg+3,f
 14888  170C  0CAC               	rrf	___xxtofl@arg+2,f
 14889  170D  0CAB               	rrf	___xxtofl@arg+1,f
 14890  170E  0CAA               	rrf	___xxtofl@arg,f
 14891  170F  0B89               	decfsz	9,f
 14892  1710  2F0B               	goto	u8015
 14893  1711  2F02               	goto	l8002
 14894  1712                     l8004:	
 14895  1712  3001               	movlw	1
 14896  1713  00A4               	movwf	??___xxtofl
 14897  1714  0824               	movf	??___xxtofl,w
 14898  1715  07A9               	addwf	___xxtofl@exp,f
 14899  1716  3001               	movlw	1
 14900  1717  07AA               	addwf	___xxtofl@arg,f
 14901  1718  3000               	movlw	0
 14902  1719  3DAB               	addwfc	___xxtofl@arg+1,f
 14903  171A  3000               	movlw	0
 14904  171B  3DAC               	addwfc	___xxtofl@arg+2,f
 14905  171C  3000               	movlw	0
 14906  171D  3DAD               	addwfc	___xxtofl@arg+3,f
 14907  171E  3001               	movlw	1
 14908  171F                     u8035:	
 14909  171F  36AD               	lsrf	___xxtofl@arg+3,f
 14910  1720  0CAC               	rrf	___xxtofl@arg+2,f
 14911  1721  0CAB               	rrf	___xxtofl@arg+1,f
 14912  1722  0CAA               	rrf	___xxtofl@arg,f
 14913  1723  0B89               	decfsz	9,f
 14914  1724  2F1F               	goto	u8035
 14915  1725                     l2168:	
 14916  1725  30FF               	movlw	255
 14917  1726  052D               	andwf	___xxtofl@arg+3,w
 14918  1727  1903               	btfsc	3,2
 14919  1728  2F37               	goto	l8012
 14920  1729  2F12               	goto	l8004
 14921  172A                     l8014:	
 14922  172A  3002               	movlw	2
 14923  172B  0229               	subwf	___xxtofl@exp,w
 14924  172C  1C03               	btfss	3,0
 14925  172D  2F39               	goto	l2175
 14926  172E  3001               	movlw	1
 14927  172F  02A9               	subwf	___xxtofl@exp,f
 14928  1730  3001               	movlw	1
 14929  1731                     u8055:	
 14930  1731  35AA               	lslf	___xxtofl@arg,f
 14931  1732  0DAB               	rlf	___xxtofl@arg+1,f
 14932  1733  0DAC               	rlf	___xxtofl@arg+2,f
 14933  1734  0DAD               	rlf	___xxtofl@arg+3,f
 14934  1735  0B89               	decfsz	9,f
 14935  1736  2F31               	goto	u8055
 14936  1737                     l8012:	
 14937  1737  1FAC               	btfss	___xxtofl@arg+2,7
 14938  1738  2F2A               	goto	l8014
 14939  1739                     l2175:	
 14940  1739  1829               	btfsc	___xxtofl@exp,0
 14941  173A  2F43               	goto	l2176
 14942  173B  30FF               	movlw	255
 14943  173C  05AA               	andwf	___xxtofl@arg,f
 14944  173D  30FF               	movlw	255
 14945  173E  05AB               	andwf	___xxtofl@arg+1,f
 14946  173F  307F               	movlw	127
 14947  1740  05AC               	andwf	___xxtofl@arg+2,f
 14948  1741  30FF               	movlw	255
 14949  1742  05AD               	andwf	___xxtofl@arg+3,f
 14950  1743                     l2176:	
 14951  1743  1003               	clrc
 14952  1744  0CA9               	rrf	___xxtofl@exp,f
 14953  1745  0829               	movf	___xxtofl@exp,w
 14954  1746  00A4               	movwf	??___xxtofl
 14955  1747  01A5               	clrf	??___xxtofl+1
 14956  1748  01A6               	clrf	??___xxtofl+2
 14957  1749  01A7               	clrf	??___xxtofl+3
 14958  174A  3018               	movlw	24
 14959  174B                     u8095:	
 14960  174B  35A4               	lslf	??___xxtofl,f
 14961  174C  0DA5               	rlf	??___xxtofl+1,f
 14962  174D  0DA6               	rlf	??___xxtofl+2,f
 14963  174E  0DA7               	rlf	??___xxtofl+3,f
 14964  174F  0B89               	decfsz	9,f
 14965  1750  2F4B               	goto	u8095
 14966  1751  0824               	movf	??___xxtofl,w
 14967  1752  04AA               	iorwf	___xxtofl@arg,f
 14968  1753  0825               	movf	??___xxtofl+1,w
 14969  1754  04AB               	iorwf	___xxtofl@arg+1,f
 14970  1755  0826               	movf	??___xxtofl+2,w
 14971  1756  04AC               	iorwf	___xxtofl@arg+2,f
 14972  1757  0827               	movf	??___xxtofl+3,w
 14973  1758  04AD               	iorwf	___xxtofl@arg+3,f
 14974  1759  0828               	movf	___xxtofl@sign,w
 14975  175A  1D03               	btfss	3,2
 14976  175B  1FA3               	btfss	___xxtofl@val+3,7
 14977  175C  2F5E               	goto	l8026
 14978  175D  17AD               	bsf	___xxtofl@arg+3,7
 14979  175E                     l8026:	
 14980  175E  082D               	movf	___xxtofl@arg+3,w
 14981  175F  00A3               	movwf	?___xxtofl+3
 14982  1760  082C               	movf	___xxtofl@arg+2,w
 14983  1761  00A2               	movwf	?___xxtofl+2
 14984  1762  082B               	movf	___xxtofl@arg+1,w
 14985  1763  00A1               	movwf	?___xxtofl+1
 14986  1764  082A               	movf	___xxtofl@arg,w
 14987  1765  00A0               	movwf	?___xxtofl
 14988  1766  0008               	return
 14989  1767                     __end_of___xxtofl:	
 14990                           
 14991                           	psect	text28
 14992  149F                     __ptext28:	
 14993 ;; *************** function ___fltol *****************
 14994 ;; Defined at:
 14995 ;;		line 43 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
 14996 ;; Parameters:    Size  Location     Type
 14997 ;;  f1              4   66[BANK0 ] unsigned char 
 14998 ;; Auto vars:     Size  Location     Type
 14999 ;;  exp1            1   76[BANK0 ] unsigned char 
 15000 ;;  sign1           1   75[BANK0 ] unsigned char 
 15001 ;; Return value:  Size  Location     Type
 15002 ;;                  4   66[BANK0 ] long 
 15003 ;; Registers used:
 15004 ;;		wreg, status,2, status,0
 15005 ;; Tracked objects:
 15006 ;;		On entry : 0/0
 15007 ;;		On exit  : 0/0
 15008 ;;		Unchanged: 0/0
 15009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15010 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15011 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15012 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15013 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15014 ;;Total ram usage:       11 bytes
 15015 ;; Hardware stack levels used:    1
 15016 ;; Hardware stack levels required when called:    4
 15017 ;; This function calls:
 15018 ;;		Nothing
 15019 ;; This function is called by:
 15020 ;;		_LED_setColor
 15021 ;;		_beatColorCreator
 15022 ;;		_beatBrightnessCalculation
 15023 ;; This function uses a non-reentrant model
 15024 ;;
 15025                           
 15026                           
 15027                           ;psect for function ___fltol
 15028  149F                     ___fltol:	
 15029                           
 15030                           ;incstack = 0
 15031                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 15032  149F  1003               	clrc
 15033  14A0  0140               	movlb	0	; select bank0
 15034  14A1  0D64               	rlf	___fltol@f1+2,w
 15035  14A2  0D65               	rlf	___fltol@f1+3,w
 15036  14A3  00E6               	movwf	??___fltol
 15037  14A4  0866               	movf	??___fltol,w
 15038  14A5  00EC               	movwf	___fltol@exp1
 15039  14A6  086C               	movf	___fltol@exp1,w
 15040  14A7  1D03               	btfss	3,2
 15041  14A8  2CB2               	goto	l7676
 15042  14A9                     l7672:	
 15043  14A9  3000               	movlw	0
 15044  14AA  00E5               	movwf	?___fltol+3
 15045  14AB  3000               	movlw	0
 15046  14AC  00E4               	movwf	?___fltol+2
 15047  14AD  3000               	movlw	0
 15048  14AE  00E3               	movwf	?___fltol+1
 15049  14AF  3000               	movlw	0
 15050  14B0  00E2               	movwf	?___fltol
 15051  14B1  0008               	return
 15052  14B2                     l7676:	
 15053  14B2  0862               	movf	___fltol@f1,w
 15054  14B3  00E6               	movwf	??___fltol
 15055  14B4  0863               	movf	___fltol@f1+1,w
 15056  14B5  00E7               	movwf	??___fltol+1
 15057  14B6  0864               	movf	___fltol@f1+2,w
 15058  14B7  00E8               	movwf	??___fltol+2
 15059  14B8  0865               	movf	___fltol@f1+3,w
 15060  14B9  00E9               	movwf	??___fltol+3
 15061  14BA  301F               	movlw	31
 15062  14BB                     u7345:	
 15063  14BB  36E9               	lsrf	??___fltol+3,f
 15064  14BC  0CE8               	rrf	??___fltol+2,f
 15065  14BD  0CE7               	rrf	??___fltol+1,f
 15066  14BE  0CE6               	rrf	??___fltol,f
 15067  14BF  0B89               	decfsz	9,f
 15068  14C0  2CBB               	goto	u7345
 15069  14C1  0866               	movf	??___fltol,w
 15070  14C2  00EA               	movwf	??___fltol+4
 15071  14C3  086A               	movf	??___fltol+4,w
 15072  14C4  00EB               	movwf	___fltol@sign1
 15073  14C5  17E4               	bsf	___fltol@f1+2,7
 15074  14C6  30FF               	movlw	255
 15075  14C7  05E2               	andwf	___fltol@f1,f
 15076  14C8  30FF               	movlw	255
 15077  14C9  05E3               	andwf	___fltol@f1+1,f
 15078  14CA  30FF               	movlw	255
 15079  14CB  05E4               	andwf	___fltol@f1+2,f
 15080  14CC  3000               	movlw	0
 15081  14CD  05E5               	andwf	___fltol@f1+3,f
 15082  14CE  3096               	movlw	150
 15083  14CF  02EC               	subwf	___fltol@exp1,f
 15084  14D0  1FEC               	btfss	___fltol@exp1,7
 15085  14D1  2CE5               	goto	l7694
 15086  14D2  086C               	movf	___fltol@exp1,w
 15087  14D3  3A80               	xorlw	128
 15088  14D4  3E97               	addlw	151
 15089  14D5  1C03               	btfss	3,0
 15090  14D6  2CA9               	goto	l7672
 15091  14D7                     l7692:	
 15092  14D7  3001               	movlw	1
 15093  14D8                     u7375:	
 15094  14D8  36E5               	lsrf	___fltol@f1+3,f
 15095  14D9  0CE4               	rrf	___fltol@f1+2,f
 15096  14DA  0CE3               	rrf	___fltol@f1+1,f
 15097  14DB  0CE2               	rrf	___fltol@f1,f
 15098  14DC  0B89               	decfsz	9,f
 15099  14DD  2CD8               	goto	u7375
 15100  14DE  3001               	movlw	1
 15101  14DF  00E6               	movwf	??___fltol
 15102  14E0  0866               	movf	??___fltol,w
 15103  14E1  07EC               	addwf	___fltol@exp1,f
 15104  14E2  1903               	btfsc	3,2
 15105  14E3  2CF6               	goto	l7702
 15106  14E4  2CD7               	goto	l7692
 15107  14E5                     l7694:	
 15108  14E5  3020               	movlw	32
 15109  14E6  026C               	subwf	___fltol@exp1,w
 15110  14E7  1803               	btfsc	3,0
 15111  14E8  2CA9               	goto	l7672
 15112  14E9                     l1928:	
 15113  14E9  086C               	movf	___fltol@exp1,w
 15114  14EA  1903               	btfsc	3,2
 15115  14EB  2CF6               	goto	l7702
 15116  14EC  3001               	movlw	1
 15117  14ED                     u7405:	
 15118  14ED  35E2               	lslf	___fltol@f1,f
 15119  14EE  0DE3               	rlf	___fltol@f1+1,f
 15120  14EF  0DE4               	rlf	___fltol@f1+2,f
 15121  14F0  0DE5               	rlf	___fltol@f1+3,f
 15122  14F1  0B89               	decfsz	9,f
 15123  14F2  2CED               	goto	u7405
 15124  14F3  3001               	movlw	1
 15125  14F4  02EC               	subwf	___fltol@exp1,f
 15126  14F5  2CE9               	goto	l1928
 15127  14F6                     l7702:	
 15128  14F6  086B               	movf	___fltol@sign1,w
 15129  14F7  1903               	btfsc	3,2
 15130  14F8  0008               	return
 15131  14F9  09E2               	comf	___fltol@f1,f
 15132  14FA  09E3               	comf	___fltol@f1+1,f
 15133  14FB  09E4               	comf	___fltol@f1+2,f
 15134  14FC  09E5               	comf	___fltol@f1+3,f
 15135  14FD  0AE2               	incf	___fltol@f1,f
 15136  14FE  1903               	skipnz
 15137  14FF  0AE3               	incf	___fltol@f1+1,f
 15138  1500  1903               	skipnz
 15139  1501  0AE4               	incf	___fltol@f1+2,f
 15140  1502  1903               	skipnz
 15141  1503  0AE5               	incf	___fltol@f1+3,f
 15142  1504  0008               	return
 15143  1505                     __end_of___fltol:	
 15144                           
 15145                           	psect	text29
 15146  008A                     __ptext29:	
 15147 ;; *************** function ___flmul *****************
 15148 ;; Defined at:
 15149 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
 15150 ;; Parameters:    Size  Location     Type
 15151 ;;  b               4   40[BANK0 ] long 
 15152 ;;  a               4   44[BANK0 ] long 
 15153 ;; Auto vars:     Size  Location     Type
 15154 ;;  prod            4   60[BANK0 ] struct .
 15155 ;;  grs             4   55[BANK0 ] unsigned long 
 15156 ;;  temp            2   64[BANK0 ] struct .
 15157 ;;  bexp            1   59[BANK0 ] unsigned char 
 15158 ;;  aexp            1   54[BANK0 ] unsigned char 
 15159 ;;  sign            1   53[BANK0 ] unsigned char 
 15160 ;; Return value:  Size  Location     Type
 15161 ;;                  4   40[BANK0 ] unsigned char 
 15162 ;; Registers used:
 15163 ;;		wreg, status,2, status,0, pclath, cstack
 15164 ;; Tracked objects:
 15165 ;;		On entry : 0/0
 15166 ;;		On exit  : 0/0
 15167 ;;		Unchanged: 0/0
 15168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15169 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15170 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15171 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15172 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15173 ;;Total ram usage:       26 bytes
 15174 ;; Hardware stack levels used:    1
 15175 ;; Hardware stack levels required when called:    5
 15176 ;; This function calls:
 15177 ;;		__Umul8_16
 15178 ;; This function is called by:
 15179 ;;		_LED_setColor
 15180 ;;		_beatBrightnessCalculation
 15181 ;; This function uses a non-reentrant model
 15182 ;;
 15183                           
 15184                           
 15185                           ;psect for function ___flmul
 15186  008A                     ___flmul:	
 15187                           
 15188                           ;incstack = 0
 15189                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 15190  008A  0140               	movlb	0	; select bank0
 15191  008B  084B               	movf	___flmul@b+3,w
 15192  008C  3980               	andlw	128
 15193  008D  00D0               	movwf	??___flmul
 15194  008E  0850               	movf	??___flmul,w
 15195  008F  00D5               	movwf	___flmul@sign
 15196  0090  354B               	lslf	___flmul@b+3,w
 15197  0091  00D0               	movwf	??___flmul
 15198  0092  0850               	movf	??___flmul,w
 15199  0093  00DB               	movwf	___flmul@bexp
 15200  0094  1BCA               	btfsc	___flmul@b+2,7
 15201  0095  145B               	bsf	___flmul@bexp,0
 15202  0096  085B               	movf	___flmul@bexp,w
 15203  0097  1903               	btfsc	3,2
 15204  0098  28A6               	goto	l7862
 15205  0099  0A5B               	incf	___flmul@bexp,w
 15206  009A  1D03               	btfss	3,2
 15207  009B  28A4               	goto	l7860
 15208  009C  3000               	movlw	0
 15209  009D  00CB               	movwf	___flmul@b+3
 15210  009E  3000               	movlw	0
 15211  009F  00CA               	movwf	___flmul@b+2
 15212  00A0  3000               	movlw	0
 15213  00A1  00C9               	movwf	___flmul@b+1
 15214  00A2  3000               	movlw	0
 15215  00A3  00C8               	movwf	___flmul@b
 15216  00A4                     l7860:	
 15217  00A4  17CA               	bsf	___flmul@b+2,7
 15218  00A5  28AE               	goto	l7864
 15219  00A6                     l7862:	
 15220  00A6  3000               	movlw	0
 15221  00A7  00CB               	movwf	___flmul@b+3
 15222  00A8  3000               	movlw	0
 15223  00A9  00CA               	movwf	___flmul@b+2
 15224  00AA  3000               	movlw	0
 15225  00AB  00C9               	movwf	___flmul@b+1
 15226  00AC  3000               	movlw	0
 15227  00AD  00C8               	movwf	___flmul@b
 15228  00AE                     l7864:	
 15229  00AE  084F               	movf	___flmul@a+3,w
 15230  00AF  3980               	andlw	128
 15231  00B0  00D0               	movwf	??___flmul
 15232  00B1  0850               	movf	??___flmul,w
 15233  00B2  06D5               	xorwf	___flmul@sign,f
 15234  00B3  354F               	lslf	___flmul@a+3,w
 15235  00B4  00D0               	movwf	??___flmul
 15236  00B5  0850               	movf	??___flmul,w
 15237  00B6  00D6               	movwf	___flmul@aexp
 15238  00B7  1BCE               	btfsc	___flmul@a+2,7
 15239  00B8  1456               	bsf	___flmul@aexp,0
 15240  00B9  0856               	movf	___flmul@aexp,w
 15241  00BA  1903               	btfsc	3,2
 15242  00BB  28C9               	goto	l7880
 15243  00BC  0A56               	incf	___flmul@aexp,w
 15244  00BD  1D03               	btfss	3,2
 15245  00BE  28C7               	goto	l7878
 15246  00BF  3000               	movlw	0
 15247  00C0  00CF               	movwf	___flmul@a+3
 15248  00C1  3000               	movlw	0
 15249  00C2  00CE               	movwf	___flmul@a+2
 15250  00C3  3000               	movlw	0
 15251  00C4  00CD               	movwf	___flmul@a+1
 15252  00C5  3000               	movlw	0
 15253  00C6  00CC               	movwf	___flmul@a
 15254  00C7                     l7878:	
 15255  00C7  17CE               	bsf	___flmul@a+2,7
 15256  00C8  28D1               	goto	l7882
 15257  00C9                     l7880:	
 15258  00C9  3000               	movlw	0
 15259  00CA  00CF               	movwf	___flmul@a+3
 15260  00CB  3000               	movlw	0
 15261  00CC  00CE               	movwf	___flmul@a+2
 15262  00CD  3000               	movlw	0
 15263  00CE  00CD               	movwf	___flmul@a+1
 15264  00CF  3000               	movlw	0
 15265  00D0  00CC               	movwf	___flmul@a
 15266  00D1                     l7882:	
 15267  00D1  0856               	movf	___flmul@aexp,w
 15268  00D2  1D03               	btfss	3,2
 15269  00D3  085B               	movf	___flmul@bexp,w
 15270  00D4  1D03               	btfss	3,2
 15271  00D5  28DF               	goto	l7890
 15272  00D6  3000               	movlw	0
 15273  00D7  00CB               	movwf	?___flmul+3
 15274  00D8  3000               	movlw	0
 15275  00D9  00CA               	movwf	?___flmul+2
 15276  00DA  3000               	movlw	0
 15277  00DB  00C9               	movwf	?___flmul+1
 15278  00DC  3000               	movlw	0
 15279  00DD  00C8               	movwf	?___flmul
 15280  00DE  0008               	return
 15281  00DF                     l7890:	
 15282  00DF  0848               	movf	___flmul@b,w
 15283  00E0  00D0               	movwf	??___flmul
 15284  00E1  0850               	movf	??___flmul,w
 15285  00E2  00A0               	movwf	__Umul8_16@multiplicand
 15286  00E3  084E               	movf	___flmul@a+2,w
 15287  00E4  319F  2729  3180   	fcall	__Umul8_16
 15288  00E7  0140               	movlb	0	; select bank0
 15289  00E8  0821               	movf	?__Umul8_16+1,w
 15290  00E9  00E1               	movwf	___flmul@temp+1
 15291  00EA  0820               	movf	?__Umul8_16,w
 15292  00EB  00E0               	movwf	___flmul@temp
 15293  00EC  0860               	movf	___flmul@temp,w
 15294  00ED  00D0               	movwf	??___flmul
 15295  00EE  01D1               	clrf	??___flmul+1
 15296  00EF  01D2               	clrf	??___flmul+2
 15297  00F0  01D3               	clrf	??___flmul+3
 15298  00F1  0853               	movf	??___flmul+3,w
 15299  00F2  00DA               	movwf	___flmul@grs+3
 15300  00F3  0852               	movf	??___flmul+2,w
 15301  00F4  00D9               	movwf	___flmul@grs+2
 15302  00F5  0851               	movf	??___flmul+1,w
 15303  00F6  00D8               	movwf	___flmul@grs+1
 15304  00F7  0850               	movf	??___flmul,w
 15305  00F8  00D7               	movwf	___flmul@grs
 15306  00F9  0861               	movf	___flmul@temp+1,w
 15307  00FA  00D0               	movwf	??___flmul
 15308  00FB  01D1               	clrf	??___flmul+1
 15309  00FC  01D2               	clrf	??___flmul+2
 15310  00FD  01D3               	clrf	??___flmul+3
 15311  00FE  0853               	movf	??___flmul+3,w
 15312  00FF  00DF               	movwf	___flmul@prod+3
 15313  0100  0852               	movf	??___flmul+2,w
 15314  0101  00DE               	movwf	___flmul@prod+2
 15315  0102  0851               	movf	??___flmul+1,w
 15316  0103  00DD               	movwf	___flmul@prod+1
 15317  0104  0850               	movf	??___flmul,w
 15318  0105  00DC               	movwf	___flmul@prod
 15319  0106  0849               	movf	___flmul@b+1,w
 15320  0107  00D0               	movwf	??___flmul
 15321  0108  0850               	movf	??___flmul,w
 15322  0109  00A0               	movwf	__Umul8_16@multiplicand
 15323  010A  084D               	movf	___flmul@a+1,w
 15324  010B  319F  2729  3180   	fcall	__Umul8_16
 15325  010E  0140               	movlb	0	; select bank0
 15326  010F  0821               	movf	?__Umul8_16+1,w
 15327  0110  00E1               	movwf	___flmul@temp+1
 15328  0111  0820               	movf	?__Umul8_16,w
 15329  0112  00E0               	movwf	___flmul@temp
 15330  0113  0860               	movf	___flmul@temp,w
 15331  0114  00D0               	movwf	??___flmul
 15332  0115  01D1               	clrf	??___flmul+1
 15333  0116  01D2               	clrf	??___flmul+2
 15334  0117  01D3               	clrf	??___flmul+3
 15335  0118  0850               	movf	??___flmul,w
 15336  0119  07D7               	addwf	___flmul@grs,f
 15337  011A  0851               	movf	??___flmul+1,w
 15338  011B  3DD8               	addwfc	___flmul@grs+1,f
 15339  011C  0852               	movf	??___flmul+2,w
 15340  011D  3DD9               	addwfc	___flmul@grs+2,f
 15341  011E  0853               	movf	??___flmul+3,w
 15342  011F  3DDA               	addwfc	___flmul@grs+3,f
 15343  0120  0861               	movf	___flmul@temp+1,w
 15344  0121  00D0               	movwf	??___flmul
 15345  0122  01D1               	clrf	??___flmul+1
 15346  0123  01D2               	clrf	??___flmul+2
 15347  0124  01D3               	clrf	??___flmul+3
 15348  0125  0850               	movf	??___flmul,w
 15349  0126  07DC               	addwf	___flmul@prod,f
 15350  0127  0851               	movf	??___flmul+1,w
 15351  0128  3DDD               	addwfc	___flmul@prod+1,f
 15352  0129  0852               	movf	??___flmul+2,w
 15353  012A  3DDE               	addwfc	___flmul@prod+2,f
 15354  012B  0853               	movf	??___flmul+3,w
 15355  012C  3DDF               	addwfc	___flmul@prod+3,f
 15356  012D  084A               	movf	___flmul@b+2,w
 15357  012E  00D0               	movwf	??___flmul
 15358  012F  0850               	movf	??___flmul,w
 15359  0130  00A0               	movwf	__Umul8_16@multiplicand
 15360  0131  084C               	movf	___flmul@a,w
 15361  0132  319F  2729  3180   	fcall	__Umul8_16
 15362  0135  0140               	movlb	0	; select bank0
 15363  0136  0821               	movf	?__Umul8_16+1,w
 15364  0137  00E1               	movwf	___flmul@temp+1
 15365  0138  0820               	movf	?__Umul8_16,w
 15366  0139  00E0               	movwf	___flmul@temp
 15367  013A  0860               	movf	___flmul@temp,w
 15368  013B  00D0               	movwf	??___flmul
 15369  013C  01D1               	clrf	??___flmul+1
 15370  013D  01D2               	clrf	??___flmul+2
 15371  013E  01D3               	clrf	??___flmul+3
 15372  013F  0850               	movf	??___flmul,w
 15373  0140  07D7               	addwf	___flmul@grs,f
 15374  0141  0851               	movf	??___flmul+1,w
 15375  0142  3DD8               	addwfc	___flmul@grs+1,f
 15376  0143  0852               	movf	??___flmul+2,w
 15377  0144  3DD9               	addwfc	___flmul@grs+2,f
 15378  0145  0853               	movf	??___flmul+3,w
 15379  0146  3DDA               	addwfc	___flmul@grs+3,f
 15380  0147  0861               	movf	___flmul@temp+1,w
 15381  0148  00D0               	movwf	??___flmul
 15382  0149  01D1               	clrf	??___flmul+1
 15383  014A  01D2               	clrf	??___flmul+2
 15384  014B  01D3               	clrf	??___flmul+3
 15385  014C  0850               	movf	??___flmul,w
 15386  014D  07DC               	addwf	___flmul@prod,f
 15387  014E  0851               	movf	??___flmul+1,w
 15388  014F  3DDD               	addwfc	___flmul@prod+1,f
 15389  0150  0852               	movf	??___flmul+2,w
 15390  0151  3DDE               	addwfc	___flmul@prod+2,f
 15391  0152  0853               	movf	??___flmul+3,w
 15392  0153  3DDF               	addwfc	___flmul@prod+3,f
 15393  0154  3008               	movlw	8
 15394  0155                     u7805:	
 15395  0155  35D7               	lslf	___flmul@grs,f
 15396  0156  0DD8               	rlf	___flmul@grs+1,f
 15397  0157  0DD9               	rlf	___flmul@grs+2,f
 15398  0158  0DDA               	rlf	___flmul@grs+3,f
 15399  0159  0B89               	decfsz	9,f
 15400  015A  2955               	goto	u7805
 15401  015B  0849               	movf	___flmul@b+1,w
 15402  015C  00D0               	movwf	??___flmul
 15403  015D  0850               	movf	??___flmul,w
 15404  015E  00A0               	movwf	__Umul8_16@multiplicand
 15405  015F  084C               	movf	___flmul@a,w
 15406  0160  319F  2729  3180   	fcall	__Umul8_16
 15407  0163  0140               	movlb	0	; select bank0
 15408  0164  0821               	movf	?__Umul8_16+1,w
 15409  0165  00E1               	movwf	___flmul@temp+1
 15410  0166  0820               	movf	?__Umul8_16,w
 15411  0167  00E0               	movwf	___flmul@temp
 15412  0168  0860               	movf	___flmul@temp,w
 15413  0169  07D7               	addwf	___flmul@grs,f
 15414  016A  0861               	movf	___flmul@temp+1,w
 15415  016B  3DD8               	addwfc	___flmul@grs+1,f
 15416  016C  3000               	movlw	0
 15417  016D  3DD9               	addwfc	___flmul@grs+2,f
 15418  016E  3DDA               	addwfc	___flmul@grs+3,f
 15419  016F  0848               	movf	___flmul@b,w
 15420  0170  00D0               	movwf	??___flmul
 15421  0171  0850               	movf	??___flmul,w
 15422  0172  00A0               	movwf	__Umul8_16@multiplicand
 15423  0173  084D               	movf	___flmul@a+1,w
 15424  0174  319F  2729  3180   	fcall	__Umul8_16
 15425  0177  0140               	movlb	0	; select bank0
 15426  0178  0821               	movf	?__Umul8_16+1,w
 15427  0179  00E1               	movwf	___flmul@temp+1
 15428  017A  0820               	movf	?__Umul8_16,w
 15429  017B  00E0               	movwf	___flmul@temp
 15430  017C  0860               	movf	___flmul@temp,w
 15431  017D  07D7               	addwf	___flmul@grs,f
 15432  017E  0861               	movf	___flmul@temp+1,w
 15433  017F  3DD8               	addwfc	___flmul@grs+1,f
 15434  0180  3000               	movlw	0
 15435  0181  3DD9               	addwfc	___flmul@grs+2,f
 15436  0182  3DDA               	addwfc	___flmul@grs+3,f
 15437  0183  3008               	movlw	8
 15438  0184                     u7815:	
 15439  0184  35D7               	lslf	___flmul@grs,f
 15440  0185  0DD8               	rlf	___flmul@grs+1,f
 15441  0186  0DD9               	rlf	___flmul@grs+2,f
 15442  0187  0DDA               	rlf	___flmul@grs+3,f
 15443  0188  0B89               	decfsz	9,f
 15444  0189  2984               	goto	u7815
 15445  018A  0848               	movf	___flmul@b,w
 15446  018B  00D0               	movwf	??___flmul
 15447  018C  0850               	movf	??___flmul,w
 15448  018D  00A0               	movwf	__Umul8_16@multiplicand
 15449  018E  084C               	movf	___flmul@a,w
 15450  018F  319F  2729  3180   	fcall	__Umul8_16
 15451  0192  0140               	movlb	0	; select bank0
 15452  0193  0821               	movf	?__Umul8_16+1,w
 15453  0194  00E1               	movwf	___flmul@temp+1
 15454  0195  0820               	movf	?__Umul8_16,w
 15455  0196  00E0               	movwf	___flmul@temp
 15456  0197  0860               	movf	___flmul@temp,w
 15457  0198  07D7               	addwf	___flmul@grs,f
 15458  0199  0861               	movf	___flmul@temp+1,w
 15459  019A  3DD8               	addwfc	___flmul@grs+1,f
 15460  019B  3000               	movlw	0
 15461  019C  3DD9               	addwfc	___flmul@grs+2,f
 15462  019D  3DDA               	addwfc	___flmul@grs+3,f
 15463  019E  0849               	movf	___flmul@b+1,w
 15464  019F  00D0               	movwf	??___flmul
 15465  01A0  0850               	movf	??___flmul,w
 15466  01A1  00A0               	movwf	__Umul8_16@multiplicand
 15467  01A2  084E               	movf	___flmul@a+2,w
 15468  01A3  319F  2729  3180   	fcall	__Umul8_16
 15469  01A6  0140               	movlb	0	; select bank0
 15470  01A7  0821               	movf	?__Umul8_16+1,w
 15471  01A8  00E1               	movwf	___flmul@temp+1
 15472  01A9  0820               	movf	?__Umul8_16,w
 15473  01AA  00E0               	movwf	___flmul@temp
 15474  01AB  0860               	movf	___flmul@temp,w
 15475  01AC  07DC               	addwf	___flmul@prod,f
 15476  01AD  0861               	movf	___flmul@temp+1,w
 15477  01AE  3DDD               	addwfc	___flmul@prod+1,f
 15478  01AF  3000               	movlw	0
 15479  01B0  3DDE               	addwfc	___flmul@prod+2,f
 15480  01B1  3DDF               	addwfc	___flmul@prod+3,f
 15481  01B2  084A               	movf	___flmul@b+2,w
 15482  01B3  00D0               	movwf	??___flmul
 15483  01B4  0850               	movf	??___flmul,w
 15484  01B5  00A0               	movwf	__Umul8_16@multiplicand
 15485  01B6  084D               	movf	___flmul@a+1,w
 15486  01B7  319F  2729  3180   	fcall	__Umul8_16
 15487  01BA  0140               	movlb	0	; select bank0
 15488  01BB  0821               	movf	?__Umul8_16+1,w
 15489  01BC  00E1               	movwf	___flmul@temp+1
 15490  01BD  0820               	movf	?__Umul8_16,w
 15491  01BE  00E0               	movwf	___flmul@temp
 15492  01BF  0860               	movf	___flmul@temp,w
 15493  01C0  07DC               	addwf	___flmul@prod,f
 15494  01C1  0861               	movf	___flmul@temp+1,w
 15495  01C2  3DDD               	addwfc	___flmul@prod+1,f
 15496  01C3  3000               	movlw	0
 15497  01C4  3DDE               	addwfc	___flmul@prod+2,f
 15498  01C5  3DDF               	addwfc	___flmul@prod+3,f
 15499  01C6  084A               	movf	___flmul@b+2,w
 15500  01C7  00D0               	movwf	??___flmul
 15501  01C8  0850               	movf	??___flmul,w
 15502  01C9  00A0               	movwf	__Umul8_16@multiplicand
 15503  01CA  084E               	movf	___flmul@a+2,w
 15504  01CB  319F  2729  3180   	fcall	__Umul8_16
 15505  01CE  0140               	movlb	0	; select bank0
 15506  01CF  0821               	movf	?__Umul8_16+1,w
 15507  01D0  00E1               	movwf	___flmul@temp+1
 15508  01D1  0820               	movf	?__Umul8_16,w
 15509  01D2  00E0               	movwf	___flmul@temp
 15510  01D3  0860               	movf	___flmul@temp,w
 15511  01D4  00D0               	movwf	??___flmul
 15512  01D5  0861               	movf	___flmul@temp+1,w
 15513  01D6  00D1               	movwf	??___flmul+1
 15514  01D7  01D2               	clrf	??___flmul+2
 15515  01D8  01D3               	clrf	??___flmul+3
 15516  01D9  3008               	movlw	8
 15517  01DA                     u7825:	
 15518  01DA  35D0               	lslf	??___flmul,f
 15519  01DB  0DD1               	rlf	??___flmul+1,f
 15520  01DC  0DD2               	rlf	??___flmul+2,f
 15521  01DD  0DD3               	rlf	??___flmul+3,f
 15522  01DE  0B89               	decfsz	9,f
 15523  01DF  29DA               	goto	u7825
 15524  01E0  0850               	movf	??___flmul,w
 15525  01E1  07DC               	addwf	___flmul@prod,f
 15526  01E2  0851               	movf	??___flmul+1,w
 15527  01E3  3DDD               	addwfc	___flmul@prod+1,f
 15528  01E4  0852               	movf	??___flmul+2,w
 15529  01E5  3DDE               	addwfc	___flmul@prod+2,f
 15530  01E6  0853               	movf	??___flmul+3,w
 15531  01E7  3DDF               	addwfc	___flmul@prod+3,f
 15532  01E8  0857               	movf	___flmul@grs,w
 15533  01E9  00D0               	movwf	??___flmul
 15534  01EA  0858               	movf	___flmul@grs+1,w
 15535  01EB  00D1               	movwf	??___flmul+1
 15536  01EC  0859               	movf	___flmul@grs+2,w
 15537  01ED  00D2               	movwf	??___flmul+2
 15538  01EE  085A               	movf	___flmul@grs+3,w
 15539  01EF  00D3               	movwf	??___flmul+3
 15540  01F0  3018               	movlw	24
 15541  01F1                     u7835:	
 15542  01F1  36D3               	lsrf	??___flmul+3,f
 15543  01F2  0CD2               	rrf	??___flmul+2,f
 15544  01F3  0CD1               	rrf	??___flmul+1,f
 15545  01F4  0CD0               	rrf	??___flmul,f
 15546  01F5  0B89               	decfsz	9,f
 15547  01F6  29F1               	goto	u7835
 15548  01F7  0850               	movf	??___flmul,w
 15549  01F8  07DC               	addwf	___flmul@prod,f
 15550  01F9  0851               	movf	??___flmul+1,w
 15551  01FA  3DDD               	addwfc	___flmul@prod+1,f
 15552  01FB  0852               	movf	??___flmul+2,w
 15553  01FC  3DDE               	addwfc	___flmul@prod+2,f
 15554  01FD  0853               	movf	??___flmul+3,w
 15555  01FE  3DDF               	addwfc	___flmul@prod+3,f
 15556  01FF  3008               	movlw	8
 15557  0200                     u7845:	
 15558  0200  35D7               	lslf	___flmul@grs,f
 15559  0201  0DD8               	rlf	___flmul@grs+1,f
 15560  0202  0DD9               	rlf	___flmul@grs+2,f
 15561  0203  0DDA               	rlf	___flmul@grs+3,f
 15562  0204  0B89               	decfsz	9,f
 15563  0205  2A00               	goto	u7845
 15564  0206  085B               	movf	___flmul@bexp,w
 15565  0207  0756               	addwf	___flmul@aexp,w
 15566  0208  00D0               	movwf	??___flmul
 15567  0209  01D1               	clrf	??___flmul+1
 15568  020A  0DD1               	rlf	??___flmul+1,f
 15569  020B  0850               	movf	??___flmul,w
 15570  020C  3E82               	addlw	130
 15571  020D  00E0               	movwf	___flmul@temp
 15572  020E  30FF               	movlw	255
 15573  020F  3D51               	addwfc	??___flmul+1,w
 15574  0210  00E1               	movwf	___flmul@temp+1
 15575  0211                     l7942:	
 15576  0211  1BDE               	btfsc	___flmul@prod+2,7
 15577  0212  2A28               	goto	l7944
 15578  0213  3001               	movlw	1
 15579  0214                     u7855:	
 15580  0214  35DC               	lslf	___flmul@prod,f
 15581  0215  0DDD               	rlf	___flmul@prod+1,f
 15582  0216  0DDE               	rlf	___flmul@prod+2,f
 15583  0217  0DDF               	rlf	___flmul@prod+3,f
 15584  0218  0B89               	decfsz	9,f
 15585  0219  2A14               	goto	u7855
 15586  021A  1BDA               	btfsc	___flmul@grs+3,7
 15587  021B  145C               	bsf	___flmul@prod,0
 15588  021C  3001               	movlw	1
 15589  021D                     u7875:	
 15590  021D  35D7               	lslf	___flmul@grs,f
 15591  021E  0DD8               	rlf	___flmul@grs+1,f
 15592  021F  0DD9               	rlf	___flmul@grs+2,f
 15593  0220  0DDA               	rlf	___flmul@grs+3,f
 15594  0221  0B89               	decfsz	9,f
 15595  0222  2A1D               	goto	u7875
 15596  0223  30FF               	movlw	255
 15597  0224  07E0               	addwf	___flmul@temp,f
 15598  0225  30FF               	movlw	255
 15599  0226  3DE1               	addwfc	___flmul@temp+1,f
 15600  0227  2A11               	goto	l7942
 15601  0228                     l7944:	
 15602  0228  01D6               	clrf	___flmul@aexp
 15603  0229  1FDA               	btfss	___flmul@grs+3,7
 15604  022A  2A41               	goto	l7954
 15605  022B  30FF               	movlw	255
 15606  022C  0557               	andwf	___flmul@grs,w
 15607  022D  00D0               	movwf	??___flmul
 15608  022E  30FF               	movlw	255
 15609  022F  0558               	andwf	___flmul@grs+1,w
 15610  0230  00D1               	movwf	??___flmul+1
 15611  0231  30FF               	movlw	255
 15612  0232  0559               	andwf	___flmul@grs+2,w
 15613  0233  00D2               	movwf	??___flmul+2
 15614  0234  307F               	movlw	127
 15615  0235  055A               	andwf	___flmul@grs+3,w
 15616  0236  00D3               	movwf	??___flmul+3
 15617  0237  0853               	movf	??___flmul+3,w
 15618  0238  0452               	iorwf	??___flmul+2,w
 15619  0239  0451               	iorwf	??___flmul+1,w
 15620  023A  0450               	iorwf	??___flmul,w
 15621  023B  1903               	skipnz
 15622  023C  185C               	btfsc	___flmul@prod,0
 15623  023D  2A3F               	goto	l7950
 15624  023E  2A41               	goto	l7954
 15625  023F                     l7950:	
 15626  023F  01D6               	clrf	___flmul@aexp
 15627  0240  0AD6               	incf	___flmul@aexp,f
 15628  0241                     l7954:	
 15629  0241  0856               	movf	___flmul@aexp,w
 15630  0242  1903               	btfsc	3,2
 15631  0243  2A6A               	goto	l7964
 15632  0244  3001               	movlw	1
 15633  0245  07DC               	addwf	___flmul@prod,f
 15634  0246  3000               	movlw	0
 15635  0247  3DDD               	addwfc	___flmul@prod+1,f
 15636  0248  3000               	movlw	0
 15637  0249  3DDE               	addwfc	___flmul@prod+2,f
 15638  024A  3000               	movlw	0
 15639  024B  3DDF               	addwfc	___flmul@prod+3,f
 15640  024C  1C5F               	btfss	___flmul@prod+3,0
 15641  024D  2A6A               	goto	l7964
 15642  024E  085C               	movf	___flmul@prod,w
 15643  024F  00D0               	movwf	??___flmul
 15644  0250  085D               	movf	___flmul@prod+1,w
 15645  0251  00D1               	movwf	??___flmul+1
 15646  0252  085E               	movf	___flmul@prod+2,w
 15647  0253  00D2               	movwf	??___flmul+2
 15648  0254  085F               	movf	___flmul@prod+3,w
 15649  0255  00D3               	movwf	??___flmul+3
 15650  0256  3001               	movlw	1
 15651  0257  00D4               	movwf	??___flmul+4
 15652  0258                     u7945:	
 15653  0258  37D3               	asrf	??___flmul+3,f
 15654  0259  0CD2               	rrf	??___flmul+2,f
 15655  025A  0CD1               	rrf	??___flmul+1,f
 15656  025B  0CD0               	rrf	??___flmul,f
 15657  025C  0BD4               	decfsz	??___flmul+4,f
 15658  025D  2A58               	goto	u7945
 15659  025E  0853               	movf	??___flmul+3,w
 15660  025F  00DF               	movwf	___flmul@prod+3
 15661  0260  0852               	movf	??___flmul+2,w
 15662  0261  00DE               	movwf	___flmul@prod+2
 15663  0262  0851               	movf	??___flmul+1,w
 15664  0263  00DD               	movwf	___flmul@prod+1
 15665  0264  0850               	movf	??___flmul,w
 15666  0265  00DC               	movwf	___flmul@prod
 15667  0266  3001               	movlw	1
 15668  0267  07E0               	addwf	___flmul@temp,f
 15669  0268  3000               	movlw	0
 15670  0269  3DE1               	addwfc	___flmul@temp+1,f
 15671  026A                     l7964:	
 15672  026A  0861               	movf	___flmul@temp+1,w
 15673  026B  3A80               	xorlw	128
 15674  026C  00D0               	movwf	??___flmul
 15675  026D  3080               	movlw	128
 15676  026E  0250               	subwf	??___flmul,w
 15677  026F  1D03               	skipz
 15678  0270  2A73               	goto	u7955
 15679  0271  30FF               	movlw	255
 15680  0272  0260               	subwf	___flmul@temp,w
 15681  0273                     u7955:	
 15682  0273  1C03               	skipc
 15683  0274  2A7F               	goto	l7968
 15684  0275  307F               	movlw	127
 15685  0276  0140               	movlb	0	; select bank0
 15686  0277  00DF               	movwf	___flmul@prod+3
 15687  0278  3080               	movlw	128
 15688  0279  00DE               	movwf	___flmul@prod+2
 15689  027A  3000               	movlw	0
 15690  027B  00DD               	movwf	___flmul@prod+1
 15691  027C  3000               	movlw	0
 15692  027D  00DC               	movwf	___flmul@prod
 15693  027E  2AA9               	goto	l2136
 15694  027F                     l7968:	
 15695  027F  0140               	movlb	0	; select bank0
 15696  0280  0861               	movf	___flmul@temp+1,w
 15697  0281  3A80               	xorlw	128
 15698  0282  00D0               	movwf	??___flmul
 15699  0283  3080               	movlw	128
 15700  0284  0250               	subwf	??___flmul,w
 15701  0285  1D03               	skipz
 15702  0286  2A89               	goto	u7965
 15703  0287  3001               	movlw	1
 15704  0288  0260               	subwf	___flmul@temp,w
 15705  0289                     u7965:	
 15706  0289  1803               	skipnc
 15707  028A  2A96               	goto	l7974
 15708  028B  3000               	movlw	0
 15709  028C  0140               	movlb	0	; select bank0
 15710  028D  00DF               	movwf	___flmul@prod+3
 15711  028E  3000               	movlw	0
 15712  028F  00DE               	movwf	___flmul@prod+2
 15713  0290  3000               	movlw	0
 15714  0291  00DD               	movwf	___flmul@prod+1
 15715  0292  3000               	movlw	0
 15716  0293  00DC               	movwf	___flmul@prod
 15717  0294  01D5               	clrf	___flmul@sign
 15718  0295  2AA9               	goto	l2136
 15719  0296                     l7974:	
 15720  0296  0140               	movlb	0	; select bank0
 15721  0297  0860               	movf	___flmul@temp,w
 15722  0298  00D0               	movwf	??___flmul
 15723  0299  0850               	movf	??___flmul,w
 15724  029A  00DB               	movwf	___flmul@bexp
 15725  029B  30FF               	movlw	255
 15726  029C  05DC               	andwf	___flmul@prod,f
 15727  029D  30FF               	movlw	255
 15728  029E  05DD               	andwf	___flmul@prod+1,f
 15729  029F  307F               	movlw	127
 15730  02A0  05DE               	andwf	___flmul@prod+2,f
 15731  02A1  3000               	movlw	0
 15732  02A2  05DF               	andwf	___flmul@prod+3,f
 15733  02A3  185B               	btfsc	___flmul@bexp,0
 15734  02A4  17DE               	bsf	___flmul@prod+2,7
 15735  02A5  365B               	lsrf	___flmul@bexp,w
 15736  02A6  00D0               	movwf	??___flmul
 15737  02A7  0850               	movf	??___flmul,w
 15738  02A8  00DF               	movwf	___flmul@prod+3
 15739  02A9                     l2136:	
 15740  02A9  0855               	movf	___flmul@sign,w
 15741  02AA  00D0               	movwf	??___flmul
 15742  02AB  0850               	movf	??___flmul,w
 15743  02AC  04DF               	iorwf	___flmul@prod+3,f
 15744  02AD  085F               	movf	___flmul@prod+3,w
 15745  02AE  00CB               	movwf	?___flmul+3
 15746  02AF  085E               	movf	___flmul@prod+2,w
 15747  02B0  00CA               	movwf	?___flmul+2
 15748  02B1  085D               	movf	___flmul@prod+1,w
 15749  02B2  00C9               	movwf	?___flmul+1
 15750  02B3  085C               	movf	___flmul@prod,w
 15751  02B4  00C8               	movwf	?___flmul
 15752  02B5  0008               	return
 15753  02B6                     __end_of___flmul:	
 15754                           
 15755                           	psect	text30
 15756  1F29                     __ptext30:	
 15757 ;; *************** function __Umul8_16 *****************
 15758 ;; Defined at:
 15759 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/Umul8_16.c"
 15760 ;; Parameters:    Size  Location     Type
 15761 ;;  multiplier      1    wreg     unsigned char 
 15762 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 15763 ;; Auto vars:     Size  Location     Type
 15764 ;;  multiplier      1    8[BANK0 ] unsigned char 
 15765 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 15766 ;;  product         2    4[BANK0 ] unsigned int 
 15767 ;; Return value:  Size  Location     Type
 15768 ;;                  2    0[BANK0 ] unsigned int 
 15769 ;; Registers used:
 15770 ;;		wreg, status,2, status,0
 15771 ;; Tracked objects:
 15772 ;;		On entry : 0/0
 15773 ;;		On exit  : 0/0
 15774 ;;		Unchanged: 0/0
 15775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15776 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15777 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15778 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15779 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15780 ;;Total ram usage:        9 bytes
 15781 ;; Hardware stack levels used:    1
 15782 ;; Hardware stack levels required when called:    4
 15783 ;; This function calls:
 15784 ;;		Nothing
 15785 ;; This function is called by:
 15786 ;;		___flmul
 15787 ;; This function uses a non-reentrant model
 15788 ;;
 15789                           
 15790                           
 15791                           ;psect for function __Umul8_16
 15792  1F29                     __Umul8_16:	
 15793                           
 15794                           ;incstack = 0
 15795                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15796                           ;__Umul8_16@multiplier stored from wreg
 15797  1F29  0140               	movlb	0	; select bank0
 15798  1F2A  00A8               	movwf	__Umul8_16@multiplier
 15799  1F2B  01A4               	clrf	__Umul8_16@product
 15800  1F2C  01A5               	clrf	__Umul8_16@product+1
 15801  1F2D  0820               	movf	__Umul8_16@multiplicand,w
 15802  1F2E  00A2               	movwf	??__Umul8_16
 15803  1F2F  01A3               	clrf	??__Umul8_16+1
 15804  1F30  0822               	movf	??__Umul8_16,w
 15805  1F31  00A6               	movwf	__Umul8_16@word_mpld
 15806  1F32  0823               	movf	??__Umul8_16+1,w
 15807  1F33  00A7               	movwf	__Umul8_16@word_mpld+1
 15808  1F34                     l7618:	
 15809  1F34  1C28               	btfss	__Umul8_16@multiplier,0
 15810  1F35  2F3A               	goto	l2214
 15811  1F36  0826               	movf	__Umul8_16@word_mpld,w
 15812  1F37  07A4               	addwf	__Umul8_16@product,f
 15813  1F38  0827               	movf	__Umul8_16@word_mpld+1,w
 15814  1F39  3DA5               	addwfc	__Umul8_16@product+1,f
 15815  1F3A                     l2214:	
 15816  1F3A  3001               	movlw	1
 15817  1F3B                     u7285:	
 15818  1F3B  35A6               	lslf	__Umul8_16@word_mpld,f
 15819  1F3C  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 15820  1F3D  0B89               	decfsz	9,f
 15821  1F3E  2F3B               	goto	u7285
 15822  1F3F  1003               	clrc
 15823  1F40  0CA8               	rrf	__Umul8_16@multiplier,f
 15824  1F41  0828               	movf	__Umul8_16@multiplier,w
 15825  1F42  1D03               	btfss	3,2
 15826  1F43  2F34               	goto	l7618
 15827  1F44  0825               	movf	__Umul8_16@product+1,w
 15828  1F45  00A1               	movwf	?__Umul8_16+1
 15829  1F46  0824               	movf	__Umul8_16@product,w
 15830  1F47  00A0               	movwf	?__Umul8_16
 15831  1F48  0008               	return
 15832  1F49                     __end_of__Umul8_16:	
 15833                           
 15834                           	psect	text31
 15835  0483                     __ptext31:	
 15836 ;; *************** function ___fldiv *****************
 15837 ;; Defined at:
 15838 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
 15839 ;; Parameters:    Size  Location     Type
 15840 ;;  a               4   14[BANK0 ] unsigned int 
 15841 ;;  b               4   18[BANK0 ] unsigned int 
 15842 ;; Auto vars:     Size  Location     Type
 15843 ;;  grs             4   34[BANK0 ] unsigned long 
 15844 ;;  rem             4   27[BANK0 ] unsigned long 
 15845 ;;  new_exp         2   32[BANK0 ] int 
 15846 ;;  aexp            1   39[BANK0 ] unsigned char 
 15847 ;;  bexp            1   38[BANK0 ] unsigned char 
 15848 ;;  sign            1   31[BANK0 ] unsigned char 
 15849 ;; Return value:  Size  Location     Type
 15850 ;;                  4   14[BANK0 ] unsigned char 
 15851 ;; Registers used:
 15852 ;;		wreg, status,2, status,0
 15853 ;; Tracked objects:
 15854 ;;		On entry : 0/0
 15855 ;;		On exit  : 0/0
 15856 ;;		Unchanged: 0/0
 15857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15858 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15859 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15860 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15861 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15862 ;;Total ram usage:       26 bytes
 15863 ;; Hardware stack levels used:    1
 15864 ;; Hardware stack levels required when called:    4
 15865 ;; This function calls:
 15866 ;;		Nothing
 15867 ;; This function is called by:
 15868 ;;		_LED_setColor
 15869 ;;		_beatBrightnessCalculation
 15870 ;; This function uses a non-reentrant model
 15871 ;;
 15872                           
 15873                           
 15874                           ;psect for function ___fldiv
 15875  0483                     ___fldiv:	
 15876                           
 15877                           ;incstack = 0
 15878                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 15879  0483  0140               	movlb	0	; select bank0
 15880  0484  0835               	movf	___fldiv@b+3,w
 15881  0485  3980               	andlw	128
 15882  0486  00B6               	movwf	??___fldiv
 15883  0487  0836               	movf	??___fldiv,w
 15884  0488  00BF               	movwf	___fldiv@sign
 15885  0489  3535               	lslf	___fldiv@b+3,w
 15886  048A  00B6               	movwf	??___fldiv
 15887  048B  0836               	movf	??___fldiv,w
 15888  048C  00C6               	movwf	___fldiv@bexp
 15889  048D  1BB4               	btfsc	___fldiv@b+2,7
 15890  048E  1446               	bsf	___fldiv@bexp,0
 15891  048F  0846               	movf	___fldiv@bexp,w
 15892  0490  1903               	btfsc	3,2
 15893  0491  2CA0               	goto	l7724
 15894  0492  0A46               	incf	___fldiv@bexp,w
 15895  0493  1D03               	btfss	3,2
 15896  0494  2C9D               	goto	l7720
 15897  0495  3000               	movlw	0
 15898  0496  00B5               	movwf	___fldiv@b+3
 15899  0497  3000               	movlw	0
 15900  0498  00B4               	movwf	___fldiv@b+2
 15901  0499  3000               	movlw	0
 15902  049A  00B3               	movwf	___fldiv@b+1
 15903  049B  3000               	movlw	0
 15904  049C  00B2               	movwf	___fldiv@b
 15905  049D                     l7720:	
 15906  049D  17B4               	bsf	___fldiv@b+2,7
 15907  049E  01B5               	clrf	___fldiv@b+3
 15908  049F  2CA8               	goto	l7726
 15909  04A0                     l7724:	
 15910  04A0  3000               	movlw	0
 15911  04A1  00B5               	movwf	___fldiv@b+3
 15912  04A2  3000               	movlw	0
 15913  04A3  00B4               	movwf	___fldiv@b+2
 15914  04A4  3000               	movlw	0
 15915  04A5  00B3               	movwf	___fldiv@b+1
 15916  04A6  3000               	movlw	0
 15917  04A7  00B2               	movwf	___fldiv@b
 15918  04A8                     l7726:	
 15919  04A8  0831               	movf	___fldiv@a+3,w
 15920  04A9  3980               	andlw	128
 15921  04AA  00B6               	movwf	??___fldiv
 15922  04AB  0836               	movf	??___fldiv,w
 15923  04AC  06BF               	xorwf	___fldiv@sign,f
 15924  04AD  3531               	lslf	___fldiv@a+3,w
 15925  04AE  00B6               	movwf	??___fldiv
 15926  04AF  0836               	movf	??___fldiv,w
 15927  04B0  00C7               	movwf	___fldiv@aexp
 15928  04B1  1BB0               	btfsc	___fldiv@a+2,7
 15929  04B2  1447               	bsf	___fldiv@aexp,0
 15930  04B3  0847               	movf	___fldiv@aexp,w
 15931  04B4  1903               	btfsc	3,2
 15932  04B5  2CC4               	goto	l7744
 15933  04B6  0A47               	incf	___fldiv@aexp,w
 15934  04B7  1D03               	btfss	3,2
 15935  04B8  2CC1               	goto	l7740
 15936  04B9  3000               	movlw	0
 15937  04BA  00B1               	movwf	___fldiv@a+3
 15938  04BB  3000               	movlw	0
 15939  04BC  00B0               	movwf	___fldiv@a+2
 15940  04BD  3000               	movlw	0
 15941  04BE  00AF               	movwf	___fldiv@a+1
 15942  04BF  3000               	movlw	0
 15943  04C0  00AE               	movwf	___fldiv@a
 15944  04C1                     l7740:	
 15945  04C1  17B0               	bsf	___fldiv@a+2,7
 15946  04C2  01B1               	clrf	___fldiv@a+3
 15947  04C3  2CCC               	goto	l2084
 15948  04C4                     l7744:	
 15949  04C4  3000               	movlw	0
 15950  04C5  00B1               	movwf	___fldiv@a+3
 15951  04C6  3000               	movlw	0
 15952  04C7  00B0               	movwf	___fldiv@a+2
 15953  04C8  3000               	movlw	0
 15954  04C9  00AF               	movwf	___fldiv@a+1
 15955  04CA  3000               	movlw	0
 15956  04CB  00AE               	movwf	___fldiv@a
 15957  04CC                     l2084:	
 15958  04CC  0831               	movf	___fldiv@a+3,w
 15959  04CD  0430               	iorwf	___fldiv@a+2,w
 15960  04CE  042F               	iorwf	___fldiv@a+1,w
 15961  04CF  042E               	iorwf	___fldiv@a,w
 15962  04D0  1D03               	skipz
 15963  04D1  2CEB               	goto	l7754
 15964  04D2  3000               	movlw	0
 15965  04D3  00B5               	movwf	___fldiv@b+3
 15966  04D4  3000               	movlw	0
 15967  04D5  00B4               	movwf	___fldiv@b+2
 15968  04D6  3000               	movlw	0
 15969  04D7  00B3               	movwf	___fldiv@b+1
 15970  04D8  3000               	movlw	0
 15971  04D9  00B2               	movwf	___fldiv@b
 15972  04DA  3080               	movlw	128
 15973  04DB  04B4               	iorwf	___fldiv@b+2,f
 15974  04DC  307F               	movlw	127
 15975  04DD  04B5               	iorwf	___fldiv@b+3,f
 15976  04DE                     L14:	
 15977  04DE  083F               	movf	___fldiv@sign,w
 15978  04DF  00B6               	movwf	??___fldiv
 15979  04E0  0836               	movf	??___fldiv,w
 15980  04E1  04B5               	iorwf	___fldiv@b+3,f
 15981  04E2  0835               	movf	___fldiv@b+3,w
 15982  04E3  00B1               	movwf	?___fldiv+3
 15983  04E4  0834               	movf	___fldiv@b+2,w
 15984  04E5  00B0               	movwf	?___fldiv+2
 15985  04E6  0833               	movf	___fldiv@b+1,w
 15986  04E7  00AF               	movwf	?___fldiv+1
 15987  04E8  0832               	movf	___fldiv@b,w
 15988  04E9  00AE               	movwf	?___fldiv
 15989  04EA  0008               	return
 15990  04EB                     l7754:	
 15991  04EB  0846               	movf	___fldiv@bexp,w
 15992  04EC  1D03               	btfss	3,2
 15993  04ED  2CF7               	goto	l7760
 15994  04EE  3000               	movlw	0
 15995  04EF  00B1               	movwf	?___fldiv+3
 15996  04F0  3000               	movlw	0
 15997  04F1  00B0               	movwf	?___fldiv+2
 15998  04F2  3000               	movlw	0
 15999  04F3  00AF               	movwf	?___fldiv+1
 16000  04F4  3000               	movlw	0
 16001  04F5  00AE               	movwf	?___fldiv
 16002  04F6  0008               	return
 16003  04F7                     l7760:	
 16004  04F7  0846               	movf	___fldiv@bexp,w
 16005  04F8  00B6               	movwf	??___fldiv
 16006  04F9  01B7               	clrf	??___fldiv+1
 16007  04FA  0837               	movf	??___fldiv+1,w
 16008  04FB  00B9               	movwf	??___fldiv+3
 16009  04FC  0847               	movf	___fldiv@aexp,w
 16010  04FD  0236               	subwf	??___fldiv,w
 16011  04FE  00B8               	movwf	??___fldiv+2
 16012  04FF  1C03               	skipc
 16013  0500  03B9               	decf	??___fldiv+3,f
 16014  0501  0838               	movf	??___fldiv+2,w
 16015  0502  3E7F               	addlw	127
 16016  0503  00C0               	movwf	___fldiv@new_exp
 16017  0504  3000               	movlw	0
 16018  0505  3D39               	addwfc	??___fldiv+3,w
 16019  0506  00C1               	movwf	___fldiv@new_exp+1
 16020  0507  0835               	movf	___fldiv@b+3,w
 16021  0508  00BE               	movwf	___fldiv@rem+3
 16022  0509  0834               	movf	___fldiv@b+2,w
 16023  050A  00BD               	movwf	___fldiv@rem+2
 16024  050B  0833               	movf	___fldiv@b+1,w
 16025  050C  00BC               	movwf	___fldiv@rem+1
 16026  050D  0832               	movf	___fldiv@b,w
 16027  050E  00BB               	movwf	___fldiv@rem
 16028  050F  3000               	movlw	0
 16029  0510  00B5               	movwf	___fldiv@b+3
 16030  0511  3000               	movlw	0
 16031  0512  00B4               	movwf	___fldiv@b+2
 16032  0513  3000               	movlw	0
 16033  0514  00B3               	movwf	___fldiv@b+1
 16034  0515  3000               	movlw	0
 16035  0516  00B2               	movwf	___fldiv@b
 16036  0517  3000               	movlw	0
 16037  0518  00C5               	movwf	___fldiv@grs+3
 16038  0519  3000               	movlw	0
 16039  051A  00C4               	movwf	___fldiv@grs+2
 16040  051B  3000               	movlw	0
 16041  051C  00C3               	movwf	___fldiv@grs+1
 16042  051D  3000               	movlw	0
 16043  051E  00C2               	movwf	___fldiv@grs
 16044  051F  01C7               	clrf	___fldiv@aexp
 16045  0520                     l7788:	
 16046  0520  301A               	movlw	26
 16047  0521  0247               	subwf	___fldiv@aexp,w
 16048  0522  1803               	btfsc	3,0
 16049  0523  2D5C               	goto	l7790
 16050  0524  0847               	movf	___fldiv@aexp,w
 16051  0525  1903               	btfsc	3,2
 16052  0526  2D3E               	goto	l7780
 16053  0527  3001               	movlw	1
 16054  0528                     u7525:	
 16055  0528  35BB               	lslf	___fldiv@rem,f
 16056  0529  0DBC               	rlf	___fldiv@rem+1,f
 16057  052A  0DBD               	rlf	___fldiv@rem+2,f
 16058  052B  0DBE               	rlf	___fldiv@rem+3,f
 16059  052C  0B89               	decfsz	9,f
 16060  052D  2D28               	goto	u7525
 16061  052E  3001               	movlw	1
 16062  052F                     u7535:	
 16063  052F  35B2               	lslf	___fldiv@b,f
 16064  0530  0DB3               	rlf	___fldiv@b+1,f
 16065  0531  0DB4               	rlf	___fldiv@b+2,f
 16066  0532  0DB5               	rlf	___fldiv@b+3,f
 16067  0533  0B89               	decfsz	9,f
 16068  0534  2D2F               	goto	u7535
 16069  0535  1BC5               	btfsc	___fldiv@grs+3,7
 16070  0536  1432               	bsf	___fldiv@b,0
 16071  0537  3001               	movlw	1
 16072  0538                     u7555:	
 16073  0538  35C2               	lslf	___fldiv@grs,f
 16074  0539  0DC3               	rlf	___fldiv@grs+1,f
 16075  053A  0DC4               	rlf	___fldiv@grs+2,f
 16076  053B  0DC5               	rlf	___fldiv@grs+3,f
 16077  053C  0B89               	decfsz	9,f
 16078  053D  2D38               	goto	u7555
 16079  053E                     l7780:	
 16080  053E  0831               	movf	___fldiv@a+3,w
 16081  053F  023E               	subwf	___fldiv@rem+3,w
 16082  0540  1D03               	skipz
 16083  0541  2D4C               	goto	u7565
 16084  0542  0830               	movf	___fldiv@a+2,w
 16085  0543  023D               	subwf	___fldiv@rem+2,w
 16086  0544  1D03               	skipz
 16087  0545  2D4C               	goto	u7565
 16088  0546  082F               	movf	___fldiv@a+1,w
 16089  0547  023C               	subwf	___fldiv@rem+1,w
 16090  0548  1D03               	skipz
 16091  0549  2D4C               	goto	u7565
 16092  054A  082E               	movf	___fldiv@a,w
 16093  054B  023B               	subwf	___fldiv@rem,w
 16094  054C                     u7565:	
 16095  054C  1C03               	skipc
 16096  054D  2D57               	goto	l7786
 16097  054E  1745               	bsf	___fldiv@grs+3,6
 16098  054F  082E               	movf	___fldiv@a,w
 16099  0550  02BB               	subwf	___fldiv@rem,f
 16100  0551  082F               	movf	___fldiv@a+1,w
 16101  0552  3BBC               	subwfb	___fldiv@rem+1,f
 16102  0553  0830               	movf	___fldiv@a+2,w
 16103  0554  3BBD               	subwfb	___fldiv@rem+2,f
 16104  0555  0831               	movf	___fldiv@a+3,w
 16105  0556  3BBE               	subwfb	___fldiv@rem+3,f
 16106  0557                     l7786:	
 16107  0557  3001               	movlw	1
 16108  0558  00B6               	movwf	??___fldiv
 16109  0559  0836               	movf	??___fldiv,w
 16110  055A  07C7               	addwf	___fldiv@aexp,f
 16111  055B  2D20               	goto	l7788
 16112  055C                     l7790:	
 16113  055C  083E               	movf	___fldiv@rem+3,w
 16114  055D  043D               	iorwf	___fldiv@rem+2,w
 16115  055E  043C               	iorwf	___fldiv@rem+1,w
 16116  055F  043B               	iorwf	___fldiv@rem,w
 16117  0560  1D03               	btfss	3,2
 16118  0561  1442               	bsf	___fldiv@grs,0
 16119  0562                     l7804:	
 16120  0562  1BB4               	btfsc	___fldiv@b+2,7
 16121  0563  2D79               	goto	l7806
 16122  0564  3001               	movlw	1
 16123  0565                     u7595:	
 16124  0565  35B2               	lslf	___fldiv@b,f
 16125  0566  0DB3               	rlf	___fldiv@b+1,f
 16126  0567  0DB4               	rlf	___fldiv@b+2,f
 16127  0568  0DB5               	rlf	___fldiv@b+3,f
 16128  0569  0B89               	decfsz	9,f
 16129  056A  2D65               	goto	u7595
 16130  056B  1BC5               	btfsc	___fldiv@grs+3,7
 16131  056C  1432               	bsf	___fldiv@b,0
 16132  056D  3001               	movlw	1
 16133  056E                     u7615:	
 16134  056E  35C2               	lslf	___fldiv@grs,f
 16135  056F  0DC3               	rlf	___fldiv@grs+1,f
 16136  0570  0DC4               	rlf	___fldiv@grs+2,f
 16137  0571  0DC5               	rlf	___fldiv@grs+3,f
 16138  0572  0B89               	decfsz	9,f
 16139  0573  2D6E               	goto	u7615
 16140  0574  30FF               	movlw	255
 16141  0575  07C0               	addwf	___fldiv@new_exp,f
 16142  0576  30FF               	movlw	255
 16143  0577  3DC1               	addwfc	___fldiv@new_exp+1,f
 16144  0578  2D62               	goto	l7804
 16145  0579                     l7806:	
 16146  0579  01C7               	clrf	___fldiv@aexp
 16147  057A  1FC5               	btfss	___fldiv@grs+3,7
 16148  057B  2D92               	goto	l7816
 16149  057C  30FF               	movlw	255
 16150  057D  0542               	andwf	___fldiv@grs,w
 16151  057E  00B6               	movwf	??___fldiv
 16152  057F  30FF               	movlw	255
 16153  0580  0543               	andwf	___fldiv@grs+1,w
 16154  0581  00B7               	movwf	??___fldiv+1
 16155  0582  30FF               	movlw	255
 16156  0583  0544               	andwf	___fldiv@grs+2,w
 16157  0584  00B8               	movwf	??___fldiv+2
 16158  0585  307F               	movlw	127
 16159  0586  0545               	andwf	___fldiv@grs+3,w
 16160  0587  00B9               	movwf	??___fldiv+3
 16161  0588  0839               	movf	??___fldiv+3,w
 16162  0589  0438               	iorwf	??___fldiv+2,w
 16163  058A  0437               	iorwf	??___fldiv+1,w
 16164  058B  0436               	iorwf	??___fldiv,w
 16165  058C  1903               	skipnz
 16166  058D  1832               	btfsc	___fldiv@b,0
 16167  058E  2D90               	goto	l7812
 16168  058F  2D92               	goto	l7816
 16169  0590                     l7812:	
 16170  0590  01C7               	clrf	___fldiv@aexp
 16171  0591  0AC7               	incf	___fldiv@aexp,f
 16172  0592                     l7816:	
 16173  0592  0847               	movf	___fldiv@aexp,w
 16174  0593  1903               	btfsc	3,2
 16175  0594  2DBB               	goto	l7826
 16176  0595  3001               	movlw	1
 16177  0596  07B2               	addwf	___fldiv@b,f
 16178  0597  3000               	movlw	0
 16179  0598  3DB3               	addwfc	___fldiv@b+1,f
 16180  0599  3000               	movlw	0
 16181  059A  3DB4               	addwfc	___fldiv@b+2,f
 16182  059B  3000               	movlw	0
 16183  059C  3DB5               	addwfc	___fldiv@b+3,f
 16184  059D  1C35               	btfss	___fldiv@b+3,0
 16185  059E  2DBB               	goto	l7826
 16186  059F  0832               	movf	___fldiv@b,w
 16187  05A0  00B6               	movwf	??___fldiv
 16188  05A1  0833               	movf	___fldiv@b+1,w
 16189  05A2  00B7               	movwf	??___fldiv+1
 16190  05A3  0834               	movf	___fldiv@b+2,w
 16191  05A4  00B8               	movwf	??___fldiv+2
 16192  05A5  0835               	movf	___fldiv@b+3,w
 16193  05A6  00B9               	movwf	??___fldiv+3
 16194  05A7  3001               	movlw	1
 16195  05A8  00BA               	movwf	??___fldiv+4
 16196  05A9                     u7685:	
 16197  05A9  37B9               	asrf	??___fldiv+3,f
 16198  05AA  0CB8               	rrf	??___fldiv+2,f
 16199  05AB  0CB7               	rrf	??___fldiv+1,f
 16200  05AC  0CB6               	rrf	??___fldiv,f
 16201  05AD  0BBA               	decfsz	??___fldiv+4,f
 16202  05AE  2DA9               	goto	u7685
 16203  05AF  0839               	movf	??___fldiv+3,w
 16204  05B0  00B5               	movwf	___fldiv@b+3
 16205  05B1  0838               	movf	??___fldiv+2,w
 16206  05B2  00B4               	movwf	___fldiv@b+2
 16207  05B3  0837               	movf	??___fldiv+1,w
 16208  05B4  00B3               	movwf	___fldiv@b+1
 16209  05B5  0836               	movf	??___fldiv,w
 16210  05B6  00B2               	movwf	___fldiv@b
 16211  05B7  3001               	movlw	1
 16212  05B8  07C0               	addwf	___fldiv@new_exp,f
 16213  05B9  3000               	movlw	0
 16214  05BA  3DC1               	addwfc	___fldiv@new_exp+1,f
 16215  05BB                     l7826:	
 16216  05BB  0841               	movf	___fldiv@new_exp+1,w
 16217  05BC  3A80               	xorlw	128
 16218  05BD  00B6               	movwf	??___fldiv
 16219  05BE  3080               	movlw	128
 16220  05BF  0236               	subwf	??___fldiv,w
 16221  05C0  1D03               	skipz
 16222  05C1  2DC4               	goto	u7695
 16223  05C2  30FF               	movlw	255
 16224  05C3  0240               	subwf	___fldiv@new_exp,w
 16225  05C4                     u7695:	
 16226  05C4  1C03               	skipc
 16227  05C5  2DD3               	goto	l2105
 16228  05C6  30FF               	movlw	255
 16229  05C7  0140               	movlb	0	; select bank0
 16230  05C8  00C0               	movwf	___fldiv@new_exp
 16231  05C9  3000               	movlw	0
 16232  05CA  00C1               	movwf	___fldiv@new_exp+1
 16233  05CB  3000               	movlw	0
 16234  05CC  00B5               	movwf	___fldiv@b+3
 16235  05CD  3000               	movlw	0
 16236  05CE  00B4               	movwf	___fldiv@b+2
 16237  05CF  3000               	movlw	0
 16238  05D0  00B3               	movwf	___fldiv@b+1
 16239  05D1  3000               	movlw	0
 16240  05D2  00B2               	movwf	___fldiv@b
 16241  05D3                     l2105:	
 16242  05D3  0140               	movlb	0	; select bank0
 16243  05D4  0841               	movf	___fldiv@new_exp+1,w
 16244  05D5  3A80               	xorlw	128
 16245  05D6  00B6               	movwf	??___fldiv
 16246  05D7  3080               	movlw	128
 16247  05D8  0236               	subwf	??___fldiv,w
 16248  05D9  1D03               	skipz
 16249  05DA  2DDD               	goto	u7705
 16250  05DB  3001               	movlw	1
 16251  05DC  0240               	subwf	___fldiv@new_exp,w
 16252  05DD                     u7705:	
 16253  05DD  1803               	skipnc
 16254  05DE  2DEB               	goto	l2106
 16255  05DF  0140               	movlb	0	; select bank0
 16256  05E0  01C0               	clrf	___fldiv@new_exp
 16257  05E1  01C1               	clrf	___fldiv@new_exp+1
 16258  05E2  3000               	movlw	0
 16259  05E3  00B5               	movwf	___fldiv@b+3
 16260  05E4  3000               	movlw	0
 16261  05E5  00B4               	movwf	___fldiv@b+2
 16262  05E6  3000               	movlw	0
 16263  05E7  00B3               	movwf	___fldiv@b+1
 16264  05E8  3000               	movlw	0
 16265  05E9  00B2               	movwf	___fldiv@b
 16266  05EA  01BF               	clrf	___fldiv@sign
 16267  05EB                     l2106:	
 16268  05EB  0140               	movlb	0	; select bank0
 16269  05EC  0840               	movf	___fldiv@new_exp,w
 16270  05ED  00B6               	movwf	??___fldiv
 16271  05EE  0836               	movf	??___fldiv,w
 16272  05EF  00C6               	movwf	___fldiv@bexp
 16273  05F0  1C46               	btfss	___fldiv@bexp,0
 16274  05F1  2DF4               	goto	l7840
 16275  05F2  17B4               	bsf	___fldiv@b+2,7
 16276  05F3  2DF8               	goto	l2108
 16277  05F4                     l7840:	
 16278  05F4  307F               	movlw	127
 16279  05F5  00B6               	movwf	??___fldiv
 16280  05F6  0836               	movf	??___fldiv,w
 16281  05F7  05B4               	andwf	___fldiv@b+2,f
 16282  05F8                     l2108:	
 16283  05F8  3646               	lsrf	___fldiv@bexp,w
 16284  05F9  00B6               	movwf	??___fldiv
 16285  05FA  0836               	movf	??___fldiv,w
 16286  05FB  00B5               	movwf	___fldiv@b+3
 16287  05FC  2CDE               	goto	L14
 16288  05FD                     __end_of___fldiv:	
 16289                           
 16290                           	psect	text32
 16291  1EEB                     __ptext32:	
 16292 ;; *************** function _PWM4_LoadDutyValue *****************
 16293 ;; Defined at:
 16294 ;;		line 82 in file "mcc_generated_files/pwm4.c"
 16295 ;; Parameters:    Size  Location     Type
 16296 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 16297 ;; Auto vars:     Size  Location     Type
 16298 ;;		None
 16299 ;; Return value:  Size  Location     Type
 16300 ;;                  1    wreg      void 
 16301 ;; Registers used:
 16302 ;;		wreg, status,2
 16303 ;; Tracked objects:
 16304 ;;		On entry : 0/0
 16305 ;;		On exit  : 0/0
 16306 ;;		Unchanged: 0/0
 16307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16308 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16311 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16312 ;;Total ram usage:        2 bytes
 16313 ;; Hardware stack levels used:    1
 16314 ;; Hardware stack levels required when called:    4
 16315 ;; This function calls:
 16316 ;;		Nothing
 16317 ;; This function is called by:
 16318 ;;		_LED_setColor
 16319 ;; This function uses a non-reentrant model
 16320 ;;
 16321                           
 16322                           
 16323                           ;psect for function _PWM4_LoadDutyValue
 16324  1EEB                     _PWM4_LoadDutyValue:	
 16325                           
 16326                           ;mcc_generated_files/pwm4.c: 82: void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm4.c: 83: {;mcc_generated_files/pwm4.c: 84:     if(dutyValue <= 127){
 16327                           
 16328                           ;incstack = 0
 16329                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2]
 16330  1EEB  3000               	movlw	0
 16331  1EEC  0141               	movlb	1	; select bank1
 16332  1EED  0246               	subwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),w
 16333  1EEE  3080               	movlw	128
 16334  1EEF  1903               	skipnz
 16335  1EF0  0245               	subwf	PWM4_LoadDutyValue@dutyValue^(0+128),w
 16336  1EF1  1803               	skipnc
 16337  1EF2  0008               	return
 16338                           
 16339                           ;mcc_generated_files/pwm4.c: 85:         dutyValue &= 0x03FF;
 16340  1EF3  30FF               	movlw	255
 16341  1EF4  05C5               	andwf	PWM4_LoadDutyValue@dutyValue^(0+128),f
 16342  1EF5  3003               	movlw	3
 16343  1EF6  05C6               	andwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),f
 16344                           
 16345                           ;mcc_generated_files/pwm4.c: 88:         if(CCP4CONbits.FMT)
 16346  1EF7  0146               	movlb	6	; select bank6
 16347  1EF8  1E1A               	btfss	26,4	;volatile
 16348  1EF9  2F00               	goto	l8054
 16349                           
 16350                           ;mcc_generated_files/pwm4.c: 89:         {;mcc_generated_files/pwm4.c: 90:             d
      +                          utyValue <<= 6;
 16351  1EFA  3006               	movlw	6
 16352  1EFB  0141               	movlb	1	; select bank1
 16353  1EFC                     u8175:	
 16354  1EFC  35C5               	lslf	PWM4_LoadDutyValue@dutyValue^(0+128),f
 16355  1EFD  0DC6               	rlf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),f
 16356  1EFE  0B89               	decfsz	9,f
 16357  1EFF  2EFC               	goto	u8175
 16358  1F00                     l8054:	
 16359                           
 16360                           ;mcc_generated_files/pwm4.c: 91:             CCPR4H = dutyValue >> 8;
 16361  1F00  0141               	movlb	1	; select bank1
 16362  1F01  0846               	movf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),w
 16363  1F02  0146               	movlb	6	; select bank6
 16364  1F03  0099               	movwf	25	;volatile
 16365                           
 16366                           ;mcc_generated_files/pwm4.c: 92:             CCPR4L = dutyValue;
 16367  1F04  0141               	movlb	1	; select bank1
 16368  1F05  0845               	movf	PWM4_LoadDutyValue@dutyValue^(0+128),w
 16369  1F06  0146               	movlb	6	; select bank6
 16370  1F07  0098               	movwf	24	;volatile
 16371                           
 16372                           ;mcc_generated_files/pwm4.c: 93:         }
 16373  1F08  0008               	return
 16374  1F09                     __end_of_PWM4_LoadDutyValue:	
 16375                           
 16376                           	psect	text33
 16377  1ECD                     __ptext33:	
 16378 ;; *************** function _PWM3_LoadDutyValue *****************
 16379 ;; Defined at:
 16380 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 16381 ;; Parameters:    Size  Location     Type
 16382 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 16383 ;; Auto vars:     Size  Location     Type
 16384 ;;		None
 16385 ;; Return value:  Size  Location     Type
 16386 ;;                  1    wreg      void 
 16387 ;; Registers used:
 16388 ;;		wreg, status,2
 16389 ;; Tracked objects:
 16390 ;;		On entry : 0/0
 16391 ;;		On exit  : 0/0
 16392 ;;		Unchanged: 0/0
 16393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16394 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16397 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16398 ;;Total ram usage:        2 bytes
 16399 ;; Hardware stack levels used:    1
 16400 ;; Hardware stack levels required when called:    4
 16401 ;; This function calls:
 16402 ;;		Nothing
 16403 ;; This function is called by:
 16404 ;;		_LED_setColor
 16405 ;; This function uses a non-reentrant model
 16406 ;;
 16407                           
 16408                           
 16409                           ;psect for function _PWM3_LoadDutyValue
 16410  1ECD                     _PWM3_LoadDutyValue:	
 16411                           
 16412                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 84:     if(dutyValue <= 127){
 16413                           
 16414                           ;incstack = 0
 16415                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2]
 16416  1ECD  3000               	movlw	0
 16417  1ECE  0141               	movlb	1	; select bank1
 16418  1ECF  0246               	subwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
 16419  1ED0  3080               	movlw	128
 16420  1ED1  1903               	skipnz
 16421  1ED2  0245               	subwf	PWM3_LoadDutyValue@dutyValue^(0+128),w
 16422  1ED3  1803               	skipnc
 16423  1ED4  0008               	return
 16424                           
 16425                           ;mcc_generated_files/pwm3.c: 85:         dutyValue &= 0x03FF;
 16426  1ED5  30FF               	movlw	255
 16427  1ED6  05C5               	andwf	PWM3_LoadDutyValue@dutyValue^(0+128),f
 16428  1ED7  3003               	movlw	3
 16429  1ED8  05C6               	andwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),f
 16430                           
 16431                           ;mcc_generated_files/pwm3.c: 88:         if(CCP3CONbits.FMT)
 16432  1ED9  0146               	movlb	6	; select bank6
 16433  1EDA  1E16               	btfss	22,4	;volatile
 16434  1EDB  2EE2               	goto	l8038
 16435                           
 16436                           ;mcc_generated_files/pwm3.c: 89:         {;mcc_generated_files/pwm3.c: 90:             d
      +                          utyValue <<= 6;
 16437  1EDC  3006               	movlw	6
 16438  1EDD  0141               	movlb	1	; select bank1
 16439  1EDE                     u8145:	
 16440  1EDE  35C5               	lslf	PWM3_LoadDutyValue@dutyValue^(0+128),f
 16441  1EDF  0DC6               	rlf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),f
 16442  1EE0  0B89               	decfsz	9,f
 16443  1EE1  2EDE               	goto	u8145
 16444  1EE2                     l8038:	
 16445                           
 16446                           ;mcc_generated_files/pwm3.c: 91:             CCPR3H = dutyValue >> 8;
 16447  1EE2  0141               	movlb	1	; select bank1
 16448  1EE3  0846               	movf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
 16449  1EE4  0146               	movlb	6	; select bank6
 16450  1EE5  0095               	movwf	21	;volatile
 16451                           
 16452                           ;mcc_generated_files/pwm3.c: 92:             CCPR3L = dutyValue;
 16453  1EE6  0141               	movlb	1	; select bank1
 16454  1EE7  0845               	movf	PWM3_LoadDutyValue@dutyValue^(0+128),w
 16455  1EE8  0146               	movlb	6	; select bank6
 16456  1EE9  0094               	movwf	20	;volatile
 16457                           
 16458                           ;mcc_generated_files/pwm3.c: 93:         }
 16459  1EEA  0008               	return
 16460  1EEB                     __end_of_PWM3_LoadDutyValue:	
 16461                           
 16462                           	psect	text34
 16463  1EAF                     __ptext34:	
 16464 ;; *************** function _PWM2_LoadDutyValue *****************
 16465 ;; Defined at:
 16466 ;;		line 82 in file "mcc_generated_files/pwm2.c"
 16467 ;; Parameters:    Size  Location     Type
 16468 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 16469 ;; Auto vars:     Size  Location     Type
 16470 ;;		None
 16471 ;; Return value:  Size  Location     Type
 16472 ;;                  1    wreg      void 
 16473 ;; Registers used:
 16474 ;;		wreg, status,2
 16475 ;; Tracked objects:
 16476 ;;		On entry : 0/0
 16477 ;;		On exit  : 0/0
 16478 ;;		Unchanged: 0/0
 16479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16480 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16483 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16484 ;;Total ram usage:        2 bytes
 16485 ;; Hardware stack levels used:    1
 16486 ;; Hardware stack levels required when called:    4
 16487 ;; This function calls:
 16488 ;;		Nothing
 16489 ;; This function is called by:
 16490 ;;		_LED_setColor
 16491 ;; This function uses a non-reentrant model
 16492 ;;
 16493                           
 16494                           
 16495                           ;psect for function _PWM2_LoadDutyValue
 16496  1EAF                     _PWM2_LoadDutyValue:	
 16497                           
 16498                           ;mcc_generated_files/pwm2.c: 82: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 83: {;mcc_generated_files/pwm2.c: 84:     if(dutyValue <= 127){
 16499                           
 16500                           ;incstack = 0
 16501                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 16502  1EAF  3000               	movlw	0
 16503  1EB0  0141               	movlb	1	; select bank1
 16504  1EB1  0246               	subwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),w
 16505  1EB2  3080               	movlw	128
 16506  1EB3  1903               	skipnz
 16507  1EB4  0245               	subwf	PWM2_LoadDutyValue@dutyValue^(0+128),w
 16508  1EB5  1803               	skipnc
 16509  1EB6  0008               	return
 16510                           
 16511                           ;mcc_generated_files/pwm2.c: 85:         dutyValue &= 0x03FF;
 16512  1EB7  30FF               	movlw	255
 16513  1EB8  05C5               	andwf	PWM2_LoadDutyValue@dutyValue^(0+128),f
 16514  1EB9  3003               	movlw	3
 16515  1EBA  05C6               	andwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),f
 16516                           
 16517                           ;mcc_generated_files/pwm2.c: 88:         if(CCP2CONbits.FMT)
 16518  1EBB  0146               	movlb	6	; select bank6
 16519  1EBC  1E12               	btfss	18,4	;volatile
 16520  1EBD  2EC4               	goto	l8086
 16521                           
 16522                           ;mcc_generated_files/pwm2.c: 89:         {;mcc_generated_files/pwm2.c: 90:             d
      +                          utyValue <<= 6;
 16523  1EBE  3006               	movlw	6
 16524  1EBF  0141               	movlb	1	; select bank1
 16525  1EC0                     u8235:	
 16526  1EC0  35C5               	lslf	PWM2_LoadDutyValue@dutyValue^(0+128),f
 16527  1EC1  0DC6               	rlf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),f
 16528  1EC2  0B89               	decfsz	9,f
 16529  1EC3  2EC0               	goto	u8235
 16530  1EC4                     l8086:	
 16531                           
 16532                           ;mcc_generated_files/pwm2.c: 91:             CCPR2H = dutyValue >> 8;
 16533  1EC4  0141               	movlb	1	; select bank1
 16534  1EC5  0846               	movf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),w
 16535  1EC6  0146               	movlb	6	; select bank6
 16536  1EC7  0091               	movwf	17	;volatile
 16537                           
 16538                           ;mcc_generated_files/pwm2.c: 92:             CCPR2L = dutyValue;
 16539  1EC8  0141               	movlb	1	; select bank1
 16540  1EC9  0845               	movf	PWM2_LoadDutyValue@dutyValue^(0+128),w
 16541  1ECA  0146               	movlb	6	; select bank6
 16542  1ECB  0090               	movwf	16	;volatile
 16543                           
 16544                           ;mcc_generated_files/pwm2.c: 93:         }
 16545  1ECC  0008               	return
 16546  1ECD                     __end_of_PWM2_LoadDutyValue:	
 16547                           
 16548                           	psect	text35
 16549  1E91                     __ptext35:	
 16550 ;; *************** function _PWM1_LoadDutyValue *****************
 16551 ;; Defined at:
 16552 ;;		line 82 in file "mcc_generated_files/pwm1.c"
 16553 ;; Parameters:    Size  Location     Type
 16554 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 16555 ;; Auto vars:     Size  Location     Type
 16556 ;;		None
 16557 ;; Return value:  Size  Location     Type
 16558 ;;                  1    wreg      void 
 16559 ;; Registers used:
 16560 ;;		wreg, status,2
 16561 ;; Tracked objects:
 16562 ;;		On entry : 0/0
 16563 ;;		On exit  : 0/0
 16564 ;;		Unchanged: 0/0
 16565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16566 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16569 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16570 ;;Total ram usage:        2 bytes
 16571 ;; Hardware stack levels used:    1
 16572 ;; Hardware stack levels required when called:    4
 16573 ;; This function calls:
 16574 ;;		Nothing
 16575 ;; This function is called by:
 16576 ;;		_LED_setColor
 16577 ;; This function uses a non-reentrant model
 16578 ;;
 16579                           
 16580                           
 16581                           ;psect for function _PWM1_LoadDutyValue
 16582  1E91                     _PWM1_LoadDutyValue:	
 16583                           
 16584                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     if(dutyValue <= 127){
 16585                           
 16586                           ;incstack = 0
 16587                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 16588  1E91  3000               	movlw	0
 16589  1E92  0141               	movlb	1	; select bank1
 16590  1E93  0246               	subwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),w
 16591  1E94  3080               	movlw	128
 16592  1E95  1903               	skipnz
 16593  1E96  0245               	subwf	PWM1_LoadDutyValue@dutyValue^(0+128),w
 16594  1E97  1803               	skipnc
 16595  1E98  0008               	return
 16596                           
 16597                           ;mcc_generated_files/pwm1.c: 85:         dutyValue &= 0x03FF;
 16598  1E99  30FF               	movlw	255
 16599  1E9A  05C5               	andwf	PWM1_LoadDutyValue@dutyValue^(0+128),f
 16600  1E9B  3003               	movlw	3
 16601  1E9C  05C6               	andwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),f
 16602                           
 16603                           ;mcc_generated_files/pwm1.c: 88:         if(CCP1CONbits.FMT)
 16604  1E9D  0146               	movlb	6	; select bank6
 16605  1E9E  1E0E               	btfss	14,4	;volatile
 16606  1E9F  2EA6               	goto	l8070
 16607                           
 16608                           ;mcc_generated_files/pwm1.c: 89:         {;mcc_generated_files/pwm1.c: 90:             d
      +                          utyValue <<= 6;
 16609  1EA0  3006               	movlw	6
 16610  1EA1  0141               	movlb	1	; select bank1
 16611  1EA2                     u8205:	
 16612  1EA2  35C5               	lslf	PWM1_LoadDutyValue@dutyValue^(0+128),f
 16613  1EA3  0DC6               	rlf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),f
 16614  1EA4  0B89               	decfsz	9,f
 16615  1EA5  2EA2               	goto	u8205
 16616  1EA6                     l8070:	
 16617                           
 16618                           ;mcc_generated_files/pwm1.c: 91:             CCPR1H = dutyValue >> 8;
 16619  1EA6  0141               	movlb	1	; select bank1
 16620  1EA7  0846               	movf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),w
 16621  1EA8  0146               	movlb	6	; select bank6
 16622  1EA9  008D               	movwf	13	;volatile
 16623                           
 16624                           ;mcc_generated_files/pwm1.c: 92:             CCPR1L = dutyValue;
 16625  1EAA  0141               	movlb	1	; select bank1
 16626  1EAB  0845               	movf	PWM1_LoadDutyValue@dutyValue^(0+128),w
 16627  1EAC  0146               	movlb	6	; select bank6
 16628  1EAD  008C               	movwf	12	;volatile
 16629                           
 16630                           ;mcc_generated_files/pwm1.c: 93:         }
 16631  1EAE  0008               	return
 16632  1EAF                     __end_of_PWM1_LoadDutyValue:	
 16633                           
 16634                           	psect	text36
 16635  1C84                     __ptext36:	
 16636 ;; *************** function _BEAT_detected *****************
 16637 ;; Defined at:
 16638 ;;		line 49 in file "beat.c"
 16639 ;; Parameters:    Size  Location     Type
 16640 ;;		None
 16641 ;; Auto vars:     Size  Location     Type
 16642 ;;		None
 16643 ;; Return value:  Size  Location     Type
 16644 ;;                  1    wreg      _Bool 
 16645 ;; Registers used:
 16646 ;;		wreg, status,2, status,0
 16647 ;; Tracked objects:
 16648 ;;		On entry : 0/0
 16649 ;;		On exit  : 0/0
 16650 ;;		Unchanged: 0/0
 16651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16656 ;;Total ram usage:        0 bytes
 16657 ;; Hardware stack levels used:    1
 16658 ;; Hardware stack levels required when called:    4
 16659 ;; This function calls:
 16660 ;;		Nothing
 16661 ;; This function is called by:
 16662 ;;		_LED_task_BEAT_STROBE
 16663 ;; This function uses a non-reentrant model
 16664 ;;
 16665                           
 16666                           
 16667                           ;psect for function _BEAT_detected
 16668  1C84                     _BEAT_detected:	
 16669                           
 16670                           ;beat.c: 50:     if (detected) {
 16671                           
 16672                           ;incstack = 0
 16673                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 16674  1C84  0141               	movlb	1	; select bank1
 16675  1C85  082E               	movf	_detected^(0+128),w
 16676  1C86  1903               	btfsc	3,2
 16677  1C87  2C8B               	goto	l8174
 16678                           
 16679                           ;beat.c: 51:         detected = 0;
 16680  1C88  01AE               	clrf	_detected^(0+128)
 16681                           
 16682                           ;beat.c: 52:         return 1;
 16683  1C89  3001               	movlw	1
 16684  1C8A  0008               	return
 16685  1C8B                     l8174:	
 16686                           
 16687                           ;beat.c: 55:     return 0;
 16688  1C8B  3000               	movlw	0
 16689  1C8C  0008               	return
 16690  1C8D                     __end_of_BEAT_detected:	
 16691                           
 16692                           	psect	text37
 16693  07FF                     __ptext37:	
 16694 ;; *************** function _LED_task_BEAT_MIXED *****************
 16695 ;; Defined at:
 16696 ;;		line 213 in file "led.c"
 16697 ;; Parameters:    Size  Location     Type
 16698 ;;		None
 16699 ;; Auto vars:     Size  Location     Type
 16700 ;;		None
 16701 ;; Return value:  Size  Location     Type
 16702 ;;                  1    wreg      void 
 16703 ;; Registers used:
 16704 ;;		None
 16705 ;; Tracked objects:
 16706 ;;		On entry : 0/0
 16707 ;;		On exit  : 0/0
 16708 ;;		Unchanged: 0/0
 16709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16714 ;;Total ram usage:        0 bytes
 16715 ;; Hardware stack levels used:    1
 16716 ;; Hardware stack levels required when called:    4
 16717 ;; This function calls:
 16718 ;;		Nothing
 16719 ;; This function is called by:
 16720 ;;		_LED_task
 16721 ;; This function uses a non-reentrant model
 16722 ;;
 16723                           
 16724                           
 16725                           ;psect for function _LED_task_BEAT_MIXED
 16726  07FF                     _LED_task_BEAT_MIXED:	
 16727                           
 16728                           ;incstack = 0
 16729                           ; Regs used in _LED_task_BEAT_MIXED: []
 16730  07FF  0008               	return
 16731  0800                     __end_of_LED_task_BEAT_MIXED:	
 16732                           
 16733                           	psect	text38
 16734  1C1A                     __ptext38:	
 16735 ;; *************** function _LED_task_BEAT_FADE *****************
 16736 ;; Defined at:
 16737 ;;		line 199 in file "led.c"
 16738 ;; Parameters:    Size  Location     Type
 16739 ;;		None
 16740 ;; Auto vars:     Size  Location     Type
 16741 ;;		None
 16742 ;; Return value:  Size  Location     Type
 16743 ;;                  1    wreg      void 
 16744 ;; Registers used:
 16745 ;;		None
 16746 ;; Tracked objects:
 16747 ;;		On entry : 0/0
 16748 ;;		On exit  : 0/0
 16749 ;;		Unchanged: 0/0
 16750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16755 ;;Total ram usage:        0 bytes
 16756 ;; Hardware stack levels used:    1
 16757 ;; Hardware stack levels required when called:    4
 16758 ;; This function calls:
 16759 ;;		Nothing
 16760 ;; This function is called by:
 16761 ;;		_LED_task
 16762 ;; This function uses a non-reentrant model
 16763 ;;
 16764                           
 16765                           
 16766                           ;psect for function _LED_task_BEAT_FADE
 16767  1C1A                     _LED_task_BEAT_FADE:	
 16768                           
 16769                           ;incstack = 0
 16770                           ; Regs used in _LED_task_BEAT_FADE: []
 16771  1C1A  0008               	return
 16772  1C1B                     __end_of_LED_task_BEAT_FADE:	
 16773                           
 16774                           	psect	text39
 16775  1C19                     __ptext39:	
 16776 ;; *************** function _LED_task_BEAT_CONTINUOUS *****************
 16777 ;; Defined at:
 16778 ;;		line 209 in file "led.c"
 16779 ;; Parameters:    Size  Location     Type
 16780 ;;		None
 16781 ;; Auto vars:     Size  Location     Type
 16782 ;;		None
 16783 ;; Return value:  Size  Location     Type
 16784 ;;                  1    wreg      void 
 16785 ;; Registers used:
 16786 ;;		None
 16787 ;; Tracked objects:
 16788 ;;		On entry : 0/0
 16789 ;;		On exit  : 0/0
 16790 ;;		Unchanged: 0/0
 16791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16796 ;;Total ram usage:        0 bytes
 16797 ;; Hardware stack levels used:    1
 16798 ;; Hardware stack levels required when called:    4
 16799 ;; This function calls:
 16800 ;;		Nothing
 16801 ;; This function is called by:
 16802 ;;		_LED_task
 16803 ;; This function uses a non-reentrant model
 16804 ;;
 16805                           
 16806                           
 16807                           ;psect for function _LED_task_BEAT_CONTINUOUS
 16808  1C19                     _LED_task_BEAT_CONTINUOUS:	
 16809                           
 16810                           ;incstack = 0
 16811                           ; Regs used in _LED_task_BEAT_CONTINUOUS: []
 16812  1C19  0008               	return
 16813  1C1A                     __end_of_LED_task_BEAT_CONTINUOUS:	
 16814                           
 16815                           	psect	text40
 16816  1C18                     __ptext40:	
 16817 ;; *************** function _LED_task_ANIMATION *****************
 16818 ;; Defined at:
 16819 ;;		line 205 in file "led.c"
 16820 ;; Parameters:    Size  Location     Type
 16821 ;;		None
 16822 ;; Auto vars:     Size  Location     Type
 16823 ;;		None
 16824 ;; Return value:  Size  Location     Type
 16825 ;;                  1    wreg      void 
 16826 ;; Registers used:
 16827 ;;		None
 16828 ;; Tracked objects:
 16829 ;;		On entry : 0/0
 16830 ;;		On exit  : 0/0
 16831 ;;		Unchanged: 0/0
 16832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16837 ;;Total ram usage:        0 bytes
 16838 ;; Hardware stack levels used:    1
 16839 ;; Hardware stack levels required when called:    4
 16840 ;; This function calls:
 16841 ;;		Nothing
 16842 ;; This function is called by:
 16843 ;;		_LED_task
 16844 ;; This function uses a non-reentrant model
 16845 ;;
 16846                           
 16847                           
 16848                           ;psect for function _LED_task_ANIMATION
 16849  1C18                     _LED_task_ANIMATION:	
 16850                           
 16851                           ;incstack = 0
 16852                           ; Regs used in _LED_task_ANIMATION: []
 16853  1C18  0008               	return
 16854  1C19                     __end_of_LED_task_ANIMATION:	
 16855                           
 16856                           	psect	text41
 16857  1C46                     __ptext41:	
 16858 ;; *************** function _LED_init *****************
 16859 ;; Defined at:
 16860 ;;		line 47 in file "led.c"
 16861 ;; Parameters:    Size  Location     Type
 16862 ;;		None
 16863 ;; Auto vars:     Size  Location     Type
 16864 ;;		None
 16865 ;; Return value:  Size  Location     Type
 16866 ;;                  1    wreg      void 
 16867 ;; Registers used:
 16868 ;;		status,2
 16869 ;; Tracked objects:
 16870 ;;		On entry : 0/0
 16871 ;;		On exit  : 0/0
 16872 ;;		Unchanged: 0/0
 16873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16878 ;;Total ram usage:        0 bytes
 16879 ;; Hardware stack levels used:    1
 16880 ;; Hardware stack levels required when called:    4
 16881 ;; This function calls:
 16882 ;;		Nothing
 16883 ;; This function is called by:
 16884 ;;		_main
 16885 ;; This function uses a non-reentrant model
 16886 ;;
 16887                           
 16888                           
 16889                           ;psect for function _LED_init
 16890  1C46                     _LED_init:	
 16891                           
 16892                           ;led.c: 48:     manual.red = 0;
 16893                           
 16894                           ;incstack = 0
 16895                           ; Regs used in _LED_init: [status,2]
 16896  1C46  0141               	movlb	1	; select bank1
 16897  1C47  01A6               	clrf	(_manual^(0+128)+1)
 16898                           
 16899                           ;led.c: 49:     manual.green = 0;
 16900  1C48  01A7               	clrf	(_manual^(0+128)+2)
 16901                           
 16902                           ;led.c: 50:     manual.blue = 0;
 16903  1C49  01A8               	clrf	(_manual^(0+128)+3)
 16904                           
 16905                           ;led.c: 51:     manual.white = 0;
 16906  1C4A  01A5               	clrf	_manual^(0+128)
 16907                           
 16908                           ;led.c: 52:     TRISCbits.TRISC5 = 0;
 16909  1C4B  0140               	movlb	0	; select bank0
 16910  1C4C  1294               	bcf	20,5	;volatile
 16911  1C4D  0008               	return
 16912  1C4E                     __end_of_LED_init:	
 16913                           
 16914                           	psect	text42
 16915  1D6A                     __ptext42:	
 16916 ;; *************** function _DMX_init *****************
 16917 ;; Defined at:
 16918 ;;		line 21 in file "dmx.c"
 16919 ;; Parameters:    Size  Location     Type
 16920 ;;		None
 16921 ;; Auto vars:     Size  Location     Type
 16922 ;;		None
 16923 ;; Return value:  Size  Location     Type
 16924 ;;                  1    wreg      void 
 16925 ;; Registers used:
 16926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16927 ;; Tracked objects:
 16928 ;;		On entry : 0/0
 16929 ;;		On exit  : 0/0
 16930 ;;		Unchanged: 0/0
 16931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16936 ;;Total ram usage:        0 bytes
 16937 ;; Hardware stack levels used:    1
 16938 ;; Hardware stack levels required when called:    9
 16939 ;; This function calls:
 16940 ;;		_EUSART1_SetRxInterruptHandler
 16941 ;;		_TM1650_fastPrintNum
 16942 ;; This function is called by:
 16943 ;;		_main
 16944 ;; This function uses a non-reentrant model
 16945 ;;
 16946                           
 16947                           
 16948                           ;psect for function _DMX_init
 16949  1D6A                     _DMX_init:	
 16950                           
 16951                           ;dmx.c: 22:     EUSART1_SetRxInterruptHandler(DMX_interrupt);
 16952                           
 16953                           ;incstack = 0
 16954                           ; Regs used in _DMX_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16955  1D6A  3021               	movlw	low _DMX_interrupt
 16956  1D6B  0140               	movlb	0	; select bank0
 16957  1D6C  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 16958  1D6D  3011               	movlw	high _DMX_interrupt
 16959  1D6E  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 16960  1D6F  319C  247B  319D   	fcall	_EUSART1_SetRxInterruptHandler
 16961                           
 16962                           ;dmx.c: 23:     TM1650_fastPrintNum(address);
 16963  1D72  0141               	movlb	1	; select bank1
 16964  1D73  086B               	movf	(_address+1)^(0+128),w
 16965  1D74  0140               	movlb	0	; select bank0
 16966  1D75  00B7               	movwf	TM1650_fastPrintNum@num+1
 16967  1D76  0141               	movlb	1	; select bank1
 16968  1D77  086A               	movf	_address^(0+128),w
 16969  1D78  0140               	movlb	0	; select bank0
 16970  1D79  00B6               	movwf	TM1650_fastPrintNum@num
 16971  1D7A  318A  2287         	fcall	_TM1650_fastPrintNum
 16972  1D7C  0008               	return
 16973  1D7D                     __end_of_DMX_init:	
 16974                           
 16975                           	psect	text43
 16976  1C7B                     __ptext43:	
 16977 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 16978 ;; Defined at:
 16979 ;;		line 232 in file "mcc_generated_files/eusart1.c"
 16980 ;; Parameters:    Size  Location     Type
 16981 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 16982 ;;		 -> DMX_interrupt(1), EUSART1_Receive_ISR(1), 
 16983 ;; Auto vars:     Size  Location     Type
 16984 ;;		None
 16985 ;; Return value:  Size  Location     Type
 16986 ;;                  1    wreg      void 
 16987 ;; Registers used:
 16988 ;;		wreg
 16989 ;; Tracked objects:
 16990 ;;		On entry : 0/0
 16991 ;;		On exit  : 0/0
 16992 ;;		Unchanged: 0/0
 16993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16994 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16997 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16998 ;;Total ram usage:        2 bytes
 16999 ;; Hardware stack levels used:    1
 17000 ;; Hardware stack levels required when called:    4
 17001 ;; This function calls:
 17002 ;;		Nothing
 17003 ;; This function is called by:
 17004 ;;		_EUSART1_Initialize
 17005 ;;		_DMX_init
 17006 ;; This function uses a non-reentrant model
 17007 ;;
 17008                           
 17009                           
 17010                           ;psect for function _EUSART1_SetRxInterruptHandler
 17011  1C7B                     _EUSART1_SetRxInterruptHandler:	
 17012                           
 17013                           ;mcc_generated_files/eusart1.c: 233:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 17014                           
 17015                           ;incstack = 0
 17016                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 17017  1C7B  0140               	movlb	0	; select bank0
 17018  1C7C  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 17019  1C7D  0142               	movlb	2	; select bank2
 17020  1C7E  00E6               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 17021  1C7F  0140               	movlb	0	; select bank0
 17022  1C80  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 17023  1C81  0142               	movlb	2	; select bank2
 17024  1C82  00E5               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 17025  1C83  0008               	return
 17026  1C84                     __end_of_EUSART1_SetRxInterruptHandler:	
 17027                           
 17028                           	psect	text44
 17029  02B6                     __ptext44:	
 17030 ;; *************** function _CONTROLLER_task *****************
 17031 ;; Defined at:
 17032 ;;		line 29 in file "controller.c"
 17033 ;; Parameters:    Size  Location     Type
 17034 ;;		None
 17035 ;; Auto vars:     Size  Location     Type
 17036 ;;  isActive        1   79[BANK0 ] _Bool 
 17037 ;; Return value:  Size  Location     Type
 17038 ;;                  1    wreg      void 
 17039 ;; Registers used:
 17040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17041 ;; Tracked objects:
 17042 ;;		On entry : 0/0
 17043 ;;		On exit  : 0/0
 17044 ;;		Unchanged: 0/0
 17045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17047 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17048 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17049 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17050 ;;Total ram usage:        3 bytes
 17051 ;; Hardware stack levels used:    1
 17052 ;; Hardware stack levels required when called:   18
 17053 ;; This function calls:
 17054 ;;		_BUTTONS_isClicked
 17055 ;;		_CLOCK_getTime
 17056 ;;		_CONTROL_ANIMATION
 17057 ;;		_CONTROL_BEAT
 17058 ;;		_CONTROL_DMX
 17059 ;;		_CONTROL_MANUAL
 17060 ;;		_TM1650_enable
 17061 ;;		_TM1650_fastPrintNum
 17062 ;;		_TM1650_fastPrintNum_2digit
 17063 ;;		_TM1650_fastPrintNum_3digit
 17064 ;;		_getManualColor
 17065 ;;		_menuSelection
 17066 ;;		_printf
 17067 ;; This function is called by:
 17068 ;;		_main
 17069 ;; This function uses a non-reentrant model
 17070 ;;
 17071                           
 17072                           
 17073                           ;psect for function _CONTROLLER_task
 17074  02B6                     _CONTROLLER_task:	
 17075                           
 17076                           ;controller.c: 31:     _Bool isActive = 1;
 17077                           
 17078                           ;incstack = 0
 17079 ;; hardware stack exceeded
 17080                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17081  02B6  0140               	movlb	0	; select bank0
 17082  02B7  01EF               	clrf	CONTROLLER_task@isActive
 17083  02B8  0AEF               	incf	CONTROLLER_task@isActive,f
 17084                           
 17085                           ;controller.c: 32:     upState = BUTTONS_isClicked(up);
 17086  02B9  0141               	movlb	1	; select bank1
 17087  02BA  083C               	movf	_up^(0+128),w
 17088  02BB  319D  257D  3182   	fcall	_BUTTONS_isClicked
 17089  02BE  0141               	movlb	1	; select bank1
 17090  02BF  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17091  02C0  0851               	movf	??_CONTROLLER_task^(0+128),w
 17092  02C1  00B5               	movwf	_upState^(0+128)
 17093                           
 17094                           ;controller.c: 33:     downState = BUTTONS_isClicked(down);
 17095  02C2  083B               	movf	_down^(0+128),w
 17096  02C3  319D  257D  3182   	fcall	_BUTTONS_isClicked
 17097  02C6  0141               	movlb	1	; select bank1
 17098  02C7  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17099  02C8  0851               	movf	??_CONTROLLER_task^(0+128),w
 17100  02C9  00B4               	movwf	_downState^(0+128)
 17101                           
 17102                           ;controller.c: 34:     menuState = BUTTONS_isClicked(menu);
 17103  02CA  083D               	movf	_menu^(0+128),w
 17104  02CB  319D  257D  3182   	fcall	_BUTTONS_isClicked
 17105  02CE  0141               	movlb	1	; select bank1
 17106  02CF  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17107  02D0  0851               	movf	??_CONTROLLER_task^(0+128),w
 17108  02D1  00B3               	movwf	_menuState^(0+128)
 17109                           
 17110                           ;controller.c: 35:     enterState = BUTTONS_isClicked(enter);
 17111  02D2  083A               	movf	_enter^(0+128),w
 17112  02D3  319D  257D  3182   	fcall	_BUTTONS_isClicked
 17113  02D6  0141               	movlb	1	; select bank1
 17114  02D7  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17115  02D8  0851               	movf	??_CONTROLLER_task^(0+128),w
 17116  02D9  00B2               	movwf	_enterState^(0+128)
 17117                           
 17118                           ;controller.c: 37:     if (startup == 1 && CLOCK_getTime() - startTime < 5000) {
 17119  02DA  036E               	decf	_startup^(0+128),w
 17120  02DB  1D03               	btfss	3,2
 17121  02DC  2B05               	goto	l8934
 17122  02DD  319C  2469  3182   	fcall	_CLOCK_getTime
 17123  02E0  0142               	movlb	2	; select bank2
 17124  02E1  084A               	movf	_startTime^(0+256),w
 17125  02E2  0140               	movlb	0	; select bank0
 17126  02E3  0220               	subwf	?_CLOCK_getTime,w
 17127  02E4  0141               	movlb	1	; select bank1
 17128  02E5  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17129  02E6  0142               	movlb	2	; select bank2
 17130  02E7  084B               	movf	(_startTime+1)^(0+256),w
 17131  02E8  0140               	movlb	0	; select bank0
 17132  02E9  3B21               	subwfb	?_CLOCK_getTime+1,w
 17133  02EA  0141               	movlb	1	; select bank1
 17134  02EB  00D2               	movwf	(??_CONTROLLER_task+1)^(0+128)
 17135  02EC  3013               	movlw	19
 17136  02ED  0252               	subwf	(??_CONTROLLER_task+1)^(0+128),w
 17137  02EE  3088               	movlw	136
 17138  02EF  1903               	skipnz
 17139  02F0  0251               	subwf	??_CONTROLLER_task^(0+128),w
 17140  02F1  1803               	skipnc
 17141  02F2  2B05               	goto	l8934
 17142                           
 17143                           ;controller.c: 38:         menuSelection();
 17144  02F3  3195  25E2  3182   	fcall	_menuSelection
 17145                           
 17146                           ;controller.c: 39:         if (upState || downState || menuState) {
 17147  02F6  0141               	movlb	1	; select bank1
 17148  02F7  0835               	movf	_upState^(0+128),w
 17149  02F8  1D03               	btfss	3,2
 17150  02F9  2AFF               	goto	l1030
 17151  02FA  0834               	movf	_downState^(0+128),w
 17152  02FB  1903               	btfsc	3,2
 17153  02FC  0833               	movf	_menuState^(0+128),w
 17154  02FD  1903               	btfsc	3,2
 17155  02FE  2B01               	goto	l8930
 17156  02FF                     l1030:	
 17157                           
 17158                           ;controller.c: 40:             menuPressed = 1;
 17159  02FF  01B7               	clrf	_menuPressed^(0+128)
 17160  0300  0AB7               	incf	_menuPressed^(0+128),f
 17161  0301                     l8930:	
 17162                           
 17163                           ;controller.c: 42:         if (enterState) {
 17164  0301  0832               	movf	_enterState^(0+128),w
 17165  0302  1D03               	btfss	3,2
 17166  0303  0008               	return
 17167  0304  2B0D               	goto	l8940
 17168  0305                     l8934:	
 17169                           ;controller.c: 43:             return;
 17170                           
 17171                           
 17172                           ;controller.c: 46:         if (menuPressed == 0 && startup == 1)
 17173  0305  0837               	movf	_menuPressed^(0+128),w
 17174  0306  1D03               	btfss	3,2
 17175  0307  2B0C               	goto	l1034
 17176  0308  036E               	decf	_startup^(0+128),w
 17177  0309  1D03               	btfss	3,2
 17178  030A  2B0C               	goto	l1034
 17179                           
 17180                           ;controller.c: 47:             currentSelection = MODE_DMX;
 17181  030B  01B8               	clrf	_currentSelection^(0+128)
 17182  030C                     l1034:	
 17183                           
 17184                           ;controller.c: 48:         startup = 0;
 17185  030C  01EE               	clrf	_startup^(0+128)
 17186  030D                     l8940:	
 17187                           
 17188                           ;controller.c: 51:     if ((menuState || menuPressed) && !enterPressed) {
 17189  030D  0833               	movf	_menuState^(0+128),w
 17190  030E  1903               	btfsc	3,2
 17191  030F  0837               	movf	_menuPressed^(0+128),w
 17192  0310  1903               	btfsc	3,2
 17193  0311  2B1B               	goto	l8950
 17194  0312  0836               	movf	_enterPressed^(0+128),w
 17195  0313  1D03               	btfss	3,2
 17196  0314  2B1B               	goto	l8950
 17197                           
 17198                           ;controller.c: 52:         menuPressed = 1;
 17199  0315  01B7               	clrf	_menuPressed^(0+128)
 17200  0316  0AB7               	incf	_menuPressed^(0+128),f
 17201                           
 17202                           ;controller.c: 53:         menuSelection();
 17203  0317  3195  25E2  3182   	fcall	_menuSelection
 17204                           
 17205                           ;controller.c: 54:     } else if (currentSelection == MODE_DMX) {
 17206  031A  2B50               	goto	l8976
 17207  031B                     l8950:	
 17208  031B  0838               	movf	_currentSelection^(0+128),w
 17209  031C  1D03               	btfss	3,2
 17210  031D  2B22               	goto	l8954
 17211                           
 17212                           ;controller.c: 55:         isActive = CONTROL_DMX();
 17213  031E  3197  2767  3182   	fcall	_CONTROL_DMX
 17214  0321  2B48               	goto	L17
 17215  0322                     l8954:	
 17216                           ;controller.c: 56:     } else if (currentSelection == MODE_ANIMATION) {
 17217                           
 17218  0322  3002               	movlw	2
 17219  0323  0638               	xorwf	_currentSelection^(0+128),w
 17220  0324  1D03               	btfss	3,2
 17221  0325  2B2A               	goto	l8958
 17222                           
 17223                           ;controller.c: 57:         isActive = CONTROL_ANIMATION();
 17224  0326  3190  2043  3182   	fcall	_CONTROL_ANIMATION
 17225  0329  2B48               	goto	L17
 17226  032A                     l8958:	
 17227                           ;controller.c: 58:     } else if (currentSelection == MODE_BEAT_STROBE || currentSelecti
      +                          on == MODE_BEAT_FADE || currentSelection == MODE_BEAT_CONTINUOUS || currentSelection == 
      +                          MODE_BEAT_MIXED) {
 17228                           
 17229  032A  0338               	decf	_currentSelection^(0+128),w
 17230  032B  1903               	btfsc	3,2
 17231  032C  2B39               	goto	l8966
 17232  032D  3004               	movlw	4
 17233  032E  0638               	xorwf	_currentSelection^(0+128),w
 17234  032F  1903               	btfsc	3,2
 17235  0330  2B39               	goto	l8966
 17236  0331  3005               	movlw	5
 17237  0332  0638               	xorwf	_currentSelection^(0+128),w
 17238  0333  1903               	btfsc	3,2
 17239  0334  2B39               	goto	l8966
 17240  0335  3006               	movlw	6
 17241  0336  0638               	xorwf	_currentSelection^(0+128),w
 17242  0337  1D03               	btfss	3,2
 17243  0338  2B3D               	goto	l8968
 17244  0339                     l8966:	
 17245                           
 17246                           ;controller.c: 59:         isActive = CONTROL_BEAT();
 17247  0339  3195  2573  3182   	fcall	_CONTROL_BEAT
 17248  033C  2B48               	goto	L17
 17249  033D                     l8968:	
 17250                           ;controller.c: 60:     } else if(currentSelection == MODE_MANUAL && !enterPressed){
 17251                           
 17252  033D  3003               	movlw	3
 17253  033E  0638               	xorwf	_currentSelection^(0+128),w
 17254  033F  1D03               	btfss	3,2
 17255  0340  2B4E               	goto	l8974
 17256  0341  0836               	movf	_enterPressed^(0+128),w
 17257  0342  1D03               	btfss	3,2
 17258  0343  2B4E               	goto	l8974
 17259                           
 17260                           ;controller.c: 61:         isActive = CONTROL_MANUAL(colorModeSelected);
 17261  0344  0830               	movf	_colorModeSelected^(0+128),w
 17262  0345  3189  21CF  3182   	fcall	_CONTROL_MANUAL
 17263  0348                     L17:	
 17264  0348  0141               	movlb	1	; select bank1
 17265  0349  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17266  034A  0851               	movf	??_CONTROLLER_task^(0+128),w
 17267  034B  0140               	movlb	0	; select bank0
 17268  034C  00EF               	movwf	CONTROLLER_task@isActive
 17269                           
 17270                           ;controller.c: 62:     } else {
 17271  034D  2B50               	goto	l8976
 17272  034E                     l8974:	
 17273                           
 17274                           ;controller.c: 63:         isActive = 0;
 17275  034E  0140               	movlb	0	; select bank0
 17276  034F  01EF               	clrf	CONTROLLER_task@isActive
 17277  0350                     l8976:	
 17278                           
 17279                           ;controller.c: 66:     if (isActive) {
 17280  0350  0140               	movlb	0	; select bank0
 17281  0351  086F               	movf	CONTROLLER_task@isActive,w
 17282  0352  1903               	btfsc	3,2
 17283  0353  2B5F               	goto	l8980
 17284                           
 17285                           ;controller.c: 67:         lastActiveTime = CLOCK_getTime();
 17286  0354  319C  2469  3182   	fcall	_CLOCK_getTime
 17287  0357  0140               	movlb	0	; select bank0
 17288  0358  0821               	movf	?_CLOCK_getTime+1,w
 17289  0359  0142               	movlb	2	; select bank2
 17290  035A  00C5               	movwf	(_lastActiveTime+1)^(0+256)
 17291  035B  0140               	movlb	0	; select bank0
 17292  035C  0820               	movf	?_CLOCK_getTime,w
 17293  035D  0142               	movlb	2	; select bank2
 17294  035E  00C4               	movwf	_lastActiveTime^(0+256)
 17295  035F                     l8980:	
 17296                           
 17297                           ;controller.c: 70:     if (CLOCK_getTime() - lastActiveTime >= 5000) {
 17298  035F  319C  2469  3182   	fcall	_CLOCK_getTime
 17299  0362  0142               	movlb	2	; select bank2
 17300  0363  0844               	movf	_lastActiveTime^(0+256),w
 17301  0364  0140               	movlb	0	; select bank0
 17302  0365  0220               	subwf	?_CLOCK_getTime,w
 17303  0366  0141               	movlb	1	; select bank1
 17304  0367  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17305  0368  0142               	movlb	2	; select bank2
 17306  0369  0845               	movf	(_lastActiveTime+1)^(0+256),w
 17307  036A  0140               	movlb	0	; select bank0
 17308  036B  3B21               	subwfb	?_CLOCK_getTime+1,w
 17309  036C  0141               	movlb	1	; select bank1
 17310  036D  00D2               	movwf	(??_CONTROLLER_task+1)^(0+128)
 17311  036E  3013               	movlw	19
 17312  036F  0252               	subwf	(??_CONTROLLER_task+1)^(0+128),w
 17313  0370  3088               	movlw	136
 17314  0371  1903               	skipnz
 17315  0372  0251               	subwf	??_CONTROLLER_task^(0+128),w
 17316  0373  1C03               	skipc
 17317  0374  2B87               	goto	l8986
 17318                           
 17319                           ;controller.c: 71:         TM1650_enable(0);
 17320  0375  3000               	movlw	0
 17321  0376  319D  25B9  3182   	fcall	_TM1650_enable
 17322                           
 17323                           ;controller.c: 72:         lastActiveTime = CLOCK_getTime() - (5000 + 1);
 17324  0379  319C  2469  3182   	fcall	_CLOCK_getTime
 17325  037C  0140               	movlb	0	; select bank0
 17326  037D  0820               	movf	?_CLOCK_getTime,w
 17327  037E  3E77               	addlw	119
 17328  037F  0142               	movlb	2	; select bank2
 17329  0380  00C4               	movwf	_lastActiveTime^(0+256)
 17330  0381  30EC               	movlw	236
 17331  0382  0140               	movlb	0	; select bank0
 17332  0383  3D21               	addwfc	?_CLOCK_getTime+1,w
 17333  0384  0142               	movlb	2	; select bank2
 17334  0385  00C5               	movwf	(_lastActiveTime+1)^(0+256)
 17335                           
 17336                           ;controller.c: 73:     } else {
 17337  0386  2B8B               	goto	l8988
 17338  0387                     l8986:	
 17339                           
 17340                           ;controller.c: 74:         TM1650_enable(1);
 17341  0387  3001               	movlw	1
 17342  0388  319D  25B9  3182   	fcall	_TM1650_enable
 17343  038B                     l8988:	
 17344                           
 17345                           ;controller.c: 77:     if (currentSelection == MODE_DMX && !menuPressed) {
 17346  038B  0141               	movlb	1	; select bank1
 17347  038C  0838               	movf	_currentSelection^(0+128),w
 17348  038D  1D03               	btfss	3,2
 17349  038E  2C4F               	goto	l8996
 17350  038F  0837               	movf	_menuPressed^(0+128),w
 17351  0390  1D03               	btfss	3,2
 17352  0391  2C4F               	goto	l8996
 17353                           
 17354                           ;controller.c: 78:         TM1650_fastPrintNum(address);
 17355  0392  086B               	movf	(_address+1)^(0+128),w
 17356  0393  0140               	movlb	0	; select bank0
 17357  0394  00B7               	movwf	TM1650_fastPrintNum@num+1
 17358  0395  0141               	movlb	1	; select bank1
 17359  0396  086A               	movf	_address^(0+128),w
 17360  0397  0140               	movlb	0	; select bank0
 17361  0398  00B6               	movwf	TM1650_fastPrintNum@num
 17362  0399  318A  2287  3182   	fcall	_TM1650_fastPrintNum
 17363  039C  2C4C               	goto	l8994
 17364  039D                     l8998:	
 17365  039D  0837               	movf	_menuPressed^(0+128),w
 17366  039E  1D03               	btfss	3,2
 17367  039F  2C52               	goto	l9006
 17368                           
 17369                           ;controller.c: 81:         printf("HOLD\r");
 17370  03A0  305B               	movlw	low (STR_1| (0+32768))
 17371  03A1  00C5               	movwf	printf@fmt^(0+128)
 17372  03A2  30A0               	movlw	high (STR_1| (0+32768))
 17373  03A3  00C6               	movwf	(printf@fmt^(0+128)+1)
 17374  03A4  319D  25CE  3182   	fcall	_printf
 17375                           
 17376                           ;controller.c: 82:         lastActiveTime = CLOCK_getTime();
 17377  03A7  319C  2469  3182   	fcall	_CLOCK_getTime
 17378  03AA  0140               	movlb	0	; select bank0
 17379  03AB  0821               	movf	?_CLOCK_getTime+1,w
 17380  03AC  0142               	movlb	2	; select bank2
 17381  03AD  00C5               	movwf	(_lastActiveTime+1)^(0+256)
 17382  03AE  0140               	movlb	0	; select bank0
 17383  03AF  0820               	movf	?_CLOCK_getTime,w
 17384  03B0  0142               	movlb	2	; select bank2
 17385  03B1  00C4               	movwf	_lastActiveTime^(0+256)
 17386  03B2  2C4C               	goto	l8994
 17387  03B3                     l9008:	
 17388  03B3  0837               	movf	_menuPressed^(0+128),w
 17389  03B4  1D03               	btfss	3,2
 17390  03B5  2C56               	goto	l9020
 17391  03B6  0831               	movf	_beatHold^(0+128),w
 17392  03B7  1D03               	btfss	3,2
 17393  03B8  2C56               	goto	l9020
 17394                           
 17395                           ;controller.c: 90:             printf("AN");
 17396  03B9  3078               	movlw	low (STR_4| (0+32768))
 17397  03BA  00C5               	movwf	printf@fmt^(0+128)
 17398  03BB  30A0               	movlw	high (STR_4| (0+32768))
 17399  03BC  00C6               	movwf	(printf@fmt^(0+128)+1)
 17400  03BD  319D  25CE  3182   	fcall	_printf
 17401                           
 17402                           ;controller.c: 91:             TM1650_fastPrintNum_2digit(animationModeSelected);
 17403  03C0  0141               	movlb	1	; select bank1
 17404  03C1  086D               	movf	_animationModeSelected^(0+128),w
 17405  03C2  3188  2004  3182   	fcall	_TM1650_fastPrintNum_2digit
 17406  03C5  2C45               	goto	L18
 17407  03C6                     l9022:	
 17408                           ;controller.c: 92:             printf("\r");
 17409                           
 17410  03C6  0837               	movf	_menuPressed^(0+128),w
 17411  03C7  1D03               	btfss	3,2
 17412  03C8  2C59               	goto	l9030
 17413  03C9  0831               	movf	_beatHold^(0+128),w
 17414  03CA  1D03               	btfss	3,2
 17415  03CB  2C59               	goto	l9030
 17416                           
 17417                           ;controller.c: 96:         printf("B-");
 17418  03CC  306F               	movlw	low (STR_6| (0+32768))
 17419  03CD  00C5               	movwf	printf@fmt^(0+128)
 17420  03CE  30A0               	movlw	high (STR_6| (0+32768))
 17421  03CF  00C6               	movwf	(printf@fmt^(0+128)+1)
 17422  03D0  319D  25CE  3182   	fcall	_printf
 17423                           
 17424                           ;controller.c: 97:         TM1650_fastPrintNum_2digit((uint8_t)beatBrightness);
 17425  03D3  0141               	movlb	1	; select bank1
 17426  03D4  086F               	movf	_beatBrightness^(0+128),w
 17427  03D5  3188  2004  3182   	fcall	_TM1650_fastPrintNum_2digit
 17428  03D8  2C45               	goto	L18
 17429  03D9                     l9032:	
 17430                           ;controller.c: 98:         printf("\r");
 17431                           
 17432  03D9  0837               	movf	_menuPressed^(0+128),w
 17433  03DA  1D03               	btfss	3,2
 17434  03DB  2C5D               	goto	l9040
 17435  03DC  0831               	movf	_beatHold^(0+128),w
 17436  03DD  1D03               	btfss	3,2
 17437  03DE  2C5D               	goto	l9040
 17438                           
 17439                           ;controller.c: 101:         printf("F-");
 17440  03DF  3075               	movlw	low (STR_8| (0+32768))
 17441  03E0  00C5               	movwf	printf@fmt^(0+128)
 17442  03E1  30A0               	movlw	high (STR_8| (0+32768))
 17443  03E2  00C6               	movwf	(printf@fmt^(0+128)+1)
 17444  03E3  319D  25CE  3182   	fcall	_printf
 17445                           
 17446                           ;controller.c: 102:         TM1650_fastPrintNum_2digit((uint8_t)beatBrightness);
 17447  03E6  0141               	movlb	1	; select bank1
 17448  03E7  086F               	movf	_beatBrightness^(0+128),w
 17449  03E8  3188  2004  3182   	fcall	_TM1650_fastPrintNum_2digit
 17450  03EB  2C45               	goto	L18
 17451  03EC                     l9042:	
 17452                           ;controller.c: 103:         printf("\r");
 17453                           
 17454  03EC  0837               	movf	_menuPressed^(0+128),w
 17455  03ED  1D03               	btfss	3,2
 17456  03EE  2C61               	goto	l9050
 17457  03EF  0831               	movf	_beatHold^(0+128),w
 17458  03F0  1D03               	btfss	3,2
 17459  03F1  2C61               	goto	l9050
 17460                           
 17461                           ;controller.c: 106:         printf("C-");
 17462  03F2  3072               	movlw	low (STR_10| (0+32768))
 17463  03F3  00C5               	movwf	printf@fmt^(0+128)
 17464  03F4  30A0               	movlw	high (STR_10| (0+32768))
 17465  03F5  00C6               	movwf	(printf@fmt^(0+128)+1)
 17466  03F6  319D  25CE  3182   	fcall	_printf
 17467                           
 17468                           ;controller.c: 107:         TM1650_fastPrintNum_2digit((uint8_t)beatBrightness);
 17469  03F9  0141               	movlb	1	; select bank1
 17470  03FA  086F               	movf	_beatBrightness^(0+128),w
 17471  03FB  3188  2004  3182   	fcall	_TM1650_fastPrintNum_2digit
 17472  03FE  2C45               	goto	L18
 17473  03FF                     l9052:	
 17474                           ;controller.c: 108:         printf("\r");
 17475                           
 17476  03FF  0837               	movf	_menuPressed^(0+128),w
 17477  0400  1D03               	btfss	3,2
 17478  0401  2C65               	goto	l9060
 17479  0402  0831               	movf	_beatHold^(0+128),w
 17480  0403  1D03               	btfss	3,2
 17481  0404  2C65               	goto	l9060
 17482                           
 17483                           ;controller.c: 111:         printf("A-");
 17484  0405  306C               	movlw	low (STR_12| (0+32768))
 17485  0406  00C5               	movwf	printf@fmt^(0+128)
 17486  0407  30A0               	movlw	high (STR_12| (0+32768))
 17487  0408  00C6               	movwf	(printf@fmt^(0+128)+1)
 17488  0409  319D  25CE  3182   	fcall	_printf
 17489                           
 17490                           ;controller.c: 112:         TM1650_fastPrintNum_2digit((uint8_t)beatBrightness);
 17491  040C  0141               	movlb	1	; select bank1
 17492  040D  086F               	movf	_beatBrightness^(0+128),w
 17493  040E  3188  2004  3182   	fcall	_TM1650_fastPrintNum_2digit
 17494  0411  2C45               	goto	L18
 17495  0412                     l9066:	
 17496                           ;controller.c: 113:         printf("\r");
 17497                           
 17498                           
 17499                           ;controller.c: 118:                 printf("r");
 17500  0412  3084               	movlw	low (STR_14| (0+32768))
 17501  0413  00C5               	movwf	printf@fmt^(0+128)
 17502  0414  30A0               	movlw	high (STR_14| (0+32768))
 17503  0415  00C6               	movwf	(printf@fmt^(0+128)+1)
 17504  0416  319D  25CE  3182   	fcall	_printf
 17505                           
 17506                           ;controller.c: 119:                 TM1650_fastPrintNum_3digit(getManualColor(CMODE_RED)
      +                          );
 17507  0419  3000               	movlw	0
 17508  041A  2C35               	goto	L19
 17509  041B                     l9068:	
 17510                           ;controller.c: 121:                 break;
 17511                           
 17512                           ;controller.c: 120:                 printf("\r");
 17513                           
 17514                           
 17515                           ;controller.c: 124:                 printf("G");
 17516  041B  3080               	movlw	low (STR_16| (0+32768))
 17517  041C  00C5               	movwf	printf@fmt^(0+128)
 17518  041D  30A0               	movlw	high (STR_16| (0+32768))
 17519  041E  00C6               	movwf	(printf@fmt^(0+128)+1)
 17520  041F  319D  25CE  3182   	fcall	_printf
 17521                           
 17522                           ;controller.c: 125:                 TM1650_fastPrintNum_3digit(getManualColor(CMODE_GREE
      +                          N));
 17523  0422  3001               	movlw	1
 17524  0423  2C35               	goto	L19
 17525  0424                     l9070:	
 17526                           ;controller.c: 127:                 break;
 17527                           
 17528                           ;controller.c: 126:                 printf("\r");
 17529                           
 17530                           
 17531                           ;controller.c: 130:                 printf("B");
 17532  0424  307E               	movlw	low (STR_18| (0+32768))
 17533  0425  00C5               	movwf	printf@fmt^(0+128)
 17534  0426  30A0               	movlw	high (STR_18| (0+32768))
 17535  0427  00C6               	movwf	(printf@fmt^(0+128)+1)
 17536  0428  319D  25CE  3182   	fcall	_printf
 17537                           
 17538                           ;controller.c: 131:                 TM1650_fastPrintNum_3digit(getManualColor(CMODE_BLUE
      +                          ));
 17539  042B  3002               	movlw	2
 17540  042C  2C35               	goto	L19
 17541  042D                     l9072:	
 17542                           ;controller.c: 133:                 break;
 17543                           
 17544                           ;controller.c: 132:                 printf("\r");
 17545                           
 17546                           
 17547                           ;controller.c: 136:                 printf("H");
 17548  042D  3082               	movlw	low (STR_20| (0+32768))
 17549  042E  00C5               	movwf	printf@fmt^(0+128)
 17550  042F  30A0               	movlw	high (STR_20| (0+32768))
 17551  0430  00C6               	movwf	(printf@fmt^(0+128)+1)
 17552  0431  319D  25CE  3182   	fcall	_printf
 17553                           
 17554                           ;controller.c: 137:                 TM1650_fastPrintNum_3digit(getManualColor(CMODE_WHIT
      +                          E));
 17555  0434  3003               	movlw	3
 17556  0435                     L19:	
 17557  0435  319F  27B4  3182   	fcall	_getManualColor
 17558  0438  0141               	movlb	1	; select bank1
 17559  0439  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17560  043A  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17561  043B  0851               	movf	??_CONTROLLER_task^(0+128),w
 17562  043C  0140               	movlb	0	; select bank0
 17563  043D  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 17564  043E  0141               	movlb	1	; select bank1
 17565  043F  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17566  0440  0140               	movlb	0	; select bank0
 17567  0441  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 17568  0442  3187  2760  3182   	fcall	_TM1650_fastPrintNum_3digit
 17569  0445                     L18:	
 17570                           
 17571                           ;controller.c: 138:                 printf("\r");
 17572  0445  3047               	movlw	low ((STR_37+4)| (0+32768))
 17573  0446  0141               	movlb	1	; select bank1
 17574  0447  00C5               	movwf	printf@fmt^(0+128)
 17575  0448  30A0               	movlw	high ((STR_37+4)| (0+32768))
 17576  0449  00C6               	movwf	(printf@fmt^(0+128)+1)
 17577  044A  319D  25CE         	fcall	_printf
 17578  044C                     l8994:	
 17579                           ;controller.c: 139:                 break;
 17580                           
 17581                           
 17582                           ;controller.c: 79:         enterPressed = 0;
 17583  044C  0141               	movlb	1	; select bank1
 17584  044D  01B6               	clrf	_enterPressed^(0+128)
 17585                           
 17586                           ;controller.c: 80:     } else if(beatHold == 1 && !menuPressed){
 17587  044E  0008               	return
 17588  044F                     l8996:	
 17589  044F  0331               	decf	_beatHold^(0+128),w
 17590  0450  1903               	btfsc	3,2
 17591  0451  2B9D               	goto	l8998
 17592  0452                     l9006:	
 17593  0452  3002               	movlw	2
 17594  0453  0638               	xorwf	_currentSelection^(0+128),w
 17595  0454  1903               	btfsc	3,2
 17596  0455  2BB3               	goto	l9008
 17597  0456                     l9020:	
 17598  0456  0338               	decf	_currentSelection^(0+128),w
 17599  0457  1903               	btfsc	3,2
 17600  0458  2BC6               	goto	l9022
 17601  0459                     l9030:	
 17602  0459  3004               	movlw	4
 17603  045A  0638               	xorwf	_currentSelection^(0+128),w
 17604  045B  1903               	btfsc	3,2
 17605  045C  2BD9               	goto	l9032
 17606  045D                     l9040:	
 17607  045D  3005               	movlw	5
 17608  045E  0638               	xorwf	_currentSelection^(0+128),w
 17609  045F  1903               	btfsc	3,2
 17610  0460  2BEC               	goto	l9042
 17611  0461                     l9050:	
 17612  0461  3006               	movlw	6
 17613  0462  0638               	xorwf	_currentSelection^(0+128),w
 17614  0463  1903               	btfsc	3,2
 17615  0464  2BFF               	goto	l9052
 17616  0465                     l9060:	
 17617  0465  3003               	movlw	3
 17618  0466  0638               	xorwf	_currentSelection^(0+128),w
 17619  0467  1D03               	btfss	3,2
 17620  0468  0008               	return
 17621  0469  0837               	movf	_menuPressed^(0+128),w
 17622  046A  1D03               	btfss	3,2
 17623  046B  0008               	return
 17624  046C  0830               	movf	_colorModeSelected^(0+128),w
 17625  046D  00D1               	movwf	??_CONTROLLER_task^(0+128)
 17626  046E  01D2               	clrf	(??_CONTROLLER_task^(0+128)+1)
 17627                           
 17628                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17629                           ; Switch size 1, requested type "simple"
 17630                           ; Number of cases is 1, Range of values is 0 to 0
 17631                           ; switch strategies available:
 17632                           ; Name         Instructions Cycles
 17633                           ; simple_byte            4     3 (average)
 17634                           ; direct_byte            8     6 (fixed)
 17635                           ; jumptable            260     6 (fixed)
 17636                           ;	Chosen strategy is simple_byte
 17637  046F  0852               	movf	(??_CONTROLLER_task+1)^(0+128),w
 17638  0470  3A00               	xorlw	0	; case 0
 17639  0471  1903               	skipnz
 17640  0472  2C74               	goto	l9506
 17641  0473  2C4C               	goto	l8994
 17642  0474                     l9506:	
 17643                           
 17644                           ; Switch size 1, requested type "simple"
 17645                           ; Number of cases is 4, Range of values is 0 to 3
 17646                           ; switch strategies available:
 17647                           ; Name         Instructions Cycles
 17648                           ; simple_byte           13     7 (average)
 17649                           ; direct_byte           14     6 (fixed)
 17650                           ; jumptable            260     6 (fixed)
 17651                           ;	Chosen strategy is simple_byte
 17652  0474  0851               	movf	??_CONTROLLER_task^(0+128),w
 17653  0475  3A00               	xorlw	0	; case 0
 17654  0476  1903               	skipnz
 17655  0477  2C12               	goto	l9066
 17656  0478  3A01               	xorlw	1	; case 1
 17657  0479  1903               	skipnz
 17658  047A  2C1B               	goto	l9068
 17659  047B  3A03               	xorlw	3	; case 2
 17660  047C  1903               	skipnz
 17661  047D  2C24               	goto	l9070
 17662  047E  3A01               	xorlw	1	; case 3
 17663  047F  1903               	skipnz
 17664  0480  2C2D               	goto	l9072
 17665  0481  2C4C               	goto	l8994
 17666  0482  0008               	return
 17667  0483                     __end_of_CONTROLLER_task:	
 17668                           
 17669                           	psect	text45
 17670  15E2                     __ptext45:	
 17671 ;; *************** function _menuSelection *****************
 17672 ;; Defined at:
 17673 ;;		line 146 in file "controller.c"
 17674 ;; Parameters:    Size  Location     Type
 17675 ;;		None
 17676 ;; Auto vars:     Size  Location     Type
 17677 ;;		None
 17678 ;; Return value:  Size  Location     Type
 17679 ;;                  1    wreg      void 
 17680 ;; Registers used:
 17681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17682 ;; Tracked objects:
 17683 ;;		On entry : 0/0
 17684 ;;		On exit  : 0/0
 17685 ;;		Unchanged: 0/0
 17686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17689 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17690 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17691 ;;Total ram usage:        2 bytes
 17692 ;; Hardware stack levels used:    1
 17693 ;; Hardware stack levels required when called:   17
 17694 ;; This function calls:
 17695 ;;		_printf
 17696 ;; This function is called by:
 17697 ;;		_CONTROLLER_task
 17698 ;; This function uses a non-reentrant model
 17699 ;;
 17700                           
 17701                           
 17702                           ;psect for function _menuSelection
 17703  15E2                     _menuSelection:	
 17704                           
 17705                           ;controller.c: 148:     if(menuSelected == MODE_BEAT_FADE || menuSelected == MODE_BEAT_C
      +                          ONTINUOUS || menuSelected == MODE_BEAT_MIXED)
 17706                           
 17707                           ;incstack = 0
 17708 ;; hardware stack exceeded
 17709                           ; Regs used in _menuSelection: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17710  15E2  3004               	movlw	4
 17711  15E3  0141               	movlb	1	; select bank1
 17712  15E4  0639               	xorwf	_menuSelected^(0+128),w
 17713  15E5  1903               	btfsc	3,2
 17714  15E6  2DEF               	goto	l1079
 17715  15E7  3005               	movlw	5
 17716  15E8  0639               	xorwf	_menuSelected^(0+128),w
 17717  15E9  1903               	btfsc	3,2
 17718  15EA  2DEF               	goto	l1079
 17719  15EB  3006               	movlw	6
 17720  15EC  0639               	xorwf	_menuSelected^(0+128),w
 17721  15ED  1D03               	btfss	3,2
 17722  15EE  2DF1               	goto	l8384
 17723  15EF                     l1079:	
 17724                           
 17725                           ;controller.c: 149:         menuSelected = MODE_BEAT_STROBE;
 17726  15EF  01B9               	clrf	_menuSelected^(0+128)
 17727  15F0  0AB9               	incf	_menuSelected^(0+128),f
 17728  15F1                     l8384:	
 17729                           
 17730                           ;controller.c: 151:     if(upState){
 17731  15F1  0835               	movf	_upState^(0+128),w
 17732  15F2  1903               	btfsc	3,2
 17733  15F3  2E02               	goto	l8392
 17734                           
 17735                           ;controller.c: 152:         if(menuSelected < 3){
 17736  15F4  3003               	movlw	3
 17737  15F5  0239               	subwf	_menuSelected^(0+128),w
 17738  15F6  1803               	skipnc
 17739  15F7  2DFD               	goto	l8390
 17740                           
 17741                           ;controller.c: 153:             menuSelected++;
 17742  15F8  3001               	movlw	1
 17743  15F9  00CF               	movwf	??_menuSelection^(0+128)
 17744  15FA  084F               	movf	??_menuSelection^(0+128),w
 17745  15FB  07B9               	addwf	_menuSelected^(0+128),f
 17746                           
 17747                           ;controller.c: 154:         } else {
 17748  15FC  2E0C               	goto	l8400
 17749  15FD                     l8390:	
 17750                           
 17751                           ;controller.c: 155:             menuSelected = 3;
 17752  15FD  3003               	movlw	3
 17753  15FE  00CF               	movwf	??_menuSelection^(0+128)
 17754  15FF  084F               	movf	??_menuSelection^(0+128),w
 17755  1600  00B9               	movwf	_menuSelected^(0+128)
 17756  1601  2E0C               	goto	l8400
 17757  1602                     l8392:	
 17758  1602  0834               	movf	_downState^(0+128),w
 17759  1603  1903               	btfsc	3,2
 17760  1604  2E0C               	goto	l8400
 17761                           
 17762                           ;controller.c: 158:         if(menuSelected > 0){
 17763  1605  0839               	movf	_menuSelected^(0+128),w
 17764  1606  1903               	btfsc	3,2
 17765  1607  2E0B               	goto	l8398
 17766                           
 17767                           ;controller.c: 159:             menuSelected--;
 17768  1608  3001               	movlw	1
 17769  1609  02B9               	subwf	_menuSelected^(0+128),f
 17770                           
 17771                           ;controller.c: 160:         } else {
 17772  160A  2E0C               	goto	l8400
 17773  160B                     l8398:	
 17774                           
 17775                           ;controller.c: 161:             menuSelected = 0;
 17776  160B  01B9               	clrf	_menuSelected^(0+128)
 17777  160C                     l8400:	
 17778                           
 17779                           ;controller.c: 165:     if (enterState) {
 17780  160C  0832               	movf	_enterState^(0+128),w
 17781  160D  1903               	btfsc	3,2
 17782  160E  2E3A               	goto	l8422
 17783                           
 17784                           ;controller.c: 166:         currentSelection = menuSelected;
 17785  160F  0839               	movf	_menuSelected^(0+128),w
 17786  1610  00CF               	movwf	??_menuSelection^(0+128)
 17787  1611  084F               	movf	??_menuSelection^(0+128),w
 17788  1612  00B8               	movwf	_currentSelection^(0+128)
 17789                           
 17790                           ;controller.c: 167:         menuPressed = 0;
 17791  1613  01B7               	clrf	_menuPressed^(0+128)
 17792                           
 17793                           ;controller.c: 168:         enterPressed = 1;
 17794  1614  01B6               	clrf	_enterPressed^(0+128)
 17795  1615  0AB6               	incf	_enterPressed^(0+128),f
 17796  1616  0008               	return
 17797  1617                     l8410:	
 17798                           
 17799                           ;controller.c: 174:             printf("ANI \r");
 17800  1617  3055               	movlw	low (STR_22| (0+32768))
 17801  1618  00C5               	movwf	printf@fmt^(0+128)
 17802  1619  30A0               	movlw	high (STR_22| (0+32768))
 17803  161A  00C6               	movwf	(printf@fmt^(0+128)+1)
 17804  161B  319D  25CE         	fcall	_printf
 17805                           
 17806                           ;controller.c: 175:             break;
 17807  161D  0008               	return
 17808  161E                     l8412:	
 17809                           
 17810                           ;controller.c: 178:             printf("BEAT\r");
 17811  161E  3061               	movlw	low (STR_23| (0+32768))
 17812  161F  00C5               	movwf	printf@fmt^(0+128)
 17813  1620  30A0               	movlw	high (STR_23| (0+32768))
 17814  1621  00C6               	movwf	(printf@fmt^(0+128)+1)
 17815  1622  319D  25CE         	fcall	_printf
 17816                           
 17817                           ;controller.c: 179:             break;
 17818  1624  0008               	return
 17819  1625                     l8414:	
 17820                           
 17821                           ;controller.c: 182:             printf("BEAT\r");
 17822  1625  3061               	movlw	low (STR_23| (0+32768))
 17823  1626  00C5               	movwf	printf@fmt^(0+128)
 17824  1627  30A0               	movlw	high (STR_23| (0+32768))
 17825  1628  00C6               	movwf	(printf@fmt^(0+128)+1)
 17826  1629  319D  25CE         	fcall	_printf
 17827                           
 17828                           ;controller.c: 183:             break;
 17829  162B  0008               	return
 17830  162C                     l8416:	
 17831                           
 17832                           ;controller.c: 186:             printf("PC  \r");
 17833  162C  3049               	movlw	low (STR_25| (0+32768))
 17834  162D  00C5               	movwf	printf@fmt^(0+128)
 17835  162E  30A0               	movlw	high (STR_25| (0+32768))
 17836  162F  00C6               	movwf	(printf@fmt^(0+128)+1)
 17837  1630  319D  25CE         	fcall	_printf
 17838                           
 17839                           ;controller.c: 187:             break;
 17840  1632  0008               	return
 17841  1633                     l8418:	
 17842                           
 17843                           ;controller.c: 190:             printf("LED \r");
 17844  1633  304F               	movlw	low (STR_26| (0+32768))
 17845  1634  00C5               	movwf	printf@fmt^(0+128)
 17846  1635  30A0               	movlw	high (STR_26| (0+32768))
 17847  1636  00C6               	movwf	(printf@fmt^(0+128)+1)
 17848  1637  319D  25CE         	fcall	_printf
 17849                           
 17850                           ;controller.c: 191:             break;
 17851  1639  0008               	return
 17852  163A                     l8422:	
 17853  163A  0839               	movf	_menuSelected^(0+128),w
 17854  163B  00CF               	movwf	??_menuSelection^(0+128)
 17855  163C  01D0               	clrf	(??_menuSelection^(0+128)+1)
 17856                           
 17857                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17858                           ; Switch size 1, requested type "simple"
 17859                           ; Number of cases is 1, Range of values is 0 to 0
 17860                           ; switch strategies available:
 17861                           ; Name         Instructions Cycles
 17862                           ; simple_byte            4     3 (average)
 17863                           ; direct_byte            8     6 (fixed)
 17864                           ; jumptable            260     6 (fixed)
 17865                           ;	Chosen strategy is simple_byte
 17866  163D  0850               	movf	(??_menuSelection+1)^(0+128),w
 17867  163E  3A00               	xorlw	0	; case 0
 17868  163F  1903               	skipnz
 17869  1640  2E42               	goto	l9508
 17870  1641  2E53               	goto	l1088
 17871  1642                     l9508:	
 17872                           
 17873                           ; Switch size 1, requested type "simple"
 17874                           ; Number of cases is 5, Range of values is 0 to 4
 17875                           ; switch strategies available:
 17876                           ; Name         Instructions Cycles
 17877                           ; direct_byte           16     6 (fixed)
 17878                           ; simple_byte           16     9 (average)
 17879                           ; jumptable            260     6 (fixed)
 17880                           ;	Chosen strategy is simple_byte
 17881  1642  084F               	movf	??_menuSelection^(0+128),w
 17882  1643  3A00               	xorlw	0	; case 0
 17883  1644  1903               	skipnz
 17884  1645  2E2C               	goto	l8416
 17885  1646  3A01               	xorlw	1	; case 1
 17886  1647  1903               	skipnz
 17887  1648  2E1E               	goto	l8412
 17888  1649  3A03               	xorlw	3	; case 2
 17889  164A  1903               	skipnz
 17890  164B  2E17               	goto	l8410
 17891  164C  3A01               	xorlw	1	; case 3
 17892  164D  1903               	skipnz
 17893  164E  2E33               	goto	l8418
 17894  164F  3A07               	xorlw	7	; case 4
 17895  1650  1903               	skipnz
 17896  1651  2E25               	goto	l8414
 17897  1652  2E53               	goto	l1088
 17898  1653                     l1088:	
 17899  1653  0008               	return
 17900  1654                     __end_of_menuSelection:	
 17901                           
 17902                           	psect	text46
 17903  1DCE                     __ptext46:	
 17904 ;; *************** function _printf *****************
 17905 ;; Defined at:
 17906 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
 17907 ;; Parameters:    Size  Location     Type
 17908 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
 17909 ;;		 -> STR_37(6), STR_36(7), STR_35(8), STR_34(9), 
 17910 ;;		 -> STR_33(10), STR_32(9), STR_31(8), STR_30(7), 
 17911 ;;		 -> STR_28(2), STR_27(5), STR_26(6), STR_25(6), 
 17912 ;;		 -> STR_24(6), STR_23(6), STR_22(6), STR_21(2), 
 17913 ;;		 -> STR_20(2), STR_19(2), STR_18(2), STR_17(2), 
 17914 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
 17915 ;;		 -> STR_12(3), STR_11(2), STR_10(3), STR_9(2), 
 17916 ;;		 -> STR_8(3), STR_7(2), STR_6(3), STR_5(2), 
 17917 ;;		 -> STR_4(3), STR_3(2), STR_2(3), STR_1(6), 
 17918 ;; Auto vars:     Size  Location     Type
 17919 ;;  ret             2    0        int 
 17920 ;;  ap              1   78[BANK0 ] PTR void [1]
 17921 ;;		 -> ?_printf(2), 
 17922 ;; Return value:  Size  Location     Type
 17923 ;;                  2    0[BANK1 ] int 
 17924 ;; Registers used:
 17925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17926 ;; Tracked objects:
 17927 ;;		On entry : 0/0
 17928 ;;		On exit  : 0/0
 17929 ;;		Unchanged: 0/0
 17930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17931 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17932 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17933 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17934 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17935 ;;Total ram usage:       14 bytes
 17936 ;; Hardware stack levels used:    1
 17937 ;; Hardware stack levels required when called:   16
 17938 ;; This function calls:
 17939 ;;		_vfprintf
 17940 ;; This function is called by:
 17941 ;;		_CONTROLLER_task
 17942 ;;		_menuSelection
 17943 ;;		_TM1650_init
 17944 ;;		_TM1650_scrollPrint
 17945 ;; This function uses a non-reentrant model
 17946 ;;
 17947                           
 17948                           
 17949                           ;psect for function _printf
 17950  1DCE                     _printf:	
 17951                           
 17952                           ;incstack = 0
 17953 ;; hardware stack exceeded
 17954                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17955  1DCE  30C7               	movlw	(low ((?_printf| 0+2)))& (0+255)
 17956  1DCF  0140               	movlb	0	; select bank0
 17957  1DD0  00EB               	movwf	??_printf
 17958  1DD1  086B               	movf	??_printf,w
 17959  1DD2  00EE               	movwf	printf@ap
 17960  1DD3  0141               	movlb	1	; select bank1
 17961  1DD4  0846               	movf	(printf@fmt+1)^(0+128),w
 17962  1DD5  0140               	movlb	0	; select bank0
 17963  1DD6  00E4               	movwf	vfprintf@fmt+1
 17964  1DD7  0141               	movlb	1	; select bank1
 17965  1DD8  0845               	movf	printf@fmt^(0+128),w
 17966  1DD9  0140               	movlb	0	; select bank0
 17967  1DDA  00E3               	movwf	vfprintf@fmt
 17968  1DDB  306E               	movlw	(low (printf@ap| 0))& (0+255)
 17969  1DDC  00EB               	movwf	??_printf
 17970  1DDD  086B               	movf	??_printf,w
 17971  1DDE  00E5               	movwf	vfprintf@ap
 17972  1DDF  3000               	movlw	0
 17973  1DE0  3190  20C2         	fcall	_vfprintf
 17974  1DE2  0008               	return
 17975  1DE3                     __end_of_printf:	
 17976                           
 17977                           	psect	text47
 17978  10C2                     __ptext47:	
 17979 ;; *************** function _vfprintf *****************
 17980 ;; Defined at:
 17981 ;;		line 1368 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 17982 ;; Parameters:    Size  Location     Type
 17983 ;;  fp              1    wreg     PTR struct _IO_FILE
 17984 ;;		 -> NULL(0), 
 17985 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
 17986 ;;		 -> STR_37(6), STR_36(7), STR_35(8), STR_34(9), 
 17987 ;;		 -> STR_33(10), STR_32(9), STR_31(8), STR_30(7), 
 17988 ;;		 -> STR_28(2), STR_27(5), STR_26(6), STR_25(6), 
 17989 ;;		 -> STR_24(6), STR_23(6), STR_22(6), STR_21(2), 
 17990 ;;		 -> STR_20(2), STR_19(2), STR_18(2), STR_17(2), 
 17991 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
 17992 ;;		 -> STR_12(3), STR_11(2), STR_10(3), STR_9(2), 
 17993 ;;		 -> STR_8(3), STR_7(2), STR_6(3), STR_5(2), 
 17994 ;;		 -> STR_4(3), STR_3(2), STR_2(3), STR_1(6), 
 17995 ;;  ap              1   69[BANK0 ] PTR PTR void 
 17996 ;;		 -> printf@ap(1), 
 17997 ;; Auto vars:     Size  Location     Type
 17998 ;;  fp              1   72[BANK0 ] PTR struct _IO_FILE
 17999 ;;		 -> NULL(0), 
 18000 ;;  cfmt            2   73[BANK0 ] PTR unsigned char 
 18001 ;;		 -> STR_37(6), STR_36(7), STR_35(8), STR_34(9), 
 18002 ;;		 -> STR_33(10), STR_32(9), STR_31(8), STR_30(7), 
 18003 ;;		 -> STR_28(2), STR_27(5), STR_26(6), STR_25(6), 
 18004 ;;		 -> STR_24(6), STR_23(6), STR_22(6), STR_21(2), 
 18005 ;;		 -> STR_20(2), STR_19(2), STR_18(2), STR_17(2), 
 18006 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
 18007 ;;		 -> STR_12(3), STR_11(2), STR_10(3), STR_9(2), 
 18008 ;;		 -> STR_8(3), STR_7(2), STR_6(3), STR_5(2), 
 18009 ;;		 -> STR_4(3), STR_3(2), STR_2(3), STR_1(6), 
 18010 ;; Return value:  Size  Location     Type
 18011 ;;                  2   67[BANK0 ] int 
 18012 ;; Registers used:
 18013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18014 ;; Tracked objects:
 18015 ;;		On entry : 0/0
 18016 ;;		On exit  : 0/0
 18017 ;;		Unchanged: 0/0
 18018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18019 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18020 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18021 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18022 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18023 ;;Total ram usage:        8 bytes
 18024 ;; Hardware stack levels used:    1
 18025 ;; Hardware stack levels required when called:   15
 18026 ;; This function calls:
 18027 ;;		_vfpfcnvrt
 18028 ;; This function is called by:
 18029 ;;		_printf
 18030 ;; This function uses a non-reentrant model
 18031 ;;
 18032                           
 18033                           
 18034                           ;psect for function _vfprintf
 18035  10C2                     _vfprintf:	
 18036                           
 18037                           ;incstack = 0
 18038 ;; hardware stack exceeded
 18039                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18040                           ;vfprintf@fp stored from wreg
 18041  10C2  0140               	movlb	0	; select bank0
 18042  10C3  00E8               	movwf	vfprintf@fp
 18043                           
 18044                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
 18045  10C4  0864               	movf	vfprintf@fmt+1,w
 18046  10C5  00EA               	movwf	vfprintf@cfmt+1
 18047  10C6  0863               	movf	vfprintf@fmt,w
 18048  10C7  00E9               	movwf	vfprintf@cfmt
 18049                           
 18050                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 18051  10C8  0142               	movlb	2	; select bank2
 18052  10C9  01B0               	clrf	_nout^(0+256)
 18053  10CA  01B1               	clrf	(_nout+1)^(0+256)
 18054  10CB                     l8112:	
 18055                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 18056                           
 18057                           
 18058                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
 18059  10CB  0140               	movlb	0	; select bank0
 18060  10CC  0869               	movf	vfprintf@cfmt,w
 18061  10CD  0084               	movwf	4
 18062  10CE  086A               	movf	vfprintf@cfmt+1,w
 18063  10CF  0085               	movwf	5
 18064  10D0  0012               	moviw fsr0++
 18065  10D1  1903               	btfsc	3,2
 18066  10D2  28E8               	goto	l8114
 18067                           
 18068                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
 18069  10D3  3069               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 18070  10D4  00E6               	movwf	??_vfprintf
 18071  10D5  0866               	movf	??_vfprintf,w
 18072  10D6  00DA               	movwf	vfpfcnvrt@fmt
 18073  10D7  0865               	movf	vfprintf@ap,w
 18074  10D8  00E7               	movwf	??_vfprintf+1
 18075  10D9  0867               	movf	??_vfprintf+1,w
 18076  10DA  00DB               	movwf	vfpfcnvrt@ap
 18077  10DB  0868               	movf	vfprintf@fp,w
 18078  10DC  3188  2078  3190   	fcall	_vfpfcnvrt
 18079  10DF  0140               	movlb	0	; select bank0
 18080  10E0  085A               	movf	?_vfpfcnvrt,w
 18081  10E1  0142               	movlb	2	; select bank2
 18082  10E2  07B0               	addwf	_nout^(0+256),f
 18083  10E3  0140               	movlb	0	; select bank0
 18084  10E4  085B               	movf	?_vfpfcnvrt+1,w
 18085  10E5  0142               	movlb	2	; select bank2
 18086  10E6  3DB1               	addwfc	(_nout+1)^(0+256),f
 18087  10E7  28CB               	goto	l8112
 18088  10E8                     l8114:	
 18089                           
 18090                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
 18091  10E8  0142               	movlb	2	; select bank2
 18092  10E9  0831               	movf	(_nout+1)^(0+256),w
 18093  10EA  0140               	movlb	0	; select bank0
 18094  10EB  00E4               	movwf	?_vfprintf+1
 18095  10EC  0142               	movlb	2	; select bank2
 18096  10ED  0830               	movf	_nout^(0+256),w
 18097  10EE  0140               	movlb	0	; select bank0
 18098  10EF  00E3               	movwf	?_vfprintf
 18099  10F0  0008               	return
 18100  10F1                     __end_of_vfprintf:	
 18101                           
 18102                           	psect	text48
 18103  0878                     __ptext48:	
 18104 ;; *************** function _vfpfcnvrt *****************
 18105 ;; Defined at:
 18106 ;;		line 670 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 18107 ;; Parameters:    Size  Location     Type
 18108 ;;  fp              1    wreg     PTR struct _IO_FILE
 18109 ;;		 -> NULL(0), 
 18110 ;;  fmt             1   58[BANK0 ] PTR PTR unsigned char 
 18111 ;;		 -> vfprintf@cfmt(2), 
 18112 ;;  ap              1   59[BANK0 ] PTR PTR void 
 18113 ;;		 -> printf@ap(1), 
 18114 ;; Auto vars:     Size  Location     Type
 18115 ;;  fp              1   66[BANK0 ] PTR struct _IO_FILE
 18116 ;;		 -> NULL(0), 
 18117 ;;  llu             8    0        unsigned long long 
 18118 ;;  ll              8    0        long long 
 18119 ;;  f               4    0        long long 
 18120 ;;  ct              3    0        unsigned char [3]
 18121 ;;  vp              2    0        PTR void 
 18122 ;;  i               2    0        int 
 18123 ;;  done            2    0        int 
 18124 ;;  cp              2    0        PTR unsigned char 
 18125 ;;  c               1   65[BANK0 ] unsigned char 
 18126 ;; Return value:  Size  Location     Type
 18127 ;;                  2   58[BANK0 ] int 
 18128 ;; Registers used:
 18129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18130 ;; Tracked objects:
 18131 ;;		On entry : 0/0
 18132 ;;		On exit  : 0/0
 18133 ;;		Unchanged: 0/0
 18134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18135 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18136 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18137 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18138 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18139 ;;Total ram usage:        9 bytes
 18140 ;; Hardware stack levels used:    1
 18141 ;; Hardware stack levels required when called:   14
 18142 ;; This function calls:
 18143 ;;		_ctoa
 18144 ;;		_fputc
 18145 ;; This function is called by:
 18146 ;;		_vfprintf
 18147 ;; This function uses a non-reentrant model
 18148 ;;
 18149                           
 18150                           
 18151                           ;psect for function _vfpfcnvrt
 18152  0878                     _vfpfcnvrt:	
 18153                           
 18154                           ;incstack = 0
 18155 ;; hardware stack exceeded
 18156                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18157                           ;vfpfcnvrt@fp stored from wreg
 18158  0878  0140               	movlb	0	; select bank0
 18159  0879  00E2               	movwf	vfpfcnvrt@fp
 18160                           
 18161                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.05/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
 18162  087A  085A               	movf	vfpfcnvrt@fmt,w
 18163  087B  0086               	movwf	6
 18164  087C  0187               	clrf	7
 18165  087D  3F40               	moviw [0]fsr1
 18166  087E  00DC               	movwf	??_vfpfcnvrt
 18167  087F  3F41               	moviw [1]fsr1
 18168  0880  00DD               	movwf	??_vfpfcnvrt+1
 18169  0881  085C               	movf	??_vfpfcnvrt,w
 18170  0882  0084               	movwf	4
 18171  0883  085D               	movf	??_vfpfcnvrt+1,w
 18172  0884  0085               	movwf	5
 18173  0885  0012               	moviw fsr0++
 18174  0886  3A25               	xorlw	37
 18175  0887  1D03               	btfss	3,2
 18176  0888  28FD               	goto	l7662
 18177                           
 18178                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 18179  0889  085A               	movf	vfpfcnvrt@fmt,w
 18180  088A  0086               	movwf	6
 18181  088B  0187               	clrf	7
 18182  088C  3001               	movlw	1
 18183  088D  0781               	addwf	1,f
 18184  088E  3141               	addfsr 1,1
 18185  088F  1803               	skipnc
 18186  0890  0A81               	incf	1,f
 18187                           
 18188                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
 18189  0891  0142               	movlb	2	; select bank2
 18190  0892  01B2               	clrf	_width^(0+256)
 18191  0893  01B3               	clrf	(_width+1)^(0+256)
 18192  0894  01B6               	clrf	_flags^(0+256)
 18193  0895  01B7               	clrf	(_flags+1)^(0+256)
 18194                           
 18195                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
 18196  0896  30FF               	movlw	255
 18197  0897  00B4               	movwf	_prec^(0+256)
 18198  0898  30FF               	movlw	255
 18199  0899  00B5               	movwf	(_prec^(0+256)+1)
 18200                           
 18201                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fm
      +                          t[0] == 'c') {
 18202  089A  0140               	movlb	0	; select bank0
 18203  089B  085A               	movf	vfpfcnvrt@fmt,w
 18204  089C  0086               	movwf	6
 18205  089D  0187               	clrf	7
 18206  089E  3F40               	moviw [0]fsr1
 18207  089F  00DC               	movwf	??_vfpfcnvrt
 18208  08A0  3F41               	moviw [1]fsr1
 18209  08A1  00DD               	movwf	??_vfpfcnvrt+1
 18210  08A2  085C               	movf	??_vfpfcnvrt,w
 18211  08A3  0084               	movwf	4
 18212  08A4  085D               	movf	??_vfpfcnvrt+1,w
 18213  08A5  0085               	movwf	5
 18214  08A6  0012               	moviw fsr0++
 18215  08A7  3A63               	xorlw	99
 18216  08A8  1D03               	btfss	3,2
 18217  08A9  28CB               	goto	l7646
 18218                           
 18219                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*
      +                          fmt;
 18220  08AA  085A               	movf	vfpfcnvrt@fmt,w
 18221  08AB  0086               	movwf	6
 18222  08AC  0187               	clrf	7
 18223  08AD  3001               	movlw	1
 18224  08AE  0781               	addwf	1,f
 18225  08AF  3141               	addfsr 1,1
 18226  08B0  1803               	skipnc
 18227  08B1  0A81               	incf	1,f
 18228                           
 18229                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 18230  08B2  085B               	movf	vfpfcnvrt@ap,w
 18231  08B3  0086               	movwf	6
 18232  08B4  0187               	clrf	7
 18233  08B5  0801               	movf	1,w
 18234  08B6  0084               	movwf	4
 18235  08B7  0185               	clrf	5
 18236  08B8  3002               	movlw	2
 18237  08B9  0781               	addwf	1,f
 18238  08BA  0800               	movf	0,w
 18239  08BB  00DC               	movwf	??_vfpfcnvrt
 18240  08BC  085C               	movf	??_vfpfcnvrt,w
 18241  08BD  00E1               	movwf	vfpfcnvrt@c
 18242                           
 18243                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             ret
      +                          urn ctoa(fp, c);
 18244  08BE  0861               	movf	vfpfcnvrt@c,w
 18245  08BF  00DC               	movwf	??_vfpfcnvrt
 18246  08C0  085C               	movf	??_vfpfcnvrt,w
 18247  08C1  00D4               	movwf	ctoa@c
 18248  08C2  0862               	movf	vfpfcnvrt@fp,w
 18249  08C3  3190  20F1         	fcall	_ctoa
 18250  08C5  0140               	movlb	0	; select bank0
 18251  08C6  0855               	movf	?_ctoa+1,w
 18252  08C7  00DB               	movwf	?_vfpfcnvrt+1
 18253  08C8  0854               	movf	?_ctoa,w
 18254  08C9  00DA               	movwf	?_vfpfcnvrt
 18255  08CA  0008               	return
 18256  08CB                     l7646:	
 18257                           
 18258                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
 18259  08CB  085A               	movf	vfpfcnvrt@fmt,w
 18260  08CC  0086               	movwf	6
 18261  08CD  0187               	clrf	7
 18262  08CE  3F40               	moviw [0]fsr1
 18263  08CF  00DC               	movwf	??_vfpfcnvrt
 18264  08D0  3F41               	moviw [1]fsr1
 18265  08D1  00DD               	movwf	??_vfpfcnvrt+1
 18266  08D2  085C               	movf	??_vfpfcnvrt,w
 18267  08D3  0084               	movwf	4
 18268  08D4  085D               	movf	??_vfpfcnvrt+1,w
 18269  08D5  0085               	movwf	5
 18270  08D6  0012               	moviw fsr0++
 18271  08D7  3A25               	xorlw	37
 18272  08D8  1D03               	btfss	3,2
 18273  08D9  28F2               	goto	l7656
 18274                           
 18275                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
 18276  08DA  085A               	movf	vfpfcnvrt@fmt,w
 18277  08DB  0086               	movwf	6
 18278  08DC  0187               	clrf	7
 18279  08DD  3001               	movlw	1
 18280  08DE  0781               	addwf	1,f
 18281  08DF  3141               	addfsr 1,1
 18282  08E0  1803               	skipnc
 18283  08E1  0A81               	incf	1,f
 18284                           
 18285                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
 18286  08E2  3025               	movlw	37
 18287  08E3  00BB               	movwf	fputc@c
 18288  08E4  3000               	movlw	0
 18289  08E5  00BC               	movwf	fputc@c+1
 18290  08E6  0862               	movf	vfpfcnvrt@fp,w
 18291  08E7  00DC               	movwf	??_vfpfcnvrt
 18292  08E8  085C               	movf	??_vfpfcnvrt,w
 18293  08E9  00BD               	movwf	fputc@fp
 18294  08EA  3192  2258         	fcall	_fputc
 18295  08EC                     l7652:	
 18296                           
 18297                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
 18298  08EC  3001               	movlw	1
 18299  08ED  0140               	movlb	0	; select bank0
 18300  08EE  00DA               	movwf	?_vfpfcnvrt
 18301  08EF  3000               	movlw	0
 18302  08F0  00DB               	movwf	?_vfpfcnvrt+1
 18303  08F1  0008               	return
 18304  08F2                     l7656:	
 18305                           
 18306                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
 18307  08F2  085A               	movf	vfpfcnvrt@fmt,w
 18308  08F3  0086               	movwf	6
 18309  08F4  0187               	clrf	7
 18310  08F5  3001               	movlw	1
 18311  08F6  0781               	addwf	1,f
 18312  08F7  3141               	addfsr 1,1
 18313  08F8  1803               	skipnc
 18314  08F9  0A81               	incf	1,f
 18315                           
 18316                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
 18317  08FA  01DA               	clrf	?_vfpfcnvrt
 18318  08FB  01DB               	clrf	?_vfpfcnvrt+1
 18319  08FC  0008               	return
 18320  08FD                     l7662:	
 18321                           
 18322                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
 18323  08FD  085A               	movf	vfpfcnvrt@fmt,w
 18324  08FE  0086               	movwf	6
 18325  08FF  0187               	clrf	7
 18326  0900  3F40               	moviw [0]fsr1
 18327  0901  00DC               	movwf	??_vfpfcnvrt
 18328  0902  3F41               	moviw [1]fsr1
 18329  0903  00DD               	movwf	??_vfpfcnvrt+1
 18330  0904  085C               	movf	??_vfpfcnvrt,w
 18331  0905  0084               	movwf	4
 18332  0906  085D               	movf	??_vfpfcnvrt+1,w
 18333  0907  0085               	movwf	5
 18334  0908  0800               	movf	0,w	;code access
 18335  0909  00DE               	movwf	??_vfpfcnvrt+2
 18336  090A  01DF               	clrf	??_vfpfcnvrt+3
 18337  090B  085E               	movf	??_vfpfcnvrt+2,w
 18338  090C  00BB               	movwf	fputc@c
 18339  090D  085F               	movf	??_vfpfcnvrt+3,w
 18340  090E  00BC               	movwf	fputc@c+1
 18341  090F  0862               	movf	vfpfcnvrt@fp,w
 18342  0910  00E0               	movwf	??_vfpfcnvrt+4
 18343  0911  0860               	movf	??_vfpfcnvrt+4,w
 18344  0912  00BD               	movwf	fputc@fp
 18345  0913  3192  2258  3188   	fcall	_fputc
 18346                           
 18347                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 18348  0916  0140               	movlb	0	; select bank0
 18349  0917  085A               	movf	vfpfcnvrt@fmt,w
 18350  0918  0086               	movwf	6
 18351  0919  0187               	clrf	7
 18352  091A  3001               	movlw	1
 18353  091B  0781               	addwf	1,f
 18354  091C  3141               	addfsr 1,1
 18355  091D  1803               	skipnc
 18356  091E  0A81               	incf	1,f
 18357  091F  28EC               	goto	l7652
 18358  0920                     __end_of_vfpfcnvrt:	
 18359                           
 18360                           	psect	text49
 18361  10F1                     __ptext49:	
 18362 ;; *************** function _ctoa *****************
 18363 ;; Defined at:
 18364 ;;		line 259 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 18365 ;; Parameters:    Size  Location     Type
 18366 ;;  fp              1    wreg     PTR struct _IO_FILE
 18367 ;;		 -> NULL(0), 
 18368 ;;  c               1   52[BANK0 ] unsigned char 
 18369 ;; Auto vars:     Size  Location     Type
 18370 ;;  fp              1   57[BANK0 ] PTR struct _IO_FILE
 18371 ;;		 -> NULL(0), 
 18372 ;;  w               2   55[BANK0 ] int 
 18373 ;;  l               2    0        int 
 18374 ;; Return value:  Size  Location     Type
 18375 ;;                  2   52[BANK0 ] int 
 18376 ;; Registers used:
 18377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18378 ;; Tracked objects:
 18379 ;;		On entry : 0/0
 18380 ;;		On exit  : 0/0
 18381 ;;		Unchanged: 0/0
 18382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18383 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18384 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18385 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18386 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18387 ;;Total ram usage:        6 bytes
 18388 ;; Hardware stack levels used:    1
 18389 ;; Hardware stack levels required when called:   13
 18390 ;; This function calls:
 18391 ;;		_pad
 18392 ;; This function is called by:
 18393 ;;		_vfpfcnvrt
 18394 ;; This function uses a non-reentrant model
 18395 ;;
 18396                           
 18397                           
 18398                           ;psect for function _ctoa
 18399  10F1                     _ctoa:	
 18400                           
 18401                           ;incstack = 0
 18402 ;; hardware stack exceeded
 18403                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18404                           ;ctoa@fp stored from wreg
 18405  10F1  0140               	movlb	0	; select bank0
 18406  10F2  00D9               	movwf	ctoa@fp
 18407                           
 18408                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
 18409  10F3  0142               	movlb	2	; select bank2
 18410  10F4  0832               	movf	_width^(0+256),w
 18411  10F5  0433               	iorwf	(_width+1)^(0+256),w
 18412  10F6  1D03               	btfss	3,2
 18413  10F7  2900               	goto	l7604
 18414  10F8  0833               	movf	(_width+1)^(0+256),w
 18415  10F9  0140               	movlb	0	; select bank0
 18416  10FA  00D8               	movwf	ctoa@w+1
 18417  10FB  0142               	movlb	2	; select bank2
 18418  10FC  0832               	movf	_width^(0+256),w
 18419  10FD  0140               	movlb	0	; select bank0
 18420  10FE  00D7               	movwf	ctoa@w
 18421  10FF  2909               	goto	l7606
 18422  1100                     l7604:	
 18423  1100  0832               	movf	_width^(0+256),w
 18424  1101  3EFF               	addlw	255
 18425  1102  0140               	movlb	0	; select bank0
 18426  1103  00D7               	movwf	ctoa@w
 18427  1104  30FF               	movlw	255
 18428  1105  0142               	movlb	2	; select bank2
 18429  1106  3D33               	addwfc	(_width+1)^(0+256),w
 18430  1107  0140               	movlb	0	; select bank0
 18431  1108  00D8               	movwf	ctoa@w+1
 18432  1109                     l7606:	
 18433                           
 18434                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c
      +                          ;
 18435  1109  0854               	movf	ctoa@c,w
 18436  110A  00D6               	movwf	??_ctoa
 18437  110B  0856               	movf	??_ctoa,w
 18438  110C  0143               	movlb	3	; select bank3
 18439  110D  00A0               	movwf	_dbuf^(0+384)
 18440                           
 18441                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '
      +                          \0';
 18442  110E  01A1               	clrf	(_dbuf^(0+384)+1)
 18443                           
 18444                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(
      +                          fp, &dbuf[0], w);
 18445  110F  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
 18446  1110  0140               	movlb	0	; select bank0
 18447  1111  00D6               	movwf	??_ctoa
 18448  1112  0856               	movf	??_ctoa,w
 18449  1113  00CB               	movwf	pad@buf
 18450  1114  0858               	movf	ctoa@w+1,w
 18451  1115  00CD               	movwf	pad@p+1
 18452  1116  0857               	movf	ctoa@w,w
 18453  1117  00CC               	movwf	pad@p
 18454  1118  0859               	movf	ctoa@fp,w
 18455  1119  3193  23F7         	fcall	_pad
 18456  111B  0140               	movlb	0	; select bank0
 18457  111C  084C               	movf	?_pad+1,w
 18458  111D  00D5               	movwf	?_ctoa+1
 18459  111E  084B               	movf	?_pad,w
 18460  111F  00D4               	movwf	?_ctoa
 18461  1120  0008               	return
 18462  1121                     __end_of_ctoa:	
 18463                           
 18464                           	psect	text50
 18465  13F7                     __ptext50:	
 18466 ;; *************** function _pad *****************
 18467 ;; Defined at:
 18468 ;;		line 72 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 18469 ;; Parameters:    Size  Location     Type
 18470 ;;  fp              1    wreg     PTR struct _IO_FILE
 18471 ;;		 -> NULL(0), 
 18472 ;;  buf             1   43[BANK0 ] PTR unsigned char 
 18473 ;;		 -> dbuf(32), 
 18474 ;;  p               2   44[BANK0 ] int 
 18475 ;; Auto vars:     Size  Location     Type
 18476 ;;  fp              1   51[BANK0 ] PTR struct _IO_FILE
 18477 ;;		 -> NULL(0), 
 18478 ;;  w               2   49[BANK0 ] int 
 18479 ;;  i               2   47[BANK0 ] int 
 18480 ;; Return value:  Size  Location     Type
 18481 ;;                  2   43[BANK0 ] int 
 18482 ;; Registers used:
 18483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18484 ;; Tracked objects:
 18485 ;;		On entry : 0/0
 18486 ;;		On exit  : 0/0
 18487 ;;		Unchanged: 0/0
 18488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18489 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18490 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18491 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18492 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18493 ;;Total ram usage:        9 bytes
 18494 ;; Hardware stack levels used:    1
 18495 ;; Hardware stack levels required when called:   12
 18496 ;; This function calls:
 18497 ;;		_fputc
 18498 ;;		_fputs
 18499 ;;		_strlen
 18500 ;; This function is called by:
 18501 ;;		_ctoa
 18502 ;; This function uses a non-reentrant model
 18503 ;;
 18504                           
 18505                           
 18506                           ;psect for function _pad
 18507  13F7                     _pad:	
 18508                           
 18509                           ;incstack = 0
 18510 ;; hardware stack exceeded
 18511                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18512                           ;pad@fp stored from wreg
 18513  13F7  0140               	movlb	0	; select bank0
 18514  13F8  00D3               	movwf	pad@fp
 18515                           
 18516                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 18517  13F9  0142               	movlb	2	; select bank2
 18518  13FA  1C36               	btfss	_flags^(0+256),0
 18519  13FB  2C05               	goto	l7582
 18520                           
 18521                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 18522  13FC  0140               	movlb	0	; select bank0
 18523  13FD  0853               	movf	pad@fp,w
 18524  13FE  00CE               	movwf	??_pad
 18525  13FF  084E               	movf	??_pad,w
 18526  1400  00C3               	movwf	fputs@fp
 18527  1401  084B               	movf	pad@buf,w
 18528  1402  319F  27DA  3193   	fcall	_fputs
 18529  1405                     l7582:	
 18530                           
 18531                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 18532  1405  0140               	movlb	0	; select bank0
 18533  1406  1BCD               	btfsc	pad@p+1,7
 18534  1407  2C0D               	goto	l7586
 18535  1408  084D               	movf	pad@p+1,w
 18536  1409  00D2               	movwf	pad@w+1
 18537  140A  084C               	movf	pad@p,w
 18538  140B  00D1               	movwf	pad@w
 18539  140C  2C0F               	goto	l1699
 18540  140D                     l7586:	
 18541  140D  01D1               	clrf	pad@w
 18542  140E  01D2               	clrf	pad@w+1
 18543  140F                     l1699:	
 18544                           
 18545                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18546  140F  01CF               	clrf	pad@i
 18547  1410  01D0               	clrf	pad@i+1
 18548  1411                     l7592:	
 18549                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 18550                           
 18551                           
 18552                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 18553  1411  0850               	movf	pad@i+1,w
 18554  1412  3A80               	xorlw	128
 18555  1413  00CE               	movwf	??_pad
 18556  1414  0852               	movf	pad@w+1,w
 18557  1415  3A80               	xorlw	128
 18558  1416  024E               	subwf	??_pad,w
 18559  1417  1D03               	skipz
 18560  1418  2C1B               	goto	u7245
 18561  1419  0851               	movf	pad@w,w
 18562  141A  024F               	subwf	pad@i,w
 18563  141B                     u7245:	
 18564  141B  1803               	btfsc	3,0
 18565  141C  2C2F               	goto	l1702
 18566                           
 18567                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 18568  141D  3020               	movlw	32
 18569  141E  0140               	movlb	0	; select bank0
 18570  141F  00BB               	movwf	fputc@c
 18571  1420  3000               	movlw	0
 18572  1421  00BC               	movwf	fputc@c+1
 18573  1422  0853               	movf	pad@fp,w
 18574  1423  00CE               	movwf	??_pad
 18575  1424  084E               	movf	??_pad,w
 18576  1425  00BD               	movwf	fputc@fp
 18577  1426  3192  2258  3193   	fcall	_fputc
 18578                           
 18579                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18580  1429  3001               	movlw	1
 18581  142A  0140               	movlb	0	; select bank0
 18582  142B  07CF               	addwf	pad@i,f
 18583  142C  3000               	movlw	0
 18584  142D  3DD0               	addwfc	pad@i+1,f
 18585  142E  2C11               	goto	l7592
 18586  142F                     l1702:	
 18587                           
 18588                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 18589  142F  0142               	movlb	2	; select bank2
 18590  1430  1836               	btfsc	_flags^(0+256),0
 18591  1431  2C3B               	goto	l7596
 18592                           
 18593                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 18594  1432  0140               	movlb	0	; select bank0
 18595  1433  0853               	movf	pad@fp,w
 18596  1434  00CE               	movwf	??_pad
 18597  1435  084E               	movf	??_pad,w
 18598  1436  00C3               	movwf	fputs@fp
 18599  1437  084B               	movf	pad@buf,w
 18600  1438  319F  27DA  3193   	fcall	_fputs
 18601  143B                     l7596:	
 18602                           
 18603                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
 18604  143B  0140               	movlb	0	; select bank0
 18605  143C  084B               	movf	pad@buf,w
 18606  143D  00A0               	movwf	strlen@s
 18607  143E  3001               	movlw	1
 18608  143F  00A1               	movwf	strlen@s+1
 18609  1440  319E  262A         	fcall	_strlen
 18610  1442  0140               	movlb	0	; select bank0
 18611  1443  0851               	movf	pad@w,w
 18612  1444  0720               	addwf	?_strlen,w
 18613  1445  00CB               	movwf	?_pad
 18614  1446  0852               	movf	pad@w+1,w
 18615  1447  3D21               	addwfc	?_strlen+1,w
 18616  1448  00CC               	movwf	?_pad+1
 18617  1449  0008               	return
 18618  144A                     __end_of_pad:	
 18619                           
 18620                           	psect	text51
 18621  1E2A                     __ptext51:	
 18622 ;; *************** function _strlen *****************
 18623 ;; Defined at:
 18624 ;;		line 12 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 18625 ;; Parameters:    Size  Location     Type
 18626 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 18627 ;;		 -> dbuf(32), STR_29(9), 
 18628 ;; Auto vars:     Size  Location     Type
 18629 ;;  a               2    3[BANK0 ] PTR const unsigned char 
 18630 ;;		 -> dbuf(32), STR_29(9), 
 18631 ;; Return value:  Size  Location     Type
 18632 ;;                  2    0[BANK0 ] unsigned int 
 18633 ;; Registers used:
 18634 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 18635 ;; Tracked objects:
 18636 ;;		On entry : 0/0
 18637 ;;		On exit  : 0/0
 18638 ;;		Unchanged: 0/0
 18639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18640 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18641 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18642 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18643 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18644 ;;Total ram usage:        5 bytes
 18645 ;; Hardware stack levels used:    1
 18646 ;; Hardware stack levels required when called:    4
 18647 ;; This function calls:
 18648 ;;		Nothing
 18649 ;; This function is called by:
 18650 ;;		_pad
 18651 ;;		_TM1650_scrollPrint
 18652 ;; This function uses a non-reentrant model
 18653 ;;
 18654                           
 18655                           
 18656                           ;psect for function _strlen
 18657  1E2A                     _strlen:	
 18658                           
 18659                           ;incstack = 0
 18660                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 18661  1E2A  0140               	movlb	0	; select bank0
 18662  1E2B  0821               	movf	strlen@s+1,w
 18663  1E2C  00A4               	movwf	strlen@a+1
 18664  1E2D  0820               	movf	strlen@s,w
 18665  1E2E  00A3               	movwf	strlen@a
 18666  1E2F                     l4976:	
 18667  1E2F  0820               	movf	strlen@s,w
 18668  1E30  0084               	movwf	4
 18669  1E31  0821               	movf	strlen@s+1,w
 18670  1E32  0085               	movwf	5
 18671  1E33  0012               	moviw fsr0++
 18672  1E34  1903               	btfsc	3,2
 18673  1E35  2E3B               	goto	l4978
 18674  1E36  3001               	movlw	1
 18675  1E37  07A0               	addwf	strlen@s,f
 18676  1E38  3000               	movlw	0
 18677  1E39  3DA1               	addwfc	strlen@s+1,f
 18678  1E3A  2E2F               	goto	l4976
 18679  1E3B                     l4978:	
 18680  1E3B  0823               	movf	strlen@a,w
 18681  1E3C  0220               	subwf	strlen@s,w
 18682  1E3D  00A0               	movwf	?_strlen
 18683  1E3E  0824               	movf	strlen@a+1,w
 18684  1E3F  3B21               	subwfb	strlen@s+1,w
 18685  1E40  00A1               	movwf	?_strlen+1
 18686  1E41  0008               	return
 18687  1E42                     __end_of_strlen:	
 18688                           
 18689                           	psect	text52
 18690  1FDA                     __ptext52:	
 18691 ;; *************** function _fputs *****************
 18692 ;; Defined at:
 18693 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 18694 ;; Parameters:    Size  Location     Type
 18695 ;;  s               1    wreg     PTR const unsigned char 
 18696 ;;		 -> dbuf(32), 
 18697 ;;  fp              1   35[BANK0 ] PTR struct _IO_FILE
 18698 ;;		 -> NULL(0), 
 18699 ;; Auto vars:     Size  Location     Type
 18700 ;;  s               1   42[BANK0 ] PTR const unsigned char 
 18701 ;;		 -> dbuf(32), 
 18702 ;;  i               2   40[BANK0 ] int 
 18703 ;;  c               1   39[BANK0 ] unsigned char 
 18704 ;; Return value:  Size  Location     Type
 18705 ;;                  2   35[BANK0 ] int 
 18706 ;; Registers used:
 18707 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18708 ;; Tracked objects:
 18709 ;;		On entry : 0/0
 18710 ;;		On exit  : 0/0
 18711 ;;		Unchanged: 0/0
 18712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18713 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18714 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18715 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18716 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18717 ;;Total ram usage:        8 bytes
 18718 ;; Hardware stack levels used:    1
 18719 ;; Hardware stack levels required when called:   11
 18720 ;; This function calls:
 18721 ;;		_fputc
 18722 ;; This function is called by:
 18723 ;;		_pad
 18724 ;; This function uses a non-reentrant model
 18725 ;;
 18726                           
 18727                           
 18728                           ;psect for function _fputs
 18729  1FDA                     _fputs:	
 18730                           
 18731                           ;incstack = 0
 18732 ;; hardware stack exceeded
 18733                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18734                           ;fputs@s stored from wreg
 18735  1FDA  0140               	movlb	0	; select bank0
 18736  1FDB  00CA               	movwf	fputs@s
 18737  1FDC  01C8               	clrf	fputs@i
 18738  1FDD  01C9               	clrf	fputs@i+1
 18739  1FDE                     l7576:	
 18740  1FDE  0848               	movf	fputs@i,w
 18741  1FDF  074A               	addwf	fputs@s,w
 18742  1FE0  00C4               	movwf	??_fputs
 18743  1FE1  0844               	movf	??_fputs,w
 18744  1FE2  0086               	movwf	6
 18745  1FE3  3001               	movlw	1	; select bank2/3
 18746  1FE4  0087               	movwf	7
 18747  1FE5  0801               	movf	1,w
 18748  1FE6  00C5               	movwf	??_fputs+1
 18749  1FE7  0845               	movf	??_fputs+1,w
 18750  1FE8  00C7               	movwf	fputs@c
 18751  1FE9  0847               	movf	fputs@c,w
 18752  1FEA  1903               	btfsc	3,2
 18753  1FEB  0008               	return
 18754  1FEC  0847               	movf	fputs@c,w
 18755  1FED  00C4               	movwf	??_fputs
 18756  1FEE  01C5               	clrf	??_fputs+1
 18757  1FEF  0844               	movf	??_fputs,w
 18758  1FF0  00BB               	movwf	fputc@c
 18759  1FF1  0845               	movf	??_fputs+1,w
 18760  1FF2  00BC               	movwf	fputc@c+1
 18761  1FF3  0843               	movf	fputs@fp,w
 18762  1FF4  00C6               	movwf	??_fputs+2
 18763  1FF5  0846               	movf	??_fputs+2,w
 18764  1FF6  00BD               	movwf	fputc@fp
 18765  1FF7  3192  2258  319F   	fcall	_fputc
 18766  1FFA  3001               	movlw	1
 18767  1FFB  0140               	movlb	0	; select bank0
 18768  1FFC  07C8               	addwf	fputs@i,f
 18769  1FFD  3000               	movlw	0
 18770  1FFE  3DC9               	addwfc	fputs@i+1,f
 18771  1FFF  2FDE               	goto	l7576
 18772  2000                     __end_of_fputs:	
 18773                           
 18774                           	psect	text53
 18775  1258                     __ptext53:	
 18776 ;; *************** function _fputc *****************
 18777 ;; Defined at:
 18778 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 18779 ;; Parameters:    Size  Location     Type
 18780 ;;  c               2   27[BANK0 ] int 
 18781 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
 18782 ;;		 -> NULL(0), 
 18783 ;; Auto vars:     Size  Location     Type
 18784 ;;		None
 18785 ;; Return value:  Size  Location     Type
 18786 ;;                  2   27[BANK0 ] int 
 18787 ;; Registers used:
 18788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18789 ;; Tracked objects:
 18790 ;;		On entry : 0/0
 18791 ;;		On exit  : 0/0
 18792 ;;		Unchanged: 0/0
 18793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18794 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18796 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18797 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18798 ;;Total ram usage:        8 bytes
 18799 ;; Hardware stack levels used:    1
 18800 ;; Hardware stack levels required when called:   10
 18801 ;; This function calls:
 18802 ;;		_putch
 18803 ;; This function is called by:
 18804 ;;		_pad
 18805 ;;		_vfpfcnvrt
 18806 ;;		_fputs
 18807 ;; This function uses a non-reentrant model
 18808 ;;
 18809                           
 18810                           
 18811                           ;psect for function _fputc
 18812  1258                     _fputc:	
 18813                           
 18814                           ;incstack = 0
 18815                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18816  1258  0140               	movlb	0	; select bank0
 18817  1259  083D               	movf	fputc@fp,w
 18818  125A  1D03               	btfss	3,2
 18819  125B  083D               	movf	fputc@fp,w
 18820  125C  1D03               	btfss	3,2
 18821  125D  2A62               	goto	l7562
 18822  125E  083B               	movf	fputc@c,w
 18823  125F  319F  276C         	fcall	_putch
 18824  1261  0008               	return
 18825  1262                     l7562:	
 18826  1262  083D               	movf	fputc@fp,w
 18827  1263  3E03               	addlw	3
 18828  1264  0086               	movwf	6
 18829  1265  0187               	clrf	7
 18830  1266  0016               	moviw fsr1++
 18831  1267  0401               	iorwf	1,w
 18832  1268  1903               	btfsc	3,2
 18833  1269  2A85               	goto	l7566
 18834  126A  083D               	movf	fputc@fp,w
 18835  126B  3E03               	addlw	3
 18836  126C  0086               	movwf	6
 18837  126D  0187               	clrf	7
 18838  126E  3F40               	moviw [0]fsr1
 18839  126F  00BE               	movwf	??_fputc
 18840  1270  3F41               	moviw [1]fsr1
 18841  1271  00BF               	movwf	??_fputc+1
 18842  1272  0A3D               	incf	fputc@fp,w
 18843  1273  0086               	movwf	6
 18844  1274  0187               	clrf	7
 18845  1275  3F40               	moviw [0]fsr1
 18846  1276  00C0               	movwf	??_fputc+2
 18847  1277  3F41               	moviw [1]fsr1
 18848  1278  00C1               	movwf	??_fputc+3
 18849  1279  0841               	movf	??_fputc+3,w
 18850  127A  3A80               	xorlw	128
 18851  127B  00C2               	movwf	??_fputc+4
 18852  127C  083F               	movf	??_fputc+1,w
 18853  127D  3A80               	xorlw	128
 18854  127E  0242               	subwf	??_fputc+4,w
 18855  127F  1D03               	skipz
 18856  1280  2A83               	goto	u7205
 18857  1281  083E               	movf	??_fputc,w
 18858  1282  0240               	subwf	??_fputc+2,w
 18859  1283                     u7205:	
 18860  1283  1803               	skipnc
 18861  1284  0008               	return
 18862  1285                     l7566:	
 18863  1285  0140               	movlb	0	; select bank0
 18864  1286  0A3D               	incf	fputc@fp,w
 18865  1287  0086               	movwf	6
 18866  1288  0187               	clrf	7
 18867  1289  3001               	movlw	1
 18868  128A  0781               	addwf	1,f
 18869  128B  3141               	addfsr 1,1
 18870  128C  1803               	skipnc
 18871  128D  0A81               	incf	1,f
 18872  128E  0008               	return
 18873  128F                     __end_of_fputc:	
 18874                           
 18875                           	psect	text54
 18876  1F6C                     __ptext54:	
 18877 ;; *************** function _putch *****************
 18878 ;; Defined at:
 18879 ;;		line 166 in file "tm1650.c"
 18880 ;; Parameters:    Size  Location     Type
 18881 ;;  n               1    wreg     unsigned char 
 18882 ;; Auto vars:     Size  Location     Type
 18883 ;;  n               1   26[BANK0 ] unsigned char 
 18884 ;; Return value:  Size  Location     Type
 18885 ;;                  1    wreg      void 
 18886 ;; Registers used:
 18887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18888 ;; Tracked objects:
 18889 ;;		On entry : 0/0
 18890 ;;		On exit  : 0/0
 18891 ;;		Unchanged: 0/0
 18892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18894 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18895 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18896 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18897 ;;Total ram usage:        2 bytes
 18898 ;; Hardware stack levels used:    1
 18899 ;; Hardware stack levels required when called:    9
 18900 ;; This function calls:
 18901 ;;		_TM1650_setDigit
 18902 ;; This function is called by:
 18903 ;;		_fputc
 18904 ;; This function uses a non-reentrant model
 18905 ;;
 18906                           
 18907                           
 18908                           ;psect for function _putch
 18909  1F6C                     _putch:	
 18910                           
 18911                           ;incstack = 0
 18912                           ; Regs used in _putch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18913                           ;putch@n stored from wreg
 18914  1F6C  0140               	movlb	0	; select bank0
 18915  1F6D  00BA               	movwf	putch@n
 18916                           
 18917                           ;tm1650.c: 168:     if(position > 3 || n == '\r' || n == '\0')
 18918  1F6E  3004               	movlw	4
 18919  1F6F  0141               	movlb	1	; select bank1
 18920  1F70  022F               	subwf	_position^(0+128),w
 18921  1F71  1803               	skipnc
 18922  1F72  2F7A               	goto	l7548
 18923  1F73  300D               	movlw	13
 18924  1F74  0140               	movlb	0	; select bank0
 18925  1F75  063A               	xorwf	putch@n,w
 18926  1F76  1D03               	btfss	3,2
 18927  1F77  083A               	movf	putch@n,w
 18928  1F78  1D03               	btfss	3,2
 18929  1F79  2F7C               	goto	l7550
 18930  1F7A                     l7548:	
 18931                           
 18932                           ;tm1650.c: 169:         position = 0;
 18933  1F7A  0141               	movlb	1	; select bank1
 18934  1F7B  01AF               	clrf	_position^(0+128)
 18935  1F7C                     l7550:	
 18936                           
 18937                           ;tm1650.c: 171:     if(n != '\r'){
 18938  1F7C  300D               	movlw	13
 18939  1F7D  0140               	movlb	0	; select bank0
 18940  1F7E  063A               	xorwf	putch@n,w
 18941  1F7F  1903               	btfsc	3,2
 18942  1F80  0008               	return
 18943                           
 18944                           ;tm1650.c: 172:         TM1650_setDigit(position, n);
 18945  1F81  083A               	movf	putch@n,w
 18946  1F82  00B9               	movwf	??_putch
 18947  1F83  0839               	movf	??_putch,w
 18948  1F84  00B6               	movwf	TM1650_setDigit@data
 18949  1F85  0141               	movlb	1	; select bank1
 18950  1F86  082F               	movf	_position^(0+128),w
 18951  1F87  319D  2558         	fcall	_TM1650_setDigit
 18952                           
 18953                           ;tm1650.c: 173:         position++;
 18954  1F89  3001               	movlw	1
 18955  1F8A  0140               	movlb	0	; select bank0
 18956  1F8B  00B9               	movwf	??_putch
 18957  1F8C  0839               	movf	??_putch,w
 18958  1F8D  0141               	movlb	1	; select bank1
 18959  1F8E  07AF               	addwf	_position^(0+128),f
 18960  1F8F  0008               	return
 18961  1F90                     __end_of_putch:	
 18962                           
 18963                           	psect	text55
 18964  1D58                     __ptext55:	
 18965 ;; *************** function _TM1650_setDigit *****************
 18966 ;; Defined at:
 18967 ;;		line 95 in file "tm1650.c"
 18968 ;; Parameters:    Size  Location     Type
 18969 ;;  digit           1    wreg     unsigned char 
 18970 ;;  data            1   22[BANK0 ] unsigned char 
 18971 ;; Auto vars:     Size  Location     Type
 18972 ;;  digit           1   24[BANK0 ] unsigned char 
 18973 ;; Return value:  Size  Location     Type
 18974 ;;                  1    wreg      void 
 18975 ;; Registers used:
 18976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18977 ;; Tracked objects:
 18978 ;;		On entry : 0/0
 18979 ;;		On exit  : 0/0
 18980 ;;		Unchanged: 0/0
 18981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18982 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18983 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18984 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18985 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18986 ;;Total ram usage:        3 bytes
 18987 ;; Hardware stack levels used:    1
 18988 ;; Hardware stack levels required when called:    8
 18989 ;; This function calls:
 18990 ;;		_writeData
 18991 ;; This function is called by:
 18992 ;;		_putch
 18993 ;; This function uses a non-reentrant model
 18994 ;;
 18995                           
 18996                           
 18997                           ;psect for function _TM1650_setDigit
 18998  1D58                     _TM1650_setDigit:	
 18999                           
 19000                           ;incstack = 0
 19001                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19002                           ;TM1650_setDigit@digit stored from wreg
 19003  1D58  0140               	movlb	0	; select bank0
 19004  1D59  00B8               	movwf	TM1650_setDigit@digit
 19005                           
 19006                           ;tm1650.c: 97:     writeData(digit + 0x34, charTable[data - 32]);
 19007  1D5A  0836               	movf	TM1650_setDigit@data,w
 19008  1D5B  3EE0               	addlw	low ((_charTable+65504)| (0+32768))
 19009  1D5C  0084               	movwf	4
 19010  1D5D  3097               	movlw	high ((_charTable+65504)| (0+32768))
 19011  1D5E  1803               	skipnc
 19012  1D5F  3E01               	addlw	1
 19013  1D60  0085               	movwf	5
 19014  1D61  0800               	movf	0,w	;code access
 19015  1D62  00B7               	movwf	??_TM1650_setDigit
 19016  1D63  0837               	movf	??_TM1650_setDigit,w
 19017  1D64  00B0               	movwf	writeData@data
 19018  1D65  0838               	movf	TM1650_setDigit@digit,w
 19019  1D66  3E34               	addlw	52
 19020  1D67  3190  2000         	fcall	_writeData
 19021  1D69  0008               	return
 19022  1D6A                     __end_of_TM1650_setDigit:	
 19023                           
 19024                           	psect	text56
 19025  1FB4                     __ptext56:	
 19026 ;; *************** function _getManualColor *****************
 19027 ;; Defined at:
 19028 ;;		line 273 in file "led.c"
 19029 ;; Parameters:    Size  Location     Type
 19030 ;;  input           1    wreg     enum E10884
 19031 ;; Auto vars:     Size  Location     Type
 19032 ;;  input           1    2[BANK0 ] enum E10884
 19033 ;; Return value:  Size  Location     Type
 19034 ;;                  1    wreg      unsigned char 
 19035 ;; Registers used:
 19036 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 19037 ;; Tracked objects:
 19038 ;;		On entry : 0/0
 19039 ;;		On exit  : 0/0
 19040 ;;		Unchanged: 0/0
 19041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19043 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19044 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19045 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19046 ;;Total ram usage:        3 bytes
 19047 ;; Hardware stack levels used:    1
 19048 ;; Hardware stack levels required when called:    4
 19049 ;; This function calls:
 19050 ;;		Nothing
 19051 ;; This function is called by:
 19052 ;;		_CONTROLLER_task
 19053 ;; This function uses a non-reentrant model
 19054 ;;
 19055                           
 19056                           
 19057                           ;psect for function _getManualColor
 19058  1FB4                     _getManualColor:	
 19059                           
 19060                           ;incstack = 0
 19061                           ; Regs used in _getManualColor: [wreg-fsr0h+status,2+status,0]
 19062                           ;getManualColor@input stored from wreg
 19063  1FB4  0140               	movlb	0	; select bank0
 19064  1FB5  00A2               	movwf	getManualColor@input
 19065                           
 19066                           ;led.c: 275:        switch(input){
 19067  1FB6  2FC3               	goto	l6430
 19068  1FB7                     l6404:	
 19069                           
 19070                           ;led.c: 278:             return manual.red;
 19071  1FB7  0141               	movlb	1	; select bank1
 19072  1FB8  0826               	movf	(_manual^(0+128)+1),w
 19073  1FB9  0008               	return
 19074  1FBA                     l6410:	
 19075                           
 19076                           ;led.c: 282:             return manual.green;
 19077  1FBA  0141               	movlb	1	; select bank1
 19078  1FBB  0827               	movf	(_manual^(0+128)+2),w
 19079  1FBC  0008               	return
 19080  1FBD                     l6416:	
 19081                           
 19082                           ;led.c: 286:             return manual.blue;
 19083  1FBD  0141               	movlb	1	; select bank1
 19084  1FBE  0828               	movf	(_manual^(0+128)+3),w
 19085  1FBF  0008               	return
 19086  1FC0                     l6422:	
 19087                           
 19088                           ;led.c: 290:             return manual.white;
 19089  1FC0  0141               	movlb	1	; select bank1
 19090  1FC1  0825               	movf	_manual^(0+128),w
 19091  1FC2  0008               	return
 19092  1FC3                     l6430:	
 19093  1FC3  0822               	movf	getManualColor@input,w
 19094  1FC4  00A0               	movwf	??_getManualColor
 19095  1FC5  01A1               	clrf	??_getManualColor+1
 19096                           
 19097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19098                           ; Switch size 1, requested type "simple"
 19099                           ; Number of cases is 1, Range of values is 0 to 0
 19100                           ; switch strategies available:
 19101                           ; Name         Instructions Cycles
 19102                           ; simple_byte            4     3 (average)
 19103                           ; direct_byte            8     6 (fixed)
 19104                           ; jumptable            260     6 (fixed)
 19105                           ;	Chosen strategy is simple_byte
 19106  1FC6  0821               	movf	??_getManualColor+1,w
 19107  1FC7  3A00               	xorlw	0	; case 0
 19108  1FC8  1903               	skipnz
 19109  1FC9  2FCB               	goto	l9510
 19110  1FCA  2FD9               	goto	l1522
 19111  1FCB                     l9510:	
 19112                           
 19113                           ; Switch size 1, requested type "simple"
 19114                           ; Number of cases is 4, Range of values is 0 to 3
 19115                           ; switch strategies available:
 19116                           ; Name         Instructions Cycles
 19117                           ; simple_byte           13     7 (average)
 19118                           ; direct_byte           14     6 (fixed)
 19119                           ; jumptable            260     6 (fixed)
 19120                           ;	Chosen strategy is simple_byte
 19121  1FCB  0820               	movf	??_getManualColor,w
 19122  1FCC  3A00               	xorlw	0	; case 0
 19123  1FCD  1903               	skipnz
 19124  1FCE  2FB7               	goto	l6404
 19125  1FCF  3A01               	xorlw	1	; case 1
 19126  1FD0  1903               	skipnz
 19127  1FD1  2FBA               	goto	l6410
 19128  1FD2  3A03               	xorlw	3	; case 2
 19129  1FD3  1903               	skipnz
 19130  1FD4  2FBD               	goto	l6416
 19131  1FD5  3A01               	xorlw	1	; case 3
 19132  1FD6  1903               	skipnz
 19133  1FD7  2FC0               	goto	l6422
 19134  1FD8  2FD9               	goto	l1522
 19135  1FD9                     l1522:	
 19136  1FD9  0008               	return
 19137  1FDA                     __end_of_getManualColor:	
 19138                           
 19139                           	psect	text57
 19140  0760                     __ptext57:	
 19141 ;; *************** function _TM1650_fastPrintNum_3digit *****************
 19142 ;; Defined at:
 19143 ;;		line 120 in file "tm1650.c"
 19144 ;; Parameters:    Size  Location     Type
 19145 ;;  num             2   22[BANK0 ] unsigned short 
 19146 ;; Auto vars:     Size  Location     Type
 19147 ;;		None
 19148 ;; Return value:  Size  Location     Type
 19149 ;;                  1    wreg      void 
 19150 ;; Registers used:
 19151 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19152 ;; Tracked objects:
 19153 ;;		On entry : 0/0
 19154 ;;		On exit  : 0/0
 19155 ;;		Unchanged: 0/0
 19156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19157 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19159 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19160 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19161 ;;Total ram usage:        3 bytes
 19162 ;; Hardware stack levels used:    1
 19163 ;; Hardware stack levels required when called:    8
 19164 ;; This function calls:
 19165 ;;		___lwdiv
 19166 ;;		___lwmod
 19167 ;;		_writeData
 19168 ;; This function is called by:
 19169 ;;		_CONTROLLER_task
 19170 ;; This function uses a non-reentrant model
 19171 ;;
 19172                           
 19173                           
 19174                           ;psect for function _TM1650_fastPrintNum_3digit
 19175  0760                     _TM1650_fastPrintNum_3digit:	
 19176                           
 19177                           ;tm1650.c: 122:     if(num > 999){
 19178                           
 19179                           ;incstack = 0
 19180                           ; Regs used in _TM1650_fastPrintNum_3digit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19181  0760  3003               	movlw	3
 19182  0761  0140               	movlb	0	; select bank0
 19183  0762  0237               	subwf	TM1650_fastPrintNum_3digit@num+1,w
 19184  0763  30E8               	movlw	232
 19185  0764  1903               	skipnz
 19186  0765  0236               	subwf	TM1650_fastPrintNum_3digit@num,w
 19187  0766  1C03               	skipc
 19188  0767  2F8B               	goto	l8694
 19189                           
 19190                           ;tm1650.c: 123:         writeData(0x34, 0x79);
 19191  0768  3079               	movlw	121
 19192  0769  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 19193  076A  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 19194  076B  00B0               	movwf	writeData@data
 19195  076C  3034               	movlw	52
 19196  076D  3190  2000  3187   	fcall	_writeData
 19197                           
 19198                           ;tm1650.c: 124:         writeData(0x35, 0x79);
 19199  0770  3079               	movlw	121
 19200  0771  0140               	movlb	0	; select bank0
 19201  0772  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 19202  0773  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 19203  0774  00B0               	movwf	writeData@data
 19204  0775  3035               	movlw	53
 19205  0776  3190  2000  3187   	fcall	_writeData
 19206                           
 19207                           ;tm1650.c: 125:         writeData(0x36, 0x79);
 19208  0779  3079               	movlw	121
 19209  077A  0140               	movlb	0	; select bank0
 19210  077B  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 19211  077C  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 19212  077D  00B0               	movwf	writeData@data
 19213  077E  3036               	movlw	54
 19214  077F  3190  2000  3187   	fcall	_writeData
 19215                           
 19216                           ;tm1650.c: 126:         writeData(0x37, 0x79);
 19217  0782  3079               	movlw	121
 19218  0783  0140               	movlb	0	; select bank0
 19219  0784  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 19220  0785  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 19221  0786  00B0               	movwf	writeData@data
 19222  0787  3037               	movlw	55
 19223  0788  3190  2000         	fcall	_writeData
 19224  078A  0008               	return
 19225  078B                     l8694:	
 19226                           
 19227                           ;tm1650.c: 130:     writeData(0x37, charTable[(num % 10) + 16]);
 19228  078B  300A               	movlw	10
 19229  078C  00A8               	movwf	___lwmod@divisor
 19230  078D  3000               	movlw	0
 19231  078E  00A9               	movwf	___lwmod@divisor+1
 19232  078F  0837               	movf	TM1650_fastPrintNum_3digit@num+1,w
 19233  0790  00AB               	movwf	___lwmod@dividend+1
 19234  0791  0836               	movf	TM1650_fastPrintNum_3digit@num,w
 19235  0792  00AA               	movwf	___lwmod@dividend
 19236  0793  3190  2095  3187   	fcall	___lwmod
 19237  0796  0140               	movlb	0	; select bank0
 19238  0797  0829               	movf	?___lwmod+1,w
 19239  0798  0085               	movwf	5
 19240  0799  0828               	movf	?___lwmod,w
 19241  079A  0084               	movwf	4
 19242  079B  3010               	movlw	low ((_charTable+16)| (0+32768))
 19243  079C  0784               	addwf	4,f
 19244  079D  3098               	movlw	high ((_charTable+16)| (0+32768))
 19245  079E  3D85               	addwfc	5,f
 19246  079F  0800               	movf	0,w	;code access
 19247  07A0  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 19248  07A1  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 19249  07A2  00B0               	movwf	writeData@data
 19250  07A3  3037               	movlw	55
 19251  07A4  3190  2000  3187   	fcall	_writeData
 19252                           
 19253                           ;tm1650.c: 131:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 19254  07A7  300A               	movlw	10
 19255  07A8  0140               	movlb	0	; select bank0
 19256  07A9  00A8               	movwf	___lwmod@divisor
 19257  07AA  3000               	movlw	0
 19258  07AB  00A9               	movwf	___lwmod@divisor+1
 19259  07AC  300A               	movlw	10
 19260  07AD  00A0               	movwf	___lwdiv@divisor
 19261  07AE  3000               	movlw	0
 19262  07AF  00A1               	movwf	___lwdiv@divisor+1
 19263  07B0  0837               	movf	TM1650_fastPrintNum_3digit@num+1,w
 19264  07B1  00A3               	movwf	___lwdiv@dividend+1
 19265  07B2  0836               	movf	TM1650_fastPrintNum_3digit@num,w
 19266  07B3  00A2               	movwf	___lwdiv@dividend
 19267  07B4  3191  21ED  3187   	fcall	___lwdiv
 19268  07B7  0140               	movlb	0	; select bank0
 19269  07B8  0821               	movf	?___lwdiv+1,w
 19270  07B9  00AB               	movwf	___lwmod@dividend+1
 19271  07BA  0820               	movf	?___lwdiv,w
 19272  07BB  00AA               	movwf	___lwmod@dividend
 19273  07BC  3190  2095  3187   	fcall	___lwmod
 19274  07BF  0140               	movlb	0	; select bank0
 19275  07C0  0829               	movf	?___lwmod+1,w
 19276  07C1  0085               	movwf	5
 19277  07C2  0828               	movf	?___lwmod,w
 19278  07C3  0084               	movwf	4
 19279  07C4  3010               	movlw	low ((_charTable+16)| (0+32768))
 19280  07C5  0784               	addwf	4,f
 19281  07C6  3098               	movlw	high ((_charTable+16)| (0+32768))
 19282  07C7  3D85               	addwfc	5,f
 19283  07C8  0800               	movf	0,w	;code access
 19284  07C9  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 19285  07CA  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 19286  07CB  00B0               	movwf	writeData@data
 19287  07CC  3036               	movlw	54
 19288  07CD  3190  2000  3187   	fcall	_writeData
 19289                           
 19290                           ;tm1650.c: 132:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 19291  07D0  300A               	movlw	10
 19292  07D1  0140               	movlb	0	; select bank0
 19293  07D2  00A8               	movwf	___lwmod@divisor
 19294  07D3  3000               	movlw	0
 19295  07D4  00A9               	movwf	___lwmod@divisor+1
 19296  07D5  3064               	movlw	100
 19297  07D6  00A0               	movwf	___lwdiv@divisor
 19298  07D7  3000               	movlw	0
 19299  07D8  00A1               	movwf	___lwdiv@divisor+1
 19300  07D9  0837               	movf	TM1650_fastPrintNum_3digit@num+1,w
 19301  07DA  00A3               	movwf	___lwdiv@dividend+1
 19302  07DB  0836               	movf	TM1650_fastPrintNum_3digit@num,w
 19303  07DC  00A2               	movwf	___lwdiv@dividend
 19304  07DD  3191  21ED  3187   	fcall	___lwdiv
 19305  07E0  0140               	movlb	0	; select bank0
 19306  07E1  0821               	movf	?___lwdiv+1,w
 19307  07E2  00AB               	movwf	___lwmod@dividend+1
 19308  07E3  0820               	movf	?___lwdiv,w
 19309  07E4  00AA               	movwf	___lwmod@dividend
 19310  07E5  3190  2095  3187   	fcall	___lwmod
 19311  07E8  0140               	movlb	0	; select bank0
 19312  07E9  0829               	movf	?___lwmod+1,w
 19313  07EA  0085               	movwf	5
 19314  07EB  0828               	movf	?___lwmod,w
 19315  07EC  0084               	movwf	4
 19316  07ED  3010               	movlw	low ((_charTable+16)| (0+32768))
 19317  07EE  0784               	addwf	4,f
 19318  07EF  3098               	movlw	high ((_charTable+16)| (0+32768))
 19319  07F0  3D85               	addwfc	5,f
 19320  07F1  0800               	movf	0,w	;code access
 19321  07F2  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 19322  07F3  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 19323  07F4  00B0               	movwf	writeData@data
 19324  07F5  3035               	movlw	53
 19325  07F6  3190  2000         	fcall	_writeData
 19326  07F8  0008               	return
 19327  07F9                     __end_of_TM1650_fastPrintNum_3digit:	
 19328                           
 19329                           	psect	text58
 19330  0804                     __ptext58:	
 19331 ;; *************** function _TM1650_fastPrintNum_2digit *****************
 19332 ;; Defined at:
 19333 ;;		line 136 in file "tm1650.c"
 19334 ;; Parameters:    Size  Location     Type
 19335 ;;  num             1    wreg     unsigned char 
 19336 ;; Auto vars:     Size  Location     Type
 19337 ;;  num             1   25[BANK0 ] unsigned char 
 19338 ;; Return value:  Size  Location     Type
 19339 ;;                  1    wreg      void 
 19340 ;; Registers used:
 19341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19342 ;; Tracked objects:
 19343 ;;		On entry : 0/0
 19344 ;;		On exit  : 0/0
 19345 ;;		Unchanged: 0/0
 19346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19348 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19349 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19350 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19351 ;;Total ram usage:        4 bytes
 19352 ;; Hardware stack levels used:    1
 19353 ;; Hardware stack levels required when called:    8
 19354 ;; This function calls:
 19355 ;;		___awdiv
 19356 ;;		___awmod
 19357 ;;		_writeData
 19358 ;; This function is called by:
 19359 ;;		_CONTROLLER_task
 19360 ;; This function uses a non-reentrant model
 19361 ;;
 19362                           
 19363                           
 19364                           ;psect for function _TM1650_fastPrintNum_2digit
 19365  0804                     _TM1650_fastPrintNum_2digit:	
 19366                           
 19367                           ;incstack = 0
 19368                           ; Regs used in _TM1650_fastPrintNum_2digit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19369                           ;TM1650_fastPrintNum_2digit@num stored from wreg
 19370  0804  0140               	movlb	0	; select bank0
 19371  0805  00B9               	movwf	TM1650_fastPrintNum_2digit@num
 19372                           
 19373                           ;tm1650.c: 138:     if(num > 99){
 19374  0806  3064               	movlw	100
 19375  0807  0239               	subwf	TM1650_fastPrintNum_2digit@num,w
 19376  0808  1C03               	skipc
 19377  0809  282D               	goto	l8686
 19378                           
 19379                           ;tm1650.c: 139:         writeData(0x34, 0x79);
 19380  080A  3079               	movlw	121
 19381  080B  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 19382  080C  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 19383  080D  00B0               	movwf	writeData@data
 19384  080E  3034               	movlw	52
 19385  080F  3190  2000  3188   	fcall	_writeData
 19386                           
 19387                           ;tm1650.c: 140:         writeData(0x35, 0x79);
 19388  0812  3079               	movlw	121
 19389  0813  0140               	movlb	0	; select bank0
 19390  0814  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 19391  0815  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 19392  0816  00B0               	movwf	writeData@data
 19393  0817  3035               	movlw	53
 19394  0818  3190  2000  3188   	fcall	_writeData
 19395                           
 19396                           ;tm1650.c: 141:         writeData(0x36, 0x79);
 19397  081B  3079               	movlw	121
 19398  081C  0140               	movlb	0	; select bank0
 19399  081D  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 19400  081E  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 19401  081F  00B0               	movwf	writeData@data
 19402  0820  3036               	movlw	54
 19403  0821  3190  2000  3188   	fcall	_writeData
 19404                           
 19405                           ;tm1650.c: 142:         writeData(0x37, 0x79);
 19406  0824  3079               	movlw	121
 19407  0825  0140               	movlb	0	; select bank0
 19408  0826  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 19409  0827  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 19410  0828  00B0               	movwf	writeData@data
 19411  0829  3037               	movlw	55
 19412  082A  3190  2000         	fcall	_writeData
 19413  082C  0008               	return
 19414  082D                     l8686:	
 19415                           
 19416                           ;tm1650.c: 146:     writeData(0x37, charTable[(num % 10) + 16]);
 19417  082D  300A               	movlw	10
 19418  082E  00A9               	movwf	___awmod@divisor
 19419  082F  3000               	movlw	0
 19420  0830  00AA               	movwf	___awmod@divisor+1
 19421  0831  0839               	movf	TM1650_fastPrintNum_2digit@num,w
 19422  0832  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 19423  0833  01B7               	clrf	??_TM1650_fastPrintNum_2digit+1
 19424  0834  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 19425  0835  00AB               	movwf	___awmod@dividend
 19426  0836  0837               	movf	??_TM1650_fastPrintNum_2digit+1,w
 19427  0837  00AC               	movwf	___awmod@dividend+1
 19428  0838  3193  2311  3188   	fcall	___awmod
 19429  083B  0140               	movlb	0	; select bank0
 19430  083C  082A               	movf	?___awmod+1,w
 19431  083D  0085               	movwf	5
 19432  083E  0829               	movf	?___awmod,w
 19433  083F  0084               	movwf	4
 19434  0840  3010               	movlw	low ((_charTable+16)| (0+32768))
 19435  0841  0784               	addwf	4,f
 19436  0842  3098               	movlw	high ((_charTable+16)| (0+32768))
 19437  0843  3D85               	addwfc	5,f
 19438  0844  0800               	movf	0,w	;code access
 19439  0845  00B8               	movwf	??_TM1650_fastPrintNum_2digit+2
 19440  0846  0838               	movf	??_TM1650_fastPrintNum_2digit+2,w
 19441  0847  00B0               	movwf	writeData@data
 19442  0848  3037               	movlw	55
 19443  0849  3190  2000  3188   	fcall	_writeData
 19444                           
 19445                           ;tm1650.c: 147:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 19446  084C  300A               	movlw	10
 19447  084D  0140               	movlb	0	; select bank0
 19448  084E  00A9               	movwf	___awmod@divisor
 19449  084F  3000               	movlw	0
 19450  0850  00AA               	movwf	___awmod@divisor+1
 19451  0851  300A               	movlw	10
 19452  0852  00A0               	movwf	___awdiv@divisor
 19453  0853  3000               	movlw	0
 19454  0854  00A1               	movwf	___awdiv@divisor+1
 19455  0855  0839               	movf	TM1650_fastPrintNum_2digit@num,w
 19456  0856  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 19457  0857  01B7               	clrf	??_TM1650_fastPrintNum_2digit+1
 19458  0858  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 19459  0859  00A2               	movwf	___awdiv@dividend
 19460  085A  0837               	movf	??_TM1650_fastPrintNum_2digit+1,w
 19461  085B  00A3               	movwf	___awdiv@dividend+1
 19462  085C  3193  23A5  3188   	fcall	___awdiv
 19463  085F  0140               	movlb	0	; select bank0
 19464  0860  0821               	movf	?___awdiv+1,w
 19465  0861  00AC               	movwf	___awmod@dividend+1
 19466  0862  0820               	movf	?___awdiv,w
 19467  0863  00AB               	movwf	___awmod@dividend
 19468  0864  3193  2311  3188   	fcall	___awmod
 19469  0867  0140               	movlb	0	; select bank0
 19470  0868  082A               	movf	?___awmod+1,w
 19471  0869  0085               	movwf	5
 19472  086A  0829               	movf	?___awmod,w
 19473  086B  0084               	movwf	4
 19474  086C  3010               	movlw	low ((_charTable+16)| (0+32768))
 19475  086D  0784               	addwf	4,f
 19476  086E  3098               	movlw	high ((_charTable+16)| (0+32768))
 19477  086F  3D85               	addwfc	5,f
 19478  0870  0800               	movf	0,w	;code access
 19479  0871  00B8               	movwf	??_TM1650_fastPrintNum_2digit+2
 19480  0872  0838               	movf	??_TM1650_fastPrintNum_2digit+2,w
 19481  0873  00B0               	movwf	writeData@data
 19482  0874  3036               	movlw	54
 19483  0875  3190  2000         	fcall	_writeData
 19484  0877  0008               	return
 19485  0878                     __end_of_TM1650_fastPrintNum_2digit:	
 19486                           
 19487                           	psect	text59
 19488  1311                     __ptext59:	
 19489 ;; *************** function ___awmod *****************
 19490 ;; Defined at:
 19491 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
 19492 ;; Parameters:    Size  Location     Type
 19493 ;;  divisor         2    9[BANK0 ] int 
 19494 ;;  dividend        2   11[BANK0 ] int 
 19495 ;; Auto vars:     Size  Location     Type
 19496 ;;  sign            1   15[BANK0 ] unsigned char 
 19497 ;;  counter         1   14[BANK0 ] unsigned char 
 19498 ;; Return value:  Size  Location     Type
 19499 ;;                  2    9[BANK0 ] int 
 19500 ;; Registers used:
 19501 ;;		wreg, status,2, status,0
 19502 ;; Tracked objects:
 19503 ;;		On entry : 0/0
 19504 ;;		On exit  : 0/0
 19505 ;;		Unchanged: 0/0
 19506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19507 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19508 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19509 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19510 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19511 ;;Total ram usage:        7 bytes
 19512 ;; Hardware stack levels used:    1
 19513 ;; Hardware stack levels required when called:    4
 19514 ;; This function calls:
 19515 ;;		Nothing
 19516 ;; This function is called by:
 19517 ;;		_TM1650_fastPrintNum_2digit
 19518 ;; This function uses a non-reentrant model
 19519 ;;
 19520                           
 19521                           
 19522                           ;psect for function ___awmod
 19523  1311                     ___awmod:	
 19524                           
 19525                           ;incstack = 0
 19526                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 19527  1311  0140               	movlb	0	; select bank0
 19528  1312  01AF               	clrf	___awmod@sign
 19529  1313  1FAC               	btfss	___awmod@dividend+1,7
 19530  1314  2B1C               	goto	l5792
 19531  1315  09AB               	comf	___awmod@dividend,f
 19532  1316  09AC               	comf	___awmod@dividend+1,f
 19533  1317  0AAB               	incf	___awmod@dividend,f
 19534  1318  1903               	skipnz
 19535  1319  0AAC               	incf	___awmod@dividend+1,f
 19536  131A  01AF               	clrf	___awmod@sign
 19537  131B  0AAF               	incf	___awmod@sign,f
 19538  131C                     l5792:	
 19539  131C  1FAA               	btfss	___awmod@divisor+1,7
 19540  131D  2B23               	goto	l5796
 19541  131E  09A9               	comf	___awmod@divisor,f
 19542  131F  09AA               	comf	___awmod@divisor+1,f
 19543  1320  0AA9               	incf	___awmod@divisor,f
 19544  1321  1903               	skipnz
 19545  1322  0AAA               	incf	___awmod@divisor+1,f
 19546  1323                     l5796:	
 19547  1323  0829               	movf	___awmod@divisor,w
 19548  1324  042A               	iorwf	___awmod@divisor+1,w
 19549  1325  1903               	btfsc	3,2
 19550  1326  2B4A               	goto	l5814
 19551  1327  01AE               	clrf	___awmod@counter
 19552  1328  0AAE               	incf	___awmod@counter,f
 19553  1329                     l5804:	
 19554  1329  1BAA               	btfsc	___awmod@divisor+1,7
 19555  132A  2B35               	goto	l5806
 19556  132B  3001               	movlw	1
 19557  132C                     u5145:	
 19558  132C  35A9               	lslf	___awmod@divisor,f
 19559  132D  0DAA               	rlf	___awmod@divisor+1,f
 19560  132E  0B89               	decfsz	9,f
 19561  132F  2B2C               	goto	u5145
 19562  1330  3001               	movlw	1
 19563  1331  00AD               	movwf	??___awmod
 19564  1332  082D               	movf	??___awmod,w
 19565  1333  07AE               	addwf	___awmod@counter,f
 19566  1334  2B29               	goto	l5804
 19567  1335                     l5806:	
 19568  1335  082A               	movf	___awmod@divisor+1,w
 19569  1336  022C               	subwf	___awmod@dividend+1,w
 19570  1337  1D03               	skipz
 19571  1338  2B3B               	goto	u5165
 19572  1339  0829               	movf	___awmod@divisor,w
 19573  133A  022B               	subwf	___awmod@dividend,w
 19574  133B                     u5165:	
 19575  133B  1C03               	skipc
 19576  133C  2B41               	goto	l5810
 19577  133D  0829               	movf	___awmod@divisor,w
 19578  133E  02AB               	subwf	___awmod@dividend,f
 19579  133F  082A               	movf	___awmod@divisor+1,w
 19580  1340  3BAC               	subwfb	___awmod@dividend+1,f
 19581  1341                     l5810:	
 19582  1341  3001               	movlw	1
 19583  1342                     u5175:	
 19584  1342  36AA               	lsrf	___awmod@divisor+1,f
 19585  1343  0CA9               	rrf	___awmod@divisor,f
 19586  1344  0B89               	decfsz	9,f
 19587  1345  2B42               	goto	u5175
 19588  1346  3001               	movlw	1
 19589  1347  02AE               	subwf	___awmod@counter,f
 19590  1348  1D03               	btfss	3,2
 19591  1349  2B35               	goto	l5806
 19592  134A                     l5814:	
 19593  134A  082F               	movf	___awmod@sign,w
 19594  134B  1903               	btfsc	3,2
 19595  134C  2B52               	goto	l5818
 19596  134D  09AB               	comf	___awmod@dividend,f
 19597  134E  09AC               	comf	___awmod@dividend+1,f
 19598  134F  0AAB               	incf	___awmod@dividend,f
 19599  1350  1903               	skipnz
 19600  1351  0AAC               	incf	___awmod@dividend+1,f
 19601  1352                     l5818:	
 19602  1352  082C               	movf	___awmod@dividend+1,w
 19603  1353  00AA               	movwf	?___awmod+1
 19604  1354  082B               	movf	___awmod@dividend,w
 19605  1355  00A9               	movwf	?___awmod
 19606  1356  0008               	return
 19607  1357                     __end_of___awmod:	
 19608                           
 19609                           	psect	text60
 19610  13A5                     __ptext60:	
 19611 ;; *************** function ___awdiv *****************
 19612 ;; Defined at:
 19613 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
 19614 ;; Parameters:    Size  Location     Type
 19615 ;;  divisor         2    0[BANK0 ] int 
 19616 ;;  dividend        2    2[BANK0 ] int 
 19617 ;; Auto vars:     Size  Location     Type
 19618 ;;  quotient        2    7[BANK0 ] int 
 19619 ;;  sign            1    6[BANK0 ] unsigned char 
 19620 ;;  counter         1    5[BANK0 ] unsigned char 
 19621 ;; Return value:  Size  Location     Type
 19622 ;;                  2    0[BANK0 ] int 
 19623 ;; Registers used:
 19624 ;;		wreg, status,2, status,0
 19625 ;; Tracked objects:
 19626 ;;		On entry : 0/0
 19627 ;;		On exit  : 0/0
 19628 ;;		Unchanged: 0/0
 19629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19630 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19631 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19632 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19633 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19634 ;;Total ram usage:        9 bytes
 19635 ;; Hardware stack levels used:    1
 19636 ;; Hardware stack levels required when called:    4
 19637 ;; This function calls:
 19638 ;;		Nothing
 19639 ;; This function is called by:
 19640 ;;		_TM1650_fastPrintNum_2digit
 19641 ;; This function uses a non-reentrant model
 19642 ;;
 19643                           
 19644                           
 19645                           ;psect for function ___awdiv
 19646  13A5                     ___awdiv:	
 19647                           
 19648                           ;incstack = 0
 19649                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 19650  13A5  0140               	movlb	0	; select bank0
 19651  13A6  01A6               	clrf	___awdiv@sign
 19652  13A7  1FA1               	btfss	___awdiv@divisor+1,7
 19653  13A8  2BB0               	goto	l5748
 19654  13A9  09A0               	comf	___awdiv@divisor,f
 19655  13AA  09A1               	comf	___awdiv@divisor+1,f
 19656  13AB  0AA0               	incf	___awdiv@divisor,f
 19657  13AC  1903               	skipnz
 19658  13AD  0AA1               	incf	___awdiv@divisor+1,f
 19659  13AE  01A6               	clrf	___awdiv@sign
 19660  13AF  0AA6               	incf	___awdiv@sign,f
 19661  13B0                     l5748:	
 19662  13B0  1FA3               	btfss	___awdiv@dividend+1,7
 19663  13B1  2BBB               	goto	l5754
 19664  13B2  09A2               	comf	___awdiv@dividend,f
 19665  13B3  09A3               	comf	___awdiv@dividend+1,f
 19666  13B4  0AA2               	incf	___awdiv@dividend,f
 19667  13B5  1903               	skipnz
 19668  13B6  0AA3               	incf	___awdiv@dividend+1,f
 19669  13B7  3001               	movlw	1
 19670  13B8  00A4               	movwf	??___awdiv
 19671  13B9  0824               	movf	??___awdiv,w
 19672  13BA  06A6               	xorwf	___awdiv@sign,f
 19673  13BB                     l5754:	
 19674  13BB  01A7               	clrf	___awdiv@quotient
 19675  13BC  01A8               	clrf	___awdiv@quotient+1
 19676  13BD  0820               	movf	___awdiv@divisor,w
 19677  13BE  0421               	iorwf	___awdiv@divisor+1,w
 19678  13BF  1903               	btfsc	3,2
 19679  13C0  2BEA               	goto	l5776
 19680  13C1  01A5               	clrf	___awdiv@counter
 19681  13C2  0AA5               	incf	___awdiv@counter,f
 19682  13C3                     l5764:	
 19683  13C3  1BA1               	btfsc	___awdiv@divisor+1,7
 19684  13C4  2BCF               	goto	l5766
 19685  13C5  3001               	movlw	1
 19686  13C6                     u5045:	
 19687  13C6  35A0               	lslf	___awdiv@divisor,f
 19688  13C7  0DA1               	rlf	___awdiv@divisor+1,f
 19689  13C8  0B89               	decfsz	9,f
 19690  13C9  2BC6               	goto	u5045
 19691  13CA  3001               	movlw	1
 19692  13CB  00A4               	movwf	??___awdiv
 19693  13CC  0824               	movf	??___awdiv,w
 19694  13CD  07A5               	addwf	___awdiv@counter,f
 19695  13CE  2BC3               	goto	l5764
 19696  13CF                     l5766:	
 19697  13CF  3001               	movlw	1
 19698  13D0                     u5065:	
 19699  13D0  35A7               	lslf	___awdiv@quotient,f
 19700  13D1  0DA8               	rlf	___awdiv@quotient+1,f
 19701  13D2  0B89               	decfsz	9,f
 19702  13D3  2BD0               	goto	u5065
 19703  13D4  0821               	movf	___awdiv@divisor+1,w
 19704  13D5  0223               	subwf	___awdiv@dividend+1,w
 19705  13D6  1D03               	skipz
 19706  13D7  2BDA               	goto	u5075
 19707  13D8  0820               	movf	___awdiv@divisor,w
 19708  13D9  0222               	subwf	___awdiv@dividend,w
 19709  13DA                     u5075:	
 19710  13DA  1C03               	skipc
 19711  13DB  2BE1               	goto	l5772
 19712  13DC  0820               	movf	___awdiv@divisor,w
 19713  13DD  02A2               	subwf	___awdiv@dividend,f
 19714  13DE  0821               	movf	___awdiv@divisor+1,w
 19715  13DF  3BA3               	subwfb	___awdiv@dividend+1,f
 19716  13E0  1427               	bsf	___awdiv@quotient,0
 19717  13E1                     l5772:	
 19718  13E1  3001               	movlw	1
 19719  13E2                     u5085:	
 19720  13E2  36A1               	lsrf	___awdiv@divisor+1,f
 19721  13E3  0CA0               	rrf	___awdiv@divisor,f
 19722  13E4  0B89               	decfsz	9,f
 19723  13E5  2BE2               	goto	u5085
 19724  13E6  3001               	movlw	1
 19725  13E7  02A5               	subwf	___awdiv@counter,f
 19726  13E8  1D03               	btfss	3,2
 19727  13E9  2BCF               	goto	l5766
 19728  13EA                     l5776:	
 19729  13EA  0826               	movf	___awdiv@sign,w
 19730  13EB  1903               	btfsc	3,2
 19731  13EC  2BF2               	goto	l5780
 19732  13ED  09A7               	comf	___awdiv@quotient,f
 19733  13EE  09A8               	comf	___awdiv@quotient+1,f
 19734  13EF  0AA7               	incf	___awdiv@quotient,f
 19735  13F0  1903               	skipnz
 19736  13F1  0AA8               	incf	___awdiv@quotient+1,f
 19737  13F2                     l5780:	
 19738  13F2  0828               	movf	___awdiv@quotient+1,w
 19739  13F3  00A1               	movwf	?___awdiv+1
 19740  13F4  0827               	movf	___awdiv@quotient,w
 19741  13F5  00A0               	movwf	?___awdiv
 19742  13F6  0008               	return
 19743  13F7                     __end_of___awdiv:	
 19744                           
 19745                           	psect	text61
 19746  1DB9                     __ptext61:	
 19747 ;; *************** function _TM1650_enable *****************
 19748 ;; Defined at:
 19749 ;;		line 41 in file "tm1650.c"
 19750 ;; Parameters:    Size  Location     Type
 19751 ;;  enable          1    wreg     _Bool 
 19752 ;; Auto vars:     Size  Location     Type
 19753 ;;  enable          1   22[BANK0 ] _Bool 
 19754 ;; Return value:  Size  Location     Type
 19755 ;;                  1    wreg      void 
 19756 ;; Registers used:
 19757 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19758 ;; Tracked objects:
 19759 ;;		On entry : 0/0
 19760 ;;		On exit  : 0/0
 19761 ;;		Unchanged: 0/0
 19762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19764 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19766 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19767 ;;Total ram usage:        1 bytes
 19768 ;; Hardware stack levels used:    1
 19769 ;; Hardware stack levels required when called:    8
 19770 ;; This function calls:
 19771 ;;		_writeData
 19772 ;; This function is called by:
 19773 ;;		_CONTROLLER_task
 19774 ;;		_TM1650_init
 19775 ;; This function uses a non-reentrant model
 19776 ;;
 19777                           
 19778                           
 19779                           ;psect for function _TM1650_enable
 19780  1DB9                     _TM1650_enable:	
 19781                           
 19782                           ;incstack = 0
 19783                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19784                           ;TM1650_enable@enable stored from wreg
 19785  1DB9  0140               	movlb	0	; select bank0
 19786  1DBA  00B6               	movwf	TM1650_enable@enable
 19787                           
 19788                           ;tm1650.c: 42:     if(enable){
 19789  1DBB  0836               	movf	TM1650_enable@enable,w
 19790  1DBC  1903               	btfsc	3,2
 19791  1DBD  2DC7               	goto	l8676
 19792                           
 19793                           ;tm1650.c: 43:         writeData(0x24, 0x01);
 19794  1DBE  01B0               	clrf	writeData@data
 19795  1DBF  0AB0               	incf	writeData@data,f
 19796  1DC0  3024               	movlw	36
 19797  1DC1  3190  2000         	fcall	_writeData
 19798                           
 19799                           ;tm1650.c: 44:         tm1650_status = 1;
 19800  1DC3  0142               	movlb	2	; select bank2
 19801  1DC4  01CD               	clrf	_tm1650_status^(0+256)
 19802  1DC5  0ACD               	incf	_tm1650_status^(0+256),f
 19803                           
 19804                           ;tm1650.c: 45:     } else {
 19805  1DC6  0008               	return
 19806  1DC7                     l8676:	
 19807                           
 19808                           ;tm1650.c: 46:         writeData(0x24, 0x00);
 19809  1DC7  01B0               	clrf	writeData@data
 19810  1DC8  3024               	movlw	36
 19811  1DC9  3190  2000         	fcall	_writeData
 19812                           
 19813                           ;tm1650.c: 47:         tm1650_status = 0;
 19814  1DCB  0142               	movlb	2	; select bank2
 19815  1DCC  01CD               	clrf	_tm1650_status^(0+256)
 19816  1DCD  0008               	return
 19817  1DCE                     __end_of_TM1650_enable:	
 19818                           
 19819                           	psect	text62
 19820  09CF                     __ptext62:	
 19821 ;; *************** function _CONTROL_MANUAL *****************
 19822 ;; Defined at:
 19823 ;;		line 280 in file "controller.c"
 19824 ;; Parameters:    Size  Location     Type
 19825 ;;  input           1    wreg     enum E10878
 19826 ;; Auto vars:     Size  Location     Type
 19827 ;;  input           1    5[BANK0 ] enum E10878
 19828 ;; Return value:  Size  Location     Type
 19829 ;;                  1    wreg      _Bool 
 19830 ;; Registers used:
 19831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19832 ;; Tracked objects:
 19833 ;;		On entry : 0/0
 19834 ;;		On exit  : 0/0
 19835 ;;		Unchanged: 0/0
 19836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19838 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19839 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19840 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19841 ;;Total ram usage:        3 bytes
 19842 ;; Hardware stack levels used:    1
 19843 ;; Hardware stack levels required when called:    5
 19844 ;; This function calls:
 19845 ;;		_BUTTONS_isHeld
 19846 ;;		_CLOCK_getTime
 19847 ;;		_colorDec
 19848 ;;		_colorInc
 19849 ;; This function is called by:
 19850 ;;		_CONTROLLER_task
 19851 ;; This function uses a non-reentrant model
 19852 ;;
 19853                           
 19854                           
 19855                           ;psect for function _CONTROL_MANUAL
 19856  09CF                     _CONTROL_MANUAL:	
 19857                           
 19858                           ;incstack = 0
 19859                           ; Regs used in _CONTROL_MANUAL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19860                           ;CONTROL_MANUAL@input stored from wreg
 19861  09CF  0140               	movlb	0	; select bank0
 19862  09D0  00A5               	movwf	CONTROL_MANUAL@input
 19863                           
 19864                           ;controller.c: 282:      if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incIn
      +                          terval)){
 19865  09D1  0141               	movlb	1	; select bank1
 19866  09D2  083C               	movf	_up^(0+128),w
 19867  09D3  319D  2527  3189   	fcall	_BUTTONS_isHeld
 19868  09D6  3A00               	xorlw	0
 19869  09D7  1903               	skipnz
 19870  09D8  2A34               	goto	l8592
 19871  09D9  319C  2469  3189   	fcall	_CLOCK_getTime
 19872  09DC  0141               	movlb	1	; select bank1
 19873  09DD  082B               	movf	_lastIncTime^(0+128),w
 19874  09DE  0140               	movlb	0	; select bank0
 19875  09DF  0220               	subwf	?_CLOCK_getTime,w
 19876  09E0  00A3               	movwf	??_CONTROL_MANUAL
 19877  09E1  0141               	movlb	1	; select bank1
 19878  09E2  082C               	movf	(_lastIncTime+1)^(0+128),w
 19879  09E3  0140               	movlb	0	; select bank0
 19880  09E4  3B21               	subwfb	?_CLOCK_getTime+1,w
 19881  09E5  00A4               	movwf	??_CONTROL_MANUAL+1
 19882  09E6  0824               	movf	??_CONTROL_MANUAL+1,w
 19883  09E7  027D               	subwf	_incInterval+1,w
 19884  09E8  1D03               	skipz
 19885  09E9  29EC               	goto	u8755
 19886  09EA  0823               	movf	??_CONTROL_MANUAL,w
 19887  09EB  027C               	subwf	_incInterval,w
 19888  09EC                     u8755:	
 19889  09EC  1803               	skipnc
 19890  09ED  2A34               	goto	l8592
 19891                           
 19892                           ;controller.c: 283:         colorInc(input);
 19893  09EE  0825               	movf	CONTROL_MANUAL@input,w
 19894  09EF  3192  22CB  3189   	fcall	_colorInc
 19895  09F2  2A0C               	goto	L21
 19896  09F3                     l8594:	
 19897                           ;controller.c: 285:         if(incInterval > 10){
 19898                           
 19899                           ;controller.c: 284:         lastIncTime = CLOCK_getTime();
 19900                           
 19901  09F3  319C  2469  3189   	fcall	_CLOCK_getTime
 19902  09F6  0141               	movlb	1	; select bank1
 19903  09F7  082B               	movf	_lastIncTime^(0+128),w
 19904  09F8  0140               	movlb	0	; select bank0
 19905  09F9  0220               	subwf	?_CLOCK_getTime,w
 19906  09FA  00A3               	movwf	??_CONTROL_MANUAL
 19907  09FB  0141               	movlb	1	; select bank1
 19908  09FC  082C               	movf	(_lastIncTime+1)^(0+128),w
 19909  09FD  0140               	movlb	0	; select bank0
 19910  09FE  3B21               	subwfb	?_CLOCK_getTime+1,w
 19911  09FF  00A4               	movwf	??_CONTROL_MANUAL+1
 19912  0A00  0824               	movf	??_CONTROL_MANUAL+1,w
 19913  0A01  027D               	subwf	_incInterval+1,w
 19914  0A02  1D03               	skipz
 19915  0A03  2A06               	goto	u8785
 19916  0A04  0823               	movf	??_CONTROL_MANUAL,w
 19917  0A05  027C               	subwf	_incInterval,w
 19918  0A06                     u8785:	
 19919  0A06  1803               	skipnc
 19920  0A07  2A3C               	goto	l8608
 19921                           
 19922                           ;controller.c: 290:         colorDec(input);
 19923  0A08  0825               	movf	CONTROL_MANUAL@input,w
 19924  0A09  3192  2222  3189   	fcall	_colorDec
 19925  0A0C                     L21:	
 19926                           
 19927                           ;controller.c: 291:         lastIncTime = CLOCK_getTime();
 19928  0A0C  319C  2469  3189   	fcall	_CLOCK_getTime
 19929  0A0F  0140               	movlb	0	; select bank0
 19930  0A10  0821               	movf	?_CLOCK_getTime+1,w
 19931  0A11  0141               	movlb	1	; select bank1
 19932  0A12  00AC               	movwf	(_lastIncTime+1)^(0+128)
 19933  0A13  0140               	movlb	0	; select bank0
 19934  0A14  0820               	movf	?_CLOCK_getTime,w
 19935  0A15  0141               	movlb	1	; select bank1
 19936  0A16  00AB               	movwf	_lastIncTime^(0+128)
 19937                           
 19938                           ;controller.c: 292:         if(incInterval > 10){
 19939  0A17  087D               	movf	_incInterval+1,w
 19940  0A18  3A80               	xorlw	128
 19941  0A19  0140               	movlb	0	; select bank0
 19942  0A1A  00A3               	movwf	??_CONTROL_MANUAL
 19943  0A1B  3080               	movlw	128
 19944  0A1C  0223               	subwf	??_CONTROL_MANUAL,w
 19945  0A1D  1D03               	skipz
 19946  0A1E  2A21               	goto	u8795
 19947  0A1F  300B               	movlw	11
 19948  0A20  027C               	subwf	_incInterval,w
 19949  0A21                     u8795:	
 19950  0A21  1C03               	skipc
 19951  0A22  2A32               	goto	l1144
 19952                           
 19953                           ;controller.c: 286:             incInterval-=1;
 19954  0A23  30FF               	movlw	255
 19955  0A24  07FC               	addwf	_incInterval,f
 19956  0A25  30FF               	movlw	255
 19957  0A26  3DFD               	addwfc	_incInterval+1,f
 19958  0A27  2A32               	goto	l1144
 19959  0A28                     l8610:	
 19960                           
 19961                           ;controller.c: 297:         colorInc(input);
 19962  0A28  0140               	movlb	0	; select bank0
 19963  0A29  0825               	movf	CONTROL_MANUAL@input,w
 19964  0A2A  3192  22CB  3189   	fcall	_colorInc
 19965  0A2D  2A32               	goto	l1144
 19966  0A2E                     l8620:	
 19967                           
 19968                           ;controller.c: 301:         colorDec(input);
 19969  0A2E  0140               	movlb	0	; select bank0
 19970  0A2F  0825               	movf	CONTROL_MANUAL@input,w
 19971  0A30  3192  2222         	fcall	_colorDec
 19972  0A32                     l1144:	
 19973                           ;controller.c: 287:         }
 19974                           
 19975                           
 19976                           ;controller.c: 288:         return 1;
 19977  0A32  3001               	movlw	1
 19978  0A33  0008               	return
 19979  0A34                     l8592:	
 19980  0A34  0141               	movlb	1	; select bank1
 19981  0A35  083B               	movf	_down^(0+128),w
 19982  0A36  319D  2527  3189   	fcall	_BUTTONS_isHeld
 19983  0A39  3A00               	xorlw	0
 19984  0A3A  1D03               	btfss	3,2
 19985  0A3B  29F3               	goto	l8594
 19986  0A3C                     l8608:	
 19987  0A3C  0141               	movlb	1	; select bank1
 19988  0A3D  0835               	movf	_upState^(0+128),w
 19989  0A3E  1D03               	btfss	3,2
 19990  0A3F  2A28               	goto	l8610
 19991  0A40  0834               	movf	_downState^(0+128),w
 19992  0A41  1D03               	btfss	3,2
 19993  0A42  2A2E               	goto	l8620
 19994  0A43  0832               	movf	_enterState^(0+128),w
 19995  0A44  1D03               	btfss	3,2
 19996  0A45  2A56               	goto	l8640
 19997  0A46  2A6D               	goto	l8648
 19998  0A47                     l1156:	
 19999                           ;controller.c: 305:             case CMODE_RED:
 20000                           
 20001                           
 20002                           ;controller.c: 306:                 colorModeSelected = CMODE_GREEN;
 20003  0A47  0141               	movlb	1	; select bank1
 20004  0A48  01B0               	clrf	_colorModeSelected^(0+128)
 20005  0A49  0AB0               	incf	_colorModeSelected^(0+128),f
 20006                           
 20007                           ;controller.c: 307:                 break;
 20008  0A4A  2A32               	goto	l1144
 20009  0A4B                     l8632:	
 20010                           
 20011                           ;controller.c: 310:                 colorModeSelected = CMODE_BLUE;
 20012  0A4B  3002               	movlw	2
 20013  0A4C  2A4E               	goto	L20
 20014  0A4D                     l8634:	
 20015                           ;controller.c: 311:                 break;
 20016                           
 20017                           
 20018                           ;controller.c: 314:                 colorModeSelected = CMODE_WHITE;
 20019  0A4D  3003               	movlw	3
 20020  0A4E                     L20:	
 20021  0A4E  00A3               	movwf	??_CONTROL_MANUAL
 20022  0A4F  0823               	movf	??_CONTROL_MANUAL,w
 20023  0A50  0141               	movlb	1	; select bank1
 20024  0A51  00B0               	movwf	_colorModeSelected^(0+128)
 20025                           
 20026                           ;controller.c: 315:                 break;
 20027  0A52  2A32               	goto	l1144
 20028  0A53                     l8636:	
 20029                           
 20030                           ;controller.c: 318:                 colorModeSelected = CMODE_RED;
 20031  0A53  0141               	movlb	1	; select bank1
 20032  0A54  01B0               	clrf	_colorModeSelected^(0+128)
 20033                           
 20034                           ;controller.c: 319:                 break;
 20035  0A55  2A32               	goto	l1144
 20036  0A56                     l8640:	
 20037  0A56  0140               	movlb	0	; select bank0
 20038  0A57  0825               	movf	CONTROL_MANUAL@input,w
 20039  0A58  00A3               	movwf	??_CONTROL_MANUAL
 20040  0A59  01A4               	clrf	??_CONTROL_MANUAL+1
 20041                           
 20042                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20043                           ; Switch size 1, requested type "simple"
 20044                           ; Number of cases is 1, Range of values is 0 to 0
 20045                           ; switch strategies available:
 20046                           ; Name         Instructions Cycles
 20047                           ; simple_byte            4     3 (average)
 20048                           ; direct_byte            8     6 (fixed)
 20049                           ; jumptable            260     6 (fixed)
 20050                           ;	Chosen strategy is simple_byte
 20051  0A5A  0824               	movf	??_CONTROL_MANUAL+1,w
 20052  0A5B  3A00               	xorlw	0	; case 0
 20053  0A5C  1903               	skipnz
 20054  0A5D  2A5F               	goto	l9512
 20055  0A5E  2A32               	goto	l1144
 20056  0A5F                     l9512:	
 20057                           
 20058                           ; Switch size 1, requested type "simple"
 20059                           ; Number of cases is 4, Range of values is 0 to 3
 20060                           ; switch strategies available:
 20061                           ; Name         Instructions Cycles
 20062                           ; simple_byte           13     7 (average)
 20063                           ; direct_byte           14     6 (fixed)
 20064                           ; jumptable            260     6 (fixed)
 20065                           ;	Chosen strategy is simple_byte
 20066  0A5F  0823               	movf	??_CONTROL_MANUAL,w
 20067  0A60  3A00               	xorlw	0	; case 0
 20068  0A61  1903               	skipnz
 20069  0A62  2A47               	goto	l1156
 20070  0A63  3A01               	xorlw	1	; case 1
 20071  0A64  1903               	skipnz
 20072  0A65  2A4B               	goto	l8632
 20073  0A66  3A03               	xorlw	3	; case 2
 20074  0A67  1903               	skipnz
 20075  0A68  2A4D               	goto	l8634
 20076  0A69  3A01               	xorlw	1	; case 3
 20077  0A6A  1903               	skipnz
 20078  0A6B  2A53               	goto	l8636
 20079  0A6C  2A32               	goto	l1144
 20080  0A6D                     l8648:	
 20081  0A6D  0835               	movf	_upState^(0+128),w
 20082  0A6E  1D03               	btfss	3,2
 20083  0A6F  0834               	movf	_downState^(0+128),w
 20084  0A70  1D03               	btfss	3,2
 20085  0A71  2A85               	goto	l8658
 20086  0A72  083B               	movf	_down^(0+128),w
 20087  0A73  319D  2527  3189   	fcall	_BUTTONS_isHeld
 20088  0A76  3A00               	xorlw	0
 20089  0A77  1D03               	skipz
 20090  0A78  2A85               	goto	l8658
 20091  0A79  0141               	movlb	1	; select bank1
 20092  0A7A  083C               	movf	_up^(0+128),w
 20093  0A7B  319D  2527  3189   	fcall	_BUTTONS_isHeld
 20094  0A7E  3A00               	xorlw	0
 20095  0A7F  1D03               	skipz
 20096  0A80  2A85               	goto	l8658
 20097                           
 20098                           ;controller.c: 323:         incInterval = 100;
 20099  0A81  3064               	movlw	100
 20100  0A82  00FC               	movwf	_incInterval
 20101  0A83  3000               	movlw	0
 20102  0A84  00FD               	movwf	_incInterval+1
 20103  0A85                     l8658:	
 20104                           ;controller.c: 324:     } else {
 20105                           
 20106                           
 20107                           ;controller.c: 325:         return 0;
 20108  0A85  3000               	movlw	0
 20109  0A86  0008               	return
 20110  0A87                     __end_of_CONTROL_MANUAL:	
 20111                           
 20112                           	psect	text63
 20113  12CB                     __ptext63:	
 20114 ;; *************** function _colorInc *****************
 20115 ;; Defined at:
 20116 ;;		line 217 in file "led.c"
 20117 ;; Parameters:    Size  Location     Type
 20118 ;;  input           1    wreg     enum E10884
 20119 ;; Auto vars:     Size  Location     Type
 20120 ;;  input           1    2[BANK0 ] enum E10884
 20121 ;; Return value:  Size  Location     Type
 20122 ;;                  1    wreg      void 
 20123 ;; Registers used:
 20124 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 20125 ;; Tracked objects:
 20126 ;;		On entry : 0/0
 20127 ;;		On exit  : 0/0
 20128 ;;		Unchanged: 0/0
 20129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20131 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20132 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20133 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20134 ;;Total ram usage:        3 bytes
 20135 ;; Hardware stack levels used:    1
 20136 ;; Hardware stack levels required when called:    4
 20137 ;; This function calls:
 20138 ;;		Nothing
 20139 ;; This function is called by:
 20140 ;;		_CONTROL_MANUAL
 20141 ;; This function uses a non-reentrant model
 20142 ;;
 20143                           
 20144                           
 20145                           ;psect for function _colorInc
 20146  12CB                     _colorInc:	
 20147                           
 20148                           ;incstack = 0
 20149                           ; Regs used in _colorInc: [wreg-fsr0h+status,2+status,0]
 20150                           ;colorInc@input stored from wreg
 20151  12CB  0140               	movlb	0	; select bank0
 20152  12CC  00A2               	movwf	colorInc@input
 20153                           
 20154                           ;led.c: 219:     switch(input){
 20155  12CD  2AFA               	goto	l5656
 20156  12CE                     l5638:	
 20157                           
 20158                           ;led.c: 222:             if(!(manual.red > 254))
 20159  12CE  0141               	movlb	1	; select bank1
 20160  12CF  0A26               	incf	(_manual^(0+128)+1),w
 20161  12D0  1903               	btfsc	3,2
 20162  12D1  0008               	return
 20163                           
 20164                           ;led.c: 223:             manual.red++;
 20165  12D2  3001               	movlw	1
 20166  12D3  0140               	movlb	0	; select bank0
 20167  12D4  00A0               	movwf	??_colorInc
 20168  12D5  0820               	movf	??_colorInc,w
 20169  12D6  0141               	movlb	1	; select bank1
 20170  12D7  07A6               	addwf	(_manual^(0+128)+1),f
 20171  12D8  0008               	return
 20172  12D9                     l5642:	
 20173                           
 20174                           ;led.c: 227:             if(!(manual.green > 254))
 20175  12D9  0141               	movlb	1	; select bank1
 20176  12DA  0A27               	incf	(_manual^(0+128)+2),w
 20177  12DB  1903               	btfsc	3,2
 20178  12DC  0008               	return
 20179                           
 20180                           ;led.c: 228:             manual.green++;
 20181  12DD  3001               	movlw	1
 20182  12DE  0140               	movlb	0	; select bank0
 20183  12DF  00A0               	movwf	??_colorInc
 20184  12E0  0820               	movf	??_colorInc,w
 20185  12E1  0141               	movlb	1	; select bank1
 20186  12E2  07A7               	addwf	(_manual^(0+128)+2),f
 20187  12E3  0008               	return
 20188  12E4                     l5646:	
 20189                           
 20190                           ;led.c: 232:             if(!(manual.blue > 254))
 20191  12E4  0141               	movlb	1	; select bank1
 20192  12E5  0A28               	incf	(_manual^(0+128)+3),w
 20193  12E6  1903               	btfsc	3,2
 20194  12E7  0008               	return
 20195                           
 20196                           ;led.c: 233:             manual.blue++;
 20197  12E8  3001               	movlw	1
 20198  12E9  0140               	movlb	0	; select bank0
 20199  12EA  00A0               	movwf	??_colorInc
 20200  12EB  0820               	movf	??_colorInc,w
 20201  12EC  0141               	movlb	1	; select bank1
 20202  12ED  07A8               	addwf	(_manual^(0+128)+3),f
 20203  12EE  0008               	return
 20204  12EF                     l5650:	
 20205                           
 20206                           ;led.c: 237:             if(!(manual.white > 254))
 20207  12EF  0141               	movlb	1	; select bank1
 20208  12F0  0A25               	incf	_manual^(0+128),w
 20209  12F1  1903               	btfsc	3,2
 20210  12F2  0008               	return
 20211                           
 20212                           ;led.c: 238:             manual.white++;
 20213  12F3  3001               	movlw	1
 20214  12F4  0140               	movlb	0	; select bank0
 20215  12F5  00A0               	movwf	??_colorInc
 20216  12F6  0820               	movf	??_colorInc,w
 20217  12F7  0141               	movlb	1	; select bank1
 20218  12F8  07A5               	addwf	_manual^(0+128),f
 20219  12F9  0008               	return
 20220  12FA                     l5656:	
 20221  12FA  0822               	movf	colorInc@input,w
 20222  12FB  00A0               	movwf	??_colorInc
 20223  12FC  01A1               	clrf	??_colorInc+1
 20224                           
 20225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20226                           ; Switch size 1, requested type "simple"
 20227                           ; Number of cases is 1, Range of values is 0 to 0
 20228                           ; switch strategies available:
 20229                           ; Name         Instructions Cycles
 20230                           ; simple_byte            4     3 (average)
 20231                           ; direct_byte            8     6 (fixed)
 20232                           ; jumptable            260     6 (fixed)
 20233                           ;	Chosen strategy is simple_byte
 20234  12FD  0821               	movf	??_colorInc+1,w
 20235  12FE  3A00               	xorlw	0	; case 0
 20236  12FF  1903               	skipnz
 20237  1300  2B02               	goto	l9514
 20238  1301  2B10               	goto	l1504
 20239  1302                     l9514:	
 20240                           
 20241                           ; Switch size 1, requested type "simple"
 20242                           ; Number of cases is 4, Range of values is 0 to 3
 20243                           ; switch strategies available:
 20244                           ; Name         Instructions Cycles
 20245                           ; simple_byte           13     7 (average)
 20246                           ; direct_byte           14     6 (fixed)
 20247                           ; jumptable            260     6 (fixed)
 20248                           ;	Chosen strategy is simple_byte
 20249  1302  0820               	movf	??_colorInc,w
 20250  1303  3A00               	xorlw	0	; case 0
 20251  1304  1903               	skipnz
 20252  1305  2ACE               	goto	l5638
 20253  1306  3A01               	xorlw	1	; case 1
 20254  1307  1903               	skipnz
 20255  1308  2AD9               	goto	l5642
 20256  1309  3A03               	xorlw	3	; case 2
 20257  130A  1903               	skipnz
 20258  130B  2AE4               	goto	l5646
 20259  130C  3A01               	xorlw	1	; case 3
 20260  130D  1903               	skipnz
 20261  130E  2AEF               	goto	l5650
 20262  130F  2B10               	goto	l1504
 20263  1310                     l1504:	
 20264  1310  0008               	return
 20265  1311                     __end_of_colorInc:	
 20266                           
 20267                           	psect	text64
 20268  1222                     __ptext64:	
 20269 ;; *************** function _colorDec *****************
 20270 ;; Defined at:
 20271 ;;		line 245 in file "led.c"
 20272 ;; Parameters:    Size  Location     Type
 20273 ;;  input           1    wreg     enum E10884
 20274 ;; Auto vars:     Size  Location     Type
 20275 ;;  input           1    2[BANK0 ] enum E10884
 20276 ;; Return value:  Size  Location     Type
 20277 ;;                  1    wreg      void 
 20278 ;; Registers used:
 20279 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 20280 ;; Tracked objects:
 20281 ;;		On entry : 0/0
 20282 ;;		On exit  : 0/0
 20283 ;;		Unchanged: 0/0
 20284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20287 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20288 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20289 ;;Total ram usage:        3 bytes
 20290 ;; Hardware stack levels used:    1
 20291 ;; Hardware stack levels required when called:    4
 20292 ;; This function calls:
 20293 ;;		Nothing
 20294 ;; This function is called by:
 20295 ;;		_CONTROL_MANUAL
 20296 ;; This function uses a non-reentrant model
 20297 ;;
 20298                           
 20299                           
 20300                           ;psect for function _colorDec
 20301  1222                     _colorDec:	
 20302                           
 20303                           ;incstack = 0
 20304                           ; Regs used in _colorDec: [wreg-fsr0h+status,2+status,0]
 20305                           ;colorDec@input stored from wreg
 20306  1222  0140               	movlb	0	; select bank0
 20307  1223  00A2               	movwf	colorDec@input
 20308                           
 20309                           ;led.c: 247:     switch(input){
 20310  1224  2A41               	goto	l5684
 20311  1225                     l5666:	
 20312                           
 20313                           ;led.c: 250:             if(!(manual.red < 1))
 20314  1225  0141               	movlb	1	; select bank1
 20315  1226  0826               	movf	(_manual^(0+128)+1),w
 20316  1227  1903               	btfsc	3,2
 20317  1228  0008               	return
 20318                           
 20319                           ;led.c: 251:             manual.red--;
 20320  1229  3001               	movlw	1
 20321  122A  02A6               	subwf	(_manual^(0+128)+1),f
 20322  122B  0008               	return
 20323  122C                     l5670:	
 20324                           
 20325                           ;led.c: 255:             if(!(manual.green < 1))
 20326  122C  0141               	movlb	1	; select bank1
 20327  122D  0827               	movf	(_manual^(0+128)+2),w
 20328  122E  1903               	btfsc	3,2
 20329  122F  0008               	return
 20330                           
 20331                           ;led.c: 256:             manual.green--;
 20332  1230  3001               	movlw	1
 20333  1231  02A7               	subwf	(_manual^(0+128)+2),f
 20334  1232  0008               	return
 20335  1233                     l5674:	
 20336                           
 20337                           ;led.c: 260:             if(!(manual.blue < 1))
 20338  1233  0141               	movlb	1	; select bank1
 20339  1234  0828               	movf	(_manual^(0+128)+3),w
 20340  1235  1903               	btfsc	3,2
 20341  1236  0008               	return
 20342                           
 20343                           ;led.c: 261:             manual.blue--;
 20344  1237  3001               	movlw	1
 20345  1238  02A8               	subwf	(_manual^(0+128)+3),f
 20346  1239  0008               	return
 20347  123A                     l5678:	
 20348                           
 20349                           ;led.c: 265:             if(!(manual.white < 1))
 20350  123A  0141               	movlb	1	; select bank1
 20351  123B  0825               	movf	_manual^(0+128),w
 20352  123C  1903               	btfsc	3,2
 20353  123D  0008               	return
 20354                           
 20355                           ;led.c: 266:             manual.white--;
 20356  123E  3001               	movlw	1
 20357  123F  02A5               	subwf	_manual^(0+128),f
 20358  1240  0008               	return
 20359  1241                     l5684:	
 20360  1241  0822               	movf	colorDec@input,w
 20361  1242  00A0               	movwf	??_colorDec
 20362  1243  01A1               	clrf	??_colorDec+1
 20363                           
 20364                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20365                           ; Switch size 1, requested type "simple"
 20366                           ; Number of cases is 1, Range of values is 0 to 0
 20367                           ; switch strategies available:
 20368                           ; Name         Instructions Cycles
 20369                           ; simple_byte            4     3 (average)
 20370                           ; direct_byte            8     6 (fixed)
 20371                           ; jumptable            260     6 (fixed)
 20372                           ;	Chosen strategy is simple_byte
 20373  1244  0821               	movf	??_colorDec+1,w
 20374  1245  3A00               	xorlw	0	; case 0
 20375  1246  1903               	skipnz
 20376  1247  2A49               	goto	l9516
 20377  1248  2A57               	goto	l1517
 20378  1249                     l9516:	
 20379                           
 20380                           ; Switch size 1, requested type "simple"
 20381                           ; Number of cases is 4, Range of values is 0 to 3
 20382                           ; switch strategies available:
 20383                           ; Name         Instructions Cycles
 20384                           ; simple_byte           13     7 (average)
 20385                           ; direct_byte           14     6 (fixed)
 20386                           ; jumptable            260     6 (fixed)
 20387                           ;	Chosen strategy is simple_byte
 20388  1249  0820               	movf	??_colorDec,w
 20389  124A  3A00               	xorlw	0	; case 0
 20390  124B  1903               	skipnz
 20391  124C  2A25               	goto	l5666
 20392  124D  3A01               	xorlw	1	; case 1
 20393  124E  1903               	skipnz
 20394  124F  2A2C               	goto	l5670
 20395  1250  3A03               	xorlw	3	; case 2
 20396  1251  1903               	skipnz
 20397  1252  2A33               	goto	l5674
 20398  1253  3A01               	xorlw	1	; case 3
 20399  1254  1903               	skipnz
 20400  1255  2A3A               	goto	l5678
 20401  1256  2A57               	goto	l1517
 20402  1257                     l1517:	
 20403  1257  0008               	return
 20404  1258                     __end_of_colorDec:	
 20405                           
 20406                           	psect	text65
 20407  1767                     __ptext65:	
 20408 ;; *************** function _CONTROL_DMX *****************
 20409 ;; Defined at:
 20410 ;;		line 199 in file "controller.c"
 20411 ;; Parameters:    Size  Location     Type
 20412 ;;		None
 20413 ;; Auto vars:     Size  Location     Type
 20414 ;;		None
 20415 ;; Return value:  Size  Location     Type
 20416 ;;                  1    wreg      _Bool 
 20417 ;; Registers used:
 20418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20419 ;; Tracked objects:
 20420 ;;		On entry : 0/0
 20421 ;;		On exit  : 0/0
 20422 ;;		Unchanged: 0/0
 20423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20426 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20427 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20428 ;;Total ram usage:        2 bytes
 20429 ;; Hardware stack levels used:    1
 20430 ;; Hardware stack levels required when called:   10
 20431 ;; This function calls:
 20432 ;;		_BUTTONS_isHeld
 20433 ;;		_CLOCK_getTime
 20434 ;;		_address_dec
 20435 ;;		_address_inc
 20436 ;; This function is called by:
 20437 ;;		_CONTROLLER_task
 20438 ;; This function uses a non-reentrant model
 20439 ;;
 20440                           
 20441                           
 20442                           ;psect for function _CONTROL_DMX
 20443  1767                     _CONTROL_DMX:	
 20444                           
 20445                           ;controller.c: 201:     if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incInt
      +                          erval)){
 20446                           
 20447                           ;incstack = 0
 20448                           ; Regs used in _CONTROL_DMX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20449  1767  0141               	movlb	1	; select bank1
 20450  1768  083C               	movf	_up^(0+128),w
 20451  1769  319D  2527  3197   	fcall	_BUTTONS_isHeld
 20452  176C  3A00               	xorlw	0
 20453  176D  1903               	skipnz
 20454  176E  2FBD               	goto	l8446
 20455  176F  319C  2469  3197   	fcall	_CLOCK_getTime
 20456  1772  0141               	movlb	1	; select bank1
 20457  1773  082B               	movf	_lastIncTime^(0+128),w
 20458  1774  0140               	movlb	0	; select bank0
 20459  1775  0220               	subwf	?_CLOCK_getTime,w
 20460  1776  00B9               	movwf	??_CONTROL_DMX
 20461  1777  0141               	movlb	1	; select bank1
 20462  1778  082C               	movf	(_lastIncTime+1)^(0+128),w
 20463  1779  0140               	movlb	0	; select bank0
 20464  177A  3B21               	subwfb	?_CLOCK_getTime+1,w
 20465  177B  00BA               	movwf	??_CONTROL_DMX+1
 20466  177C  083A               	movf	??_CONTROL_DMX+1,w
 20467  177D  027D               	subwf	_incInterval+1,w
 20468  177E  1D03               	skipz
 20469  177F  2F82               	goto	u8455
 20470  1780  0839               	movf	??_CONTROL_DMX,w
 20471  1781  027C               	subwf	_incInterval,w
 20472  1782                     u8455:	
 20473  1782  1803               	skipnc
 20474  1783  2FBD               	goto	l8446
 20475                           
 20476                           ;controller.c: 202:         address_inc();
 20477  1784  319E  2642  3197   	fcall	_address_inc
 20478  1787  2FA0               	goto	L22
 20479  1788                     l8448:	
 20480                           ;controller.c: 204:         if(incInterval > 20){
 20481                           
 20482                           ;controller.c: 203:         lastIncTime = CLOCK_getTime();
 20483                           
 20484  1788  319C  2469  3197   	fcall	_CLOCK_getTime
 20485  178B  0141               	movlb	1	; select bank1
 20486  178C  082B               	movf	_lastIncTime^(0+128),w
 20487  178D  0140               	movlb	0	; select bank0
 20488  178E  0220               	subwf	?_CLOCK_getTime,w
 20489  178F  00B9               	movwf	??_CONTROL_DMX
 20490  1790  0141               	movlb	1	; select bank1
 20491  1791  082C               	movf	(_lastIncTime+1)^(0+128),w
 20492  1792  0140               	movlb	0	; select bank0
 20493  1793  3B21               	subwfb	?_CLOCK_getTime+1,w
 20494  1794  00BA               	movwf	??_CONTROL_DMX+1
 20495  1795  083A               	movf	??_CONTROL_DMX+1,w
 20496  1796  027D               	subwf	_incInterval+1,w
 20497  1797  1D03               	skipz
 20498  1798  2F9B               	goto	u8485
 20499  1799  0839               	movf	??_CONTROL_DMX,w
 20500  179A  027C               	subwf	_incInterval,w
 20501  179B                     u8485:	
 20502  179B  1803               	skipnc
 20503  179C  2FC5               	goto	l8462
 20504                           
 20505                           ;controller.c: 209:         address_dec();
 20506  179D  319E  2612  3197   	fcall	_address_dec
 20507  17A0                     L22:	
 20508                           
 20509                           ;controller.c: 210:         lastIncTime = CLOCK_getTime();
 20510  17A0  319C  2469  3197   	fcall	_CLOCK_getTime
 20511  17A3  0140               	movlb	0	; select bank0
 20512  17A4  0821               	movf	?_CLOCK_getTime+1,w
 20513  17A5  0141               	movlb	1	; select bank1
 20514  17A6  00AC               	movwf	(_lastIncTime+1)^(0+128)
 20515  17A7  0140               	movlb	0	; select bank0
 20516  17A8  0820               	movf	?_CLOCK_getTime,w
 20517  17A9  0141               	movlb	1	; select bank1
 20518  17AA  00AB               	movwf	_lastIncTime^(0+128)
 20519                           
 20520                           ;controller.c: 211:         if(incInterval > 20){
 20521  17AB  087D               	movf	_incInterval+1,w
 20522  17AC  3A80               	xorlw	128
 20523  17AD  0140               	movlb	0	; select bank0
 20524  17AE  00B9               	movwf	??_CONTROL_DMX
 20525  17AF  3080               	movlw	128
 20526  17B0  0239               	subwf	??_CONTROL_DMX,w
 20527  17B1  1D03               	skipz
 20528  17B2  2FB5               	goto	u8495
 20529  17B3  3015               	movlw	21
 20530  17B4  027C               	subwf	_incInterval,w
 20531  17B5                     u8495:	
 20532  17B5  1C03               	skipc
 20533  17B6  2FBB               	goto	l1102
 20534                           
 20535                           ;controller.c: 205:             incInterval-=1;
 20536  17B7  30FF               	movlw	255
 20537  17B8  07FC               	addwf	_incInterval,f
 20538  17B9  30FF               	movlw	255
 20539  17BA  3DFD               	addwfc	_incInterval+1,f
 20540  17BB                     l1102:	
 20541                           ;controller.c: 206:         }
 20542                           
 20543                           
 20544                           ;controller.c: 207:         return 1;
 20545  17BB  3001               	movlw	1
 20546  17BC  0008               	return
 20547  17BD                     l8446:	
 20548  17BD  0141               	movlb	1	; select bank1
 20549  17BE  083B               	movf	_down^(0+128),w
 20550  17BF  319D  2527  3197   	fcall	_BUTTONS_isHeld
 20551  17C2  3A00               	xorlw	0
 20552  17C3  1D03               	btfss	3,2
 20553  17C4  2F88               	goto	l8448
 20554  17C5                     l8462:	
 20555  17C5  0141               	movlb	1	; select bank1
 20556  17C6  083A               	movf	_enter^(0+128),w
 20557  17C7  319D  2527  3197   	fcall	_BUTTONS_isHeld
 20558  17CA  3A00               	xorlw	0
 20559  17CB  1903               	skipnz
 20560  17CC  2FD4               	goto	l8470
 20561                           
 20562                           ;controller.c: 216:         address = 1;
 20563  17CD  3001               	movlw	1
 20564  17CE  0141               	movlb	1	; select bank1
 20565  17CF  00EA               	movwf	_address^(0+128)
 20566  17D0  3000               	movlw	0
 20567  17D1  00EB               	movwf	(_address^(0+128)+1)
 20568                           
 20569                           ;controller.c: 217:         return 1;
 20570  17D2  3001               	movlw	1
 20571  17D3  0008               	return
 20572  17D4                     l8470:	
 20573  17D4  0141               	movlb	1	; select bank1
 20574  17D5  0835               	movf	_upState^(0+128),w
 20575  17D6  1903               	btfsc	3,2
 20576  17D7  2FDC               	goto	l8480
 20577                           
 20578                           ;controller.c: 219:         address_inc();
 20579  17D8  319E  2642  3197   	fcall	_address_inc
 20580  17DB  2FBB               	goto	l1102
 20581  17DC                     l8480:	
 20582  17DC  0834               	movf	_downState^(0+128),w
 20583  17DD  1903               	btfsc	3,2
 20584  17DE  2FE3               	goto	l8490
 20585                           
 20586                           ;controller.c: 223:         address_dec();
 20587  17DF  319E  2612  3197   	fcall	_address_dec
 20588  17E2  2FBB               	goto	l1102
 20589  17E3                     l8490:	
 20590  17E3  0832               	movf	_enterState^(0+128),w
 20591  17E4  1D03               	btfss	3,2
 20592  17E5  2FBB               	goto	l1102
 20593  17E6  0835               	movf	_upState^(0+128),w
 20594  17E7  1D03               	btfss	3,2
 20595  17E8  0834               	movf	_downState^(0+128),w
 20596  17E9  1D03               	btfss	3,2
 20597  17EA  2FFE               	goto	l8508
 20598  17EB  083B               	movf	_down^(0+128),w
 20599  17EC  319D  2527  3197   	fcall	_BUTTONS_isHeld
 20600  17EF  3A00               	xorlw	0
 20601  17F0  1D03               	skipz
 20602  17F1  2FFE               	goto	l8508
 20603  17F2  0141               	movlb	1	; select bank1
 20604  17F3  083C               	movf	_up^(0+128),w
 20605  17F4  319D  2527  3197   	fcall	_BUTTONS_isHeld
 20606  17F7  3A00               	xorlw	0
 20607  17F8  1D03               	skipz
 20608  17F9  2FFE               	goto	l8508
 20609                           
 20610                           ;controller.c: 228:         incInterval = 100;
 20611  17FA  3064               	movlw	100
 20612  17FB  00FC               	movwf	_incInterval
 20613  17FC  3000               	movlw	0
 20614  17FD  00FD               	movwf	_incInterval+1
 20615  17FE                     l8508:	
 20616                           ;controller.c: 229:     } else {
 20617                           
 20618                           
 20619                           ;controller.c: 230:         return 0;
 20620  17FE  3000               	movlw	0
 20621  17FF  0008               	return
 20622  1800                     __end_of_CONTROL_DMX:	
 20623                           
 20624                           	psect	text66
 20625  1E42                     __ptext66:	
 20626 ;; *************** function _address_inc *****************
 20627 ;; Defined at:
 20628 ;;		line 29 in file "dmx.c"
 20629 ;; Parameters:    Size  Location     Type
 20630 ;;		None
 20631 ;; Auto vars:     Size  Location     Type
 20632 ;;		None
 20633 ;; Return value:  Size  Location     Type
 20634 ;;                  1    wreg      void 
 20635 ;; Registers used:
 20636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20637 ;; Tracked objects:
 20638 ;;		On entry : 0/0
 20639 ;;		On exit  : 0/0
 20640 ;;		Unchanged: 0/0
 20641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20646 ;;Total ram usage:        0 bytes
 20647 ;; Hardware stack levels used:    1
 20648 ;; Hardware stack levels required when called:    9
 20649 ;; This function calls:
 20650 ;;		_TM1650_fastPrintNum
 20651 ;; This function is called by:
 20652 ;;		_CONTROL_DMX
 20653 ;; This function uses a non-reentrant model
 20654 ;;
 20655                           
 20656                           
 20657                           ;psect for function _address_inc
 20658  1E42                     _address_inc:	
 20659                           
 20660                           ;dmx.c: 31:     if(address == 512)
 20661                           
 20662                           ;incstack = 0
 20663                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20664  1E42  3002               	movlw	2
 20665  1E43  0141               	movlb	1	; select bank1
 20666  1E44  066B               	xorwf	(_address+1)^(0+128),w
 20667  1E45  046A               	iorwf	_address^(0+128),w
 20668  1E46  1D03               	btfss	3,2
 20669  1E47  2E4D               	goto	l8154
 20670                           
 20671                           ;dmx.c: 32:         address = 1;
 20672  1E48  3001               	movlw	1
 20673  1E49  00EA               	movwf	_address^(0+128)
 20674  1E4A  3000               	movlw	0
 20675  1E4B  00EB               	movwf	(_address^(0+128)+1)
 20676  1E4C  2E51               	goto	l8156
 20677  1E4D                     l8154:	
 20678                           
 20679                           ;dmx.c: 34:         address++;
 20680  1E4D  3001               	movlw	1
 20681  1E4E  07EA               	addwf	_address^(0+128),f
 20682  1E4F  3000               	movlw	0
 20683  1E50  3DEB               	addwfc	(_address+1)^(0+128),f
 20684  1E51                     l8156:	
 20685                           
 20686                           ;dmx.c: 37:     TM1650_fastPrintNum(address);
 20687  1E51  086B               	movf	(_address+1)^(0+128),w
 20688  1E52  0140               	movlb	0	; select bank0
 20689  1E53  00B7               	movwf	TM1650_fastPrintNum@num+1
 20690  1E54  0141               	movlb	1	; select bank1
 20691  1E55  086A               	movf	_address^(0+128),w
 20692  1E56  0140               	movlb	0	; select bank0
 20693  1E57  00B6               	movwf	TM1650_fastPrintNum@num
 20694  1E58  318A  2287         	fcall	_TM1650_fastPrintNum
 20695  1E5A  0008               	return
 20696  1E5B                     __end_of_address_inc:	
 20697                           
 20698                           	psect	text67
 20699  1E12                     __ptext67:	
 20700 ;; *************** function _address_dec *****************
 20701 ;; Defined at:
 20702 ;;		line 43 in file "dmx.c"
 20703 ;; Parameters:    Size  Location     Type
 20704 ;;		None
 20705 ;; Auto vars:     Size  Location     Type
 20706 ;;		None
 20707 ;; Return value:  Size  Location     Type
 20708 ;;                  1    wreg      void 
 20709 ;; Registers used:
 20710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20711 ;; Tracked objects:
 20712 ;;		On entry : 0/0
 20713 ;;		On exit  : 0/0
 20714 ;;		Unchanged: 0/0
 20715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20720 ;;Total ram usage:        0 bytes
 20721 ;; Hardware stack levels used:    1
 20722 ;; Hardware stack levels required when called:    9
 20723 ;; This function calls:
 20724 ;;		_TM1650_fastPrintNum
 20725 ;; This function is called by:
 20726 ;;		_CONTROL_DMX
 20727 ;; This function uses a non-reentrant model
 20728 ;;
 20729                           
 20730                           
 20731                           ;psect for function _address_dec
 20732  1E12                     _address_dec:	
 20733                           
 20734                           ;dmx.c: 45:     if(address == 1)
 20735                           
 20736                           ;incstack = 0
 20737                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20738  1E12  0141               	movlb	1	; select bank1
 20739  1E13  036A               	decf	_address^(0+128),w
 20740  1E14  046B               	iorwf	(_address+1)^(0+128),w
 20741  1E15  1D03               	btfss	3,2
 20742  1E16  2E1C               	goto	l8162
 20743                           
 20744                           ;dmx.c: 46:         address = 512;
 20745  1E17  3000               	movlw	0
 20746  1E18  00EA               	movwf	_address^(0+128)
 20747  1E19  3002               	movlw	2
 20748  1E1A  00EB               	movwf	(_address^(0+128)+1)
 20749  1E1B  2E20               	goto	l8164
 20750  1E1C                     l8162:	
 20751                           
 20752                           ;dmx.c: 48:         address--;
 20753  1E1C  3001               	movlw	1
 20754  1E1D  02EA               	subwf	_address^(0+128),f
 20755  1E1E  3000               	movlw	0
 20756  1E1F  3BEB               	subwfb	(_address+1)^(0+128),f
 20757  1E20                     l8164:	
 20758                           
 20759                           ;dmx.c: 51:     TM1650_fastPrintNum(address);
 20760  1E20  086B               	movf	(_address+1)^(0+128),w
 20761  1E21  0140               	movlb	0	; select bank0
 20762  1E22  00B7               	movwf	TM1650_fastPrintNum@num+1
 20763  1E23  0141               	movlb	1	; select bank1
 20764  1E24  086A               	movf	_address^(0+128),w
 20765  1E25  0140               	movlb	0	; select bank0
 20766  1E26  00B6               	movwf	TM1650_fastPrintNum@num
 20767  1E27  318A  2287         	fcall	_TM1650_fastPrintNum
 20768  1E29  0008               	return
 20769  1E2A                     __end_of_address_dec:	
 20770                           
 20771                           	psect	text68
 20772  0A87                     __ptext68:	
 20773 ;; *************** function _TM1650_fastPrintNum *****************
 20774 ;; Defined at:
 20775 ;;		line 101 in file "tm1650.c"
 20776 ;; Parameters:    Size  Location     Type
 20777 ;;  num             2   22[BANK0 ] unsigned short 
 20778 ;; Auto vars:     Size  Location     Type
 20779 ;;		None
 20780 ;; Return value:  Size  Location     Type
 20781 ;;                  1    wreg      void 
 20782 ;; Registers used:
 20783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20784 ;; Tracked objects:
 20785 ;;		On entry : 0/0
 20786 ;;		On exit  : 0/0
 20787 ;;		Unchanged: 0/0
 20788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20789 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20791 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20792 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20793 ;;Total ram usage:        3 bytes
 20794 ;; Hardware stack levels used:    1
 20795 ;; Hardware stack levels required when called:    8
 20796 ;; This function calls:
 20797 ;;		___lwdiv
 20798 ;;		___lwmod
 20799 ;;		_writeData
 20800 ;; This function is called by:
 20801 ;;		_CONTROLLER_task
 20802 ;;		_DMX_init
 20803 ;;		_address_inc
 20804 ;;		_address_dec
 20805 ;; This function uses a non-reentrant model
 20806 ;;
 20807                           
 20808                           
 20809                           ;psect for function _TM1650_fastPrintNum
 20810  0A87                     _TM1650_fastPrintNum:	
 20811                           
 20812                           ;tm1650.c: 103:     if(num > 9999){
 20813                           
 20814                           ;incstack = 0
 20815                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20816  0A87  3027               	movlw	39
 20817  0A88  0140               	movlb	0	; select bank0
 20818  0A89  0237               	subwf	TM1650_fastPrintNum@num+1,w
 20819  0A8A  3010               	movlw	16
 20820  0A8B  1903               	skipnz
 20821  0A8C  0236               	subwf	TM1650_fastPrintNum@num,w
 20822  0A8D  1C03               	skipc
 20823  0A8E  2AB2               	goto	l8100
 20824                           
 20825                           ;tm1650.c: 104:         writeData(0x34, 0x79);
 20826  0A8F  3079               	movlw	121
 20827  0A90  00B8               	movwf	??_TM1650_fastPrintNum
 20828  0A91  0838               	movf	??_TM1650_fastPrintNum,w
 20829  0A92  00B0               	movwf	writeData@data
 20830  0A93  3034               	movlw	52
 20831  0A94  3190  2000  318A   	fcall	_writeData
 20832                           
 20833                           ;tm1650.c: 105:         writeData(0x35, 0x79);
 20834  0A97  3079               	movlw	121
 20835  0A98  0140               	movlb	0	; select bank0
 20836  0A99  00B8               	movwf	??_TM1650_fastPrintNum
 20837  0A9A  0838               	movf	??_TM1650_fastPrintNum,w
 20838  0A9B  00B0               	movwf	writeData@data
 20839  0A9C  3035               	movlw	53
 20840  0A9D  3190  2000  318A   	fcall	_writeData
 20841                           
 20842                           ;tm1650.c: 106:         writeData(0x36, 0x79);
 20843  0AA0  3079               	movlw	121
 20844  0AA1  0140               	movlb	0	; select bank0
 20845  0AA2  00B8               	movwf	??_TM1650_fastPrintNum
 20846  0AA3  0838               	movf	??_TM1650_fastPrintNum,w
 20847  0AA4  00B0               	movwf	writeData@data
 20848  0AA5  3036               	movlw	54
 20849  0AA6  3190  2000  318A   	fcall	_writeData
 20850                           
 20851                           ;tm1650.c: 107:         writeData(0x37, 0x79);
 20852  0AA9  3079               	movlw	121
 20853  0AAA  0140               	movlb	0	; select bank0
 20854  0AAB  00B8               	movwf	??_TM1650_fastPrintNum
 20855  0AAC  0838               	movf	??_TM1650_fastPrintNum,w
 20856  0AAD  00B0               	movwf	writeData@data
 20857  0AAE  3037               	movlw	55
 20858  0AAF  3190  2000         	fcall	_writeData
 20859  0AB1  0008               	return
 20860  0AB2                     l8100:	
 20861                           
 20862                           ;tm1650.c: 111:     writeData(0x37, charTable[(num % 10) + 16]);
 20863  0AB2  300A               	movlw	10
 20864  0AB3  00A8               	movwf	___lwmod@divisor
 20865  0AB4  3000               	movlw	0
 20866  0AB5  00A9               	movwf	___lwmod@divisor+1
 20867  0AB6  0837               	movf	TM1650_fastPrintNum@num+1,w
 20868  0AB7  00AB               	movwf	___lwmod@dividend+1
 20869  0AB8  0836               	movf	TM1650_fastPrintNum@num,w
 20870  0AB9  00AA               	movwf	___lwmod@dividend
 20871  0ABA  3190  2095  318A   	fcall	___lwmod
 20872  0ABD  0140               	movlb	0	; select bank0
 20873  0ABE  0829               	movf	?___lwmod+1,w
 20874  0ABF  0085               	movwf	5
 20875  0AC0  0828               	movf	?___lwmod,w
 20876  0AC1  0084               	movwf	4
 20877  0AC2  3010               	movlw	low ((_charTable+16)| (0+32768))
 20878  0AC3  0784               	addwf	4,f
 20879  0AC4  3098               	movlw	high ((_charTable+16)| (0+32768))
 20880  0AC5  3D85               	addwfc	5,f
 20881  0AC6  0800               	movf	0,w	;code access
 20882  0AC7  00B8               	movwf	??_TM1650_fastPrintNum
 20883  0AC8  0838               	movf	??_TM1650_fastPrintNum,w
 20884  0AC9  00B0               	movwf	writeData@data
 20885  0ACA  3037               	movlw	55
 20886  0ACB  3190  2000  318A   	fcall	_writeData
 20887                           
 20888                           ;tm1650.c: 112:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 20889  0ACE  300A               	movlw	10
 20890  0ACF  0140               	movlb	0	; select bank0
 20891  0AD0  00A8               	movwf	___lwmod@divisor
 20892  0AD1  3000               	movlw	0
 20893  0AD2  00A9               	movwf	___lwmod@divisor+1
 20894  0AD3  300A               	movlw	10
 20895  0AD4  00A0               	movwf	___lwdiv@divisor
 20896  0AD5  3000               	movlw	0
 20897  0AD6  00A1               	movwf	___lwdiv@divisor+1
 20898  0AD7  0837               	movf	TM1650_fastPrintNum@num+1,w
 20899  0AD8  00A3               	movwf	___lwdiv@dividend+1
 20900  0AD9  0836               	movf	TM1650_fastPrintNum@num,w
 20901  0ADA  00A2               	movwf	___lwdiv@dividend
 20902  0ADB  3191  21ED  318A   	fcall	___lwdiv
 20903  0ADE  0140               	movlb	0	; select bank0
 20904  0ADF  0821               	movf	?___lwdiv+1,w
 20905  0AE0  00AB               	movwf	___lwmod@dividend+1
 20906  0AE1  0820               	movf	?___lwdiv,w
 20907  0AE2  00AA               	movwf	___lwmod@dividend
 20908  0AE3  3190  2095  318A   	fcall	___lwmod
 20909  0AE6  0140               	movlb	0	; select bank0
 20910  0AE7  0829               	movf	?___lwmod+1,w
 20911  0AE8  0085               	movwf	5
 20912  0AE9  0828               	movf	?___lwmod,w
 20913  0AEA  0084               	movwf	4
 20914  0AEB  3010               	movlw	low ((_charTable+16)| (0+32768))
 20915  0AEC  0784               	addwf	4,f
 20916  0AED  3098               	movlw	high ((_charTable+16)| (0+32768))
 20917  0AEE  3D85               	addwfc	5,f
 20918  0AEF  0800               	movf	0,w	;code access
 20919  0AF0  00B8               	movwf	??_TM1650_fastPrintNum
 20920  0AF1  0838               	movf	??_TM1650_fastPrintNum,w
 20921  0AF2  00B0               	movwf	writeData@data
 20922  0AF3  3036               	movlw	54
 20923  0AF4  3190  2000  318A   	fcall	_writeData
 20924                           
 20925                           ;tm1650.c: 113:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 20926  0AF7  300A               	movlw	10
 20927  0AF8  0140               	movlb	0	; select bank0
 20928  0AF9  00A8               	movwf	___lwmod@divisor
 20929  0AFA  3000               	movlw	0
 20930  0AFB  00A9               	movwf	___lwmod@divisor+1
 20931  0AFC  3064               	movlw	100
 20932  0AFD  00A0               	movwf	___lwdiv@divisor
 20933  0AFE  3000               	movlw	0
 20934  0AFF  00A1               	movwf	___lwdiv@divisor+1
 20935  0B00  0837               	movf	TM1650_fastPrintNum@num+1,w
 20936  0B01  00A3               	movwf	___lwdiv@dividend+1
 20937  0B02  0836               	movf	TM1650_fastPrintNum@num,w
 20938  0B03  00A2               	movwf	___lwdiv@dividend
 20939  0B04  3191  21ED  318A   	fcall	___lwdiv
 20940  0B07  0140               	movlb	0	; select bank0
 20941  0B08  0821               	movf	?___lwdiv+1,w
 20942  0B09  00AB               	movwf	___lwmod@dividend+1
 20943  0B0A  0820               	movf	?___lwdiv,w
 20944  0B0B  00AA               	movwf	___lwmod@dividend
 20945  0B0C  3190  2095  318A   	fcall	___lwmod
 20946  0B0F  0140               	movlb	0	; select bank0
 20947  0B10  0829               	movf	?___lwmod+1,w
 20948  0B11  0085               	movwf	5
 20949  0B12  0828               	movf	?___lwmod,w
 20950  0B13  0084               	movwf	4
 20951  0B14  3010               	movlw	low ((_charTable+16)| (0+32768))
 20952  0B15  0784               	addwf	4,f
 20953  0B16  3098               	movlw	high ((_charTable+16)| (0+32768))
 20954  0B17  3D85               	addwfc	5,f
 20955  0B18  0800               	movf	0,w	;code access
 20956  0B19  00B8               	movwf	??_TM1650_fastPrintNum
 20957  0B1A  0838               	movf	??_TM1650_fastPrintNum,w
 20958  0B1B  00B0               	movwf	writeData@data
 20959  0B1C  3035               	movlw	53
 20960  0B1D  3190  2000  318A   	fcall	_writeData
 20961                           
 20962                           ;tm1650.c: 114:     writeData(0x34, charTable[( (num/1000) % 10) + 16]);
 20963  0B20  300A               	movlw	10
 20964  0B21  0140               	movlb	0	; select bank0
 20965  0B22  00A8               	movwf	___lwmod@divisor
 20966  0B23  3000               	movlw	0
 20967  0B24  00A9               	movwf	___lwmod@divisor+1
 20968  0B25  30E8               	movlw	232
 20969  0B26  00A0               	movwf	___lwdiv@divisor
 20970  0B27  3003               	movlw	3
 20971  0B28  00A1               	movwf	___lwdiv@divisor+1
 20972  0B29  0837               	movf	TM1650_fastPrintNum@num+1,w
 20973  0B2A  00A3               	movwf	___lwdiv@dividend+1
 20974  0B2B  0836               	movf	TM1650_fastPrintNum@num,w
 20975  0B2C  00A2               	movwf	___lwdiv@dividend
 20976  0B2D  3191  21ED  318A   	fcall	___lwdiv
 20977  0B30  0140               	movlb	0	; select bank0
 20978  0B31  0821               	movf	?___lwdiv+1,w
 20979  0B32  00AB               	movwf	___lwmod@dividend+1
 20980  0B33  0820               	movf	?___lwdiv,w
 20981  0B34  00AA               	movwf	___lwmod@dividend
 20982  0B35  3190  2095  318A   	fcall	___lwmod
 20983  0B38  0140               	movlb	0	; select bank0
 20984  0B39  0829               	movf	?___lwmod+1,w
 20985  0B3A  0085               	movwf	5
 20986  0B3B  0828               	movf	?___lwmod,w
 20987  0B3C  0084               	movwf	4
 20988  0B3D  3010               	movlw	low ((_charTable+16)| (0+32768))
 20989  0B3E  0784               	addwf	4,f
 20990  0B3F  3098               	movlw	high ((_charTable+16)| (0+32768))
 20991  0B40  3D85               	addwfc	5,f
 20992  0B41  0800               	movf	0,w	;code access
 20993  0B42  00B8               	movwf	??_TM1650_fastPrintNum
 20994  0B43  0838               	movf	??_TM1650_fastPrintNum,w
 20995  0B44  00B0               	movwf	writeData@data
 20996  0B45  3034               	movlw	52
 20997  0B46  3190  2000         	fcall	_writeData
 20998  0B48  0008               	return
 20999  0B49                     __end_of_TM1650_fastPrintNum:	
 21000                           
 21001                           	psect	text69
 21002  1000                     __ptext69:	
 21003 ;; *************** function _writeData *****************
 21004 ;; Defined at:
 21005 ;;		line 31 in file "tm1650.c"
 21006 ;; Parameters:    Size  Location     Type
 21007 ;;  address         1    wreg     unsigned char 
 21008 ;;  data            1   16[BANK0 ] unsigned char 
 21009 ;; Auto vars:     Size  Location     Type
 21010 ;;  address         1   20[BANK0 ] unsigned char 
 21011 ;;  status          1   21[BANK0 ] enum E11376
 21012 ;; Return value:  Size  Location     Type
 21013 ;;                  1    wreg      void 
 21014 ;; Registers used:
 21015 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21016 ;; Tracked objects:
 21017 ;;		On entry : 0/0
 21018 ;;		On exit  : 0/0
 21019 ;;		Unchanged: 0/0
 21020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21021 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21022 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21023 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21024 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21025 ;;Total ram usage:        6 bytes
 21026 ;; Hardware stack levels used:    1
 21027 ;; Hardware stack levels required when called:    7
 21028 ;; This function calls:
 21029 ;;		_I2C1_MasterWrite
 21030 ;; This function is called by:
 21031 ;;		_TM1650_enable
 21032 ;;		_TM1650_setDigit
 21033 ;;		_TM1650_fastPrintNum
 21034 ;;		_TM1650_fastPrintNum_3digit
 21035 ;;		_TM1650_fastPrintNum_2digit
 21036 ;;		_TM1650_brightness
 21037 ;;		_TM1650_fastPrintNum_1digit
 21038 ;; This function uses a non-reentrant model
 21039 ;;
 21040                           
 21041                           
 21042                           ;psect for function _writeData
 21043  1000                     _writeData:	
 21044                           
 21045                           ;incstack = 0
 21046                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21047                           ;writeData@address stored from wreg
 21048  1000  0140               	movlb	0	; select bank0
 21049  1001  00B4               	movwf	writeData@address
 21050                           
 21051                           ;tm1650.c: 33:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 21052  1002  3002               	movlw	2
 21053  1003  00B1               	movwf	??_writeData
 21054  1004  0831               	movf	??_writeData,w
 21055  1005  00B5               	movwf	writeData@status
 21056                           
 21057                           ;tm1650.c: 34:     I2C1_MasterWrite(&data, 1, address, &status);
 21058  1006  01A7               	clrf	I2C1_MasterWrite@length
 21059  1007  0AA7               	incf	I2C1_MasterWrite@length,f
 21060  1008  0834               	movf	writeData@address,w
 21061  1009  00B1               	movwf	??_writeData
 21062  100A  01B2               	clrf	??_writeData+1
 21063  100B  0831               	movf	??_writeData,w
 21064  100C  00A8               	movwf	I2C1_MasterWrite@address
 21065  100D  0832               	movf	??_writeData+1,w
 21066  100E  00A9               	movwf	I2C1_MasterWrite@address+1
 21067  100F  3035               	movlw	(low (writeData@status| 0))& (0+255)
 21068  1010  00B3               	movwf	??_writeData+2
 21069  1011  0833               	movf	??_writeData+2,w
 21070  1012  00AA               	movwf	I2C1_MasterWrite@pflag
 21071  1013  3030               	movlw	(low (writeData@data| 0))& (0+255)
 21072  1014  3190  206B  3190   	fcall	_I2C1_MasterWrite
 21073  1017                     l7538:	
 21074                           ;tm1650.c: 36:     while( status == I2C1_MESSAGE_PENDING );
 21075                           
 21076  1017  3002               	movlw	2
 21077  1018  0140               	movlb	0	; select bank0
 21078  1019  0635               	xorwf	writeData@status,w
 21079  101A  1D03               	btfss	3,2
 21080  101B  0008               	return
 21081  101C  2817               	goto	l7538
 21082  101D                     __end_of_writeData:	
 21083                           
 21084                           	psect	text70
 21085  106B                     __ptext70:	
 21086 ;; *************** function _I2C1_MasterWrite *****************
 21087 ;; Defined at:
 21088 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 21089 ;; Parameters:    Size  Location     Type
 21090 ;;  pdata           1    wreg     PTR unsigned char 
 21091 ;;		 -> writeData@data(1), 
 21092 ;;  length          1    7[BANK0 ] unsigned char 
 21093 ;;  address         2    8[BANK0 ] unsigned short 
 21094 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 21095 ;;		 -> writeData@status(1), 
 21096 ;; Auto vars:     Size  Location     Type
 21097 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 21098 ;;		 -> writeData@data(1), 
 21099 ;; Return value:  Size  Location     Type
 21100 ;;                  1    wreg      void 
 21101 ;; Registers used:
 21102 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21103 ;; Tracked objects:
 21104 ;;		On entry : 0/0
 21105 ;;		On exit  : 0/0
 21106 ;;		Unchanged: 0/0
 21107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21108 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21109 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21110 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21111 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21112 ;;Total ram usage:        7 bytes
 21113 ;; Hardware stack levels used:    1
 21114 ;; Hardware stack levels required when called:    6
 21115 ;; This function calls:
 21116 ;;		_I2C1_MasterTRBInsert
 21117 ;;		_I2C1_MasterWriteTRBBuild
 21118 ;; This function is called by:
 21119 ;;		_writeData
 21120 ;; This function uses a non-reentrant model
 21121 ;;
 21122                           
 21123                           
 21124                           ;psect for function _I2C1_MasterWrite
 21125  106B                     _I2C1_MasterWrite:	
 21126                           
 21127                           ;incstack = 0
 21128                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21129                           ;I2C1_MasterWrite@pdata stored from wreg
 21130  106B  0140               	movlb	0	; select bank0
 21131  106C  00AD               	movwf	I2C1_MasterWrite@pdata
 21132                           
 21133                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 21134  106D  0141               	movlb	1	; select bank1
 21135  106E  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 21136  106F  288E               	goto	l7532
 21137                           
 21138                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 21139  1070  0140               	movlb	0	; select bank0
 21140  1071  082D               	movf	I2C1_MasterWrite@pdata,w
 21141  1072  00AB               	movwf	??_I2C1_MasterWrite
 21142  1073  082B               	movf	??_I2C1_MasterWrite,w
 21143  1074  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 21144  1075  0827               	movf	I2C1_MasterWrite@length,w
 21145  1076  00AC               	movwf	??_I2C1_MasterWrite+1
 21146  1077  082C               	movf	??_I2C1_MasterWrite+1,w
 21147  1078  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 21148  1079  0829               	movf	I2C1_MasterWrite@address+1,w
 21149  107A  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 21150  107B  0828               	movf	I2C1_MasterWrite@address,w
 21151  107C  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 21152  107D  3054               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 21153  107E  319F  2749  3190   	fcall	_I2C1_MasterWriteTRBBuild
 21154                           
 21155                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 21156  1081  3054               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 21157  1082  0140               	movlb	0	; select bank0
 21158  1083  00AB               	movwf	??_I2C1_MasterWrite
 21159  1084  082B               	movf	??_I2C1_MasterWrite,w
 21160  1085  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 21161  1086  082A               	movf	I2C1_MasterWrite@pflag,w
 21162  1087  00AC               	movwf	??_I2C1_MasterWrite+1
 21163  1088  082C               	movf	??_I2C1_MasterWrite+1,w
 21164  1089  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 21165  108A  3001               	movlw	1
 21166  108B  3194  244A         	fcall	_I2C1_MasterTRBInsert
 21167                           
 21168                           ;mcc_generated_files/i2c1.c: 613:     }
 21169  108D  0008               	return
 21170  108E                     l7532:	
 21171                           
 21172                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 21173  108E  0140               	movlb	0	; select bank0
 21174  108F  082A               	movf	I2C1_MasterWrite@pflag,w
 21175  1090  0086               	movwf	6
 21176  1091  0187               	clrf	7
 21177  1092  0181               	clrf	1
 21178  1093  0A81               	incf	1,f
 21179  1094  0008               	return
 21180  1095                     __end_of_I2C1_MasterWrite:	
 21181                           
 21182                           	psect	text71
 21183  1F49                     __ptext71:	
 21184 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 21185 ;; Defined at:
 21186 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 21187 ;; Parameters:    Size  Location     Type
 21188 ;;  ptrb            1    wreg     PTR struct .
 21189 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 21190 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 21191 ;;		 -> writeData@data(1), 
 21192 ;;  length          1    1[BANK0 ] unsigned char 
 21193 ;;  address         2    2[BANK0 ] unsigned short 
 21194 ;; Auto vars:     Size  Location     Type
 21195 ;;  ptrb            1    6[BANK0 ] PTR struct .
 21196 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 21197 ;; Return value:  Size  Location     Type
 21198 ;;                  1    wreg      void 
 21199 ;; Registers used:
 21200 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21201 ;; Tracked objects:
 21202 ;;		On entry : 0/0
 21203 ;;		On exit  : 0/0
 21204 ;;		Unchanged: 0/0
 21205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21206 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21207 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21208 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21209 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21210 ;;Total ram usage:        7 bytes
 21211 ;; Hardware stack levels used:    1
 21212 ;; Hardware stack levels required when called:    4
 21213 ;; This function calls:
 21214 ;;		Nothing
 21215 ;; This function is called by:
 21216 ;;		_I2C1_MasterWrite
 21217 ;; This function uses a non-reentrant model
 21218 ;;
 21219                           
 21220                           
 21221                           ;psect for function _I2C1_MasterWriteTRBBuild
 21222  1F49                     _I2C1_MasterWriteTRBBuild:	
 21223                           
 21224                           ;incstack = 0
 21225                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 21226                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 21227  1F49  0140               	movlb	0	; select bank0
 21228  1F4A  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 21229                           
 21230                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 21231  1F4B  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 21232  1F4C  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 21233  1F4D  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 21234  1F4E  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 21235  1F4F  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 21236  1F50  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 21237  1F51  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 21238  1F52  0086               	movwf	6
 21239  1F53  3001               	movlw	1	; select bank2/3
 21240  1F54  0087               	movwf	7
 21241  1F55  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 21242  1F56  3FC0               	movwi [0]fsr1
 21243  1F57  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 21244  1F58  3FC1               	movwi [1]fsr1
 21245                           
 21246                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 21247  1F59  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 21248  1F5A  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 21249  1F5B  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 21250  1F5C  3E02               	addlw	2
 21251  1F5D  0086               	movwf	6
 21252  1F5E  3001               	movlw	1	; select bank2/3
 21253  1F5F  0087               	movwf	7
 21254  1F60  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 21255  1F61  0081               	movwf	1
 21256                           
 21257                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 21258  1F62  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 21259  1F63  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 21260  1F64  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 21261  1F65  3E03               	addlw	3
 21262  1F66  0086               	movwf	6
 21263  1F67  3001               	movlw	1	; select bank2/3
 21264  1F68  0087               	movwf	7
 21265  1F69  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 21266  1F6A  0081               	movwf	1
 21267  1F6B  0008               	return
 21268  1F6C                     __end_of_I2C1_MasterWriteTRBBuild:	
 21269                           
 21270                           	psect	text72
 21271  144A                     __ptext72:	
 21272 ;; *************** function _I2C1_MasterTRBInsert *****************
 21273 ;; Defined at:
 21274 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 21275 ;; Parameters:    Size  Location     Type
 21276 ;;  count           1    wreg     unsigned char 
 21277 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 21278 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 21279 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 21280 ;;		 -> writeData@status(1), 
 21281 ;; Auto vars:     Size  Location     Type
 21282 ;;  count           1    3[BANK0 ] unsigned char 
 21283 ;; Return value:  Size  Location     Type
 21284 ;;                  1    wreg      void 
 21285 ;; Registers used:
 21286 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21287 ;; Tracked objects:
 21288 ;;		On entry : 0/0
 21289 ;;		On exit  : 0/0
 21290 ;;		Unchanged: 0/0
 21291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21292 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21293 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21294 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21295 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21296 ;;Total ram usage:        4 bytes
 21297 ;; Hardware stack levels used:    1
 21298 ;; Hardware stack levels required when called:    5
 21299 ;; This function calls:
 21300 ;;		_I2C1_WaitForLastPacketToComplete
 21301 ;; This function is called by:
 21302 ;;		_I2C1_MasterWrite
 21303 ;;		_I2C1_MasterRead
 21304 ;; This function uses a non-reentrant model
 21305 ;;
 21306                           
 21307                           
 21308                           ;psect for function _I2C1_MasterTRBInsert
 21309  144A                     _I2C1_MasterTRBInsert:	
 21310                           
 21311                           ;incstack = 0
 21312                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21313                           ;I2C1_MasterTRBInsert@count stored from wreg
 21314  144A  0140               	movlb	0	; select bank0
 21315  144B  00A3               	movwf	I2C1_MasterTRBInsert@count
 21316                           
 21317                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 21318  144C  0141               	movlb	1	; select bank1
 21319  144D  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 21320  144E  2C8C               	goto	l7520
 21321                           
 21322                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 21323  144F  3002               	movlw	2
 21324  1450  0140               	movlb	0	; select bank0
 21325  1451  00A2               	movwf	??_I2C1_MasterTRBInsert
 21326  1452  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 21327  1453  0086               	movwf	6
 21328  1454  0187               	clrf	7
 21329  1455  0822               	movf	??_I2C1_MasterTRBInsert,w
 21330  1456  0081               	movwf	1
 21331                           
 21332                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 21333  1457  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 21334  1458  00A2               	movwf	??_I2C1_MasterTRBInsert
 21335  1459  0141               	movlb	1	; select bank1
 21336  145A  0A20               	incf	_i2c1_object^(0+128),w
 21337  145B  0086               	movwf	6
 21338  145C  3001               	movlw	1	; select bank2/3
 21339  145D  0087               	movwf	7
 21340  145E  0140               	movlb	0	; select bank0
 21341  145F  0822               	movf	??_I2C1_MasterTRBInsert,w
 21342  1460  0081               	movwf	1
 21343                           
 21344                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 21345  1461  0823               	movf	I2C1_MasterTRBInsert@count,w
 21346  1462  00A2               	movwf	??_I2C1_MasterTRBInsert
 21347  1463  0141               	movlb	1	; select bank1
 21348  1464  0820               	movf	_i2c1_object^(0+128),w
 21349  1465  0086               	movwf	6
 21350  1466  3001               	movlw	1	; select bank2/3
 21351  1467  0087               	movwf	7
 21352  1468  0140               	movlb	0	; select bank0
 21353  1469  0822               	movf	??_I2C1_MasterTRBInsert,w
 21354  146A  0081               	movwf	1
 21355                           
 21356                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 21357  146B  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 21358  146C  00A2               	movwf	??_I2C1_MasterTRBInsert
 21359  146D  0141               	movlb	1	; select bank1
 21360  146E  0820               	movf	_i2c1_object^(0+128),w
 21361  146F  3E02               	addlw	2
 21362  1470  0086               	movwf	6
 21363  1471  3001               	movlw	1	; select bank2/3
 21364  1472  0087               	movwf	7
 21365  1473  0140               	movlb	0	; select bank0
 21366  1474  0822               	movf	??_I2C1_MasterTRBInsert,w
 21367  1475  0081               	movwf	1
 21368                           
 21369                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 21370  1476  3003               	movlw	3
 21371  1477  00A2               	movwf	??_I2C1_MasterTRBInsert
 21372  1478  0822               	movf	??_I2C1_MasterTRBInsert,w
 21373  1479  0141               	movlb	1	; select bank1
 21374  147A  07A0               	addwf	_i2c1_object^(0+128),f
 21375                           
 21376                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 21377  147B  0820               	movf	_i2c1_object^(0+128),w
 21378  147C  3A5B               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 21379  147D  1D03               	skipz
 21380  147E  2C85               	goto	l7516
 21381                           
 21382                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 21383  147F  3058               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 21384  1480  0140               	movlb	0	; select bank0
 21385  1481  00A2               	movwf	??_I2C1_MasterTRBInsert
 21386  1482  0822               	movf	??_I2C1_MasterTRBInsert,w
 21387  1483  0141               	movlb	1	; select bank1
 21388  1484  00A0               	movwf	_i2c1_object^(0+128)
 21389  1485                     l7516:	
 21390                           
 21391                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 21392  1485  10A2               	bcf	(_i2c1_object^(0+128)+2),1
 21393                           
 21394                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 21395  1486  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 21396  1487  0620               	xorwf	_i2c1_object^(0+128),w
 21397  1488  1D03               	skipz
 21398  1489  2C92               	goto	l7522
 21399                           
 21400                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 21401  148A  1422               	bsf	(_i2c1_object^(0+128)+2),0
 21402  148B  2C92               	goto	l7522
 21403  148C                     l7520:	
 21404                           
 21405                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 21406  148C  0140               	movlb	0	; select bank0
 21407  148D  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 21408  148E  0086               	movwf	6
 21409  148F  0187               	clrf	7
 21410  1490  0181               	clrf	1
 21411  1491  0A81               	incf	1,f
 21412  1492                     l7522:	
 21413                           
 21414                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 21415  1492  0140               	movlb	0	; select bank0
 21416  1493  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 21417  1494  0086               	movwf	6
 21418  1495  0187               	clrf	7
 21419  1496  3002               	movlw	2
 21420  1497  0601               	xorwf	1,w
 21421  1498  1D03               	btfss	3,2
 21422  1499  0008               	return
 21423                           
 21424                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 21425  149A  319C  242D         	fcall	_I2C1_WaitForLastPacketToComplete
 21426                           
 21427                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 21428  149C  014E               	movlb	14	; select bank14
 21429  149D  140F               	bsf	15,0	;volatile
 21430  149E  0008               	return
 21431  149F                     __end_of_I2C1_MasterTRBInsert:	
 21432                           
 21433                           	psect	text73
 21434  1C2D                     __ptext73:	
 21435 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 21436 ;; Defined at:
 21437 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 21438 ;; Parameters:    Size  Location     Type
 21439 ;;		None
 21440 ;; Auto vars:     Size  Location     Type
 21441 ;;		None
 21442 ;; Return value:  Size  Location     Type
 21443 ;;                  1    wreg      void 
 21444 ;; Registers used:
 21445 ;;		wreg, status,2, status,0
 21446 ;; Tracked objects:
 21447 ;;		On entry : 0/0
 21448 ;;		On exit  : 0/0
 21449 ;;		Unchanged: 0/0
 21450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21455 ;;Total ram usage:        0 bytes
 21456 ;; Hardware stack levels used:    1
 21457 ;; Hardware stack levels required when called:    4
 21458 ;; This function calls:
 21459 ;;		Nothing
 21460 ;; This function is called by:
 21461 ;;		_I2C1_MasterTRBInsert
 21462 ;; This function uses a non-reentrant model
 21463 ;;
 21464                           
 21465                           
 21466                           ;psect for function _I2C1_WaitForLastPacketToComplete
 21467  1C2D                     _I2C1_WaitForLastPacketToComplete:	
 21468  1C2D                     l7504:	
 21469                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 21470                           
 21471                           ;incstack = 0
 21472                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 21473                           
 21474                           
 21475                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 21476  1C2D  0141               	movlb	1	; select bank1
 21477  1C2E  0843               	movf	_i2c1_state^(0+128),w
 21478  1C2F  1903               	btfsc	3,2
 21479  1C30  0008               	return
 21480  1C31  2C2D               	goto	l7504
 21481  1C32                     __end_of_I2C1_WaitForLastPacketToComplete:	
 21482                           
 21483                           	psect	text74
 21484  1095                     __ptext74:	
 21485 ;; *************** function ___lwmod *****************
 21486 ;; Defined at:
 21487 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
 21488 ;; Parameters:    Size  Location     Type
 21489 ;;  divisor         2    8[BANK0 ] unsigned int 
 21490 ;;  dividend        2   10[BANK0 ] unsigned int 
 21491 ;; Auto vars:     Size  Location     Type
 21492 ;;  counter         1   13[BANK0 ] unsigned char 
 21493 ;; Return value:  Size  Location     Type
 21494 ;;                  2    8[BANK0 ] unsigned int 
 21495 ;; Registers used:
 21496 ;;		wreg, status,2, status,0
 21497 ;; Tracked objects:
 21498 ;;		On entry : 0/0
 21499 ;;		On exit  : 0/0
 21500 ;;		Unchanged: 0/0
 21501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21502 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21503 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21504 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21505 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21506 ;;Total ram usage:        6 bytes
 21507 ;; Hardware stack levels used:    1
 21508 ;; Hardware stack levels required when called:    4
 21509 ;; This function calls:
 21510 ;;		Nothing
 21511 ;; This function is called by:
 21512 ;;		_TM1650_fastPrintNum
 21513 ;;		_TM1650_fastPrintNum_3digit
 21514 ;; This function uses a non-reentrant model
 21515 ;;
 21516                           
 21517                           
 21518                           ;psect for function ___lwmod
 21519  1095                     ___lwmod:	
 21520                           
 21521                           ;incstack = 0
 21522                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 21523  1095  0140               	movlb	0	; select bank0
 21524  1096  0828               	movf	___lwmod@divisor,w
 21525  1097  0429               	iorwf	___lwmod@divisor+1,w
 21526  1098  1903               	btfsc	3,2
 21527  1099  28BD               	goto	l5162
 21528  109A  01AD               	clrf	___lwmod@counter
 21529  109B  0AAD               	incf	___lwmod@counter,f
 21530  109C                     l5152:	
 21531  109C  1BA9               	btfsc	___lwmod@divisor+1,7
 21532  109D  28A8               	goto	l5154
 21533  109E  3001               	movlw	1
 21534  109F                     u3955:	
 21535  109F  35A8               	lslf	___lwmod@divisor,f
 21536  10A0  0DA9               	rlf	___lwmod@divisor+1,f
 21537  10A1  0B89               	decfsz	9,f
 21538  10A2  289F               	goto	u3955
 21539  10A3  3001               	movlw	1
 21540  10A4  00AC               	movwf	??___lwmod
 21541  10A5  082C               	movf	??___lwmod,w
 21542  10A6  07AD               	addwf	___lwmod@counter,f
 21543  10A7  289C               	goto	l5152
 21544  10A8                     l5154:	
 21545  10A8  0829               	movf	___lwmod@divisor+1,w
 21546  10A9  022B               	subwf	___lwmod@dividend+1,w
 21547  10AA  1D03               	skipz
 21548  10AB  28AE               	goto	u3975
 21549  10AC  0828               	movf	___lwmod@divisor,w
 21550  10AD  022A               	subwf	___lwmod@dividend,w
 21551  10AE                     u3975:	
 21552  10AE  1C03               	skipc
 21553  10AF  28B4               	goto	l5158
 21554  10B0  0828               	movf	___lwmod@divisor,w
 21555  10B1  02AA               	subwf	___lwmod@dividend,f
 21556  10B2  0829               	movf	___lwmod@divisor+1,w
 21557  10B3  3BAB               	subwfb	___lwmod@dividend+1,f
 21558  10B4                     l5158:	
 21559  10B4  3001               	movlw	1
 21560  10B5                     u3985:	
 21561  10B5  36A9               	lsrf	___lwmod@divisor+1,f
 21562  10B6  0CA8               	rrf	___lwmod@divisor,f
 21563  10B7  0B89               	decfsz	9,f
 21564  10B8  28B5               	goto	u3985
 21565  10B9  3001               	movlw	1
 21566  10BA  02AD               	subwf	___lwmod@counter,f
 21567  10BB  1D03               	btfss	3,2
 21568  10BC  28A8               	goto	l5154
 21569  10BD                     l5162:	
 21570  10BD  082B               	movf	___lwmod@dividend+1,w
 21571  10BE  00A9               	movwf	?___lwmod+1
 21572  10BF  082A               	movf	___lwmod@dividend,w
 21573  10C0  00A8               	movwf	?___lwmod
 21574  10C1  0008               	return
 21575  10C2                     __end_of___lwmod:	
 21576                           
 21577                           	psect	text75
 21578  1573                     __ptext75:	
 21579 ;; *************** function _CONTROL_BEAT *****************
 21580 ;; Defined at:
 21581 ;;		line 237 in file "controller.c"
 21582 ;; Parameters:    Size  Location     Type
 21583 ;;		None
 21584 ;; Auto vars:     Size  Location     Type
 21585 ;;		None
 21586 ;; Return value:  Size  Location     Type
 21587 ;;                  1    wreg      _Bool 
 21588 ;; Registers used:
 21589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21590 ;; Tracked objects:
 21591 ;;		On entry : 0/0
 21592 ;;		On exit  : 0/0
 21593 ;;		Unchanged: 0/0
 21594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21597 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21598 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21599 ;;Total ram usage:        1 bytes
 21600 ;; Hardware stack levels used:    1
 21601 ;; Hardware stack levels required when called:    5
 21602 ;; This function calls:
 21603 ;;		_BUTTONS_isHeld
 21604 ;; This function is called by:
 21605 ;;		_CONTROLLER_task
 21606 ;; This function uses a non-reentrant model
 21607 ;;
 21608                           
 21609                           
 21610                           ;psect for function _CONTROL_BEAT
 21611  1573                     _CONTROL_BEAT:	
 21612                           
 21613                           ;controller.c: 239:     if(BUTTONS_isHeld(enter) && !enterPressed){
 21614                           
 21615                           ;incstack = 0
 21616                           ; Regs used in _CONTROL_BEAT: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21617  1573  0141               	movlb	1	; select bank1
 21618  1574  083A               	movf	_enter^(0+128),w
 21619  1575  319D  2527  3195   	fcall	_BUTTONS_isHeld
 21620  1578  3A00               	xorlw	0
 21621  1579  1903               	skipnz
 21622  157A  2DA8               	goto	l8528
 21623  157B  0141               	movlb	1	; select bank1
 21624  157C  0836               	movf	_enterPressed^(0+128),w
 21625  157D  1D03               	btfss	3,2
 21626  157E  2DA8               	goto	l8528
 21627                           
 21628                           ;controller.c: 240:         beatHold = !beatHold;
 21629  157F  0831               	movf	_beatHold^(0+128),w
 21630  1580  1D03               	btfss	3,2
 21631  1581  2D84               	goto	u8600
 21632  1582  3001               	movlw	1
 21633  1583  2D85               	goto	u8610
 21634  1584                     u8600:	
 21635  1584  3000               	movlw	0
 21636  1585                     u8610:	
 21637  1585  0140               	movlb	0	; select bank0
 21638  1586  00A1               	movwf	??_CONTROL_BEAT
 21639  1587  0821               	movf	??_CONTROL_BEAT,w
 21640  1588  0141               	movlb	1	; select bank1
 21641  1589  00B1               	movwf	_beatHold^(0+128)
 21642                           
 21643                           ;controller.c: 241:         enterPressed = 1;
 21644  158A  01B6               	clrf	_enterPressed^(0+128)
 21645  158B  0AB6               	incf	_enterPressed^(0+128),f
 21646  158C  2DA6               	goto	l8524
 21647  158D                     l8530:	
 21648                           
 21649                           ;controller.c: 248:         if(beatBrightness < 9){
 21650  158D  3009               	movlw	9
 21651  158E  026F               	subwf	_beatBrightness^(0+128),w
 21652  158F  1803               	skipnc
 21653  1590  2D98               	goto	l8534
 21654                           
 21655                           ;controller.c: 249:             beatBrightness++;
 21656  1591  3001               	movlw	1
 21657  1592  0140               	movlb	0	; select bank0
 21658  1593  00A1               	movwf	??_CONTROL_BEAT
 21659  1594  0821               	movf	??_CONTROL_BEAT,w
 21660  1595  0141               	movlb	1	; select bank1
 21661  1596  07EF               	addwf	_beatBrightness^(0+128),f
 21662                           
 21663                           ;controller.c: 250:         } else {
 21664  1597  2DA6               	goto	l8524
 21665  1598                     l8534:	
 21666                           
 21667                           ;controller.c: 251:             beatBrightness = 9;
 21668  1598  3009               	movlw	9
 21669  1599  0140               	movlb	0	; select bank0
 21670  159A  00A1               	movwf	??_CONTROL_BEAT
 21671  159B  0821               	movf	??_CONTROL_BEAT,w
 21672  159C  0141               	movlb	1	; select bank1
 21673  159D  00EF               	movwf	_beatBrightness^(0+128)
 21674  159E  2DA6               	goto	l8524
 21675  159F                     l8542:	
 21676                           
 21677                           ;controller.c: 255:         if(beatBrightness > 0){
 21678  159F  086F               	movf	_beatBrightness^(0+128),w
 21679  15A0  1903               	btfsc	3,2
 21680  15A1  2DA5               	goto	l8546
 21681                           
 21682                           ;controller.c: 256:             beatBrightness--;
 21683  15A2  3001               	movlw	1
 21684  15A3  02EF               	subwf	_beatBrightness^(0+128),f
 21685                           
 21686                           ;controller.c: 257:         } else {
 21687  15A4  2DA6               	goto	l8524
 21688  15A5                     l8546:	
 21689                           
 21690                           ;controller.c: 258:             beatBrightness = 0;
 21691  15A5  01EF               	clrf	_beatBrightness^(0+128)
 21692  15A6                     l8524:	
 21693                           
 21694                           ;controller.c: 242:         return 1;
 21695  15A6  3001               	movlw	1
 21696  15A7  0008               	return
 21697  15A8                     l8528:	
 21698                           
 21699                           ;controller.c: 247:     if (upState) {
 21700  15A8  0141               	movlb	1	; select bank1
 21701  15A9  0835               	movf	_upState^(0+128),w
 21702  15AA  1D03               	btfss	3,2
 21703  15AB  2D8D               	goto	l8530
 21704  15AC  0834               	movf	_downState^(0+128),w
 21705  15AD  1D03               	btfss	3,2
 21706  15AE  2D9F               	goto	l8542
 21707                           
 21708                           ;controller.c: 263:     if(enterState && currentSelection == MODE_BEAT_FADE){
 21709  15AF  0832               	movf	_enterState^(0+128),w
 21710  15B0  1903               	btfsc	3,2
 21711  15B1  2DBD               	goto	l8558
 21712  15B2  3004               	movlw	4
 21713  15B3  0638               	xorwf	_currentSelection^(0+128),w
 21714  15B4  1D03               	btfss	3,2
 21715  15B5  2DBD               	goto	l8558
 21716                           
 21717                           ;controller.c: 264:         currentSelection = MODE_BEAT_CONTINUOUS;
 21718  15B6  3005               	movlw	5
 21719  15B7  0140               	movlb	0	; select bank0
 21720  15B8  00A1               	movwf	??_CONTROL_BEAT
 21721  15B9  0821               	movf	??_CONTROL_BEAT,w
 21722  15BA  0141               	movlb	1	; select bank1
 21723  15BB  00B8               	movwf	_currentSelection^(0+128)
 21724                           
 21725                           ;controller.c: 266:     } else if(enterState && currentSelection == MODE_BEAT_STROBE){
 21726  15BC  0008               	return
 21727  15BD                     l8558:	
 21728  15BD  0832               	movf	_enterState^(0+128),w
 21729  15BE  1903               	btfsc	3,2
 21730  15BF  2DCA               	goto	l8564
 21731  15C0  0338               	decf	_currentSelection^(0+128),w
 21732  15C1  1D03               	btfss	3,2
 21733  15C2  2DCA               	goto	l8564
 21734                           
 21735                           ;controller.c: 267:         currentSelection = MODE_BEAT_FADE;
 21736  15C3  3004               	movlw	4
 21737  15C4  0140               	movlb	0	; select bank0
 21738  15C5  00A1               	movwf	??_CONTROL_BEAT
 21739  15C6  0821               	movf	??_CONTROL_BEAT,w
 21740  15C7  0141               	movlb	1	; select bank1
 21741  15C8  00B8               	movwf	_currentSelection^(0+128)
 21742                           
 21743                           ;controller.c: 268:     } else if(enterState && currentSelection == MODE_BEAT_CONTINUOUS
      +                          ){
 21744  15C9  0008               	return
 21745  15CA                     l8564:	
 21746  15CA  0832               	movf	_enterState^(0+128),w
 21747  15CB  1903               	btfsc	3,2
 21748  15CC  2DD8               	goto	l8570
 21749  15CD  3005               	movlw	5
 21750  15CE  0638               	xorwf	_currentSelection^(0+128),w
 21751  15CF  1D03               	btfss	3,2
 21752  15D0  2DD8               	goto	l8570
 21753                           
 21754                           ;controller.c: 269:         currentSelection = MODE_BEAT_MIXED;
 21755  15D1  3006               	movlw	6
 21756  15D2  0140               	movlb	0	; select bank0
 21757  15D3  00A1               	movwf	??_CONTROL_BEAT
 21758  15D4  0821               	movf	??_CONTROL_BEAT,w
 21759  15D5  0141               	movlb	1	; select bank1
 21760  15D6  00B8               	movwf	_currentSelection^(0+128)
 21761                           
 21762                           ;controller.c: 270:     } else if(enterState && currentSelection == MODE_BEAT_MIXED){
 21763  15D7  0008               	return
 21764  15D8                     l8570:	
 21765  15D8  0832               	movf	_enterState^(0+128),w
 21766  15D9  1903               	btfsc	3,2
 21767  15DA  0008               	return
 21768  15DB  3006               	movlw	6
 21769  15DC  0638               	xorwf	_currentSelection^(0+128),w
 21770  15DD  1D03               	btfss	3,2
 21771  15DE  0008               	return
 21772                           
 21773                           ;controller.c: 271:         currentSelection = MODE_BEAT_STROBE;
 21774  15DF  01B8               	clrf	_currentSelection^(0+128)
 21775  15E0  0AB8               	incf	_currentSelection^(0+128),f
 21776  15E1  0008               	return
 21777  15E2                     __end_of_CONTROL_BEAT:	
 21778                           
 21779                           	psect	text76
 21780  1D27                     __ptext76:	
 21781 ;; *************** function _BUTTONS_isHeld *****************
 21782 ;; Defined at:
 21783 ;;		line 106 in file "buttons.c"
 21784 ;; Parameters:    Size  Location     Type
 21785 ;;  button          1    wreg     PTR struct .
 21786 ;;		 -> buttons(32), NULL(0), 
 21787 ;; Auto vars:     Size  Location     Type
 21788 ;;  button          1    0[BANK0 ] PTR struct .
 21789 ;;		 -> buttons(32), NULL(0), 
 21790 ;; Return value:  Size  Location     Type
 21791 ;;                  1    wreg      _Bool 
 21792 ;; Registers used:
 21793 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21794 ;; Tracked objects:
 21795 ;;		On entry : 0/0
 21796 ;;		On exit  : 0/0
 21797 ;;		Unchanged: 0/0
 21798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21800 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21802 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21803 ;;Total ram usage:        1 bytes
 21804 ;; Hardware stack levels used:    1
 21805 ;; Hardware stack levels required when called:    4
 21806 ;; This function calls:
 21807 ;;		Nothing
 21808 ;; This function is called by:
 21809 ;;		_CONTROL_DMX
 21810 ;;		_CONTROL_BEAT
 21811 ;;		_CONTROL_MANUAL
 21812 ;; This function uses a non-reentrant model
 21813 ;;
 21814                           
 21815                           
 21816                           ;psect for function _BUTTONS_isHeld
 21817  1D27                     _BUTTONS_isHeld:	
 21818                           
 21819                           ;incstack = 0
 21820                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
 21821                           ;BUTTONS_isHeld@button stored from wreg
 21822  1D27  0140               	movlb	0	; select bank0
 21823  1D28  00A0               	movwf	BUTTONS_isHeld@button
 21824                           
 21825                           ;buttons.c: 107:     if(button->event == EVENT_HELD){
 21826  1D29  0820               	movf	BUTTONS_isHeld@button,w
 21827  1D2A  3E07               	addlw	7
 21828  1D2B  0086               	movwf	6
 21829  1D2C  3001               	movlw	1	; select bank2/3
 21830  1D2D  0087               	movwf	7
 21831  1D2E  3003               	movlw	3
 21832  1D2F  0601               	xorwf	1,w
 21833  1D30  1D03               	btfss	3,2
 21834  1D31  2D34               	goto	l8140
 21835                           
 21836                           ;buttons.c: 108:         return 1;
 21837  1D32  3001               	movlw	1
 21838  1D33  0008               	return
 21839  1D34                     l8140:	
 21840                           
 21841                           ;buttons.c: 111:     return 0;
 21842  1D34  3000               	movlw	0
 21843  1D35  0008               	return
 21844  1D36                     __end_of_BUTTONS_isHeld:	
 21845                           
 21846                           	psect	text77
 21847  1043                     __ptext77:	
 21848 ;; *************** function _CONTROL_ANIMATION *****************
 21849 ;; Defined at:
 21850 ;;		line 332 in file "controller.c"
 21851 ;; Parameters:    Size  Location     Type
 21852 ;;		None
 21853 ;; Auto vars:     Size  Location     Type
 21854 ;;		None
 21855 ;; Return value:  Size  Location     Type
 21856 ;;                  1    wreg      _Bool 
 21857 ;; Registers used:
 21858 ;;		wreg, status,2, status,0
 21859 ;; Tracked objects:
 21860 ;;		On entry : 0/0
 21861 ;;		On exit  : 0/0
 21862 ;;		Unchanged: 0/0
 21863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21866 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21867 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21868 ;;Total ram usage:        1 bytes
 21869 ;; Hardware stack levels used:    1
 21870 ;; Hardware stack levels required when called:    4
 21871 ;; This function calls:
 21872 ;;		Nothing
 21873 ;; This function is called by:
 21874 ;;		_CONTROLLER_task
 21875 ;; This function uses a non-reentrant model
 21876 ;;
 21877                           
 21878                           
 21879                           ;psect for function _CONTROL_ANIMATION
 21880  1043                     _CONTROL_ANIMATION:	
 21881                           
 21882                           ;controller.c: 334:     if(enterState){
 21883                           
 21884                           ;incstack = 0
 21885                           ; Regs used in _CONTROL_ANIMATION: [wreg+status,2+status,0]
 21886  1043  0141               	movlb	1	; select bank1
 21887  1044  0832               	movf	_enterState^(0+128),w
 21888  1045  1D03               	btfss	3,2
 21889  1046  285C               	goto	l6174
 21890  1047  285E               	goto	l6178
 21891  1048                     l6180:	
 21892                           
 21893                           ;controller.c: 340:         if (animationModeSelected < 10) {
 21894  1048  300A               	movlw	10
 21895  1049  026D               	subwf	_animationModeSelected^(0+128),w
 21896  104A  1803               	skipnc
 21897  104B  2853               	goto	l6184
 21898                           
 21899                           ;controller.c: 341:             animationModeSelected++;
 21900  104C  3001               	movlw	1
 21901  104D  0140               	movlb	0	; select bank0
 21902  104E  00A0               	movwf	??_CONTROL_ANIMATION
 21903  104F  0820               	movf	??_CONTROL_ANIMATION,w
 21904  1050  0141               	movlb	1	; select bank1
 21905  1051  07ED               	addwf	_animationModeSelected^(0+128),f
 21906                           
 21907                           ;controller.c: 342:         } else {
 21908  1052  285C               	goto	l6174
 21909  1053                     l6184:	
 21910                           
 21911                           ;controller.c: 343:             animationModeSelected = 10;
 21912  1053  300A               	movlw	10
 21913  1054  0140               	movlb	0	; select bank0
 21914  1055  00A0               	movwf	??_CONTROL_ANIMATION
 21915  1056  0820               	movf	??_CONTROL_ANIMATION,w
 21916  1057  0141               	movlb	1	; select bank1
 21917  1058  00ED               	movwf	_animationModeSelected^(0+128)
 21918  1059  285C               	goto	l6174
 21919  105A                     l6194:	
 21920                           
 21921                           ;controller.c: 348:             animationModeSelected--;
 21922  105A  3001               	movlw	1
 21923  105B  02ED               	subwf	_animationModeSelected^(0+128),f
 21924  105C                     l6174:	
 21925                           ;controller.c: 349:         } else {
 21926                           
 21927                           
 21928                           ;controller.c: 336:         return 1;
 21929  105C  3001               	movlw	1
 21930  105D  0008               	return
 21931  105E                     l6178:	
 21932                           
 21933                           ;controller.c: 339:     if (upState && !animationBrightnessControl) {
 21934  105E  0835               	movf	_upState^(0+128),w
 21935  105F  1D03               	btfss	3,2
 21936  1060  2848               	goto	l6180
 21937  1061  0834               	movf	_downState^(0+128),w
 21938  1062  1903               	btfsc	3,2
 21939  1063  0008               	return
 21940                           
 21941                           ;controller.c: 347:         if (animationModeSelected > 1) {
 21942  1064  3002               	movlw	2
 21943  1065  026D               	subwf	_animationModeSelected^(0+128),w
 21944  1066  1803               	btfsc	3,0
 21945  1067  285A               	goto	l6194
 21946                           
 21947                           ;controller.c: 350:             animationModeSelected = 1;
 21948  1068  01ED               	clrf	_animationModeSelected^(0+128)
 21949  1069  0AED               	incf	_animationModeSelected^(0+128),f
 21950  106A  285C               	goto	l6174
 21951  106B                     __end_of_CONTROL_ANIMATION:	
 21952                           
 21953                           	psect	text78
 21954  1D7D                     __ptext78:	
 21955 ;; *************** function _BUTTONS_isClicked *****************
 21956 ;; Defined at:
 21957 ;;		line 97 in file "buttons.c"
 21958 ;; Parameters:    Size  Location     Type
 21959 ;;  button          1    wreg     PTR struct .
 21960 ;;		 -> buttons(32), NULL(0), 
 21961 ;; Auto vars:     Size  Location     Type
 21962 ;;  button          1    0[BANK0 ] PTR struct .
 21963 ;;		 -> buttons(32), NULL(0), 
 21964 ;; Return value:  Size  Location     Type
 21965 ;;                  1    wreg      _Bool 
 21966 ;; Registers used:
 21967 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21968 ;; Tracked objects:
 21969 ;;		On entry : 0/0
 21970 ;;		On exit  : 0/0
 21971 ;;		Unchanged: 0/0
 21972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21974 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21976 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21977 ;;Total ram usage:        1 bytes
 21978 ;; Hardware stack levels used:    1
 21979 ;; Hardware stack levels required when called:    4
 21980 ;; This function calls:
 21981 ;;		Nothing
 21982 ;; This function is called by:
 21983 ;;		_CONTROLLER_task
 21984 ;; This function uses a non-reentrant model
 21985 ;;
 21986                           
 21987                           
 21988                           ;psect for function _BUTTONS_isClicked
 21989  1D7D                     _BUTTONS_isClicked:	
 21990                           
 21991                           ;incstack = 0
 21992                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 21993                           ;BUTTONS_isClicked@button stored from wreg
 21994  1D7D  0140               	movlb	0	; select bank0
 21995  1D7E  00A0               	movwf	BUTTONS_isClicked@button
 21996                           
 21997                           ;buttons.c: 98:     if (button->event == EVENT_PRESSED) {
 21998  1D7F  0820               	movf	BUTTONS_isClicked@button,w
 21999  1D80  3E07               	addlw	7
 22000  1D81  0086               	movwf	6
 22001  1D82  3001               	movlw	1	; select bank2/3
 22002  1D83  0087               	movwf	7
 22003  1D84  0301               	decf	1,w
 22004  1D85  1D03               	btfss	3,2
 22005  1D86  2D8F               	goto	l8374
 22006                           
 22007                           ;buttons.c: 99:         button->event = EVENT_IDLE;
 22008  1D87  0820               	movf	BUTTONS_isClicked@button,w
 22009  1D88  3E07               	addlw	7
 22010  1D89  0086               	movwf	6
 22011  1D8A  3001               	movlw	1	; select bank2/3
 22012  1D8B  0087               	movwf	7
 22013  1D8C  0181               	clrf	1
 22014                           
 22015                           ;buttons.c: 100:         return 1;
 22016  1D8D  3001               	movlw	1
 22017  1D8E  0008               	return
 22018  1D8F                     l8374:	
 22019                           
 22020                           ;buttons.c: 103:     return 0;
 22021  1D8F  3000               	movlw	0
 22022  1D90  0008               	return
 22023  1D91                     __end_of_BUTTONS_isClicked:	
 22024                           
 22025                           	psect	text79
 22026  1C3E                     __ptext79:	
 22027 ;; *************** function _CLOCK_init *****************
 22028 ;; Defined at:
 22029 ;;		line 8 in file "clock.c"
 22030 ;; Parameters:    Size  Location     Type
 22031 ;;		None
 22032 ;; Auto vars:     Size  Location     Type
 22033 ;;		None
 22034 ;; Return value:  Size  Location     Type
 22035 ;;                  1    wreg      void 
 22036 ;; Registers used:
 22037 ;;		wreg, status,2, status,0, pclath, cstack
 22038 ;; Tracked objects:
 22039 ;;		On entry : 0/0
 22040 ;;		On exit  : 0/0
 22041 ;;		Unchanged: 0/0
 22042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22047 ;;Total ram usage:        0 bytes
 22048 ;; Hardware stack levels used:    1
 22049 ;; Hardware stack levels required when called:    5
 22050 ;; This function calls:
 22051 ;;		_TMR0_SetInterruptHandler
 22052 ;; This function is called by:
 22053 ;;		_main
 22054 ;; This function uses a non-reentrant model
 22055 ;;
 22056                           
 22057                           
 22058                           ;psect for function _CLOCK_init
 22059  1C3E                     _CLOCK_init:	
 22060                           
 22061                           ;clock.c: 11:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 22062                           
 22063                           ;incstack = 0
 22064                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 22065  1C3E  3032               	movlw	low _CLOCK_timerCallback
 22066  1C3F  0140               	movlb	0	; select bank0
 22067  1C40  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 22068  1C41  301C               	movlw	high _CLOCK_timerCallback
 22069  1C42  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 22070  1C43  319C  2472         	fcall	_TMR0_SetInterruptHandler
 22071  1C45  0008               	return
 22072  1C46                     __end_of_CLOCK_init:	
 22073                           
 22074                           	psect	text80
 22075  1C72                     __ptext80:	
 22076 ;; *************** function _TMR0_SetInterruptHandler *****************
 22077 ;; Defined at:
 22078 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 22079 ;; Parameters:    Size  Location     Type
 22080 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 22081 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 22082 ;; Auto vars:     Size  Location     Type
 22083 ;;		None
 22084 ;; Return value:  Size  Location     Type
 22085 ;;                  1    wreg      void 
 22086 ;; Registers used:
 22087 ;;		wreg
 22088 ;; Tracked objects:
 22089 ;;		On entry : 0/0
 22090 ;;		On exit  : 0/0
 22091 ;;		Unchanged: 0/0
 22092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22093 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22096 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22097 ;;Total ram usage:        2 bytes
 22098 ;; Hardware stack levels used:    1
 22099 ;; Hardware stack levels required when called:    4
 22100 ;; This function calls:
 22101 ;;		Nothing
 22102 ;; This function is called by:
 22103 ;;		_TMR0_Initialize
 22104 ;;		_CLOCK_init
 22105 ;; This function uses a non-reentrant model
 22106 ;;
 22107                           
 22108                           
 22109                           ;psect for function _TMR0_SetInterruptHandler
 22110  1C72                     _TMR0_SetInterruptHandler:	
 22111                           
 22112                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 22113                           
 22114                           ;incstack = 0
 22115                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 22116  1C72  0140               	movlb	0	; select bank0
 22117  1C73  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 22118  1C74  0142               	movlb	2	; select bank2
 22119  1C75  00DE               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 22120  1C76  0140               	movlb	0	; select bank0
 22121  1C77  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 22122  1C78  0142               	movlb	2	; select bank2
 22123  1C79  00DD               	movwf	_TMR0_InterruptHandler^(0+256)
 22124  1C7A  0008               	return
 22125  1C7B                     __end_of_TMR0_SetInterruptHandler:	
 22126                           
 22127                           	psect	text81
 22128  0DC0                     __ptext81:	
 22129 ;; *************** function _BUTTONS_task *****************
 22130 ;; Defined at:
 22131 ;;		line 56 in file "buttons.c"
 22132 ;; Parameters:    Size  Location     Type
 22133 ;;		None
 22134 ;; Auto vars:     Size  Location     Type
 22135 ;;  btn             1    8[BANK0 ] PTR struct .
 22136 ;;		 -> buttons(32), 
 22137 ;;  i               1    5[BANK0 ] unsigned char 
 22138 ;;  time            2    6[BANK0 ] unsigned short 
 22139 ;; Return value:  Size  Location     Type
 22140 ;;                  1    wreg      void 
 22141 ;; Registers used:
 22142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22143 ;; Tracked objects:
 22144 ;;		On entry : 0/0
 22145 ;;		On exit  : 0/0
 22146 ;;		Unchanged: 0/0
 22147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22149 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22150 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22151 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22152 ;;Total ram usage:        7 bytes
 22153 ;; Hardware stack levels used:    1
 22154 ;; Hardware stack levels required when called:    5
 22155 ;; This function calls:
 22156 ;;		_CLOCK_getTime
 22157 ;; This function is called by:
 22158 ;;		_main
 22159 ;; This function uses a non-reentrant model
 22160 ;;
 22161                           
 22162                           
 22163                           ;psect for function _BUTTONS_task
 22164  0DC0                     _BUTTONS_task:	
 22165                           
 22166                           ;buttons.c: 58:     time_t time = CLOCK_getTime();
 22167                           
 22168                           ;incstack = 0
 22169                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22170  0DC0  319C  2469  318D   	fcall	_CLOCK_getTime
 22171  0DC3  0140               	movlb	0	; select bank0
 22172  0DC4  0821               	movf	?_CLOCK_getTime+1,w
 22173  0DC5  00A7               	movwf	BUTTONS_task@time+1
 22174  0DC6  0820               	movf	?_CLOCK_getTime,w
 22175  0DC7  00A6               	movwf	BUTTONS_task@time
 22176                           
 22177                           ;buttons.c: 61:     if (time - lastTime < 10)
 22178  0DC8  0142               	movlb	2	; select bank2
 22179  0DC9  0848               	movf	_lastTime^(0+256),w
 22180  0DCA  0140               	movlb	0	; select bank0
 22181  0DCB  0226               	subwf	BUTTONS_task@time,w
 22182  0DCC  00A2               	movwf	??_BUTTONS_task
 22183  0DCD  0142               	movlb	2	; select bank2
 22184  0DCE  0849               	movf	(_lastTime+1)^(0+256),w
 22185  0DCF  0140               	movlb	0	; select bank0
 22186  0DD0  3B27               	subwfb	BUTTONS_task@time+1,w
 22187  0DD1  00A3               	movwf	??_BUTTONS_task+1
 22188  0DD2  3000               	movlw	0
 22189  0DD3  0223               	subwf	??_BUTTONS_task+1,w
 22190  0DD4  300A               	movlw	10
 22191  0DD5  1903               	skipnz
 22192  0DD6  0222               	subwf	??_BUTTONS_task,w
 22193  0DD7  1C03               	btfss	3,0
 22194  0DD8  0008               	return
 22195                           
 22196                           ;buttons.c: 64:     lastTime = time;
 22197  0DD9  0827               	movf	BUTTONS_task@time+1,w
 22198  0DDA  0142               	movlb	2	; select bank2
 22199  0DDB  00C9               	movwf	(_lastTime+1)^(0+256)
 22200  0DDC  0140               	movlb	0	; select bank0
 22201  0DDD  0826               	movf	BUTTONS_task@time,w
 22202  0DDE  0142               	movlb	2	; select bank2
 22203  0DDF  00C8               	movwf	_lastTime^(0+256)
 22204                           
 22205                           ;buttons.c: 67:     for (uint8_t i = 0; i < 4; i++) {
 22206  0DE0  0140               	movlb	0	; select bank0
 22207  0DE1  01A5               	clrf	BUTTONS_task@i
 22208  0DE2                     l8876:	
 22209                           
 22210                           ;buttons.c: 68:         button_t* btn = buttons + i;
 22211  0DE2  0825               	movf	BUTTONS_task@i,w
 22212  0DE3  00A2               	movwf	??_BUTTONS_task
 22213  0DE4  3002               	movlw	2
 22214  0DE5                     u9075:	
 22215  0DE5  35A2               	lslf	??_BUTTONS_task,f
 22216  0DE6  3EFF               	addlw	-1
 22217  0DE7  1D03               	skipz
 22218  0DE8  2DE5               	goto	u9075
 22219  0DE9  3522               	lslf	??_BUTTONS_task,w
 22220  0DEA  3EC0               	addlw	(low (_buttons| (0+256)))& (0+255)
 22221  0DEB  00A3               	movwf	??_BUTTONS_task+1
 22222  0DEC  0823               	movf	??_BUTTONS_task+1,w
 22223  0DED  00A8               	movwf	BUTTONS_task@btn
 22224                           
 22225                           ;buttons.c: 71:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 22226  0DEE  0828               	movf	BUTTONS_task@btn,w
 22227  0DEF  0086               	movwf	6
 22228  0DF0  3001               	movlw	1	; select bank2/3
 22229  0DF1  0087               	movwf	7
 22230  0DF2  3F40               	moviw [0]fsr1
 22231  0DF3  00A2               	movwf	??_BUTTONS_task
 22232  0DF4  3F41               	moviw [1]fsr1
 22233  0DF5  00A3               	movwf	??_BUTTONS_task+1
 22234  0DF6  0822               	movf	??_BUTTONS_task,w
 22235  0DF7  0086               	movwf	6
 22236  0DF8  0823               	movf	??_BUTTONS_task+1,w
 22237  0DF9  0087               	movwf	7
 22238  0DFA  3001               	movlw	1
 22239  0DFB  00A4               	movwf	??_BUTTONS_task+2
 22240  0DFC  0828               	movf	BUTTONS_task@btn,w
 22241  0DFD  3E02               	addlw	2
 22242  0DFE  0084               	movwf	4
 22243  0DFF  3001               	movlw	1	; select bank2/3
 22244  0E00  0085               	movwf	5
 22245  0E01  0A00               	incf	0,w
 22246  0E02  2E04               	goto	u9084
 22247  0E03                     u9085:	
 22248  0E03  35A4               	lslf	??_BUTTONS_task+2,f
 22249  0E04                     u9084:	
 22250  0E04  0B89               	decfsz	9,f
 22251  0E05  2E03               	goto	u9085
 22252  0E06  0824               	movf	??_BUTTONS_task+2,w
 22253  0E07  0501               	andwf	1,w
 22254  0E08  1D03               	btfss	3,2
 22255  0E09  2E23               	goto	l8884
 22256                           
 22257                           ;buttons.c: 72:             btn->state = STATE_PRESSED;
 22258  0E0A  0828               	movf	BUTTONS_task@btn,w
 22259  0E0B  3E03               	addlw	3
 22260  0E0C  0086               	movwf	6
 22261  0E0D  3001               	movlw	1	; select bank2/3
 22262  0E0E  0087               	movwf	7
 22263  0E0F  0181               	clrf	1
 22264  0E10  0A81               	incf	1,f
 22265                           
 22266                           ;buttons.c: 73:             if(btn->event == EVENT_IDLE){
 22267  0E11  0828               	movf	BUTTONS_task@btn,w
 22268  0E12  3E07               	addlw	7
 22269  0E13  0086               	movwf	6
 22270  0E14  3001               	movlw	1	; select bank2/3
 22271  0E15  0087               	movwf	7
 22272  0E16  0801               	movf	1,w
 22273  0E17  1D03               	btfss	3,2
 22274  0E18  2E29               	goto	l909
 22275                           
 22276                           ;buttons.c: 74:                 btn->lastHoldTime = time;
 22277  0E19  0828               	movf	BUTTONS_task@btn,w
 22278  0E1A  3E05               	addlw	5
 22279  0E1B  0086               	movwf	6
 22280  0E1C  3001               	movlw	1	; select bank2/3
 22281  0E1D  0087               	movwf	7
 22282  0E1E  0826               	movf	BUTTONS_task@time,w
 22283  0E1F  3FC0               	movwi [0]fsr1
 22284  0E20  0827               	movf	BUTTONS_task@time+1,w
 22285  0E21  3FC1               	movwi [1]fsr1
 22286  0E22  2E29               	goto	l909
 22287  0E23                     l8884:	
 22288                           
 22289                           ;buttons.c: 77:             btn->state = STATE_UNPRESSED;
 22290  0E23  0828               	movf	BUTTONS_task@btn,w
 22291  0E24  3E03               	addlw	3
 22292  0E25  0086               	movwf	6
 22293  0E26  3001               	movlw	1	; select bank2/3
 22294  0E27  0087               	movwf	7
 22295  0E28  0181               	clrf	1
 22296  0E29                     l909:	
 22297                           ;buttons.c: 78:         }
 22298                           
 22299                           
 22300                           ;buttons.c: 80:         if (btn->state == STATE_UNPRESSED && btn->lastState == STATE_PRE
      +                          SSED) {
 22301  0E29  0828               	movf	BUTTONS_task@btn,w
 22302  0E2A  3E03               	addlw	3
 22303  0E2B  0086               	movwf	6
 22304  0E2C  3001               	movlw	1	; select bank2/3
 22305  0E2D  0087               	movwf	7
 22306  0E2E  0801               	movf	1,w
 22307  0E2F  1D03               	btfss	3,2
 22308  0E30  2E41               	goto	l8890
 22309  0E31  0828               	movf	BUTTONS_task@btn,w
 22310  0E32  3E04               	addlw	4
 22311  0E33  0086               	movwf	6
 22312  0E34  3001               	movlw	1	; select bank2/3
 22313  0E35  0087               	movwf	7
 22314  0E36  0301               	decf	1,w
 22315  0E37  1D03               	btfss	3,2
 22316  0E38  2E41               	goto	l8890
 22317                           
 22318                           ;buttons.c: 82:             btn->event = EVENT_PRESSED;
 22319  0E39  0828               	movf	BUTTONS_task@btn,w
 22320  0E3A  3E07               	addlw	7
 22321  0E3B  0086               	movwf	6
 22322  0E3C  3001               	movlw	1	; select bank2/3
 22323  0E3D  0087               	movwf	7
 22324  0E3E  0181               	clrf	1
 22325  0E3F  0A81               	incf	1,f
 22326                           
 22327                           ;buttons.c: 83:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 22328  0E40  2E97               	goto	l911
 22329  0E41                     l8890:	
 22330  0E41  0828               	movf	BUTTONS_task@btn,w
 22331  0E42  3E03               	addlw	3
 22332  0E43  0086               	movwf	6
 22333  0E44  3001               	movlw	1	; select bank2/3
 22334  0E45  0087               	movwf	7
 22335  0E46  0301               	decf	1,w
 22336  0E47  1D03               	btfss	3,2
 22337  0E48  2E78               	goto	l8902
 22338  0E49  0828               	movf	BUTTONS_task@btn,w
 22339  0E4A  3E04               	addlw	4
 22340  0E4B  0086               	movwf	6
 22341  0E4C  3001               	movlw	1	; select bank2/3
 22342  0E4D  0087               	movwf	7
 22343  0E4E  0301               	decf	1,w
 22344  0E4F  1D03               	btfss	3,2
 22345  0E50  2E78               	goto	l8902
 22346                           
 22347                           ;buttons.c: 84:             if(time - btn->lastHoldTime > 200){
 22348  0E51  0828               	movf	BUTTONS_task@btn,w
 22349  0E52  3E05               	addlw	5
 22350  0E53  0086               	movwf	6
 22351  0E54  3001               	movlw	1	; select bank2/3
 22352  0E55  0087               	movwf	7
 22353  0E56  3F40               	moviw [0]fsr1
 22354  0E57  0226               	subwf	BUTTONS_task@time,w
 22355  0E58  00A2               	movwf	??_BUTTONS_task
 22356  0E59  3F41               	moviw [1]fsr1
 22357  0E5A  3B27               	subwfb	BUTTONS_task@time+1,w
 22358  0E5B  00A3               	movwf	??_BUTTONS_task+1
 22359  0E5C  3000               	movlw	0
 22360  0E5D  0223               	subwf	??_BUTTONS_task+1,w
 22361  0E5E  30C9               	movlw	201
 22362  0E5F  1903               	skipnz
 22363  0E60  0222               	subwf	??_BUTTONS_task,w
 22364  0E61  1C03               	skipc
 22365  0E62  2E65               	goto	l8898
 22366                           
 22367                           ;buttons.c: 85:                 btn->event = EVENT_HELD;
 22368  0E63  3003               	movlw	3
 22369  0E64  2E6F               	goto	L23
 22370  0E65                     l8898:	
 22371                           ;buttons.c: 86:             } else if(btn->event != EVENT_HELD) {
 22372                           
 22373  0E65  0828               	movf	BUTTONS_task@btn,w
 22374  0E66  3E07               	addlw	7
 22375  0E67  0086               	movwf	6
 22376  0E68  3001               	movlw	1	; select bank2/3
 22377  0E69  0087               	movwf	7
 22378  0E6A  3003               	movlw	3
 22379  0E6B  0601               	xorwf	1,w
 22380  0E6C  1903               	btfsc	3,2
 22381  0E6D  2E97               	goto	l911
 22382                           
 22383                           ;buttons.c: 87:                 btn->event = EVENT_INTER_HOLD;
 22384  0E6E  3002               	movlw	2
 22385  0E6F                     L23:	
 22386  0E6F  00A2               	movwf	??_BUTTONS_task
 22387  0E70  0828               	movf	BUTTONS_task@btn,w
 22388  0E71  3E07               	addlw	7
 22389  0E72  0086               	movwf	6
 22390  0E73  3001               	movlw	1	; select bank2/3
 22391  0E74  0087               	movwf	7
 22392  0E75  0822               	movf	??_BUTTONS_task,w
 22393  0E76  0081               	movwf	1
 22394  0E77  2E97               	goto	l911
 22395  0E78                     l8902:	
 22396  0E78  0828               	movf	BUTTONS_task@btn,w
 22397  0E79  3E03               	addlw	3
 22398  0E7A  0086               	movwf	6
 22399  0E7B  3001               	movlw	1	; select bank2/3
 22400  0E7C  0087               	movwf	7
 22401  0E7D  0801               	movf	1,w
 22402  0E7E  1D03               	btfss	3,2
 22403  0E7F  2E97               	goto	l911
 22404  0E80  0828               	movf	BUTTONS_task@btn,w
 22405  0E81  3E04               	addlw	4
 22406  0E82  0086               	movwf	6
 22407  0E83  3001               	movlw	1	; select bank2/3
 22408  0E84  0087               	movwf	7
 22409  0E85  0301               	decf	1,w
 22410  0E86  1D03               	btfss	3,2
 22411  0E87  2E97               	goto	l911
 22412  0E88  0828               	movf	BUTTONS_task@btn,w
 22413  0E89  3E07               	addlw	7
 22414  0E8A  0086               	movwf	6
 22415  0E8B  3001               	movlw	1	; select bank2/3
 22416  0E8C  0087               	movwf	7
 22417  0E8D  3003               	movlw	3
 22418  0E8E  0601               	xorwf	1,w
 22419  0E8F  1D03               	btfss	3,2
 22420  0E90  2E97               	goto	l911
 22421                           
 22422                           ;buttons.c: 90:             btn->event = EVENT_IDLE;
 22423  0E91  0828               	movf	BUTTONS_task@btn,w
 22424  0E92  3E07               	addlw	7
 22425  0E93  0086               	movwf	6
 22426  0E94  3001               	movlw	1	; select bank2/3
 22427  0E95  0087               	movwf	7
 22428  0E96  0181               	clrf	1
 22429  0E97                     l911:	
 22430                           
 22431                           ;buttons.c: 93:         btn->lastState = btn->state;
 22432  0E97  0828               	movf	BUTTONS_task@btn,w
 22433  0E98  3E03               	addlw	3
 22434  0E99  0086               	movwf	6
 22435  0E9A  3001               	movlw	1	; select bank2/3
 22436  0E9B  0087               	movwf	7
 22437  0E9C  0801               	movf	1,w
 22438  0E9D  00A2               	movwf	??_BUTTONS_task
 22439  0E9E  0828               	movf	BUTTONS_task@btn,w
 22440  0E9F  3E04               	addlw	4
 22441  0EA0  0086               	movwf	6
 22442  0EA1  3001               	movlw	1	; select bank2/3
 22443  0EA2  0087               	movwf	7
 22444  0EA3  0822               	movf	??_BUTTONS_task,w
 22445  0EA4  0081               	movwf	1
 22446                           
 22447                           ;buttons.c: 94:     }
 22448  0EA5  3001               	movlw	1
 22449  0EA6  00A2               	movwf	??_BUTTONS_task
 22450  0EA7  0822               	movf	??_BUTTONS_task,w
 22451  0EA8  07A5               	addwf	BUTTONS_task@i,f
 22452  0EA9  3004               	movlw	4
 22453  0EAA  0225               	subwf	BUTTONS_task@i,w
 22454  0EAB  1803               	btfsc	3,0
 22455  0EAC  0008               	return
 22456  0EAD  2DE2               	goto	l8876
 22457  0EAE                     __end_of_BUTTONS_task:	
 22458                           
 22459                           	psect	text82
 22460  1357                     __ptext82:	
 22461 ;; *************** function _BUTTONS_init *****************
 22462 ;; Defined at:
 22463 ;;		line 23 in file "buttons.c"
 22464 ;; Parameters:    Size  Location     Type
 22465 ;;		None
 22466 ;; Auto vars:     Size  Location     Type
 22467 ;;		None
 22468 ;; Return value:  Size  Location     Type
 22469 ;;                  1    wreg      void 
 22470 ;; Registers used:
 22471 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22472 ;; Tracked objects:
 22473 ;;		On entry : 0/0
 22474 ;;		On exit  : 0/0
 22475 ;;		Unchanged: 0/0
 22476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22479 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22480 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22481 ;;Total ram usage:        1 bytes
 22482 ;; Hardware stack levels used:    1
 22483 ;; Hardware stack levels required when called:    5
 22484 ;; This function calls:
 22485 ;;		_GPIO_init
 22486 ;;		_init
 22487 ;; This function is called by:
 22488 ;;		_main
 22489 ;; This function uses a non-reentrant model
 22490 ;;
 22491                           
 22492                           
 22493                           ;psect for function _BUTTONS_init
 22494  1357                     _BUTTONS_init:	
 22495                           
 22496                           ;buttons.c: 24:     menu = &buttons[0];
 22497                           
 22498                           ;incstack = 0
 22499                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22500  1357  30C0               	movlw	(low (_buttons| (0+256)))& (0+255)
 22501  1358  0140               	movlb	0	; select bank0
 22502  1359  00A5               	movwf	??_BUTTONS_init
 22503  135A  0825               	movf	??_BUTTONS_init,w
 22504  135B  0141               	movlb	1	; select bank1
 22505  135C  00BD               	movwf	_menu^(0+128)
 22506                           
 22507                           ;buttons.c: 25:     up = &buttons[1];
 22508  135D  30C8               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 22509  135E  0140               	movlb	0	; select bank0
 22510  135F  00A5               	movwf	??_BUTTONS_init
 22511  1360  0825               	movf	??_BUTTONS_init,w
 22512  1361  0141               	movlb	1	; select bank1
 22513  1362  00BC               	movwf	_up^(0+128)
 22514                           
 22515                           ;buttons.c: 26:     down = &buttons[2];
 22516  1363  30D0               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 22517  1364  0140               	movlb	0	; select bank0
 22518  1365  00A5               	movwf	??_BUTTONS_init
 22519  1366  0825               	movf	??_BUTTONS_init,w
 22520  1367  0141               	movlb	1	; select bank1
 22521  1368  00BB               	movwf	_down^(0+128)
 22522                           
 22523                           ;buttons.c: 27:     enter = &buttons[3];
 22524  1369  30D8               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 22525  136A  0140               	movlb	0	; select bank0
 22526  136B  00A5               	movwf	??_BUTTONS_init
 22527  136C  0825               	movf	??_BUTTONS_init,w
 22528  136D  0141               	movlb	1	; select bank1
 22529  136E  00BA               	movwf	_enter^(0+128)
 22530                           
 22531                           ;buttons.c: 29:     init(menu, &PORTC, 2);
 22532  136F  300E               	movlw	14
 22533  1370  0140               	movlb	0	; select bank0
 22534  1371  00A0               	movwf	init@port
 22535  1372  3000               	movlw	0
 22536  1373  00A1               	movwf	init@port+1
 22537  1374  3002               	movlw	2
 22538  1375  00A5               	movwf	??_BUTTONS_init
 22539  1376  0825               	movf	??_BUTTONS_init,w
 22540  1377  00A2               	movwf	init@pin
 22541  1378  0141               	movlb	1	; select bank1
 22542  1379  083D               	movf	_menu^(0+128),w
 22543  137A  319F  2709  3193   	fcall	_init
 22544                           
 22545                           ;buttons.c: 30:     init(enter, &PORTA, 2);
 22546  137D  300C               	movlw	12
 22547  137E  0140               	movlb	0	; select bank0
 22548  137F  00A0               	movwf	init@port
 22549  1380  3000               	movlw	0
 22550  1381  00A1               	movwf	init@port+1
 22551  1382  3002               	movlw	2
 22552  1383  00A5               	movwf	??_BUTTONS_init
 22553  1384  0825               	movf	??_BUTTONS_init,w
 22554  1385  00A2               	movwf	init@pin
 22555  1386  0141               	movlb	1	; select bank1
 22556  1387  083A               	movf	_enter^(0+128),w
 22557  1388  319F  2709  3193   	fcall	_init
 22558                           
 22559                           ;buttons.c: 31:     init(down, &PORTC, 0);
 22560  138B  300E               	movlw	14
 22561  138C  0140               	movlb	0	; select bank0
 22562  138D  00A0               	movwf	init@port
 22563  138E  3000               	movlw	0
 22564  138F  00A1               	movwf	init@port+1
 22565  1390  01A2               	clrf	init@pin
 22566  1391  0141               	movlb	1	; select bank1
 22567  1392  083B               	movf	_down^(0+128),w
 22568  1393  319F  2709  3193   	fcall	_init
 22569                           
 22570                           ;buttons.c: 32:     init(up, &PORTC, 1);
 22571  1396  300E               	movlw	14
 22572  1397  0140               	movlb	0	; select bank0
 22573  1398  00A0               	movwf	init@port
 22574  1399  3000               	movlw	0
 22575  139A  00A1               	movwf	init@port+1
 22576  139B  01A2               	clrf	init@pin
 22577  139C  0AA2               	incf	init@pin,f
 22578  139D  0141               	movlb	1	; select bank1
 22579  139E  083C               	movf	_up^(0+128),w
 22580  139F  319F  2709  3193   	fcall	_init
 22581                           
 22582                           ;buttons.c: 34:     GPIO_init();
 22583  13A2  319D  2547         	fcall	_GPIO_init
 22584  13A4  0008               	return
 22585  13A5                     __end_of_BUTTONS_init:	
 22586                           
 22587                           	psect	text83
 22588  1F09                     __ptext83:	
 22589 ;; *************** function _init *****************
 22590 ;; Defined at:
 22591 ;;		line 16 in file "buttons.c"
 22592 ;; Parameters:    Size  Location     Type
 22593 ;;  btn             1    wreg     PTR struct .
 22594 ;;		 -> buttons(32), NULL(0), 
 22595 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 22596 ;;		 -> PORTA(1), PORTC(1), 
 22597 ;;  pin             1    2[BANK0 ] unsigned char 
 22598 ;; Auto vars:     Size  Location     Type
 22599 ;;  btn             1    4[BANK0 ] PTR struct .
 22600 ;;		 -> buttons(32), NULL(0), 
 22601 ;; Return value:  Size  Location     Type
 22602 ;;                  1    wreg      void 
 22603 ;; Registers used:
 22604 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22605 ;; Tracked objects:
 22606 ;;		On entry : 0/0
 22607 ;;		On exit  : 0/0
 22608 ;;		Unchanged: 0/0
 22609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22610 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22611 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22612 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22613 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22614 ;;Total ram usage:        5 bytes
 22615 ;; Hardware stack levels used:    1
 22616 ;; Hardware stack levels required when called:    4
 22617 ;; This function calls:
 22618 ;;		Nothing
 22619 ;; This function is called by:
 22620 ;;		_BUTTONS_init
 22621 ;; This function uses a non-reentrant model
 22622 ;;
 22623                           
 22624                           
 22625                           ;psect for function _init
 22626  1F09                     _init:	
 22627                           
 22628                           ;incstack = 0
 22629                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 22630                           ;init@btn stored from wreg
 22631  1F09  0140               	movlb	0	; select bank0
 22632  1F0A  00A4               	movwf	init@btn
 22633                           
 22634                           ;buttons.c: 17:     btn->port = port;
 22635  1F0B  0824               	movf	init@btn,w
 22636  1F0C  0086               	movwf	6
 22637  1F0D  3001               	movlw	1	; select bank2/3
 22638  1F0E  0087               	movwf	7
 22639  1F0F  0820               	movf	init@port,w
 22640  1F10  3FC0               	movwi [0]fsr1
 22641  1F11  0821               	movf	init@port+1,w
 22642  1F12  3FC1               	movwi [1]fsr1
 22643                           
 22644                           ;buttons.c: 18:     btn->pin = pin;
 22645  1F13  0822               	movf	init@pin,w
 22646  1F14  00A3               	movwf	??_init
 22647  1F15  0824               	movf	init@btn,w
 22648  1F16  3E02               	addlw	2
 22649  1F17  0086               	movwf	6
 22650  1F18  3001               	movlw	1	; select bank2/3
 22651  1F19  0087               	movwf	7
 22652  1F1A  0823               	movf	??_init,w
 22653  1F1B  0081               	movwf	1
 22654                           
 22655                           ;buttons.c: 19:     btn->state = STATE_UNPRESSED;
 22656  1F1C  0824               	movf	init@btn,w
 22657  1F1D  3E03               	addlw	3
 22658  1F1E  0086               	movwf	6
 22659  1F1F  3001               	movlw	1	; select bank2/3
 22660  1F20  0087               	movwf	7
 22661  1F21  0181               	clrf	1
 22662                           
 22663                           ;buttons.c: 20:     btn->event = EVENT_IDLE;
 22664  1F22  0824               	movf	init@btn,w
 22665  1F23  3E07               	addlw	7
 22666  1F24  0086               	movwf	6
 22667  1F25  3001               	movlw	1	; select bank2/3
 22668  1F26  0087               	movwf	7
 22669  1F27  0181               	clrf	1
 22670  1F28  0008               	return
 22671  1F29                     __end_of_init:	
 22672                           
 22673                           	psect	text84
 22674  1D47                     __ptext84:	
 22675 ;; *************** function _GPIO_init *****************
 22676 ;; Defined at:
 22677 ;;		line 38 in file "buttons.c"
 22678 ;; Parameters:    Size  Location     Type
 22679 ;;		None
 22680 ;; Auto vars:     Size  Location     Type
 22681 ;;		None
 22682 ;; Return value:  Size  Location     Type
 22683 ;;                  1    wreg      void 
 22684 ;; Registers used:
 22685 ;;		None
 22686 ;; Tracked objects:
 22687 ;;		On entry : 0/0
 22688 ;;		On exit  : 0/0
 22689 ;;		Unchanged: 0/0
 22690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22695 ;;Total ram usage:        0 bytes
 22696 ;; Hardware stack levels used:    1
 22697 ;; Hardware stack levels required when called:    4
 22698 ;; This function calls:
 22699 ;;		Nothing
 22700 ;; This function is called by:
 22701 ;;		_BUTTONS_init
 22702 ;; This function uses a non-reentrant model
 22703 ;;
 22704                           
 22705                           
 22706                           ;psect for function _GPIO_init
 22707  1D47                     _GPIO_init:	
 22708                           
 22709                           ;buttons.c: 40:     TRISAbits.TRISA2 = 1;
 22710                           
 22711                           ;incstack = 0
 22712                           ; Regs used in _GPIO_init: []
 22713  1D47  0140               	movlb	0	; select bank0
 22714  1D48  1512               	bsf	18,2	;volatile
 22715                           
 22716                           ;buttons.c: 41:     ANSELAbits.ANSA2 = 0;
 22717  1D49  017E               	movlb	62	; select bank62
 22718  1D4A  1138               	bcf	56,2	;volatile
 22719                           
 22720                           ;buttons.c: 42:     WPUAbits.WPUA2 = 1;
 22721  1D4B  1539               	bsf	57,2	;volatile
 22722                           
 22723                           ;buttons.c: 44:     TRISCbits.TRISC0 = 1;
 22724  1D4C  0140               	movlb	0	; select bank0
 22725  1D4D  1414               	bsf	20,0	;volatile
 22726                           
 22727                           ;buttons.c: 45:     TRISCbits.TRISC1 = 1;
 22728  1D4E  1494               	bsf	20,1	;volatile
 22729                           
 22730                           ;buttons.c: 46:     TRISCbits.TRISC2 = 1;
 22731  1D4F  1514               	bsf	20,2	;volatile
 22732                           
 22733                           ;buttons.c: 47:     ANSELCbits.ANSC0 = 0;
 22734  1D50  017E               	movlb	62	; select bank62
 22735  1D51  104E               	bcf	78,0	;volatile
 22736                           
 22737                           ;buttons.c: 48:     ANSELCbits.ANSC1 = 0;
 22738  1D52  10CE               	bcf	78,1	;volatile
 22739                           
 22740                           ;buttons.c: 49:     ANSELCbits.ANSC2 = 0;
 22741  1D53  114E               	bcf	78,2	;volatile
 22742                           
 22743                           ;buttons.c: 50:     WPUCbits.WPUC0 = 1;
 22744  1D54  144F               	bsf	79,0	;volatile
 22745                           
 22746                           ;buttons.c: 51:     WPUCbits.WPUC1 = 1;
 22747  1D55  14CF               	bsf	79,1	;volatile
 22748                           
 22749                           ;buttons.c: 52:     WPUCbits.WPUC2 = 1;
 22750  1D56  154F               	bsf	79,2	;volatile
 22751  1D57  0008               	return
 22752  1D58                     __end_of_GPIO_init:	
 22753                           
 22754                           	psect	text85
 22755  0C0C                     __ptext85:	
 22756 ;; *************** function _BEAT_task *****************
 22757 ;; Defined at:
 22758 ;;		line 65 in file "beat.c"
 22759 ;; Parameters:    Size  Location     Type
 22760 ;;		None
 22761 ;; Auto vars:     Size  Location     Type
 22762 ;;  offset          2   10[BANK0 ] unsigned short 
 22763 ;; Return value:  Size  Location     Type
 22764 ;;                  1    wreg      void 
 22765 ;; Registers used:
 22766 ;;		wreg, status,2, status,0, pclath, cstack
 22767 ;; Tracked objects:
 22768 ;;		On entry : 0/0
 22769 ;;		On exit  : 0/0
 22770 ;;		Unchanged: 0/0
 22771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22773 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22774 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22775 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22776 ;;Total ram usage:        4 bytes
 22777 ;; Hardware stack levels used:    1
 22778 ;; Hardware stack levels required when called:    5
 22779 ;; This function calls:
 22780 ;;		_ADCC_SetUpperThreshold
 22781 ;;		_CLOCK_getTime
 22782 ;;		___lwdiv
 22783 ;; This function is called by:
 22784 ;;		_main
 22785 ;; This function uses a non-reentrant model
 22786 ;;
 22787                           
 22788                           
 22789                           ;psect for function _BEAT_task
 22790  0C0C                     _BEAT_task:	
 22791                           
 22792                           ;beat.c: 68:     if (CLOCK_getTime() - lastRun < delay)
 22793                           
 22794                           ;incstack = 0
 22795                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 22796  0C0C  319C  2469  318C   	fcall	_CLOCK_getTime
 22797  0C0F  0142               	movlb	2	; select bank2
 22798  0C10  083E               	movf	_lastRun^(0+256),w
 22799  0C11  0140               	movlb	0	; select bank0
 22800  0C12  0220               	subwf	?_CLOCK_getTime,w
 22801  0C13  00A8               	movwf	??_BEAT_task
 22802  0C14  0142               	movlb	2	; select bank2
 22803  0C15  083F               	movf	(_lastRun+1)^(0+256),w
 22804  0C16  0140               	movlb	0	; select bank0
 22805  0C17  3B21               	subwfb	?_CLOCK_getTime+1,w
 22806  0C18  00A9               	movwf	??_BEAT_task+1
 22807  0C19  0142               	movlb	2	; select bank2
 22808  0C1A  086A               	movf	(_delay+1)^(0+256),w
 22809  0C1B  0140               	movlb	0	; select bank0
 22810  0C1C  0229               	subwf	??_BEAT_task+1,w
 22811  0C1D  1D03               	skipz
 22812  0C1E  2C23               	goto	u9635
 22813  0C1F  0142               	movlb	2	; select bank2
 22814  0C20  0869               	movf	_delay^(0+256),w
 22815  0C21  0140               	movlb	0	; select bank0
 22816  0C22  0228               	subwf	??_BEAT_task,w
 22817  0C23                     u9635:	
 22818  0C23  1C03               	btfss	3,0
 22819  0C24  0008               	return
 22820                           
 22821                           ;beat.c: 71:     lastRun = CLOCK_getTime();
 22822  0C25  319C  2469  318C   	fcall	_CLOCK_getTime
 22823  0C28  0140               	movlb	0	; select bank0
 22824  0C29  0821               	movf	?_CLOCK_getTime+1,w
 22825  0C2A  0142               	movlb	2	; select bank2
 22826  0C2B  00BF               	movwf	(_lastRun+1)^(0+256)
 22827  0C2C  0140               	movlb	0	; select bank0
 22828  0C2D  0820               	movf	?_CLOCK_getTime,w
 22829  0C2E  0142               	movlb	2	; select bank2
 22830  0C2F  00BE               	movwf	_lastRun^(0+256)
 22831                           
 22832                           ;beat.c: 73:     if (thresholdExceeded == 1) {
 22833  0C30  0141               	movlb	1	; select bank1
 22834  0C31  032D               	decf	_thresholdExceeded^(0+128),w
 22835  0C32  1D03               	btfss	3,2
 22836  0C33  2C3A               	goto	l9096
 22837                           
 22838                           ;beat.c: 77:         thresholdCount++;
 22839  0C34  3001               	movlw	1
 22840  0C35  0142               	movlb	2	; select bank2
 22841  0C36  07BC               	addwf	_thresholdCount^(0+256),f
 22842  0C37  3000               	movlw	0
 22843  0C38  3DBD               	addwfc	(_thresholdCount+1)^(0+256),f
 22844                           
 22845                           ;beat.c: 78:     } else {
 22846  0C39  2C41               	goto	l9100
 22847  0C3A                     l9096:	
 22848                           
 22849                           ;beat.c: 80:         thresholdCount = 0;
 22850  0C3A  0142               	movlb	2	; select bank2
 22851  0C3B  01BC               	clrf	_thresholdCount^(0+256)
 22852  0C3C  01BD               	clrf	(_thresholdCount+1)^(0+256)
 22853                           
 22854                           ;beat.c: 81:         delay = 30;
 22855  0C3D  301E               	movlw	30
 22856  0C3E  00E9               	movwf	_delay^(0+256)
 22857  0C3F  3000               	movlw	0
 22858  0C40  00EA               	movwf	(_delay^(0+256)+1)
 22859  0C41                     l9100:	
 22860                           
 22861                           ;beat.c: 87:     if (thresholdExceeded == 1 && lastDetected == 0) {
 22862  0C41  0141               	movlb	1	; select bank1
 22863  0C42  032D               	decf	_thresholdExceeded^(0+128),w
 22864  0C43  1D03               	btfss	3,2
 22865  0C44  2C8A               	goto	l9118
 22866  0C45  0142               	movlb	2	; select bank2
 22867  0C46  084C               	movf	_lastDetected^(0+256),w
 22868  0C47  1D03               	btfss	3,2
 22869  0C48  2C8A               	goto	l9118
 22870                           
 22871                           ;beat.c: 89:         detected = 1;
 22872  0C49  0141               	movlb	1	; select bank1
 22873  0C4A  01AE               	clrf	_detected^(0+128)
 22874  0C4B  0AAE               	incf	_detected^(0+128),f
 22875                           
 22876                           ;beat.c: 92:         delay = 50;
 22877  0C4C  3032               	movlw	50
 22878  0C4D  0142               	movlb	2	; select bank2
 22879  0C4E  00E9               	movwf	_delay^(0+256)
 22880  0C4F  3000               	movlw	0
 22881  0C50  00EA               	movwf	(_delay^(0+256)+1)
 22882                           
 22883                           ;beat.c: 95:         time_t offset = CLOCK_getTime() - lastBeat;
 22884  0C51  319C  2469  318C   	fcall	_CLOCK_getTime
 22885  0C54  0142               	movlb	2	; select bank2
 22886  0C55  0842               	movf	_lastBeat^(0+256),w
 22887  0C56  0140               	movlb	0	; select bank0
 22888  0C57  0220               	subwf	?_CLOCK_getTime,w
 22889  0C58  00AA               	movwf	BEAT_task@offset
 22890  0C59  0142               	movlb	2	; select bank2
 22891  0C5A  0843               	movf	(_lastBeat+1)^(0+256),w
 22892  0C5B  0140               	movlb	0	; select bank0
 22893  0C5C  3B21               	subwfb	?_CLOCK_getTime+1,w
 22894  0C5D  00AB               	movwf	BEAT_task@offset+1
 22895                           
 22896                           ;beat.c: 97:         lastBeat = CLOCK_getTime();
 22897  0C5E  319C  2469  318C   	fcall	_CLOCK_getTime
 22898  0C61  0140               	movlb	0	; select bank0
 22899  0C62  0821               	movf	?_CLOCK_getTime+1,w
 22900  0C63  0142               	movlb	2	; select bank2
 22901  0C64  00C3               	movwf	(_lastBeat+1)^(0+256)
 22902  0C65  0140               	movlb	0	; select bank0
 22903  0C66  0820               	movf	?_CLOCK_getTime,w
 22904  0C67  0142               	movlb	2	; select bank2
 22905  0C68  00C2               	movwf	_lastBeat^(0+256)
 22906                           
 22907                           ;beat.c: 99:         if (offset < 150)
 22908  0C69  3000               	movlw	0
 22909  0C6A  0140               	movlb	0	; select bank0
 22910  0C6B  022B               	subwf	BEAT_task@offset+1,w
 22911  0C6C  3096               	movlw	150
 22912  0C6D  1903               	skipnz
 22913  0C6E  022A               	subwf	BEAT_task@offset,w
 22914  0C6F  1803               	skipnc
 22915  0C70  2C77               	goto	l9116
 22916                           
 22917                           ;beat.c: 100:             bpm = 400;
 22918  0C71  3090               	movlw	144
 22919  0C72  0142               	movlb	2	; select bank2
 22920  0C73  00C0               	movwf	_bpm^(0+256)
 22921  0C74  3001               	movlw	1
 22922  0C75  00C1               	movwf	(_bpm^(0+256)+1)
 22923  0C76  2C8A               	goto	l9118
 22924  0C77                     l9116:	
 22925                           
 22926                           ;beat.c: 102:             bpm = 60 * 1000 / offset;
 22927  0C77  082B               	movf	BEAT_task@offset+1,w
 22928  0C78  00A1               	movwf	___lwdiv@divisor+1
 22929  0C79  082A               	movf	BEAT_task@offset,w
 22930  0C7A  00A0               	movwf	___lwdiv@divisor
 22931  0C7B  3060               	movlw	96
 22932  0C7C  00A2               	movwf	___lwdiv@dividend
 22933  0C7D  30EA               	movlw	234
 22934  0C7E  00A3               	movwf	___lwdiv@dividend+1
 22935  0C7F  3191  21ED  318C   	fcall	___lwdiv
 22936  0C82  0140               	movlb	0	; select bank0
 22937  0C83  0821               	movf	?___lwdiv+1,w
 22938  0C84  0142               	movlb	2	; select bank2
 22939  0C85  00C1               	movwf	(_bpm+1)^(0+256)
 22940  0C86  0140               	movlb	0	; select bank0
 22941  0C87  0820               	movf	?___lwdiv,w
 22942  0C88  0142               	movlb	2	; select bank2
 22943  0C89  00C0               	movwf	_bpm^(0+256)
 22944  0C8A                     l9118:	
 22945                           
 22946                           ;beat.c: 108:     lastDetected = thresholdExceeded;
 22947  0C8A  0141               	movlb	1	; select bank1
 22948  0C8B  082D               	movf	_thresholdExceeded^(0+128),w
 22949  0C8C  0140               	movlb	0	; select bank0
 22950  0C8D  00A8               	movwf	??_BEAT_task
 22951  0C8E  0828               	movf	??_BEAT_task,w
 22952  0C8F  0142               	movlb	2	; select bank2
 22953  0C90  00CC               	movwf	_lastDetected^(0+256)
 22954                           
 22955                           ;beat.c: 109:     thresholdExceeded = 0;
 22956  0C91  0141               	movlb	1	; select bank1
 22957  0C92  01AD               	clrf	_thresholdExceeded^(0+128)
 22958                           
 22959                           ;beat.c: 111:     if (thresholdCount > 3) {
 22960  0C93  0142               	movlb	2	; select bank2
 22961  0C94  083D               	movf	(_thresholdCount+1)^(0+256),w
 22962  0C95  3A80               	xorlw	128
 22963  0C96  0140               	movlb	0	; select bank0
 22964  0C97  00A8               	movwf	??_BEAT_task
 22965  0C98  3080               	movlw	128
 22966  0C99  0228               	subwf	??_BEAT_task,w
 22967  0C9A  1D03               	skipz
 22968  0C9B  2C9F               	goto	u9685
 22969  0C9C  3004               	movlw	4
 22970  0C9D  0142               	movlb	2	; select bank2
 22971  0C9E  023C               	subwf	_thresholdCount^(0+256),w
 22972  0C9F                     u9685:	
 22973  0C9F  1C03               	skipc
 22974  0CA0  2CBE               	goto	l9132
 22975                           
 22976                           ;beat.c: 112:         threshold += 1;
 22977  0CA1  3001               	movlw	1
 22978  0CA2  0142               	movlb	2	; select bank2
 22979  0CA3  07EB               	addwf	_threshold^(0+256),f
 22980  0CA4  3000               	movlw	0
 22981  0CA5  3DEC               	addwfc	(_threshold+1)^(0+256),f
 22982                           
 22983                           ;beat.c: 113:         ADCC_SetUpperThreshold(threshold);
 22984  0CA6  086C               	movf	(_threshold+1)^(0+256),w
 22985  0CA7  0140               	movlb	0	; select bank0
 22986  0CA8  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 22987  0CA9  0142               	movlb	2	; select bank2
 22988  0CAA  086B               	movf	_threshold^(0+256),w
 22989  0CAB  0140               	movlb	0	; select bank0
 22990  0CAC  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 22991  0CAD  319C  2457  318C   	fcall	_ADCC_SetUpperThreshold
 22992                           
 22993                           ;beat.c: 114:         thresholdCount = 0;
 22994  0CB0  0142               	movlb	2	; select bank2
 22995  0CB1  01BC               	clrf	_thresholdCount^(0+256)
 22996  0CB2  01BD               	clrf	(_thresholdCount+1)^(0+256)
 22997                           
 22998                           ;beat.c: 117:         lastBeat = CLOCK_getTime();
 22999  0CB3  319C  2469         	fcall	_CLOCK_getTime
 23000  0CB5  0140               	movlb	0	; select bank0
 23001  0CB6  0821               	movf	?_CLOCK_getTime+1,w
 23002  0CB7  0142               	movlb	2	; select bank2
 23003  0CB8  00C3               	movwf	(_lastBeat+1)^(0+256)
 23004  0CB9  0140               	movlb	0	; select bank0
 23005  0CBA  0820               	movf	?_CLOCK_getTime,w
 23006  0CBB  0142               	movlb	2	; select bank2
 23007  0CBC  00C2               	movwf	_lastBeat^(0+256)
 23008                           
 23009                           ;beat.c: 118:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 23010  0CBD  0008               	return
 23011  0CBE                     l9132:	
 23012  0CBE  319C  2469  318C   	fcall	_CLOCK_getTime
 23013  0CC1  0142               	movlb	2	; select bank2
 23014  0CC2  0842               	movf	_lastBeat^(0+256),w
 23015  0CC3  0140               	movlb	0	; select bank0
 23016  0CC4  0220               	subwf	?_CLOCK_getTime,w
 23017  0CC5  00A8               	movwf	??_BEAT_task
 23018  0CC6  0142               	movlb	2	; select bank2
 23019  0CC7  0843               	movf	(_lastBeat+1)^(0+256),w
 23020  0CC8  0140               	movlb	0	; select bank0
 23021  0CC9  3B21               	subwfb	?_CLOCK_getTime+1,w
 23022  0CCA  00A9               	movwf	??_BEAT_task+1
 23023  0CCB  3003               	movlw	3
 23024  0CCC  0229               	subwf	??_BEAT_task+1,w
 23025  0CCD  30E9               	movlw	233
 23026  0CCE  1903               	skipnz
 23027  0CCF  0228               	subwf	??_BEAT_task,w
 23028  0CD0  1C03               	skipc
 23029  0CD1  0008               	return
 23030                           
 23031                           ;beat.c: 119:         threshold -= 1;
 23032  0CD2  3001               	movlw	1
 23033  0CD3  0142               	movlb	2	; select bank2
 23034  0CD4  02EB               	subwf	_threshold^(0+256),f
 23035  0CD5  3000               	movlw	0
 23036  0CD6  3BEC               	subwfb	(_threshold+1)^(0+256),f
 23037                           
 23038                           ;beat.c: 120:         ADCC_SetUpperThreshold(threshold);
 23039  0CD7  086C               	movf	(_threshold+1)^(0+256),w
 23040  0CD8  0140               	movlb	0	; select bank0
 23041  0CD9  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 23042  0CDA  0142               	movlb	2	; select bank2
 23043  0CDB  086B               	movf	_threshold^(0+256),w
 23044  0CDC  0140               	movlb	0	; select bank0
 23045  0CDD  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 23046  0CDE  319C  2457         	fcall	_ADCC_SetUpperThreshold
 23047  0CE0  0008               	return
 23048  0CE1                     __end_of_BEAT_task:	
 23049                           
 23050                           	psect	text86
 23051  11ED                     __ptext86:	
 23052 ;; *************** function ___lwdiv *****************
 23053 ;; Defined at:
 23054 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
 23055 ;; Parameters:    Size  Location     Type
 23056 ;;  divisor         2    0[BANK0 ] unsigned int 
 23057 ;;  dividend        2    2[BANK0 ] unsigned int 
 23058 ;; Auto vars:     Size  Location     Type
 23059 ;;  quotient        2    5[BANK0 ] unsigned int 
 23060 ;;  counter         1    7[BANK0 ] unsigned char 
 23061 ;; Return value:  Size  Location     Type
 23062 ;;                  2    0[BANK0 ] unsigned int 
 23063 ;; Registers used:
 23064 ;;		wreg, status,2, status,0
 23065 ;; Tracked objects:
 23066 ;;		On entry : 0/0
 23067 ;;		On exit  : 0/0
 23068 ;;		Unchanged: 0/0
 23069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23070 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23071 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23072 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23073 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23074 ;;Total ram usage:        8 bytes
 23075 ;; Hardware stack levels used:    1
 23076 ;; Hardware stack levels required when called:    4
 23077 ;; This function calls:
 23078 ;;		Nothing
 23079 ;; This function is called by:
 23080 ;;		_TM1650_fastPrintNum
 23081 ;;		_TM1650_fastPrintNum_3digit
 23082 ;;		_BEAT_task
 23083 ;; This function uses a non-reentrant model
 23084 ;;
 23085                           
 23086                           
 23087                           ;psect for function ___lwdiv
 23088  11ED                     ___lwdiv:	
 23089                           
 23090                           ;incstack = 0
 23091                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 23092  11ED  0140               	movlb	0	; select bank0
 23093  11EE  01A5               	clrf	___lwdiv@quotient
 23094  11EF  01A6               	clrf	___lwdiv@quotient+1
 23095  11F0  0820               	movf	___lwdiv@divisor,w
 23096  11F1  0421               	iorwf	___lwdiv@divisor+1,w
 23097  11F2  1903               	btfsc	3,2
 23098  11F3  2A1D               	goto	l5140
 23099  11F4  01A7               	clrf	___lwdiv@counter
 23100  11F5  0AA7               	incf	___lwdiv@counter,f
 23101  11F6                     l5128:	
 23102  11F6  1BA1               	btfsc	___lwdiv@divisor+1,7
 23103  11F7  2A02               	goto	l5130
 23104  11F8  3001               	movlw	1
 23105  11F9                     u3885:	
 23106  11F9  35A0               	lslf	___lwdiv@divisor,f
 23107  11FA  0DA1               	rlf	___lwdiv@divisor+1,f
 23108  11FB  0B89               	decfsz	9,f
 23109  11FC  29F9               	goto	u3885
 23110  11FD  3001               	movlw	1
 23111  11FE  00A4               	movwf	??___lwdiv
 23112  11FF  0824               	movf	??___lwdiv,w
 23113  1200  07A7               	addwf	___lwdiv@counter,f
 23114  1201  29F6               	goto	l5128
 23115  1202                     l5130:	
 23116  1202  3001               	movlw	1
 23117  1203                     u3905:	
 23118  1203  35A5               	lslf	___lwdiv@quotient,f
 23119  1204  0DA6               	rlf	___lwdiv@quotient+1,f
 23120  1205  0B89               	decfsz	9,f
 23121  1206  2A03               	goto	u3905
 23122  1207  0821               	movf	___lwdiv@divisor+1,w
 23123  1208  0223               	subwf	___lwdiv@dividend+1,w
 23124  1209  1D03               	skipz
 23125  120A  2A0D               	goto	u3915
 23126  120B  0820               	movf	___lwdiv@divisor,w
 23127  120C  0222               	subwf	___lwdiv@dividend,w
 23128  120D                     u3915:	
 23129  120D  1C03               	skipc
 23130  120E  2A14               	goto	l5136
 23131  120F  0820               	movf	___lwdiv@divisor,w
 23132  1210  02A2               	subwf	___lwdiv@dividend,f
 23133  1211  0821               	movf	___lwdiv@divisor+1,w
 23134  1212  3BA3               	subwfb	___lwdiv@dividend+1,f
 23135  1213  1425               	bsf	___lwdiv@quotient,0
 23136  1214                     l5136:	
 23137  1214  3001               	movlw	1
 23138  1215                     u3925:	
 23139  1215  36A1               	lsrf	___lwdiv@divisor+1,f
 23140  1216  0CA0               	rrf	___lwdiv@divisor,f
 23141  1217  0B89               	decfsz	9,f
 23142  1218  2A15               	goto	u3925
 23143  1219  3001               	movlw	1
 23144  121A  02A7               	subwf	___lwdiv@counter,f
 23145  121B  1D03               	btfss	3,2
 23146  121C  2A02               	goto	l5130
 23147  121D                     l5140:	
 23148  121D  0826               	movf	___lwdiv@quotient+1,w
 23149  121E  00A1               	movwf	?___lwdiv+1
 23150  121F  0825               	movf	___lwdiv@quotient,w
 23151  1220  00A0               	movwf	?___lwdiv
 23152  1221  0008               	return
 23153  1222                     __end_of___lwdiv:	
 23154                           
 23155                           	psect	text87
 23156  1C69                     __ptext87:	
 23157 ;; *************** function _CLOCK_getTime *****************
 23158 ;; Defined at:
 23159 ;;		line 16 in file "clock.c"
 23160 ;; Parameters:    Size  Location     Type
 23161 ;;		None
 23162 ;; Auto vars:     Size  Location     Type
 23163 ;;		None
 23164 ;; Return value:  Size  Location     Type
 23165 ;;                  2    0[BANK0 ] unsigned short 
 23166 ;; Registers used:
 23167 ;;		wreg
 23168 ;; Tracked objects:
 23169 ;;		On entry : 0/0
 23170 ;;		On exit  : 0/0
 23171 ;;		Unchanged: 0/0
 23172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23173 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23177 ;;Total ram usage:        2 bytes
 23178 ;; Hardware stack levels used:    1
 23179 ;; Hardware stack levels required when called:    4
 23180 ;; This function calls:
 23181 ;;		Nothing
 23182 ;; This function is called by:
 23183 ;;		_main
 23184 ;;		_BUTTONS_task
 23185 ;;		_CONTROLLER_task
 23186 ;;		_CONTROL_DMX
 23187 ;;		_CONTROL_MANUAL
 23188 ;;		_BEAT_task
 23189 ;;		_LED_task_BEAT_STROBE
 23190 ;; This function uses a non-reentrant model
 23191 ;;
 23192                           
 23193                           
 23194                           ;psect for function _CLOCK_getTime
 23195  1C69                     _CLOCK_getTime:	
 23196                           
 23197                           ;clock.c: 17:     return currentTime;
 23198                           
 23199                           ;incstack = 0
 23200                           ; Regs used in _CLOCK_getTime: [wreg]
 23201  1C69  0142               	movlb	2	; select bank2
 23202  1C6A  0847               	movf	(_currentTime+1)^(0+256),w
 23203  1C6B  0140               	movlb	0	; select bank0
 23204  1C6C  00A1               	movwf	?_CLOCK_getTime+1
 23205  1C6D  0142               	movlb	2	; select bank2
 23206  1C6E  0846               	movf	_currentTime^(0+256),w
 23207  1C6F  0140               	movlb	0	; select bank0
 23208  1C70  00A0               	movwf	?_CLOCK_getTime
 23209  1C71  0008               	return
 23210  1C72                     __end_of_CLOCK_getTime:	
 23211                           
 23212                           	psect	text88
 23213  1DE3                     __ptext88:	
 23214 ;; *************** function _BEAT_init *****************
 23215 ;; Defined at:
 23216 ;;		line 39 in file "beat.c"
 23217 ;; Parameters:    Size  Location     Type
 23218 ;;		None
 23219 ;; Auto vars:     Size  Location     Type
 23220 ;;		None
 23221 ;; Return value:  Size  Location     Type
 23222 ;;                  1    wreg      void 
 23223 ;; Registers used:
 23224 ;;		wreg, status,2, status,0, pclath, cstack
 23225 ;; Tracked objects:
 23226 ;;		On entry : 0/0
 23227 ;;		On exit  : 0/0
 23228 ;;		Unchanged: 0/0
 23229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23234 ;;Total ram usage:        0 bytes
 23235 ;; Hardware stack levels used:    1
 23236 ;; Hardware stack levels required when called:    5
 23237 ;; This function calls:
 23238 ;;		_ADCC_SetADTIInterruptHandler
 23239 ;;		_ADCC_SetUpperThreshold
 23240 ;;		_ADCC_StartConversion
 23241 ;; This function is called by:
 23242 ;;		_main
 23243 ;; This function uses a non-reentrant model
 23244 ;;
 23245                           
 23246                           
 23247                           ;psect for function _BEAT_init
 23248  1DE3                     _BEAT_init:	
 23249                           
 23250                           ;beat.c: 40:     ADCC_SetUpperThreshold(threshold);
 23251                           
 23252                           ;incstack = 0
 23253                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 23254  1DE3  0142               	movlb	2	; select bank2
 23255  1DE4  086C               	movf	(_threshold+1)^(0+256),w
 23256  1DE5  0140               	movlb	0	; select bank0
 23257  1DE6  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 23258  1DE7  0142               	movlb	2	; select bank2
 23259  1DE8  086B               	movf	_threshold^(0+256),w
 23260  1DE9  0140               	movlb	0	; select bank0
 23261  1DEA  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 23262  1DEB  319C  2457  319D   	fcall	_ADCC_SetUpperThreshold
 23263                           
 23264                           ;beat.c: 41:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 23265  1DEE  3029               	movlw	low _adcThresholdHandler
 23266  1DEF  0140               	movlb	0	; select bank0
 23267  1DF0  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 23268  1DF1  301C               	movlw	high _adcThresholdHandler
 23269  1DF2  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 23270  1DF3  319C  244E  319D   	fcall	_ADCC_SetADTIInterruptHandler
 23271                           
 23272                           ;beat.c: 42:     ADCC_StartConversion(0x0F);
 23273  1DF6  300F               	movlw	15
 23274  1DF7  319C  2460         	fcall	_ADCC_StartConversion
 23275  1DF9  0008               	return
 23276  1DFA                     __end_of_BEAT_init:	
 23277                           
 23278                           	psect	text89
 23279  1C60                     __ptext89:	
 23280 ;; *************** function _ADCC_StartConversion *****************
 23281 ;; Defined at:
 23282 ;;		line 121 in file "mcc_generated_files/adcc.c"
 23283 ;; Parameters:    Size  Location     Type
 23284 ;;  channel         1    wreg     enum E10867
 23285 ;; Auto vars:     Size  Location     Type
 23286 ;;  channel         1    0[BANK0 ] enum E10867
 23287 ;; Return value:  Size  Location     Type
 23288 ;;                  1    wreg      void 
 23289 ;; Registers used:
 23290 ;;		wreg
 23291 ;; Tracked objects:
 23292 ;;		On entry : 0/0
 23293 ;;		On exit  : 0/0
 23294 ;;		Unchanged: 0/0
 23295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23297 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23299 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23300 ;;Total ram usage:        1 bytes
 23301 ;; Hardware stack levels used:    1
 23302 ;; Hardware stack levels required when called:    4
 23303 ;; This function calls:
 23304 ;;		Nothing
 23305 ;; This function is called by:
 23306 ;;		_BEAT_init
 23307 ;; This function uses a non-reentrant model
 23308 ;;
 23309                           
 23310                           
 23311                           ;psect for function _ADCC_StartConversion
 23312  1C60                     _ADCC_StartConversion:	
 23313                           
 23314                           ;incstack = 0
 23315                           ; Regs used in _ADCC_StartConversion: [wreg]
 23316                           ;ADCC_StartConversion@channel stored from wreg
 23317  1C60  0140               	movlb	0	; select bank0
 23318  1C61  00A0               	movwf	ADCC_StartConversion@channel
 23319                           
 23320                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 23321  1C62  0820               	movf	ADCC_StartConversion@channel,w
 23322  1C63  0141               	movlb	1	; select bank1
 23323  1C64  009F               	movwf	31	;volatile
 23324                           
 23325                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 23326  1C65  0142               	movlb	2	; select bank2
 23327  1C66  1791               	bsf	17,7	;volatile
 23328                           
 23329                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 23330  1C67  1411               	bsf	17,0	;volatile
 23331  1C68  0008               	return
 23332  1C69                     __end_of_ADCC_StartConversion:	
 23333                           
 23334                           	psect	text90
 23335  1C57                     __ptext90:	
 23336 ;; *************** function _ADCC_SetUpperThreshold *****************
 23337 ;; Defined at:
 23338 ;;		line 251 in file "mcc_generated_files/adcc.c"
 23339 ;; Parameters:    Size  Location     Type
 23340 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 23341 ;; Auto vars:     Size  Location     Type
 23342 ;;		None
 23343 ;; Return value:  Size  Location     Type
 23344 ;;                  1    wreg      void 
 23345 ;; Registers used:
 23346 ;;		wreg, status,2
 23347 ;; Tracked objects:
 23348 ;;		On entry : 0/0
 23349 ;;		On exit  : 0/0
 23350 ;;		Unchanged: 0/0
 23351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23352 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23355 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23356 ;;Total ram usage:        2 bytes
 23357 ;; Hardware stack levels used:    1
 23358 ;; Hardware stack levels required when called:    4
 23359 ;; This function calls:
 23360 ;;		Nothing
 23361 ;; This function is called by:
 23362 ;;		_BEAT_init
 23363 ;;		_BEAT_task
 23364 ;; This function uses a non-reentrant model
 23365 ;;
 23366                           
 23367                           
 23368                           ;psect for function _ADCC_SetUpperThreshold
 23369  1C57                     _ADCC_SetUpperThreshold:	
 23370                           
 23371                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 23372                           
 23373                           ;incstack = 0
 23374                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 23375  1C57  0140               	movlb	0	; select bank0
 23376  1C58  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 23377  1C59  0141               	movlb	1	; select bank1
 23378  1C5A  008F               	movwf	15	;volatile
 23379                           
 23380                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 23381  1C5B  0140               	movlb	0	; select bank0
 23382  1C5C  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 23383  1C5D  0141               	movlb	1	; select bank1
 23384  1C5E  008E               	movwf	14	;volatile
 23385  1C5F  0008               	return
 23386  1C60                     __end_of_ADCC_SetUpperThreshold:	
 23387                           
 23388                           	psect	text91
 23389  1C4E                     __ptext91:	
 23390 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 23391 ;; Defined at:
 23392 ;;		line 317 in file "mcc_generated_files/adcc.c"
 23393 ;; Parameters:    Size  Location     Type
 23394 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 23395 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 23396 ;; Auto vars:     Size  Location     Type
 23397 ;;		None
 23398 ;; Return value:  Size  Location     Type
 23399 ;;                  1    wreg      void 
 23400 ;; Registers used:
 23401 ;;		wreg
 23402 ;; Tracked objects:
 23403 ;;		On entry : 0/0
 23404 ;;		On exit  : 0/0
 23405 ;;		Unchanged: 0/0
 23406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23407 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23410 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23411 ;;Total ram usage:        2 bytes
 23412 ;; Hardware stack levels used:    1
 23413 ;; Hardware stack levels required when called:    4
 23414 ;; This function calls:
 23415 ;;		Nothing
 23416 ;; This function is called by:
 23417 ;;		_ADCC_Initialize
 23418 ;;		_BEAT_init
 23419 ;; This function uses a non-reentrant model
 23420 ;;
 23421                           
 23422                           
 23423                           ;psect for function _ADCC_SetADTIInterruptHandler
 23424  1C4E                     _ADCC_SetADTIInterruptHandler:	
 23425                           
 23426                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 23427                           
 23428                           ;incstack = 0
 23429                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 23430  1C4E  0140               	movlb	0	; select bank0
 23431  1C4F  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 23432  1C50  0142               	movlb	2	; select bank2
 23433  1C51  00DC               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 23434  1C52  0140               	movlb	0	; select bank0
 23435  1C53  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 23436  1C54  0142               	movlb	2	; select bank2
 23437  1C55  00DB               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 23438  1C56  0008               	return
 23439  1C57                     __end_of_ADCC_SetADTIInterruptHandler:	
 23440                           
 23441                           	psect	intentry
 23442  0004                     __pintentry:	
 23443 ;; *************** function _INTERRUPT_InterruptManager *****************
 23444 ;; Defined at:
 23445 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 23446 ;; Parameters:    Size  Location     Type
 23447 ;;		None
 23448 ;; Auto vars:     Size  Location     Type
 23449 ;;		None
 23450 ;; Return value:  Size  Location     Type
 23451 ;;                  1    wreg      void 
 23452 ;; Registers used:
 23453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23454 ;; Tracked objects:
 23455 ;;		On entry : 0/0
 23456 ;;		On exit  : 0/0
 23457 ;;		Unchanged: 0/0
 23458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23463 ;;Total ram usage:        0 bytes
 23464 ;; Hardware stack levels used:    1
 23465 ;; Hardware stack levels required when called:    3
 23466 ;; This function calls:
 23467 ;;		Absolute function
 23468 ;;		_ADCC_ThresholdISR
 23469 ;;		_DMX_interrupt
 23470 ;;		_EUSART1_Receive_ISR
 23471 ;;		_I2C1_BusCollisionISR
 23472 ;;		_I2C1_ISR
 23473 ;;		_TMR0_ISR
 23474 ;; This function is called by:
 23475 ;;		Interrupt level 1
 23476 ;; This function uses a non-reentrant model
 23477 ;;
 23478                           
 23479  0004                     _INTERRUPT_InterruptManager:	
 23480                           
 23481                           ;incstack = 0
 23482 ;; hardware stack exceeded
 23483  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 23484                           
 23485                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23486  0005  3180               	pagesel	$
 23487                           
 23488                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 23489  0006  014E               	movlb	14	; select bank14
 23490  0007  1A96               	btfsc	22,5	;volatile
 23491  0008  1E8C               	btfss	12,5	;volatile
 23492  0009  280E               	goto	i1l427
 23493                           
 23494                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 23495  000A  319D  250C  3180   	fcall	_TMR0_ISR
 23496                           
 23497                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 23498  000D  282E               	goto	i1l439
 23499  000E                     i1l427:	
 23500                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 23501                           
 23502  000E  1F0B               	btfss	11,6	;volatile
 23503  000F  282E               	goto	i1l439
 23504                           
 23505                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 23506  0010  1899               	btfsc	25,1	;volatile
 23507  0011  1C8F               	btfss	15,1	;volatile
 23508  0012  2817               	goto	i1l430
 23509                           
 23510                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 23511  0013  319C  2420  3180   	fcall	_I2C1_BusCollisionISR
 23512                           
 23513                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 23514  0016  282E               	goto	i1l439
 23515  0017                     i1l430:	
 23516                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 23517                           
 23518  0017  1819               	btfsc	25,0	;volatile
 23519  0018  1C0F               	btfss	15,0	;volatile
 23520  0019  281E               	goto	i1l432
 23521                           
 23522                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 23523  001A  318E  26AE  3180   	fcall	_I2C1_ISR
 23524                           
 23525                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 23526  001D  282E               	goto	i1l439
 23527  001E                     i1l432:	
 23528                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 23529                           
 23530  001E  1897               	btfsc	23,1	;volatile
 23531  001F  1C8D               	btfss	13,1	;volatile
 23532  0020  2825               	goto	i1l434
 23533                           
 23534                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             ADCC_ThresholdISR();
 23535  0021  319C  24FF  3180   	fcall	_ADCC_ThresholdISR
 23536                           
 23537                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 23538  0024  282E               	goto	i1l439
 23539  0025                     i1l434:	
 23540                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 23541                           
 23542  0025  1A99               	btfsc	25,5	;volatile
 23543  0026  1E8F               	btfss	15,5	;volatile
 23544  0027  282E               	goto	i1l439
 23545                           
 23546                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 23547  0028  0142               	movlb	2	; select bank2
 23548  0029  0866               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 23549  002A  008A               	movwf	10
 23550  002B  0865               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 23551  002C  000A               	callw
 23552  002D  3180               	pagesel	$
 23553  002E                     i1l439:	
 23554                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 23555                           
 23556  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 23557  002F  0009               	retfie
 23558  0030                     __end_of_INTERRUPT_InterruptManager:	
 23559                           
 23560                           	psect	text93
 23561  1D0C                     __ptext93:	
 23562 ;; *************** function _TMR0_ISR *****************
 23563 ;; Defined at:
 23564 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 23565 ;; Parameters:    Size  Location     Type
 23566 ;;		None
 23567 ;; Auto vars:     Size  Location     Type
 23568 ;;		None
 23569 ;; Return value:  Size  Location     Type
 23570 ;;                  1    wreg      void 
 23571 ;; Registers used:
 23572 ;;		wreg, status,2, status,0, pclath, cstack
 23573 ;; Tracked objects:
 23574 ;;		On entry : 0/0
 23575 ;;		On exit  : 0/0
 23576 ;;		Unchanged: 0/0
 23577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23582 ;;Total ram usage:        0 bytes
 23583 ;; Hardware stack levels used:    1
 23584 ;; Hardware stack levels required when called:    1
 23585 ;; This function calls:
 23586 ;;		Absolute function
 23587 ;;		_CLOCK_timerCallback
 23588 ;;		_TMR0_DefaultInterruptHandler
 23589 ;; This function is called by:
 23590 ;;		_INTERRUPT_InterruptManager
 23591 ;; This function uses a non-reentrant model
 23592 ;;
 23593                           
 23594                           
 23595                           ;psect for function _TMR0_ISR
 23596  1D0C                     _TMR0_ISR:	
 23597                           
 23598                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 23599                           
 23600                           ;incstack = 0
 23601 ;; hardware stack exceeded
 23602                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 23603  1D0C  014E               	movlb	14	; select bank14
 23604  1D0D  128C               	bcf	12,5	;volatile
 23605                           
 23606                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 23607  1D0E  0142               	movlb	2	; select bank2
 23608  1D0F  085D               	movf	_TMR0_InterruptHandler^(0+256),w
 23609  1D10  045E               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 23610  1D11  1903               	btfsc	3,2
 23611  1D12  0008               	return
 23612                           
 23613                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 23614  1D13  085E               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 23615  1D14  008A               	movwf	10
 23616  1D15  085D               	movf	_TMR0_InterruptHandler^(0+256),w
 23617  1D16  000A               	callw
 23618  1D17  319D               	pagesel	$
 23619  1D18  0008               	return
 23620  1D19                     __end_of_TMR0_ISR:	
 23621                           
 23622                           	psect	text94
 23623  1C32                     __ptext94:	
 23624 ;; *************** function _CLOCK_timerCallback *****************
 23625 ;; Defined at:
 23626 ;;		line 20 in file "clock.c"
 23627 ;; Parameters:    Size  Location     Type
 23628 ;;		None
 23629 ;; Auto vars:     Size  Location     Type
 23630 ;;		None
 23631 ;; Return value:  Size  Location     Type
 23632 ;;                  1    wreg      void 
 23633 ;; Registers used:
 23634 ;;		wreg
 23635 ;; Tracked objects:
 23636 ;;		On entry : 0/0
 23637 ;;		On exit  : 0/0
 23638 ;;		Unchanged: 0/0
 23639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23644 ;;Total ram usage:        0 bytes
 23645 ;; Hardware stack levels used:    1
 23646 ;; This function calls:
 23647 ;;		Nothing
 23648 ;; This function is called by:
 23649 ;;		_CLOCK_init
 23650 ;;		_TMR0_ISR
 23651 ;; This function uses a non-reentrant model
 23652 ;;
 23653                           
 23654                           
 23655                           ;psect for function _CLOCK_timerCallback
 23656  1C32                     _CLOCK_timerCallback:	
 23657                           
 23658                           ;clock.c: 21:     currentTime++;
 23659                           
 23660                           ;incstack = 0
 23661 ;; hardware stack exceeded
 23662                           ; Regs used in _CLOCK_timerCallback: [wreg]
 23663  1C32  3001               	movlw	1
 23664  1C33  0142               	movlb	2	; select bank2
 23665  1C34  07C6               	addwf	_currentTime^(0+256),f
 23666  1C35  3000               	movlw	0
 23667  1C36  3DC7               	addwfc	(_currentTime+1)^(0+256),f
 23668  1C37  0008               	return
 23669  1C38                     __end_of_CLOCK_timerCallback:	
 23670                           
 23671                           	psect	text95
 23672  1C17                     __ptext95:	
 23673 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 23674 ;; Defined at:
 23675 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 23676 ;; Parameters:    Size  Location     Type
 23677 ;;		None
 23678 ;; Auto vars:     Size  Location     Type
 23679 ;;		None
 23680 ;; Return value:  Size  Location     Type
 23681 ;;                  1    wreg      void 
 23682 ;; Registers used:
 23683 ;;		None
 23684 ;; Tracked objects:
 23685 ;;		On entry : 0/0
 23686 ;;		On exit  : 0/0
 23687 ;;		Unchanged: 0/0
 23688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23693 ;;Total ram usage:        0 bytes
 23694 ;; Hardware stack levels used:    1
 23695 ;; This function calls:
 23696 ;;		Nothing
 23697 ;; This function is called by:
 23698 ;;		_TMR0_Initialize
 23699 ;;		_TMR0_ISR
 23700 ;; This function uses a non-reentrant model
 23701 ;;
 23702                           
 23703                           
 23704                           ;psect for function _TMR0_DefaultInterruptHandler
 23705  1C17                     _TMR0_DefaultInterruptHandler:	
 23706                           
 23707                           ;incstack = 0
 23708 ;; hardware stack exceeded
 23709                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 23710  1C17  0008               	return
 23711  1C18                     __end_of_TMR0_DefaultInterruptHandler:	
 23712                           
 23713                           	psect	text96
 23714  0EAE                     __ptext96:	
 23715 ;; *************** function _I2C1_ISR *****************
 23716 ;; Defined at:
 23717 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 23718 ;; Parameters:    Size  Location     Type
 23719 ;;		None
 23720 ;; Auto vars:     Size  Location     Type
 23721 ;;		None
 23722 ;; Return value:  Size  Location     Type
 23723 ;;                  1    wreg      void 
 23724 ;; Registers used:
 23725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23726 ;; Tracked objects:
 23727 ;;		On entry : 0/0
 23728 ;;		On exit  : 0/0
 23729 ;;		Unchanged: 0/0
 23730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23733 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23734 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23735 ;;Total ram usage:        4 bytes
 23736 ;; Hardware stack levels used:    1
 23737 ;; Hardware stack levels required when called:    1
 23738 ;; This function calls:
 23739 ;;		_I2C1_FunctionComplete
 23740 ;;		_I2C1_Stop
 23741 ;; This function is called by:
 23742 ;;		_INTERRUPT_InterruptManager
 23743 ;; This function uses a non-reentrant model
 23744 ;;
 23745                           
 23746                           
 23747                           ;psect for function _I2C1_ISR
 23748  0EAE                     _I2C1_ISR:	
 23749                           
 23750                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 23751                           
 23752                           ;incstack = 0
 23753 ;; hardware stack exceeded
 23754                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23755  0EAE  014E               	movlb	14	; select bank14
 23756  0EAF  100F               	bcf	15,0	;volatile
 23757                           
 23758                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 23759  0EB0  0143               	movlb	3	; select bank3
 23760  0EB1  1F90               	btfss	16,7	;volatile
 23761  0EB2  2FD3               	goto	i1l6748
 23762                           
 23763                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 23764  0EB3  1390               	bcf	16,7	;volatile
 23765                           
 23766                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 23767  0EB4  0141               	movlb	1	; select bank1
 23768  0EB5  01C3               	clrf	_i2c1_state^(0+128)
 23769                           
 23770                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 23771  0EB6  0841               	movf	_p_i2c1_current^(0+128),w
 23772  0EB7  3E02               	addlw	2
 23773  0EB8  0086               	movwf	6
 23774  0EB9  3001               	movlw	1	; select bank2/3
 23775  0EBA  0087               	movwf	7
 23776  0EBB  0801               	movf	1,w
 23777  0EBC  0086               	movwf	6
 23778  0EBD  0187               	clrf	7
 23779  0EBE  0181               	clrf	1
 23780  0EBF  0A81               	incf	1,f
 23781                           
 23782                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 23783  0EC0  01C1               	clrf	_p_i2c1_current^(0+128)
 23784  0EC1  0008               	return
 23785  0EC2                     i1l547:	
 23786                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 23787                           
 23788                           
 23789                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 23790  0EC2  18A2               	btfsc	(_i2c1_object^(0+128)+2),1
 23791  0EC3  0008               	return
 23792                           
 23793                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 23794  0EC4  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 23795  0EC5  00F2               	movwf	??_I2C1_ISR
 23796  0EC6  0872               	movf	??_I2C1_ISR,w
 23797  0EC7  00C1               	movwf	_p_i2c1_current^(0+128)
 23798                           
 23799                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 23800  0EC8  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 23801  0EC9  0086               	movwf	6
 23802  0ECA  3001               	movlw	1	; select bank2/3
 23803  0ECB  0087               	movwf	7
 23804  0ECC  0801               	movf	1,w
 23805  0ECD  00F2               	movwf	??_I2C1_ISR
 23806  0ECE  0872               	movf	??_I2C1_ISR,w
 23807  0ECF  00C2               	movwf	_i2c1_trb_count^(0+128)
 23808                           
 23809                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 23810  0ED0  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 23811  0ED1  0086               	movwf	6
 23812  0ED2  3001               	movlw	1	; select bank2/3
 23813  0ED3  0087               	movwf	7
 23814  0ED4  3001               	movlw	1	; select bank2/3
 23815  0ED5  3F41               	moviw [1]fsr1
 23816  0ED6  00F7               	movwf	_p_i2c1_trb_current
 23817                           
 23818                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 23819  0ED7  3003               	movlw	3
 23820  0ED8  00F2               	movwf	??_I2C1_ISR
 23821  0ED9  0872               	movf	??_I2C1_ISR,w
 23822  0EDA  07A1               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 23823                           
 23824                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 23825  0EDB  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 23826  0EDC  3A5B               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 23827  0EDD  1D03               	skipz
 23828  0EDE  2EE3               	goto	i1l6636
 23829                           
 23830                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 23831  0EDF  3058               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 23832  0EE0  00F2               	movwf	??_I2C1_ISR
 23833  0EE1  0872               	movf	??_I2C1_ISR,w
 23834  0EE2  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 23835  0EE3                     i1l6636:	
 23836                           
 23837                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 23838  0EE3  1022               	bcf	(_i2c1_object^(0+128)+2),0
 23839                           
 23840                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 23841  0EE4  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 23842  0EE5  0620               	xorwf	_i2c1_object^(0+128),w
 23843  0EE6  1903               	btfsc	3,2
 23844                           
 23845                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 23846  0EE7  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 23847                           
 23848                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 23849                           
 23850                           ;mcc_generated_files/i2c1.c: 290:                 }
 23851  0EE8  0143               	movlb	3	; select bank3
 23852  0EE9  1411               	bsf	17,0	;volatile
 23853  0EEA                     i1l6640:	
 23854                           
 23855                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 23856  0EEA  3002               	movlw	2
 23857  0EEB  00F2               	movwf	??_I2C1_ISR
 23858  0EEC  0872               	movf	??_I2C1_ISR,w
 23859  0EED  0141               	movlb	1	; select bank1
 23860  0EEE  00C3               	movwf	_i2c1_state^(0+128)
 23861  0EEF  0008               	return
 23862  0EF0                     i1l552:	
 23863                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 23864                           
 23865  0EF0  2F7C               	goto	i1l573
 23866  0EF1                     i1l553:	
 23867                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 23868                           
 23869                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 23870                           
 23871                           
 23872                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 23873  0EF1  0143               	movlb	3	; select bank3
 23874  0EF2  1F11               	btfss	17,6	;volatile
 23875  0EF3  2EFD               	goto	i1l6648
 23876                           
 23877                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 23878  0EF4  3001               	movlw	1
 23879  0EF5  00F2               	movwf	??_I2C1_ISR
 23880  0EF6  0872               	movf	??_I2C1_ISR,w
 23881  0EF7  0141               	movlb	1	; select bank1
 23882  0EF8  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 23883                           
 23884                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 23885  0EF9  3004               	movlw	4
 23886  0EFA  319E  265B         	fcall	_I2C1_Stop
 23887                           
 23888                           ;mcc_generated_files/i2c1.c: 319:             }
 23889  0EFC  0008               	return
 23890  0EFD                     i1l6648:	
 23891                           
 23892                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 23893  0EFD  087B               	movf	I2C1_ISR@i2c_address+1,w
 23894  0EFE  00F3               	movwf	??_I2C1_ISR+1
 23895  0EFF  087A               	movf	I2C1_ISR@i2c_address,w
 23896  0F00  00F2               	movwf	??_I2C1_ISR
 23897  0F01  36F3               	lsrf	??_I2C1_ISR+1,f
 23898  0F02  0CF2               	rrf	??_I2C1_ISR,f
 23899  0F03  0872               	movf	??_I2C1_ISR,w
 23900  0F04  008C               	movwf	12	;volatile
 23901                           
 23902                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 23903  0F05  1C7A               	btfss	I2C1_ISR@i2c_address,0
 23904  0F06  2F0D               	goto	i1l6654
 23905                           
 23906                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 23907  0F07  300B               	movlw	11
 23908  0F08  00F2               	movwf	??_I2C1_ISR
 23909  0F09  0872               	movf	??_I2C1_ISR,w
 23910  0F0A  0141               	movlb	1	; select bank1
 23911  0F0B  00C3               	movwf	_i2c1_state^(0+128)
 23912                           
 23913                           ;mcc_generated_files/i2c1.c: 331:                 }
 23914  0F0C  0008               	return
 23915  0F0D                     i1l6654:	
 23916                           
 23917                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 23918  0F0D  3003               	movlw	3
 23919  0F0E  00F2               	movwf	??_I2C1_ISR
 23920  0F0F  0872               	movf	??_I2C1_ISR,w
 23921  0F10  0141               	movlb	1	; select bank1
 23922  0F11  00C3               	movwf	_i2c1_state^(0+128)
 23923  0F12  0008               	return
 23924  0F13                     i1l558:	
 23925                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 23926                           
 23927                           
 23928                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 23929  0F13  0143               	movlb	3	; select bank3
 23930  0F14  1F11               	btfss	17,6	;volatile
 23931  0F15  2F1F               	goto	i1l559
 23932                           
 23933                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 23934  0F16  3001               	movlw	1
 23935  0F17  00F2               	movwf	??_I2C1_ISR
 23936  0F18  0872               	movf	??_I2C1_ISR,w
 23937  0F19  0141               	movlb	1	; select bank1
 23938  0F1A  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 23939                           
 23940                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 23941  0F1B  3004               	movlw	4
 23942  0F1C  319E  265B         	fcall	_I2C1_Stop
 23943                           
 23944                           ;mcc_generated_files/i2c1.c: 347:             }
 23945  0F1E  0008               	return
 23946  0F1F                     i1l559:	
 23947                           ;mcc_generated_files/i2c1.c: 348:             else
 23948                           
 23949                           
 23950                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 23951  0F1F  1491               	bsf	17,1	;volatile
 23952                           
 23953                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 23954  0F20  087B               	movf	I2C1_ISR@i2c_address+1,w
 23955  0F21  00F3               	movwf	??_I2C1_ISR+1
 23956  0F22  087A               	movf	I2C1_ISR@i2c_address,w
 23957  0F23  00F2               	movwf	??_I2C1_ISR
 23958  0F24  0873               	movf	??_I2C1_ISR+1,w
 23959  0F25  00F2               	movwf	??_I2C1_ISR
 23960  0F26  01F3               	clrf	??_I2C1_ISR+1
 23961  0F27  3006               	movlw	6
 23962  0F28  0572               	andwf	??_I2C1_ISR,w
 23963  0F29  00F4               	movwf	??_I2C1_ISR+2
 23964  0F2A  3000               	movlw	0
 23965  0F2B  0573               	andwf	??_I2C1_ISR+1,w
 23966  0F2C  00F5               	movwf	??_I2C1_ISR+3
 23967  0F2D  30F0               	movlw	240
 23968  0F2E  0474               	iorwf	??_I2C1_ISR+2,w
 23969  0F2F  00FA               	movwf	I2C1_ISR@i2c_address
 23970  0F30  3000               	movlw	0
 23971  0F31  0475               	iorwf	??_I2C1_ISR+3,w
 23972  0F32  00FB               	movwf	I2C1_ISR@i2c_address+1
 23973                           
 23974                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 23975  0F33  147A               	bsf	I2C1_ISR@i2c_address,0
 23976                           
 23977                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 23978  0F34  0141               	movlb	1	; select bank1
 23979  0F35  01BE               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 23980  0F36  0ABE               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 23981  0F37  2EEA               	goto	i1l6640
 23982  0F38                     i1l6668:	
 23983                           
 23984                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 23985  0F38  033E               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 23986  0F39  1903               	btfsc	3,2
 23987  0F3A  2F51               	goto	i1l6688
 23988                           
 23989                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 23990  0F3B  0877               	movf	_p_i2c1_trb_current,w
 23991  0F3C  0086               	movwf	6
 23992  0F3D  3001               	movlw	1	; select bank2/3
 23993  0F3E  0087               	movwf	7
 23994  0F3F  3F40               	moviw [0]fsr1
 23995  0F40  00FA               	movwf	I2C1_ISR@i2c_address
 23996  0F41  3F41               	moviw [1]fsr1
 23997  0F42  00FB               	movwf	I2C1_ISR@i2c_address+1
 23998                           
 23999                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 24000  0F43  0877               	movf	_p_i2c1_trb_current,w
 24001  0F44  0086               	movwf	6
 24002  0F45  3001               	movlw	1	; select bank2/3
 24003  0F46  0087               	movwf	7
 24004  0F47  3001               	movlw	1	; select bank2/3
 24005  0F48  3F43               	moviw [3]fsr1
 24006  0F49  00C0               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 24007                           
 24008                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 24009  0F4A  0877               	movf	_p_i2c1_trb_current,w
 24010  0F4B  0086               	movwf	6
 24011  0F4C  3001               	movlw	1	; select bank2/3
 24012  0F4D  0087               	movwf	7
 24013  0F4E  3001               	movlw	1	; select bank2/3
 24014  0F4F  3F42               	moviw [2]fsr1
 24015  0F50  00BF               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 24016  0F51                     i1l6688:	
 24017                           
 24018                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 24019  0F51  087A               	movf	I2C1_ISR@i2c_address,w
 24020  0F52  0143               	movlb	3	; select bank3
 24021  0F53  008C               	movwf	12	;volatile
 24022                           
 24023                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 24024  0F54  1C7A               	btfss	I2C1_ISR@i2c_address,0
 24025  0F55  2F0D               	goto	i1l6654
 24026                           
 24027                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 24028  0F56  3005               	movlw	5
 24029  0F57  00F2               	movwf	??_I2C1_ISR
 24030  0F58  0872               	movf	??_I2C1_ISR,w
 24031  0F59  0141               	movlb	1	; select bank1
 24032  0F5A  00C3               	movwf	_i2c1_state^(0+128)
 24033                           
 24034                           ;mcc_generated_files/i2c1.c: 419:                 }
 24035  0F5B  0008               	return
 24036  0F5C                     i1l569:	
 24037                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 24038                           
 24039                           
 24040                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 24041  0F5C  0143               	movlb	3	; select bank3
 24042  0F5D  1F11               	btfss	17,6	;volatile
 24043  0F5E  2F6A               	goto	i1l6702
 24044                           
 24045                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 24046  0F5F  3001               	movlw	1
 24047  0F60  00F2               	movwf	??_I2C1_ISR
 24048  0F61  0872               	movf	??_I2C1_ISR,w
 24049  0F62  0141               	movlb	1	; select bank1
 24050  0F63  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 24051                           
 24052                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 24053  0F64  0143               	movlb	3	; select bank3
 24054  0F65  1311               	bcf	17,6	;volatile
 24055                           
 24056                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 24057  0F66  3005               	movlw	5
 24058  0F67  319E  265B         	fcall	_I2C1_Stop
 24059                           
 24060                           ;mcc_generated_files/i2c1.c: 442:             }
 24061  0F69  0008               	return
 24062  0F6A                     i1l6702:	
 24063                           
 24064                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 24065  0F6A  3001               	movlw	1
 24066  0F6B  0141               	movlb	1	; select bank1
 24067  0F6C  02BF               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 24068  0F6D  0A3F               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 24069  0F6E  1D03               	btfss	3,2
 24070  0F6F  2F7F               	goto	i1l6710
 24071                           
 24072                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 24073  0F70  3004               	movlw	4
 24074  0F71  00F2               	movwf	??_I2C1_ISR
 24075  0F72  0872               	movf	??_I2C1_ISR,w
 24076  0F73  07F7               	addwf	_p_i2c1_trb_current,f
 24077                           
 24078                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 24079  0F74  3001               	movlw	1
 24080  0F75  02C2               	subwf	_i2c1_trb_count^(0+128),f
 24081  0F76  1D03               	btfss	3,2
 24082  0F77  2F7C               	goto	i1l573
 24083                           
 24084                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 24085  0F78  3000               	movlw	0
 24086  0F79  319E  265B         	fcall	_I2C1_Stop
 24087                           
 24088                           ;mcc_generated_files/i2c1.c: 457:                     }
 24089  0F7B  0008               	return
 24090  0F7C                     i1l573:	
 24091                           ;mcc_generated_files/i2c1.c: 458:                     else
 24092                           
 24093                           
 24094                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 24095  0F7C  0143               	movlb	3	; select bank3
 24096  0F7D  1491               	bsf	17,1	;volatile
 24097  0F7E  2EEA               	goto	i1l6640
 24098  0F7F                     i1l6710:	
 24099                           
 24100                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 24101  0F7F  0840               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 24102  0F80  0086               	movwf	6
 24103  0F81  0187               	clrf	7
 24104  0F82  0801               	movf	1,w
 24105  0F83  0143               	movlb	3	; select bank3
 24106  0F84  008C               	movwf	12	;volatile
 24107  0F85  3001               	movlw	1
 24108  0F86  00F2               	movwf	??_I2C1_ISR
 24109  0F87  0872               	movf	??_I2C1_ISR,w
 24110  0F88  0141               	movlb	1	; select bank1
 24111  0F89  07C0               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 24112  0F8A  0008               	return
 24113  0F8B                     i1l576:	
 24114                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 24115                           
 24116                           
 24117                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 24118  0F8B  0143               	movlb	3	; select bank3
 24119  0F8C  1F11               	btfss	17,6	;volatile
 24120  0F8D  2F99               	goto	i1l577
 24121                           
 24122                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 24123  0F8E  3001               	movlw	1
 24124  0F8F  00F2               	movwf	??_I2C1_ISR
 24125  0F90  0872               	movf	??_I2C1_ISR,w
 24126  0F91  0141               	movlb	1	; select bank1
 24127  0F92  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 24128                           
 24129                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 24130  0F93  3004               	movlw	4
 24131  0F94  319E  265B         	fcall	_I2C1_Stop
 24132                           
 24133                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 24134  0F96  0143               	movlb	3	; select bank3
 24135  0F97  1311               	bcf	17,6	;volatile
 24136                           
 24137                           ;mcc_generated_files/i2c1.c: 495:             }
 24138  0F98  0008               	return
 24139  0F99                     i1l577:	
 24140                           ;mcc_generated_files/i2c1.c: 496:             else
 24141                           
 24142                           
 24143                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 24144  0F99  1591               	bsf	17,3	;volatile
 24145                           
 24146                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 24147  0F9A  3008               	movlw	8
 24148  0F9B  00F2               	movwf	??_I2C1_ISR
 24149  0F9C  0872               	movf	??_I2C1_ISR,w
 24150  0F9D  0141               	movlb	1	; select bank1
 24151  0F9E  00C3               	movwf	_i2c1_state^(0+128)
 24152  0F9F  0008               	return
 24153  0FA0                     i1l6722:	
 24154                           
 24155                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 24156  0FA0  3008               	movlw	8
 24157  0FA1  00F2               	movwf	??_I2C1_ISR
 24158  0FA2  0872               	movf	??_I2C1_ISR,w
 24159  0FA3  00C3               	movwf	_i2c1_state^(0+128)
 24160                           
 24161                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 24162  0FA4  0143               	movlb	3	; select bank3
 24163  0FA5  1591               	bsf	17,3	;volatile
 24164                           
 24165                           ;mcc_generated_files/i2c1.c: 513:             break;
 24166  0FA6  0008               	return
 24167  0FA7                     i1l6726:	
 24168                           
 24169                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 24170  0FA7  0143               	movlb	3	; select bank3
 24171  0FA8  080C               	movf	12,w	;volatile
 24172  0FA9  00F2               	movwf	??_I2C1_ISR
 24173  0FAA  0141               	movlb	1	; select bank1
 24174  0FAB  0840               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 24175  0FAC  0086               	movwf	6
 24176  0FAD  0187               	clrf	7
 24177  0FAE  0872               	movf	??_I2C1_ISR,w
 24178  0FAF  0081               	movwf	1
 24179  0FB0  3001               	movlw	1
 24180  0FB1  00F2               	movwf	??_I2C1_ISR
 24181  0FB2  0872               	movf	??_I2C1_ISR,w
 24182  0FB3  07C0               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 24183                           
 24184                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 24185  0FB4  3001               	movlw	1
 24186  0FB5  02BF               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 24187  0FB6  1903               	btfsc	3,2
 24188  0FB7  2FC0               	goto	i1l581
 24189                           
 24190                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 24191  0FB8  0143               	movlb	3	; select bank3
 24192  0FB9  1291               	bcf	17,5	;volatile
 24193                           
 24194                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 24195  0FBA  3006               	movlw	6
 24196  0FBB  00F2               	movwf	??_I2C1_ISR
 24197  0FBC  0872               	movf	??_I2C1_ISR,w
 24198  0FBD  0141               	movlb	1	; select bank1
 24199  0FBE  00C3               	movwf	_i2c1_state^(0+128)
 24200                           
 24201                           ;mcc_generated_files/i2c1.c: 532:             }
 24202  0FBF  2FC4               	goto	i1l6738
 24203  0FC0                     i1l581:	
 24204                           ;mcc_generated_files/i2c1.c: 533:             else
 24205                           
 24206                           
 24207                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 24208  0FC0  0143               	movlb	3	; select bank3
 24209  0FC1  1691               	bsf	17,5	;volatile
 24210                           
 24211                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 24212  0FC2  319D  2536         	fcall	_I2C1_FunctionComplete
 24213  0FC4                     i1l6738:	
 24214                           
 24215                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 24216  0FC4  0143               	movlb	3	; select bank3
 24217  0FC5  1611               	bsf	17,4	;volatile
 24218                           
 24219                           ;mcc_generated_files/i2c1.c: 545:             break;
 24220  0FC6  0008               	return
 24221  0FC7                     i1l6740:	
 24222                           
 24223                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 24224  0FC7  3000               	movlw	0
 24225  0FC8  319E  265B         	fcall	_I2C1_Stop
 24226                           
 24227                           ;mcc_generated_files/i2c1.c: 552:             break;
 24228  0FCA  0008               	return
 24229  0FCB                     i1l6742:	
 24230                           
 24231                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 24232  0FCB  3001               	movlw	1
 24233  0FCC  00F2               	movwf	??_I2C1_ISR
 24234  0FCD  0872               	movf	??_I2C1_ISR,w
 24235  0FCE  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 24236                           
 24237                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 24238  0FCF  3006               	movlw	6
 24239  0FD0  319E  265B         	fcall	_I2C1_Stop
 24240                           
 24241                           ;mcc_generated_files/i2c1.c: 560:             break;
 24242  0FD2  0008               	return
 24243  0FD3                     i1l6748:	
 24244  0FD3  0141               	movlb	1	; select bank1
 24245  0FD4  0843               	movf	_i2c1_state^(0+128),w
 24246  0FD5  00F2               	movwf	??_I2C1_ISR
 24247  0FD6  01F3               	clrf	??_I2C1_ISR+1
 24248                           
 24249                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24250                           ; Switch size 1, requested type "simple"
 24251                           ; Number of cases is 1, Range of values is 0 to 0
 24252                           ; switch strategies available:
 24253                           ; Name         Instructions Cycles
 24254                           ; simple_byte            4     3 (average)
 24255                           ; direct_byte            8     6 (fixed)
 24256                           ; jumptable            260     6 (fixed)
 24257                           ;	Chosen strategy is simple_byte
 24258  0FD7  0873               	movf	??_I2C1_ISR+1,w
 24259  0FD8  3A00               	xorlw	0	; case 0
 24260  0FD9  1903               	skipnz
 24261  0FDA  2FDC               	goto	i1l9518
 24262  0FDB  2FCB               	goto	i1l6742
 24263  0FDC                     i1l9518:	
 24264                           
 24265                           ; Switch size 1, requested type "simple"
 24266                           ; Number of cases is 11, Range of values is 0 to 11
 24267                           ; switch strategies available:
 24268                           ; Name         Instructions Cycles
 24269                           ; direct_byte           30     6 (fixed)
 24270                           ; simple_byte           34    18 (average)
 24271                           ; jumptable            260     6 (fixed)
 24272                           ;	Chosen strategy is simple_byte
 24273  0FDC  0872               	movf	??_I2C1_ISR,w
 24274  0FDD  3A00               	xorlw	0	; case 0
 24275  0FDE  1903               	skipnz
 24276  0FDF  2EC2               	goto	i1l547
 24277  0FE0  3A01               	xorlw	1	; case 1
 24278  0FE1  1903               	skipnz
 24279  0FE2  2EF0               	goto	i1l552
 24280  0FE3  3A03               	xorlw	3	; case 2
 24281  0FE4  1903               	skipnz
 24282  0FE5  2F38               	goto	i1l6668
 24283  0FE6  3A01               	xorlw	1	; case 3
 24284  0FE7  1903               	skipnz
 24285  0FE8  2F5C               	goto	i1l569
 24286  0FE9  3A07               	xorlw	7	; case 4
 24287  0FEA  1903               	skipnz
 24288  0FEB  2FC7               	goto	i1l6740
 24289  0FEC  3A01               	xorlw	1	; case 5
 24290  0FED  1903               	skipnz
 24291  0FEE  2F8B               	goto	i1l576
 24292  0FEF  3A03               	xorlw	3	; case 6
 24293  0FF0  1903               	skipnz
 24294  0FF1  2FA0               	goto	i1l6722
 24295  0FF2  3A01               	xorlw	1	; case 7
 24296  0FF3  1903               	skipnz
 24297  0FF4  2FC7               	goto	i1l6740
 24298  0FF5  3A0F               	xorlw	15	; case 8
 24299  0FF6  1903               	skipnz
 24300  0FF7  2FA7               	goto	i1l6726
 24301  0FF8  3A02               	xorlw	2	; case 10
 24302  0FF9  1903               	skipnz
 24303  0FFA  2EF1               	goto	i1l553
 24304  0FFB  3A01               	xorlw	1	; case 11
 24305  0FFC  1903               	skipnz
 24306  0FFD  2F13               	goto	i1l558
 24307  0FFE  2FCB               	goto	i1l6742
 24308  0FFF  0008               	return
 24309  1000                     __end_of_I2C1_ISR:	
 24310                           
 24311                           	psect	text97
 24312  1E5B                     __ptext97:	
 24313 ;; *************** function _I2C1_Stop *****************
 24314 ;; Defined at:
 24315 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 24316 ;; Parameters:    Size  Location     Type
 24317 ;;  completion_c    1    wreg     enum E10866
 24318 ;; Auto vars:     Size  Location     Type
 24319 ;;  completion_c    1    1[COMMON] enum E10866
 24320 ;; Return value:  Size  Location     Type
 24321 ;;                  1    wreg      void 
 24322 ;; Registers used:
 24323 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24324 ;; Tracked objects:
 24325 ;;		On entry : 0/0
 24326 ;;		On exit  : 0/0
 24327 ;;		Unchanged: 0/0
 24328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24330 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24331 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24332 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24333 ;;Total ram usage:        2 bytes
 24334 ;; Hardware stack levels used:    1
 24335 ;; This function calls:
 24336 ;;		Nothing
 24337 ;; This function is called by:
 24338 ;;		_I2C1_ISR
 24339 ;; This function uses a non-reentrant model
 24340 ;;
 24341                           
 24342                           
 24343                           ;psect for function _I2C1_Stop
 24344  1E5B                     _I2C1_Stop:	
 24345                           
 24346                           ;incstack = 0
 24347 ;; hardware stack exceeded
 24348                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 24349                           ;I2C1_Stop@completion_code stored from wreg
 24350  1E5B  00F1               	movwf	I2C1_Stop@completion_code
 24351                           
 24352                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 24353  1E5C  0143               	movlb	3	; select bank3
 24354  1E5D  1511               	bsf	17,2	;volatile
 24355                           
 24356                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 24357  1E5E  0141               	movlb	1	; select bank1
 24358  1E5F  0841               	movf	_p_i2c1_current^(0+128),w
 24359  1E60  3E02               	addlw	2
 24360  1E61  0086               	movwf	6
 24361  1E62  3001               	movlw	1	; select bank2/3
 24362  1E63  0087               	movwf	7
 24363  1E64  0801               	movf	1,w
 24364  1E65  1903               	btfsc	3,2
 24365  1E66  2E73               	goto	i1l5994
 24366                           
 24367                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 24368  1E67  0871               	movf	I2C1_Stop@completion_code,w
 24369  1E68  00F0               	movwf	??_I2C1_Stop
 24370  1E69  0841               	movf	_p_i2c1_current^(0+128),w
 24371  1E6A  3E02               	addlw	2
 24372  1E6B  0086               	movwf	6
 24373  1E6C  3001               	movlw	1	; select bank2/3
 24374  1E6D  0087               	movwf	7
 24375  1E6E  0801               	movf	1,w
 24376  1E6F  0086               	movwf	6
 24377  1E70  0187               	clrf	7
 24378  1E71  0870               	movf	??_I2C1_Stop,w
 24379  1E72  0081               	movwf	1
 24380  1E73                     i1l5994:	
 24381                           
 24382                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 24383  1E73  01C3               	clrf	_i2c1_state^(0+128)
 24384  1E74  0008               	return
 24385  1E75                     __end_of_I2C1_Stop:	
 24386                           
 24387                           	psect	text98
 24388  1D36                     __ptext98:	
 24389 ;; *************** function _I2C1_FunctionComplete *****************
 24390 ;; Defined at:
 24391 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 24392 ;; Parameters:    Size  Location     Type
 24393 ;;		None
 24394 ;; Auto vars:     Size  Location     Type
 24395 ;;		None
 24396 ;; Return value:  Size  Location     Type
 24397 ;;                  1    wreg      void 
 24398 ;; Registers used:
 24399 ;;		wreg, status,2, status,0
 24400 ;; Tracked objects:
 24401 ;;		On entry : 0/0
 24402 ;;		On exit  : 0/0
 24403 ;;		Unchanged: 0/0
 24404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24407 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24409 ;;Total ram usage:        1 bytes
 24410 ;; Hardware stack levels used:    1
 24411 ;; This function calls:
 24412 ;;		Nothing
 24413 ;; This function is called by:
 24414 ;;		_I2C1_ISR
 24415 ;; This function uses a non-reentrant model
 24416 ;;
 24417                           
 24418                           
 24419                           ;psect for function _I2C1_FunctionComplete
 24420  1D36                     _I2C1_FunctionComplete:	
 24421                           
 24422                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 24423                           
 24424                           ;incstack = 0
 24425 ;; hardware stack exceeded
 24426                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 24427  1D36  3004               	movlw	4
 24428  1D37  00F0               	movwf	??_I2C1_FunctionComplete
 24429  1D38  0870               	movf	??_I2C1_FunctionComplete,w
 24430  1D39  07F7               	addwf	_p_i2c1_trb_current,f
 24431                           
 24432                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 24433  1D3A  3001               	movlw	1
 24434  1D3B  0141               	movlb	1	; select bank1
 24435  1D3C  02C2               	subwf	_i2c1_trb_count^(0+128),f
 24436  1D3D  1D03               	btfss	3,2
 24437  1D3E  2D44               	goto	i1l588
 24438                           
 24439                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 24440  1D3F  3004               	movlw	4
 24441  1D40  00F0               	movwf	??_I2C1_FunctionComplete
 24442  1D41  0870               	movf	??_I2C1_FunctionComplete,w
 24443  1D42  00C3               	movwf	_i2c1_state^(0+128)
 24444                           
 24445                           ;mcc_generated_files/i2c1.c: 575:     }
 24446  1D43  0008               	return
 24447  1D44                     i1l588:	
 24448                           ;mcc_generated_files/i2c1.c: 576:     else
 24449                           
 24450                           
 24451                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 24452  1D44  01C3               	clrf	_i2c1_state^(0+128)
 24453  1D45  0AC3               	incf	_i2c1_state^(0+128),f
 24454  1D46  0008               	return
 24455  1D47                     __end_of_I2C1_FunctionComplete:	
 24456                           
 24457                           	psect	text99
 24458  1C20                     __ptext99:	
 24459 ;; *************** function _I2C1_BusCollisionISR *****************
 24460 ;; Defined at:
 24461 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 24462 ;; Parameters:    Size  Location     Type
 24463 ;;		None
 24464 ;; Auto vars:     Size  Location     Type
 24465 ;;		None
 24466 ;; Return value:  Size  Location     Type
 24467 ;;                  1    wreg      void 
 24468 ;; Registers used:
 24469 ;;		None
 24470 ;; Tracked objects:
 24471 ;;		On entry : 0/0
 24472 ;;		On exit  : 0/0
 24473 ;;		Unchanged: 0/0
 24474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24479 ;;Total ram usage:        0 bytes
 24480 ;; Hardware stack levels used:    1
 24481 ;; This function calls:
 24482 ;;		Nothing
 24483 ;; This function is called by:
 24484 ;;		_INTERRUPT_InterruptManager
 24485 ;; This function uses a non-reentrant model
 24486 ;;
 24487                           
 24488                           
 24489                           ;psect for function _I2C1_BusCollisionISR
 24490  1C20                     _I2C1_BusCollisionISR:	
 24491                           
 24492                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 24493                           
 24494                           ;incstack = 0
 24495 ;; hardware stack exceeded
 24496                           ; Regs used in _I2C1_BusCollisionISR: []
 24497  1C20  014E               	movlb	14	; select bank14
 24498  1C21  108F               	bcf	15,1	;volatile
 24499  1C22  0008               	return
 24500  1C23                     __end_of_I2C1_BusCollisionISR:	
 24501                           
 24502                           	psect	text100
 24503  1121                     __ptext100:	
 24504 ;; *************** function _DMX_interrupt *****************
 24505 ;; Defined at:
 24506 ;;		line 54 in file "dmx.c"
 24507 ;; Parameters:    Size  Location     Type
 24508 ;;		None
 24509 ;; Auto vars:     Size  Location     Type
 24510 ;;  dummy           1    6[COMMON] volatile unsigned char 
 24511 ;; Return value:  Size  Location     Type
 24512 ;;                  1    wreg      void 
 24513 ;; Registers used:
 24514 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24515 ;; Tracked objects:
 24516 ;;		On entry : 0/0
 24517 ;;		On exit  : 0/0
 24518 ;;		Unchanged: 0/0
 24519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24522 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24523 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24524 ;;Total ram usage:        7 bytes
 24525 ;; Hardware stack levels used:    1
 24526 ;; This function calls:
 24527 ;;		Nothing
 24528 ;; This function is called by:
 24529 ;;		_DMX_init
 24530 ;;		_INTERRUPT_InterruptManager
 24531 ;; This function uses a non-reentrant model
 24532 ;;
 24533                           
 24534                           
 24535                           ;psect for function _DMX_interrupt
 24536  1121                     _DMX_interrupt:	
 24537                           
 24538                           ;dmx.c: 56:     if (RC1STAbits.OERR) {
 24539                           
 24540                           ;incstack = 0
 24541 ;; hardware stack exceeded
 24542                           ; Regs used in _DMX_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 24543  1121  0142               	movlb	2	; select bank2
 24544  1122  1C9D               	btfss	29,1	;volatile
 24545  1123  2926               	goto	i1l7118
 24546                           
 24547                           ;dmx.c: 57:         RC1STAbits.CREN = 0;
 24548  1124  121D               	bcf	29,4	;volatile
 24549                           
 24550                           ;dmx.c: 58:         RC1STAbits.CREN = 1;
 24551  1125  161D               	bsf	29,4	;volatile
 24552  1126                     i1l7118:	
 24553                           
 24554                           ;dmx.c: 61:     if (initial == 0 && !(RC1STAbits.FERR)) {
 24555  1126  0867               	movf	_initial^(0+256),w
 24556  1127  0468               	iorwf	(_initial+1)^(0+256),w
 24557  1128  1903               	btfsc	3,2
 24558  1129  191D               	btfsc	29,2	;volatile
 24559  112A  2947               	goto	i1l7126
 24560                           
 24561                           ;dmx.c: 62:         dmxArray[arrayIndex] = RC1REG;
 24562  112B  0819               	movf	25,w	;volatile
 24563  112C  00F0               	movwf	??_DMX_interrupt
 24564  112D  01F1               	clrf	??_DMX_interrupt+1
 24565  112E  083B               	movf	(_arrayIndex+1)^(0+256),w
 24566  112F  00F3               	movwf	??_DMX_interrupt+3
 24567  1130  083A               	movf	_arrayIndex^(0+256),w
 24568  1131  00F2               	movwf	??_DMX_interrupt+2
 24569  1132  35F2               	lslf	??_DMX_interrupt+2,f
 24570  1133  0DF3               	rlf	??_DMX_interrupt+3,f
 24571  1134  30EE               	movlw	238
 24572  1135  00F4               	movwf	??_DMX_interrupt+4
 24573  1136  3023               	movlw	35
 24574  1137  00F5               	movwf	??_DMX_interrupt+5
 24575  1138  0872               	movf	??_DMX_interrupt+2,w
 24576  1139  0774               	addwf	??_DMX_interrupt+4,w
 24577  113A  0086               	movwf	6
 24578  113B  0873               	movf	??_DMX_interrupt+3,w
 24579  113C  3D75               	addwfc	??_DMX_interrupt+5,w
 24580  113D  0087               	movwf	7
 24581  113E  0870               	movf	??_DMX_interrupt,w
 24582  113F  3FC0               	movwi [0]fsr1
 24583  1140  0871               	movf	??_DMX_interrupt+1,w
 24584  1141  3FC1               	movwi [1]fsr1
 24585                           
 24586                           ;dmx.c: 63:         arrayIndex += 1;
 24587  1142  3001               	movlw	1
 24588  1143  07BA               	addwf	_arrayIndex^(0+256),f
 24589  1144  3000               	movlw	0
 24590  1145  3DBB               	addwfc	(_arrayIndex+1)^(0+256),f
 24591                           
 24592                           ;dmx.c: 64:     } else {
 24593  1146  294F               	goto	i1l7130
 24594  1147                     i1l7126:	
 24595                           
 24596                           ;dmx.c: 65:         arrayIndex = 0;
 24597  1147  01BA               	clrf	_arrayIndex^(0+256)
 24598  1148  01BB               	clrf	(_arrayIndex+1)^(0+256)
 24599                           
 24600                           ;dmx.c: 66:         initial = 0;
 24601  1149  01E7               	clrf	_initial^(0+256)
 24602  114A  01E8               	clrf	(_initial+1)^(0+256)
 24603                           
 24604                           ;dmx.c: 67:         volatile uint8_t dummy = RC1REG;
 24605  114B  0819               	movf	25,w	;volatile
 24606  114C  00F0               	movwf	??_DMX_interrupt
 24607  114D  0870               	movf	??_DMX_interrupt,w
 24608  114E  00F6               	movwf	DMX_interrupt@dummy	;volatile
 24609  114F                     i1l7130:	
 24610                           
 24611                           ;dmx.c: 70:     PIR3bits.RC1IF = 0;
 24612  114F  014E               	movlb	14	; select bank14
 24613  1150  128F               	bcf	15,5	;volatile
 24614  1151  0008               	return
 24615  1152                     __end_of_DMX_interrupt:	
 24616                           
 24617                           	psect	text101
 24618  1185                     __ptext101:	
 24619 ;; *************** function _EUSART1_Receive_ISR *****************
 24620 ;; Defined at:
 24621 ;;		line 171 in file "mcc_generated_files/eusart1.c"
 24622 ;; Parameters:    Size  Location     Type
 24623 ;;		None
 24624 ;; Auto vars:     Size  Location     Type
 24625 ;;		None
 24626 ;; Return value:  Size  Location     Type
 24627 ;;                  1    wreg      void 
 24628 ;; Registers used:
 24629 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24630 ;; Tracked objects:
 24631 ;;		On entry : 0/0
 24632 ;;		On exit  : 0/0
 24633 ;;		Unchanged: 0/0
 24634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24639 ;;Total ram usage:        0 bytes
 24640 ;; Hardware stack levels used:    1
 24641 ;; Hardware stack levels required when called:    2
 24642 ;; This function calls:
 24643 ;;		Absolute function
 24644 ;;		_EUSART1_DefaultErrorHandler
 24645 ;;		_EUSART1_DefaultFramingErrorHandler
 24646 ;;		_EUSART1_DefaultOverrunErrorHandler
 24647 ;;		_EUSART1_RxDataHandler
 24648 ;; This function is called by:
 24649 ;;		_EUSART1_Initialize
 24650 ;;		_INTERRUPT_InterruptManager
 24651 ;; This function uses a non-reentrant model
 24652 ;;
 24653                           
 24654                           
 24655                           ;psect for function _EUSART1_Receive_ISR
 24656  1185                     _EUSART1_Receive_ISR:	
 24657                           
 24658                           ;mcc_generated_files/eusart1.c: 174:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 24659                           
 24660                           ;incstack = 0
 24661 ;; hardware stack exceeded
 24662                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 24663  1185  0879               	movf	_eusart1RxHead,w	;volatile
 24664  1186  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 24665  1187  0086               	movwf	6
 24666  1188  3001               	movlw	1	; select bank2/3
 24667  1189  0087               	movwf	7
 24668  118A  0181               	clrf	1
 24669                           
 24670                           ;mcc_generated_files/eusart1.c: 176:     if(RC1STAbits.FERR){
 24671  118B  0142               	movlb	2	; select bank2
 24672  118C  1D1D               	btfss	29,2	;volatile
 24673  118D  2999               	goto	i1l6592
 24674                           
 24675                           ;mcc_generated_files/eusart1.c: 177:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 24676  118E  0879               	movf	_eusart1RxHead,w	;volatile
 24677  118F  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 24678  1190  0086               	movwf	6
 24679  1191  3001               	movlw	1	; select bank2/3
 24680  1192  0087               	movwf	7
 24681  1193  1481               	bsf	1,1
 24682                           
 24683                           ;mcc_generated_files/eusart1.c: 178:         EUSART1_FramingErrorHandler();
 24684  1194  0864               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 24685  1195  008A               	movwf	10
 24686  1196  0863               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 24687  1197  000A               	callw
 24688  1198  3191               	pagesel	$
 24689  1199                     i1l6592:	
 24690                           
 24691                           ;mcc_generated_files/eusart1.c: 181:     if(RC1STAbits.OERR){
 24692  1199  0142               	movlb	2	; select bank2
 24693  119A  1C9D               	btfss	29,1	;volatile
 24694  119B  29A7               	goto	i1l6598
 24695                           
 24696                           ;mcc_generated_files/eusart1.c: 182:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 24697  119C  0879               	movf	_eusart1RxHead,w	;volatile
 24698  119D  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 24699  119E  0086               	movwf	6
 24700  119F  3001               	movlw	1	; select bank2/3
 24701  11A0  0087               	movwf	7
 24702  11A1  1501               	bsf	1,2
 24703                           
 24704                           ;mcc_generated_files/eusart1.c: 183:         EUSART1_OverrunErrorHandler();
 24705  11A2  0862               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 24706  11A3  008A               	movwf	10
 24707  11A4  0861               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 24708  11A5  000A               	callw
 24709  11A6  3191               	pagesel	$
 24710  11A7                     i1l6598:	
 24711                           
 24712                           ;mcc_generated_files/eusart1.c: 186:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 24713  11A7  0879               	movf	_eusart1RxHead,w	;volatile
 24714  11A8  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 24715  11A9  0086               	movwf	6
 24716  11AA  3001               	movlw	1	; select bank2/3
 24717  11AB  0087               	movwf	7
 24718  11AC  0801               	movf	1,w
 24719  11AD  1903               	btfsc	3,2
 24720  11AE  29B6               	goto	i1l6602
 24721                           
 24722                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_ErrorHandler();
 24723  11AF  0142               	movlb	2	; select bank2
 24724  11B0  0860               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 24725  11B1  008A               	movwf	10
 24726  11B2  085F               	movf	_EUSART1_ErrorHandler^(0+256),w
 24727  11B3  000A               	callw
 24728  11B4  3191               	pagesel	$
 24729                           
 24730                           ;mcc_generated_files/eusart1.c: 188:     } else {
 24731  11B5  0008               	return
 24732  11B6                     i1l6602:	
 24733                           
 24734                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_RxDataHandler();
 24735  11B6  319D  25FA         	fcall	_EUSART1_RxDataHandler
 24736  11B8  0008               	return
 24737  11B9                     __end_of_EUSART1_Receive_ISR:	
 24738                           
 24739                           	psect	text102
 24740  0800                     __ptext102:	
 24741 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 24742 ;; Defined at:
 24743 ;;		line 207 in file "mcc_generated_files/eusart1.c"
 24744 ;; Parameters:    Size  Location     Type
 24745 ;;		None
 24746 ;; Auto vars:     Size  Location     Type
 24747 ;;		None
 24748 ;; Return value:  Size  Location     Type
 24749 ;;                  1    wreg      void 
 24750 ;; Registers used:
 24751 ;;		None
 24752 ;; Tracked objects:
 24753 ;;		On entry : 0/0
 24754 ;;		On exit  : 0/0
 24755 ;;		Unchanged: 0/0
 24756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24761 ;;Total ram usage:        0 bytes
 24762 ;; Hardware stack levels used:    1
 24763 ;; This function calls:
 24764 ;;		Nothing
 24765 ;; This function is called by:
 24766 ;;		_EUSART1_Initialize
 24767 ;;		_EUSART1_Receive_ISR
 24768 ;; This function uses a non-reentrant model
 24769 ;;
 24770                           
 24771                           
 24772                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 24773  0800                     _EUSART1_DefaultOverrunErrorHandler:	
 24774                           
 24775                           ;mcc_generated_files/eusart1.c: 210:     RC1STAbits.CREN = 0;
 24776                           
 24777                           ;incstack = 0
 24778 ;; hardware stack exceeded
 24779                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 24780  0800  0142               	movlb	2	; select bank2
 24781  0801  121D               	bcf	29,4	;volatile
 24782                           
 24783                           ;mcc_generated_files/eusart1.c: 211:     RC1STAbits.CREN = 1;
 24784  0802  161D               	bsf	29,4	;volatile
 24785  0803  0008               	return
 24786  0804                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 24787                           
 24788                           	psect	text103
 24789  1C16                     __ptext103:	
 24790 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 24791 ;; Defined at:
 24792 ;;		line 205 in file "mcc_generated_files/eusart1.c"
 24793 ;; Parameters:    Size  Location     Type
 24794 ;;		None
 24795 ;; Auto vars:     Size  Location     Type
 24796 ;;		None
 24797 ;; Return value:  Size  Location     Type
 24798 ;;                  1    wreg      void 
 24799 ;; Registers used:
 24800 ;;		None
 24801 ;; Tracked objects:
 24802 ;;		On entry : 0/0
 24803 ;;		On exit  : 0/0
 24804 ;;		Unchanged: 0/0
 24805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24810 ;;Total ram usage:        0 bytes
 24811 ;; Hardware stack levels used:    1
 24812 ;; This function calls:
 24813 ;;		Nothing
 24814 ;; This function is called by:
 24815 ;;		_EUSART1_Initialize
 24816 ;;		_EUSART1_Receive_ISR
 24817 ;; This function uses a non-reentrant model
 24818 ;;
 24819                           
 24820                           
 24821                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 24822  1C16                     _EUSART1_DefaultFramingErrorHandler:	
 24823                           
 24824                           ;incstack = 0
 24825 ;; hardware stack exceeded
 24826                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 24827  1C16  0008               	return
 24828  1C17                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 24829                           
 24830                           	psect	text104
 24831  1C1D                     __ptext104:	
 24832 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 24833 ;; Defined at:
 24834 ;;		line 215 in file "mcc_generated_files/eusart1.c"
 24835 ;; Parameters:    Size  Location     Type
 24836 ;;		None
 24837 ;; Auto vars:     Size  Location     Type
 24838 ;;		None
 24839 ;; Return value:  Size  Location     Type
 24840 ;;                  1    wreg      void 
 24841 ;; Registers used:
 24842 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24843 ;; Tracked objects:
 24844 ;;		On entry : 0/0
 24845 ;;		On exit  : 0/0
 24846 ;;		Unchanged: 0/0
 24847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24852 ;;Total ram usage:        0 bytes
 24853 ;; Hardware stack levels used:    1
 24854 ;; Hardware stack levels required when called:    1
 24855 ;; This function calls:
 24856 ;;		_EUSART1_RxDataHandler
 24857 ;; This function is called by:
 24858 ;;		_EUSART1_Initialize
 24859 ;;		_EUSART1_Receive_ISR
 24860 ;; This function uses a non-reentrant model
 24861 ;;
 24862                           
 24863                           
 24864                           ;psect for function _EUSART1_DefaultErrorHandler
 24865  1C1D                     _EUSART1_DefaultErrorHandler:	
 24866                           
 24867                           ;mcc_generated_files/eusart1.c: 216:     EUSART1_RxDataHandler();
 24868                           
 24869                           ;incstack = 0
 24870 ;; hardware stack exceeded
 24871                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 24872  1C1D  319D  25FA         	fcall	_EUSART1_RxDataHandler
 24873  1C1F  0008               	return
 24874  1C20                     __end_of_EUSART1_DefaultErrorHandler:	
 24875                           
 24876                           	psect	text105
 24877  1DFA                     __ptext105:	
 24878 ;; *************** function _EUSART1_RxDataHandler *****************
 24879 ;; Defined at:
 24880 ;;		line 195 in file "mcc_generated_files/eusart1.c"
 24881 ;; Parameters:    Size  Location     Type
 24882 ;;		None
 24883 ;; Auto vars:     Size  Location     Type
 24884 ;;		None
 24885 ;; Return value:  Size  Location     Type
 24886 ;;                  1    wreg      void 
 24887 ;; Registers used:
 24888 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24889 ;; Tracked objects:
 24890 ;;		On entry : 0/0
 24891 ;;		On exit  : 0/0
 24892 ;;		Unchanged: 0/0
 24893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24896 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24897 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24898 ;;Total ram usage:        1 bytes
 24899 ;; Hardware stack levels used:    1
 24900 ;; This function calls:
 24901 ;;		Nothing
 24902 ;; This function is called by:
 24903 ;;		_EUSART1_Receive_ISR
 24904 ;;		_EUSART1_DefaultErrorHandler
 24905 ;; This function uses a non-reentrant model
 24906 ;;
 24907                           
 24908                           
 24909                           ;psect for function _EUSART1_RxDataHandler
 24910  1DFA                     _EUSART1_RxDataHandler:	
 24911                           
 24912                           ;mcc_generated_files/eusart1.c: 197:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 24913                           
 24914                           ;incstack = 0
 24915 ;; hardware stack exceeded
 24916                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 24917  1DFA  0142               	movlb	2	; select bank2
 24918  1DFB  0819               	movf	25,w	;volatile
 24919  1DFC  00F0               	movwf	??_EUSART1_RxDataHandler
 24920  1DFD  0879               	movf	_eusart1RxHead,w
 24921  1DFE  3E28               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 24922  1DFF  0086               	movwf	6
 24923  1E00  3001               	movlw	1	; select bank2/3
 24924  1E01  0087               	movwf	7
 24925  1E02  0870               	movf	??_EUSART1_RxDataHandler,w
 24926  1E03  0081               	movwf	1
 24927  1E04  3001               	movlw	1
 24928  1E05  00F0               	movwf	??_EUSART1_RxDataHandler
 24929  1E06  0870               	movf	??_EUSART1_RxDataHandler,w
 24930  1E07  07F9               	addwf	_eusart1RxHead,f	;volatile
 24931                           
 24932                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 24933  1E08  3008               	movlw	8
 24934  1E09  0279               	subwf	_eusart1RxHead,w	;volatile
 24935  1E0A  1803               	btfsc	3,0
 24936                           
 24937                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         e
      +                          usart1RxHead = 0;
 24938  1E0B  01F9               	clrf	_eusart1RxHead	;volatile
 24939                           
 24940                           ;mcc_generated_files/eusart1.c: 202:     eusart1RxCount++;
 24941  1E0C  3001               	movlw	1
 24942  1E0D  00F0               	movwf	??_EUSART1_RxDataHandler
 24943  1E0E  0870               	movf	??_EUSART1_RxDataHandler,w
 24944  1E0F  0141               	movlb	1	; select bank1
 24945  1E10  07C4               	addwf	_eusart1RxCount^(0+128),f	;volatile
 24946  1E11  0008               	return
 24947  1E12                     __end_of_EUSART1_RxDataHandler:	
 24948                           
 24949                           	psect	text106
 24950  1CFF                     __ptext106:	
 24951 ;; *************** function _ADCC_ThresholdISR *****************
 24952 ;; Defined at:
 24953 ;;		line 308 in file "mcc_generated_files/adcc.c"
 24954 ;; Parameters:    Size  Location     Type
 24955 ;;		None
 24956 ;; Auto vars:     Size  Location     Type
 24957 ;;		None
 24958 ;; Return value:  Size  Location     Type
 24959 ;;                  1    wreg      void 
 24960 ;; Registers used:
 24961 ;;		wreg, status,2, status,0, pclath, cstack
 24962 ;; Tracked objects:
 24963 ;;		On entry : 0/0
 24964 ;;		On exit  : 0/0
 24965 ;;		Unchanged: 0/0
 24966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24971 ;;Total ram usage:        0 bytes
 24972 ;; Hardware stack levels used:    1
 24973 ;; Hardware stack levels required when called:    1
 24974 ;; This function calls:
 24975 ;;		Absolute function
 24976 ;;		_ADCC_DefaultInterruptHandler
 24977 ;;		_adcThresholdHandler
 24978 ;; This function is called by:
 24979 ;;		_INTERRUPT_InterruptManager
 24980 ;; This function uses a non-reentrant model
 24981 ;;
 24982                           
 24983                           
 24984                           ;psect for function _ADCC_ThresholdISR
 24985  1CFF                     _ADCC_ThresholdISR:	
 24986                           
 24987                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 24988                           
 24989                           ;incstack = 0
 24990 ;; hardware stack exceeded
 24991                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 24992  1CFF  014E               	movlb	14	; select bank14
 24993  1D00  108D               	bcf	13,1	;volatile
 24994                           
 24995                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 24996  1D01  0142               	movlb	2	; select bank2
 24997  1D02  085B               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 24998  1D03  045C               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 24999  1D04  1903               	btfsc	3,2
 25000  1D05  0008               	return
 25001                           
 25002                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 25003  1D06  085C               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 25004  1D07  008A               	movwf	10
 25005  1D08  085B               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 25006  1D09  000A               	callw
 25007  1D0A  319C               	pagesel	$
 25008  1D0B  0008               	return
 25009  1D0C                     __end_of_ADCC_ThresholdISR:	
 25010                           
 25011                           	psect	text107
 25012  1C15                     __ptext107:	
 25013 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 25014 ;; Defined at:
 25015 ;;		line 320 in file "mcc_generated_files/adcc.c"
 25016 ;; Parameters:    Size  Location     Type
 25017 ;;		None
 25018 ;; Auto vars:     Size  Location     Type
 25019 ;;		None
 25020 ;; Return value:  Size  Location     Type
 25021 ;;                  1    wreg      void 
 25022 ;; Registers used:
 25023 ;;		None
 25024 ;; Tracked objects:
 25025 ;;		On entry : 0/0
 25026 ;;		On exit  : 0/0
 25027 ;;		Unchanged: 0/0
 25028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25033 ;;Total ram usage:        0 bytes
 25034 ;; Hardware stack levels used:    1
 25035 ;; This function calls:
 25036 ;;		Nothing
 25037 ;; This function is called by:
 25038 ;;		_ADCC_Initialize
 25039 ;;		_ADCC_ThresholdISR
 25040 ;; This function uses a non-reentrant model
 25041 ;;
 25042                           
 25043                           
 25044                           ;psect for function _ADCC_DefaultInterruptHandler
 25045  1C15                     _ADCC_DefaultInterruptHandler:	
 25046                           
 25047                           ;incstack = 0
 25048 ;; hardware stack exceeded
 25049                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 25050  1C15  0008               	return
 25051  1C16                     __end_of_ADCC_DefaultInterruptHandler:	
 25052                           
 25053                           	psect	text108
 25054  1C29                     __ptext108:	
 25055 ;; *************** function _adcThresholdHandler *****************
 25056 ;; Defined at:
 25057 ;;		line 35 in file "beat.c"
 25058 ;; Parameters:    Size  Location     Type
 25059 ;;		None
 25060 ;; Auto vars:     Size  Location     Type
 25061 ;;		None
 25062 ;; Return value:  Size  Location     Type
 25063 ;;                  1    wreg      void 
 25064 ;; Registers used:
 25065 ;;		None
 25066 ;; Tracked objects:
 25067 ;;		On entry : 0/0
 25068 ;;		On exit  : 0/0
 25069 ;;		Unchanged: 0/0
 25070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25075 ;;Total ram usage:        0 bytes
 25076 ;; Hardware stack levels used:    1
 25077 ;; This function calls:
 25078 ;;		Nothing
 25079 ;; This function is called by:
 25080 ;;		_BEAT_init
 25081 ;;		_ADCC_ThresholdISR
 25082 ;; This function uses a non-reentrant model
 25083 ;;
 25084                           
 25085                           
 25086                           ;psect for function _adcThresholdHandler
 25087  1C29                     _adcThresholdHandler:	
 25088                           
 25089                           ;beat.c: 36:     thresholdExceeded = 1;
 25090                           
 25091                           ;incstack = 0
 25092 ;; hardware stack exceeded
 25093                           ; Regs used in _adcThresholdHandler: []
 25094  1C29  0141               	movlb	1	; select bank1
 25095  1C2A  01AD               	clrf	_thresholdExceeded^(0+128)
 25096  1C2B  0AAD               	incf	_thresholdExceeded^(0+128),f
 25097  1C2C  0008               	return
 25098  1C2D                     __end_of_adcThresholdHandler:	
 25099  007E                     btemp	set	126	;btemp
 25100  007E                     int$flags	set	126
 25101  007E                     wtemp0	set	126


Data Sizes:
    Strings     134
    Constant    96
    Data        14
    BSS         165
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     80      80
    BANK1            80     37      80
    BANK2            80      2      79
    BANK3            80      4      68
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           46      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_29(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), STR_29(CODE[9]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_37(CODE[6]), STR_36(CODE[7]), STR_35(CODE[8]), STR_34(CODE[9]), 
		 -> STR_33(CODE[10]), STR_32(CODE[9]), STR_31(CODE[8]), STR_30(CODE[7]), 
		 -> STR_28(CODE[2]), STR_27(CODE[5]), STR_26(CODE[6]), STR_25(CODE[6]), 
		 -> STR_24(CODE[6]), STR_23(CODE[6]), STR_22(CODE[6]), STR_21(CODE[2]), 
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_12(CODE[3]), STR_11(CODE[2]), STR_10(CODE[3]), STR_9(CODE[2]), 
		 -> STR_8(CODE[3]), STR_7(CODE[2]), STR_6(CODE[3]), STR_5(CODE[2]), 
		 -> STR_4(CODE[3]), STR_3(CODE[2]), STR_2(CODE[3]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S3140_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_37(CODE[6]), STR_36(CODE[7]), STR_35(CODE[8]), STR_34(CODE[9]), 
		 -> STR_33(CODE[10]), STR_32(CODE[9]), STR_31(CODE[8]), STR_30(CODE[7]), 
		 -> STR_28(CODE[2]), STR_27(CODE[5]), STR_26(CODE[6]), STR_25(CODE[6]), 
		 -> STR_24(CODE[6]), STR_23(CODE[6]), STR_22(CODE[6]), STR_21(CODE[2]), 
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_12(CODE[3]), STR_11(CODE[2]), STR_10(CODE[3]), STR_9(CODE[2]), 
		 -> STR_8(CODE[3]), STR_7(CODE[2]), STR_6(CODE[3]), STR_5(CODE[2]), 
		 -> STR_4(CODE[3]), STR_3(CODE[2]), STR_2(CODE[3]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_37(CODE[6]), STR_36(CODE[7]), STR_35(CODE[8]), STR_34(CODE[9]), 
		 -> STR_33(CODE[10]), STR_32(CODE[9]), STR_31(CODE[8]), STR_30(CODE[7]), 
		 -> STR_28(CODE[2]), STR_27(CODE[5]), STR_26(CODE[6]), STR_25(CODE[6]), 
		 -> STR_24(CODE[6]), STR_23(CODE[6]), STR_22(CODE[6]), STR_21(CODE[2]), 
		 -> STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_12(CODE[3]), STR_11(CODE[2]), STR_10(CODE[3]), STR_9(CODE[2]), 
		 -> STR_8(CODE[3]), STR_7(CODE[2]), STR_6(CODE[3]), STR_5(CODE[2]), 
		 -> STR_4(CODE[3]), STR_3(CODE[2]), STR_2(CODE[3]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    S1993$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S1139$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1151$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1151$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), NULL(NULL[0]), 

    S1162$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    S1162$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_DMX_interrupt
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_CONTROLLER_task
    _TM1650_init->_printf
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_task->_LED_task_BEAT_STROBE
    _LED_task_BEAT_STROBE->_beatColorCreator
    _beatColorCreator->_beatBrightnessCalculation
    _beatBrightnessCalculation->___fltol
    _LED_setColor->_beatColorCreator
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _PWM4_LoadDutyValue->___fltol
    _PWM3_LoadDutyValue->___fltol
    _PWM2_LoadDutyValue->___fltol
    _PWM1_LoadDutyValue->___fltol
    _DMX_init->_TM1650_fastPrintNum
    _CONTROLLER_task->_printf
    _menuSelection->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TM1650_fastPrintNum_3digit->_writeData
    _TM1650_fastPrintNum_2digit->_writeData
    ___awmod->___awdiv
    _TM1650_enable->_writeData
    _CONTROL_MANUAL->_colorDec
    _CONTROL_MANUAL->_colorInc
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_writeData
    _writeData->___awmod
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    ___lwmod->___lwdiv
    _CONTROL_BEAT->_BUTTONS_isHeld
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LED_task
    _TM1650_init->_printf
    _LED_task->_LED_task_DMX
    _LED_task_DMX->_LED_setColor
    _LED_task_BEAT_STROBE->_LED_setColor
    _beatColorCreator->_beatBrightnessCalculation
    _LED_setColor->_beatColorCreator
    _CONTROLLER_task->_menuSelection
    _menuSelection->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _LED_task->_LED_task_DMX

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  191020
                                              0 BANK2      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                      _CLOCK_getTime
                         _CLOCK_init
                    _CONTROLLER_task
                           _DMX_init
                           _LED_init
                           _LED_task
                  _SYSTEM_Initialize
                        _TM1650_init
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0   27277
                      _TM1650_enable
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     574
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_task                                             2     2      0   65732
                                             35 BANK1      2     2      0
                       _LED_setColor
                 _LED_task_ANIMATION
           _LED_task_BEAT_CONTINUOUS
                 _LED_task_BEAT_FADE
                _LED_task_BEAT_MIXED
               _LED_task_BEAT_STROBE
                       _LED_task_DMX
                   _beatColorCreator
                          _getIsHold
                            _getMode
 ---------------------------------------------------------------------------------
 (2) _getMode                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getIsHold                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_DMX                                         9     9      0   11737
                                             30 BANK1      5     5      0
                                              0 BANK3      4     4      0
                     _DMX_getAddress
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (3) _DMX_getAddress                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_STROBE                                 3     3      0   27030
                                             79 BANK0      1     1      0
                                             30 BANK1      2     2      0
                      _BEAT_detected
                      _CLOCK_getTime
                       _LED_setColor
                   _beatColorCreator
 ---------------------------------------------------------------------------------
 (2) _beatColorCreator                                    14    10      4   15373
                                             78 BANK0      1     1      0
                                              9 BANK1     13     9      4
                            ___fltol
          _beatBrightnessCalculation
 ---------------------------------------------------------------------------------
 (3) _beatBrightnessCalculation                           10     6      4    8509
                                             77 BANK0      1     1      0
                                              0 BANK1      9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _LED_setColor                                         8     4      4   11592
                                             22 BANK1      8     4      4
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _beatColorCreator (ARG)
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     930
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4    1061
                                             66 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4073
                                             40 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    2411
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM4_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM3_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM2_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM1_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_MIXED                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_FADE                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_BEAT_CONTINUOUS                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_task_ANIMATION                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_init                                             0     0      0    7313
      _EUSART1_SetRxInterruptHandler
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      3     3      0   85694
                                             79 BANK0      1     1      0
                                             12 BANK1      2     2      0
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                  _CONTROL_ANIMATION
                       _CONTROL_BEAT
                        _CONTROL_DMX
                     _CONTROL_MANUAL
                      _TM1650_enable
                _TM1650_fastPrintNum
         _TM1650_fastPrintNum_2digit
         _TM1650_fastPrintNum_3digit
                     _getManualColor
                      _menuSelection
                             _printf
 ---------------------------------------------------------------------------------
 (2) _menuSelection                                        2     2      0   22956
                                             10 BANK1      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   22956
                                             75 BANK0      4     4      0
                                              0 BANK1     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   19635
                                             67 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2   19200
                                             58 BANK0      9     7      2
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     6      2   13018
                                             52 BANK0      6     4      2
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3   12774
                                             43 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     774
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    5902
                                             35 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    5510
                                             27 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                2     2      0    4566
                                             25 BANK0      2     2      0
                    _TM1650_setDigit
 ---------------------------------------------------------------------------------
 (7) _TM1650_setDigit                                      3     2      1    4442
                                             22 BANK0      3     2      1
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _getManualColor                                       3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _TM1650_fastPrintNum_3digit                           3     1      2    7071
                                             22 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
                     _getManualColor (ARG)
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _TM1650_fastPrintNum_2digit                           4     4      0    5435
                                             22 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                          _writeData
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              9 BANK0      7     3      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    4321
                                             22 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _CONTROL_MANUAL                                       3     3      0     590
                                              3 BANK0      3     3      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                           _colorDec
                           _colorInc
 ---------------------------------------------------------------------------------
 (3) _colorInc                                             3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _colorDec                                             3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _CONTROL_DMX                                          2     2      0   14595
                                             25 BANK0      2     2      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (3) _address_inc                                          0     0      0    7102
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _address_dec                                          0     0      0    7102
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_fastPrintNum                                  3     1      2    7102
                                             22 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
                          _writeData
 ---------------------------------------------------------------------------------
 (8) _writeData                                            6     5      1    4290
                                             16 BANK0      6     5      1
                   _I2C1_MasterWrite
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWrite                                     7     3      4    1400
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterWriteTRBBuild                            7     3      4     393
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterTRBInsert                                4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (11) _I2C1_WaitForLastPacketToComplete                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1223
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _CONTROL_BEAT                                         1     1      0     391
                                              1 BANK0      1     1      0
                     _BUTTONS_isHeld
 ---------------------------------------------------------------------------------
 (3) _BUTTONS_isHeld                                       1     1      0     391
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CONTROL_ANIMATION                                    1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     206
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     880
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0     872
                                              5 BANK0      1     1      0
                          _GPIO_init
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3     872
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    1471
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1074
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _INTERRUPT_InterruptManager                          0     0      0      23
                   Absolute function *
                  _ADCC_ThresholdISR
                      _DMX_interrupt *
                _EUSART1_Receive_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (17) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (18) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (18) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (18) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (17) _DMX_interrupt                                       7     7      0       1
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (18) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     ___lwdiv
   _BUTTONS_init
     _GPIO_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_task
     _BUTTONS_isClicked
     _CLOCK_getTime
     _CONTROL_ANIMATION
     _CONTROL_BEAT
       _BUTTONS_isHeld
     _CONTROL_DMX
       _BUTTONS_isHeld
       _CLOCK_getTime
       _address_dec
         _TM1650_fastPrintNum
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___awdiv (ARG)
             ___awmod (ARG)
               ___awdiv (ARG)
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
       _address_inc
         _TM1650_fastPrintNum
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___awdiv (ARG)
             ___awmod (ARG)
               ___awdiv (ARG)
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
     _CONTROL_MANUAL
       _BUTTONS_isHeld
       _CLOCK_getTime
       _colorDec
       _colorInc
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _TM1650_fastPrintNum_2digit
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _TM1650_fastPrintNum_3digit
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _getManualColor (ARG)
       _writeData (ARG)
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _getManualColor
     _menuSelection
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___awdiv (ARG)
                           ___awmod (ARG)
                             ___awdiv (ARG)
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___awdiv (ARG)
                     ___awmod (ARG)
                       ___awdiv (ARG)
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___awdiv (ARG)
                       ___awmod (ARG)
                         ___awdiv (ARG)
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___awdiv (ARG)
                   ___awmod (ARG)
                     ___awdiv (ARG)
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)
   _DMX_init
     _EUSART1_SetRxInterruptHandler
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
   _LED_init
   _LED_task
     _LED_setColor
       _PWM1_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM2_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM3_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _PWM4_LoadDutyValue
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _beatColorCreator (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _beatBrightnessCalculation
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _LED_task_ANIMATION
     _LED_task_BEAT_CONTINUOUS
     _LED_task_BEAT_FADE
     _LED_task_BEAT_MIXED
     _LED_task_BEAT_STROBE
       _BEAT_detected
       _CLOCK_getTime
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
       _beatColorCreator
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _beatBrightnessCalculation
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
     _LED_task_DMX
       _DMX_getAddress
       _LED_setColor
         _PWM1_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM2_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM3_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         _PWM4_LoadDutyValue
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _beatColorCreator (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
     _beatColorCreator
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       _beatBrightnessCalculation
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
     _getIsHold
     _getMode
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___awdiv (ARG)
                       ___awmod (ARG)
                         ___awdiv (ARG)
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___awdiv (ARG)
                   ___awmod (ARG)
                     ___awdiv (ARG)
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_interrupt *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     141       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     25      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      2      4F      10       98.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      4      44      12       85.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              2E      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BANK14               0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BANK15               0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BANK16               0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BANK17               0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BANK18               0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     141      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 29 13:19:37 2019

                                  ___fldiv@aexp 0047                                    ___fldiv@bexp 0046  
                      ??_ADCC_SetUpperThreshold 0022                                    ___fldiv@sign 003F  
                                   __CFG_CP$OFF 0000                                    ?_TM1650_init 0070  
                                  ___awdiv@sign 0026                                              _up 00BC  
                            __size_of_BEAT_init 0017                              __size_of_BEAT_task 00D5  
                           __Umul8_16@word_mpld 0026                                     __CFG_LVP$ON 0000  
                           _adcThresholdHandler 1C29                                             l911 0E97  
                                           l909 0E29                                             _PR2 028D  
                                           _bpm 0140                                             _pad 13F7  
                       __size_of_PMD_Initialize 000A                                    ___awmod@sign 002F  
                               _TMR2_Initialize 1D19                                 _PWM4_Initialize 1CDC  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                                  ___flmul@aexp 0056                                    ___flmul@bexp 005B  
                            _LED_task_BEAT_FADE 1C1A                                    ___flmul@sign 0055  
                                  ___flmul@temp 0060                                    ___flmul@prod 005C  
                                 __CFG_BBEN$OFF 0000                             _animationBrightness 00EC  
                              __end_of_I2C1_ISR 1000                                    ___fltol@exp1 006C  
                                          l1102 17BB                                            l1030 02FF  
                                          l1034 030C                                            l1144 0A32  
                                          l2105 05D3                                            l2106 05EB  
                                          l1156 0A47                                            l2108 05F8  
                                          l2214 1F3A                                            l1079 15EF  
                                          l1504 1310                                            l1088 1653  
                                          l2136 02A9                                            l1522 1FD9  
                                          l2162 16EF                                            l2084 04CC  
                                          l1517 1257                                            l1429 0C0B  
                                          l1702 142F                                            l2175 1739  
                                          l2176 1743                                            l2168 1725  
                                          l5130 1202                                            l5140 121D  
                          _ADCC_StartConversion 1C60                                            l5136 1214  
                                          l5128 11F6                                            l5152 109C  
                                          l1928 14E9                                            l5154 10A8  
                                          l5162 10BD                                            l1699 140F  
                                          l5158 10B4                                            ?_pad 004B  
                                          l6410 1FBA                                            l8002 1702  
                                          l6180 1048                                            l8100 0AB2  
                                          l6404 1FB7                                            l8012 1737  
                                          l8004 1712                                            l6174 105C  
                                          l6422 1FC0                                            l6430 1FC3  
                                          l8014 172A                                            l6184 1053  
                                          l6416 1FBD                                            l8112 10CB  
                                          l6194 105A                                            l6178 105E  
                                          l5650 12EF                                            l5642 12D9  
                                          l5810 1341                                            l8114 10E8  
                                          l8026 175E                                            l8210 09C6  
                                          l8202 099C                                            l9100 0C41  
                                          l8140 1D34                                            l5804 1329  
                                          l9020 0456                                            l8204 099D  
                                          l5670 122C                                            l5646 12E4  
                                          l5638 12CE                                            l5806 1335  
                                          l5814 134A                                            l9022 03C6  
                                          l9030 0459                                            l9006 0452  
                                          l8070 1EA6                                            l8038 1EE2  
                                          l8054 1F00                                            l7504 1C2D  
                                          l7520 148C                                            l5656 12FA  
                                          l8400 160C                                            l9032 03D9  
                                          l9040 045D                                            l9008 03B3  
                                          l8208 09C5                                            l7522 1492  
                                          l8162 1E1C                                            l8154 1E4D  
                                          l5674 1233                                            l5666 1225  
                                          l5754 13BB                                            l5818 1352  
                                          l8410 1617                                            l9042 03EC  
                                          l9050 0461                                            l9210 12BE  
                                          l9132 0CBE                                            l9116 0C77  
                                          l7516 1485                                            l7532 108E  
                                          l8164 1E20                                            l8156 1E51  
                                          l5684 1241                                            l5780 13F2  
                                          l5772 13E1                                            l5764 13C3  
                                          l5748 13B0                                            l7604 1100  
                                          l8412 161E                                            l9052 03FF  
                                          l9060 0465                                            l9140 0B4A  
                                          l9118 0C8A                                            l5678 123A  
                                          l5766 13CF                                            l7550 1F7C  
                                          l7606 1109                                            l8414 1625  
                                          l8422 163A                                            l9070 0424  
                                          l8174 1C8B                                            l8086 1EC4  
                                          l7702 14F6                                            l8190 094A  
                                          l9142 0B4D                                            l5776 13EA  
                                          l5792 131C                                            l4976 1E2F  
                                          l8416 162C                                            l9072 042D  
                                          l7720 049D                                            l8192 094B  
                                          l9160 0BA4                                            l9152 0B84  
                                          l8530 158D                                            l7538 1017  
                                          l8610 0A28                                            l7562 1262  
                                          l4978 1E3B                                            l8418 1633  
                                          l9066 0412                                            l7618 1F34  
                                          l9170 0BDB                                            l9154 0B87  
                                          l9146 0B67                                            l8524 15A6  
                                          l8508 17FE                                            l8620 0A2E  
                                          l5796 1323                                            l7548 1F7A  
                                          l7652 08EC                                            l9068 041B  
                                          l7812 0590                                            l7804 0562  
                                          l7740 04C1                                            l7724 04A0  
                                          l8196 0973                                            l9172 0BDE  
                                          l9164 0BBE                                            l9148 0B6A  
                                          l8374 1D8F                                            l8542 159F  
                                          l8534 1598                                            l8470 17D4  
                                          l8462 17C5                                            l8446 17BD  
                                          l9510 1FCB                                            l7566 1285  
                                          l7582 1405                                            l7646 08CB  
                                          l7662 08FD                                            l8390 15FD  
                                          l7806 0579                                            l7726 04A8  
                                          l8198 0974                                            l9166 0BC1  
                                          l9158 0BA1                                            l9096 0C3A  
                                          l8528 15A8                                            l8480 17DC  
                                          l8448 1788                                            l9512 0A5F  
                                          l8632 0A4B                                            l8640 0A56  
                                          l8608 0A3C                                            l7576 1FDE  
                                          l7592 1411                                            l7656 08F2  
                                          l8392 1602                                            l8384 15F1  
                                          l7840 05F4                                            l7816 0592  
                                          l7760 04F7                                            l7744 04C4  
                                          l7672 14A9                                            l8800 0D4F  
                                          l9504 0BF4                                            l9176 0BE9  
                                          l8570 15D8                                            l8546 15A5  
                                          l8490 17E3                                            l9514 1302  
                                          l8634 0A4D                                            l7586 140D  
                                          l9506 0474                                            l7826 05BB  
                                          l7754 04EB                                            l8564 15CA  
                                          l9516 1249                                            l8636 0A53  
                                          l7596 143B                                            l9508 1642  
                                          l7780 053E                                            l7860 00A4  
                                          l7692 14D7                                            l7676 14B2  
                                          l8732 0D69                                            l8902 0E78  
                                          l8558 15BD                                            l8398 160B  
                                          l7790 055C                                            l7950 023F  
                                          l7942 0211                                            l7862 00A6  
                                          l7694 14E5                                            l8726 0D26  
                                          l8648 0A6D                                            l8592 0A34  
                                          l7944 0228                                            l7880 00C9  
                                          l7864 00AE                                            l8752 0D2F  
                                          l8658 0A85                                            l8594 09F3  
                                          l8930 0301                                            l7786 0557  
                                          l7954 0241                                            l7890 00DF  
                                          l7882 00D1                                            l8746 0D2D  
                                          l8676 1DC7                                            l8940 030D  
                                          l7788 0520                                            l7964 026A  
                                          l8764 0D38                                            l8686 082D  
                                          l8694 078B                                            l8950 031B  
                                          l8934 0305                                            l7974 0296  
                                          l7878 00C7                                            l8782 0D3F  
                                          l8758 0D35                                            l7968 027F  
                                          l7992 16E7                                            l8776 0D3B  
                                          l8890 0E41                                            l8954 0322  
                                          l8794 0D47                                            l8884 0E23  
                                          l8876 0DE2                                            l8980 035F  
                                          l8788 0D44                                  ?_TM1650_enable 0070  
                                          l8974 034E                                            l8966 0339  
                                          l8958 032A                                            l7998 16FE  
                                          STR_1 205B                                            l8968 033D  
                                          l8976 0350                                            STR_2 207B  
                                          l8898 0E65                                            l8994 044C  
                                          l8986 0387                                            STR_4 2078  
                                          STR_5 2047                                            l8996 044F  
                                          l8988 038B                                            STR_6 206F  
                                          STR_7 2047                                            l8998 039D  
                                          STR_8 2075                                            STR_9 2047  
                       __end_of_PWM1_Initialize 1CC6                                            _LATA 0018  
                                          _LATB 0019                                            _LATC 001A  
                                          _T2PR 028D                                            u5045 13C6  
                                          u5065 13D0                                            u5145 132C  
                                          u5075 13DA                                            _PMD0 0796  
                                          u5085 13E2                                            u5165 133B  
                                          _PMD1 0797                                            _PMD2 0798  
                                          u5175 1342                                            _PMD3 0799  
                                          _PMD4 079A                                            u3905 1203  
                                          _PMD5 079B                                            _PMD6 079C  
                                          u3915 120D                                            _PMD7 079D  
                                          u3925 1215                                            u7205 1283  
                                          u8015 170B                                            u3955 109F  
                                          u8035 171F                                            u3885 11F9  
                                          u7245 141B                                            u8205 1EA2  
                                          u7405 14ED                                            u3975 10AE  
                                          u8055 1731                                            u3985 10B5  
                                          u8145 1EDE                                            u7345 14BB  
                                          u8235 1EC0                                            u7525 0528  
                                          u7285 1F3B                                            u8175 1EFC  
                                          u7615 056E                                            u7535 052F  
                                          u7375 14D8                                            u8095 174B  
                                          u8600 1584                                            u7705 05DD  
                                          u8610 1585                                            u9075 0DE5  
                                          u7555 0538                                            u9084 0E04  
                                          u9085 0E03                                            u7565 054C  
                                          u7805 0155                      ?_beatBrightnessCalculation 00C5  
                                          u8455 1782                                            u7815 0184  
                                          u7825 01DA                                            u7595 0565  
                                          u7835 01F1                                            u8485 179B  
                                          u7685 05A9                                            u7845 0200  
                                          u8495 17B5                                            u7695 05C4  
                                          u7855 0214                                            u7945 0258  
                                          u9635 0C23                                            u8755 09EC  
                                          u7955 0273                                            u7875 021D  
                                          u7965 0289                                            u8785 0A06  
                                          u8795 0A21                                            u9685 0C9F  
                                          _TMR2 028C                                            u9797 1298  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                              _LED_task_ANIMATION 1C18  
                                 __CFG_FCMEN$ON 0000                             ?_LED_task_BEAT_FADE 0070  
                                 ?_BUTTONS_init 0070                                   ?_BUTTONS_task 0070  
                                          _dbuf 01A0                            ?_adcThresholdHandler 0070  
                                          _ctoa 10F1                                            _main 128F  
                                          _down 00BB                                            _init 1F09  
                                          _menu 00BD                                            _prec 0134  
                                          _nout 0130                                            pad@i 004F  
                                          pad@p 004C                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            pad@w 0051  
                        ??_I2C1_MasterTRBInsert 0022                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                            start 0030  
                               ___fldiv@new_exp 0040                         __end_of_TM1650_setDigit 1D6A  
                           ?_LED_task_ANIMATION 0070                              __size_of_GPIO_init 0011  
                           __size_of_CLOCK_init 0008                                   __CFG_CSWEN$ON 0000  
                                 __CFG_MCLRE$ON 0000                            __size_of_address_dec 0018  
                          __size_of_address_inc 0019                  I2C1_MasterWriteTRBBuild@length 0021  
                           _LED_task_BEAT_MIXED 07FF                                  _BUTTONS_isHeld 1D27  
                                         ??_pad 004E                         __end_of_PWM2_Initialize 1CD1  
                       __end_of_TMR0_Initialize 1DA5                                      _i2c1_state 00C3  
                ??_TMR0_DefaultInterruptHandler 0070                  __size_of_OSCILLATOR_Initialize 0009  
                          ??_LED_task_BEAT_FADE 0020                       I2C1_MasterTRBInsert@count 0023  
                 __end_of_OSCILLATOR_Initialize 1CB1                       I2C1_MasterTRBInsert@pflag 0021  
                         _eusart1RxStatusBuffer 0120                                __end_of_LED_init 1C4E  
                                 ___fltol@sign1 006B                                           _ADCAP 010E  
                                         _ADACT 0117                                           ?_ctoa 0054  
                              __end_of_LED_task 0C0C                                           ?_main 0070  
                                         _ADCLK 0118                                           _ADCNT 0099  
                                         ?_init 0020                                           _ADPCH 009F  
                               __end_of___fldiv 05FD                                           _ADREF 0116  
                               __end_of___awdiv 13F7                               __end_of_I2C1_Stop 1E75  
                                         STR_10 2072                                           STR_11 2047  
                                         STR_20 2082                                           STR_12 206C  
                                         STR_21 2047                                           STR_13 2047  
                                         STR_14 2084                                           STR_22 2055  
                                         STR_30 203C                                           STR_15 2047  
                                         STR_23 2061                                           STR_31 202D  
                                         STR_24 2061                                           STR_16 2080  
                                         STR_32 2013                                           STR_17 2047  
                                         STR_25 2049                                           STR_33 2000  
                                 __CFG_WDTE$OFF 0000                                           STR_18 207E  
                                         STR_26 204F                                           STR_34 200A  
                                         STR_19 2047                                           STR_27 2067  
                                         STR_35 2025                                           STR_28 2047  
                                         STR_36 2035                                 __end_of___awmod 1357  
                                         STR_37 2043                                           STR_29 201C  
                              __end_of_DMX_init 1D7D                                           _ADRPT 009A  
                               __end_of___flmul 02B6                                 __end_of___fltol 1505  
                               ___awdiv@divisor 0020                                           _T2CON 028E  
                                         _LATC5 00D5                                           _T2HLT 028F  
                               __end_of___lwdiv 1222                      _ADCC_ADTI_InterruptHandler 015B  
                                         _T2TMR 028C                                           _T2RST 0291  
                                         i1l430 0017                                           i1l432 001E  
                               __end_of___lwmod 10C2                                           i1l434 0025  
                                         i1l427 000E                                           i1l439 002E  
                                         i1l552 0EF0                                           i1l553 0EF1  
                                         i1l547 0EC2                                           i1l581 0FC0  
                                         i1l573 0F7C                                           i1l558 0F13  
                                         i1l559 0F1F                                           i1l576 0F8B  
                                         i1l577 0F99                                           i1l569 0F5C  
                                         i1l588 1D44                                 ___awdiv@counter 0025  
                                         _OSCEN 0891                                    vfpfcnvrt@fmt 005A  
                            _PWM4_LoadDutyValue 1EEB                                           _TMR0H 059D  
                                         _TMR0L 059C                                           _PORTA 000C  
                                         _PORTC 000E                __end_of_LED_task_BEAT_CONTINUOUS 1C1A  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014               __size_of_TMR0_SetInterruptHandler 0009  
                  __end_of_I2C1_BusCollisionISR 1C23                            ??_LED_task_ANIMATION 0020  
                     ?_TMR0_SetInterruptHandler 0020                                 __end_of_getMode 1C29  
                             ??_I2C1_Initialize 0020                                __end_of_TMR0_ISR 1D19  
                                 __CFG_WRTB$OFF 0000                                   __CFG_WRTC$OFF 0000  
                                 __CFG_WRTD$OFF 0000                                           _delay 0169  
                          ?_LED_task_BEAT_MIXED 0070                                           _flags 0136  
                                         _enter 00BA                           ?_ADCC_StartConversion 0070  
                                         _fputc 1258                                           _fputs 1FDA  
                           ?_PWM4_LoadDutyValue 00C5                       __size_of_beatColorCreator 00AF  
                                         pad@fp 0053                                           _width 0132  
                                         ctoa@c 0054                                           _putch 1F6C  
                                         ctoa@w 0057                         __end_of_PWM3_Initialize 1CDC  
                                         pclath 000A                                  ??_BUTTONS_init 0025  
                                ??_BUTTONS_task 0022                           ??_adcThresholdHandler 0070  
                             __end_of_BEAT_init 1DFA                               __end_of_BEAT_task 0CE1  
                                         status 0003                                   colorDec@input 0022  
                                         wtemp0 007E      __end_of_EUSART1_DefaultFramingErrorHandler 1C17  
   __size_of_EUSART1_DefaultFramingErrorHandler 0001            ??_EUSART1_DefaultFramingErrorHandler 0070  
           ?_EUSART1_DefaultFramingErrorHandler 0070              _EUSART1_DefaultFramingErrorHandler 1C16  
               I2C1_MasterWriteTRBBuild@address 0022                          __end_of_BUTTONS_isHeld 1D36  
                               __initialization 0032                            TM1650_setDigit@digit 0038  
                         I2C1_MasterWrite@pdata 002D                           I2C1_MasterWrite@pflag 002A  
                                  __end_of_ctoa 1121                      __end_of_EUSART1_Initialize 11ED  
                                  __end_of_main 12CB                                    __end_of_init 1F29  
                               _CONTROLLER_task 02B6                            ??_PWM4_LoadDutyValue 006D  
                                 ?_LED_setColor 00DB                    __size_of_CLOCK_timerCallback 0006  
                                __CFG_SAFEN$OFF 0000                                   ?_LED_task_DMX 0070  
               __size_of_ADCC_SetUpperThreshold 0009                           __end_of_CLOCK_getTime 1C72  
                       __end_of_PWM4_Initialize 1CE7                         __end_of_TMR2_Initialize 1D27  
                   ?_INTERRUPT_InterruptManager 0070                            _LED_task_BEAT_STROBE 0CE1  
                                   _i2c1_object 00A0                                          ??_ctoa 0056  
                                        ??_main 016D                                          ??_init 0023  
                          __end_of_CONTROL_BEAT 15E2                                   colorInc@input 0022  
                             __end_of_GPIO_init 1D58                           ??_LED_task_BEAT_MIXED 0020  
                               ??_TM1650_enable 0036                                          _ADACCH 0097  
                                        _ADACCL 0096                                          _ADACCU 0098  
                                        _ADACQH 010D                                          _ADACQL 010C  
                                        _ADCON0 0111                                          _ADCON1 0112  
                                        _ADCON2 0113                                          _ADCON3 0114  
                                        _ADERRH 0091                                          _ADERRL 0090  
                          __size_of_CONTROL_DMX 0099                                          ?_fputc 003B  
                                        _ADLTHH 008D                                          _ADLTHL 008C  
                                        ?_fputs 0043                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _CCPR1H 030D  
                                        _CCPR2H 0311                                          _CCPR3H 0315  
                                        _CCPR1L 030C                                          _CCPR4H 0319  
                                        _CCPR2L 0310                                          _CCPR3L 0314  
                                        _CCPR4L 0318                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                ___awdiv@dividend 0022  
                                        _ADUTHL 008E                                          _ANSELA 1F38  
                                        ?_putch 0070                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T0CON0 059E                                          _T0CON1 059F  
                                        _RC1REG 0119                                          _RA4PPS 1F14  
                                        _RA5PPS 1F15                                          _RC1STA 011D  
                                        _RC3PPS 1F23                                          _RC4PPS 1F24  
                              ?_PWM1_Initialize 0070                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          _RC7PPS 1F27  
                                __CFG_WDTCCS$SC 0000                                          i1l7130 114F  
                                        i1l7126 1147                                          i1l7118 1126  
                                        i1l6602 11B6                                          i1l6710 0F7F  
                                        i1l6702 0F6A                                          i1l6640 0EEA  
                                        i1l6722 0FA0                                          i1l6740 0FC7  
                                        i1l6636 0EE3                                          i1l6742 0FCB  
                                        i1l6726 0FA7                                          i1l6654 0F0D  
                                        i1l6592 1199                                          i1l6648 0EFD  
                                        i1l6738 0FC4                                          i1l6668 0F38  
                                        i1l6748 0FD3                                          i1l6598 11A7  
                                        i1l6688 0F51                                          i1l5994 1E73  
                                        i1l9518 0FDC                                          _OSCFRQ 0893  
                        __size_of_DMX_interrupt 0031                                          _TX1REG 011A  
                                        _TX1STA 011E                                __end_of___xxtofl 1767  
                             ?_I2C1_MasterWrite 0027                                  __CFG_PWRTS$OFF 0000  
                              ?_TM1650_setDigit 0036                                 ?_BUTTONS_isHeld 0070  
                            ??_I2C1_MasterWrite 002B                                    _CCPTMRS0bits 021E  
                                  vfprintf@cfmt 0069                                __end_of_colorDec 1258  
                              __end_of_colorInc 1311                                  _p_i2c1_current 00C1  
                                ??_LED_setColor 00DF                     __size_of_PWM3_LoadDutyValue 001E  
                                ??_LED_task_DMX 00E3                     __end_of_TM1650_fastPrintNum 0B49  
                             _ADCC_ThresholdISR 1CFF                                       ??___fldiv 0036  
                        __size_of_menuSelection 0072                                       ??___awdiv 0024  
                                __CFG_STVREN$ON 0000                                       ??___awmod 002D  
                                     ??___flmul 0050                                       ??___fltol 0066  
                                     ??___lwdiv 0024                    ??_TM1650_fastPrintNum_2digit 0036  
                                     ??___lwmod 002C                    ??_TM1650_fastPrintNum_3digit 0038  
                      ?_EUSART1_SetErrorHandler 0020                      ??_I2C1_MasterWriteTRBBuild 0024  
                                        _manual 00A5                                ?_TMR0_Initialize 0070  
                              ?_PWM2_Initialize 0070                              ?_ADCC_ThresholdISR 0070  
                         ?_LED_task_BEAT_STROBE 0070                                       ?_I2C1_ISR 0070  
                              ___awdiv@quotient 0027                                 ___awmod@divisor 0029  
                               ___awmod@counter 002E                                       ??_getMode 0020  
                                        _printf 1DCE                          __size_of_BEAT_detected 0009  
                                        pad@buf 004B                ??_EUSART1_SetOverrunErrorHandler 0022  
               ?_EUSART1_SetOverrunErrorHandler 0020                                          ctoa@fp 0059  
                                _lastActiveTime 0144                                          _strlen 1E2A  
                          __size_of_TM1650_init 0014                   TM1650_fastPrintNum_2digit@num 0039  
                               _ADCC_Initialize 101D                                          fputc@c 003B  
                                _PMD_Initialize 1CB1                                          fputs@c 0047  
                                  ??_CLOCK_init 0022                                          fputs@i 0048  
                                        fputs@s 004A                                    __pdataCOMMON 007C  
                            __size_of__Umul8_16 0020                             ??_ADCC_ThresholdISR 0070  
                 TM1650_fastPrintNum_3digit@num 0036                          ??_ADCC_StartConversion 0020  
                                        putch@n 003A                                __end_of_vfprintf 10F1  
          ADCC_SetUpperThreshold@upperThreshold 0020    ADCC_SetADTIInterruptHandler@InterruptHandler 0020  
      TMR0_SetInterruptHandler@InterruptHandler 0020                          _ADCC_SetUpperThreshold 1C57  
                 I2C1_MasterWriteTRBBuild@pdata 0020                        _LED_task_BEAT_CONTINUOUS 1C19  
                                 _tm1650_status 014D                                 _eusart1RxBuffer 0128  
                       beatColorCreator@inGreen 00CE                                ?_PWM3_Initialize 0070  
                                  ___xxtofl@arg 002A                                    ___xxtofl@exp 0029  
                             _SYSTEM_Initialize 1F90                                    ___xxtofl@val 0020  
                       beatColorCreator@inWhite 00D0                         __end_of__initialization 0086  
                       __end_of_CONTROLLER_task 0483                              ?_SYSTEM_Initialize 0070  
           __size_of_TM1650_fastPrintNum_2digit 0074             __size_of_TM1650_fastPrintNum_3digit 0099  
                    __end_of_PWM2_LoadDutyValue 1ECD                                       ?_LED_init 0070  
                                     ?_LED_task 0070                                      ___fltol@f1 0062  
                                     ?_DMX_init 0070                                  _i2c1_trb_count 00C2  
                   PWM1_LoadDutyValue@dutyValue 00C5                  __size_of_EUSART1_RxDataHandler 0018  
                     __end_of_ADCC_ThresholdISR 1D0C                         __size_of_DMX_getAddress 0003  
                 __end_of_EUSART1_RxDataHandler 1E12                           _I2C1_FunctionComplete 1D36  
                          _I2C1_BusCollisionISR 1C20                                  __pcstackCOMMON 0070  
                            __end_of_CLOCK_init 1C46                          I2C1_MasterWrite@length 0027  
                                  __pidataBANK1 07F9                                    __pidataBANK2 1C38  
                           ??_SYSTEM_Initialize 0022                                       ?_TMR0_ISR 0070  
                                 __end_of_fputc 128F                                   __end_of_fputs 2000  
                                 __end_of_putch 1F90                              _PWM1_LoadDutyValue 1E91  
                                    ??_I2C1_ISR 0072                                ?_TMR2_Initialize 0070  
                              ?_PWM4_Initialize 0070                                   _DMX_interrupt 1121  
                          __end_of_BUTTONS_init 13A5                          __end_of_PMD_Initialize 1CBB  
                          __end_of_BUTTONS_task 0EAE                     PWM4_LoadDutyValue@dutyValue 00C5  
                            __size_of_getIsHold 0002                         __size_of_getManualColor 0026  
                           ?_PWM1_LoadDutyValue 00C5                     __end_of_EUSART1_Receive_ISR 11B9  
                             _thresholdExceeded 00AD                     ADCC_StartConversion@channel 0020  
                             LED_setColor@input 00DB                                   _menuSelection 15E2  
                                       ??_fputc 003E                       __end_of_SYSTEM_Initialize 1FB4  
                                       ??_fputs 0044                                _beatColorCreator 0920  
                                       ??_putch 0039                                   _eusart1RxHead 0079  
                                 _eusart1RxTail 0078                                      __pbssBANK1 00A0  
                                    __pbssBANK2 0120                                      __pbssBANK3 01A0  
               ??_EUSART1_SetRxInterruptHandler 0022                     ??_beatBrightnessCalculation 00C9  
                                 _BEAT_detected 1C84                                      ??_LED_init 0020  
                                    ??_LED_task 00E8                                      ??_DMX_init 0039  
                          ??_PWM1_LoadDutyValue 006D                               __end_of__Umul8_16 1F49  
                         ?_I2C1_BusCollisionISR 0070                 __end_of_EUSART1_SetErrorHandler 1C96  
                                    __pmaintext 128F                __end_of_TMR0_SetInterruptHandler 1C7B  
                                    ??_TMR0_ISR 0070                                 __CFG_PPS1WAY$ON 0000  
                              writeData@address 0034                         __end_of_ADCC_Initialize 1043  
                        ??_LED_task_BEAT_STROBE 00E3                                      __pintentry 0004  
                               _I2C1_Initialize 1E75                                         _CCP1CON 030E  
                                       _CCP2CON 0312                                         _CCP3CON 0316  
                         __size_of_CONTROL_BEAT 006F                                         _CCP4CON 031A  
                                       _ADFLTRH 0095                                         _ADFLTRL 0094  
                                ?_DMX_interrupt 0070                                         _ADPREVH 009C  
                                       _ADPREVL 009B                                   BUTTONS_task@i 0025  
          __end_of_ADCC_SetADTIInterruptHandler 1C57           __size_of_ADCC_SetADTIInterruptHandler 0009  
                  _ADCC_SetADTIInterruptHandler 1C4E                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                 __CFG_ZCDDIS$OFF 0000  
                                       ?_printf 00C5                                 ?_PMD_Initialize 0070  
                         _animationModeSelected 00ED                                         ?_strlen 0020  
        __end_of_EUSART1_SetFramingErrorHandler 1C9F         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 1C96                                       ?___xxtofl 0020  
                  ?_EUSART1_DefaultErrorHandler 0070                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                              __size_of_vfpfcnvrt 00A8  
                                     _I2C1_Stop 1E5B                                      _arrayIndex 013A  
                                ?_menuSelection 0070                                         _OSCTUNE 0892  
                                       _SSP1ADD 018D                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                            __end_of_LED_setColor 0760  
                             _colorModeSelected 00B0                                       ?_colorDec 0070  
                             __end_of_charTable 1860                             _CLOCK_timerCallback 1C32  
                                     ?_colorInc 0070                            __end_of_LED_task_DMX 1573  
                                ?_BEAT_detected 0070                   I2C1_MasterTRBInsert@ptrb_list 0020  
                       __size_of_CONTROL_MANUAL 00B8                              __size_of_writeData 001D  
                             __end_of_getIsHold 1C1D                                   ??_address_dec 0039  
                                 ??_address_inc 0039                                ?_CONTROLLER_task 0070  
                                    _enterState 00B2                                 BUTTONS_task@btn 0028  
                                  _CONTROL_BEAT 1573                          ?_I2C1_FunctionComplete 0070  
                                     _BEAT_init 1DE3                   __size_of_I2C1_MasterTRBInsert 0055  
                                     _BEAT_task 0C0C                      __size_of_ADCC_ThresholdISR 000D  
                            _p_i2c1_trb_current 0077              __end_of_TM1650_fastPrintNum_2digit 0878  
                    _TM1650_fastPrintNum_2digit 0804              __end_of_TM1650_fastPrintNum_3digit 07F9  
                    _TM1650_fastPrintNum_3digit 0760                                         ___fldiv 0483  
                                       ___awdiv 13A5                            ?_CLOCK_timerCallback 0070  
                                       ___awmod 1311                                         ___flmul 008A  
                                       ___fltol 149F                                         ___lwdiv 11ED  
                                       ___lwmod 1095                                       ?_vfprintf 0063  
                     _beatBrightnessCalculation 1654                                         _address 00EA  
                    _animationBrightnessControl 014E                     __size_of_LED_task_BEAT_FADE 0001  
                                       _getMode 1C26                                         __ptext1 1DA5  
                                       __ptext2 1F90                                         __ptext3 1D19  
                                       __ptext4 1D91                                         __ptext5 1CDC  
                                       __ptext6 1CD1                                         __ptext7 1CC6  
                                       __ptext8 1CBB                                         __ptext9 1CB1  
                               __size_of_printf 0015                   ?_ADCC_SetADTIInterruptHandler 0020  
                               __CFG_WRTAPP$OFF 0000                                 __size_of_strlen 0018  
                                       _lastRun 013E                           _OSCILLATOR_Initialize 1CA8  
                                     _T2CONbits 028E                                    __size_of_pad 0053  
                                       _initial 0167                                         _buttons 01C0  
                                    ??___xxtofl 0024                                ___awmod@dividend 002B  
                            _EUSART1_Initialize 11B9                        ??_PIN_MANAGER_Initialize 0020  
                                     _T2HLTbits 028F                                 __CFG_WRTSAF$OFF 0000  
                   __size_of_LED_task_ANIMATION 0001                                      ?_I2C1_Stop 0070  
                   __end_of_adcThresholdHandler 1C2D                                         _upState 00B5  
                 ??_EUSART1_DefaultErrorHandler 0071                                         _startup 00EE  
                    __size_of_SYSTEM_Initialize 0024                   LED_task_BEAT_STROBE@beatState 006F  
                          I2C1_ISR@pi2c_buf_ptr 00C0                                         clrloop0 1CE8  
                                    ??_colorDec 0020                                      ??_colorInc 0020  
                              _currentSelection 00B8                            end_of_initialization 0086  
                                     _T2RSTbits 0291                                       _GPIO_init 1D47  
                           ?_EUSART1_Initialize 0070                                         init@btn 0024  
                                       init@pin 0022                                ??_BUTTONS_isHeld 0020  
                                       fputc@fp 003D                                         init_ram 1CF3  
                   _EUSART1_OverrunErrorHandler 0161                                         fputs@fp 0043  
                                       initloop 1CF4                          ??_I2C1_BusCollisionISR 0070  
                       __end_of_I2C1_Initialize 1E91                                  _DMX_getAddress 1C23  
         __end_of_EUSART1_SetRxInterruptHandler 1C84          __size_of_EUSART1_SetRxInterruptHandler 0009  
                 _EUSART1_SetRxInterruptHandler 1C7B                                      ?_BEAT_init 0070  
                                    ?_BEAT_task 0070                   beatBrightnessCalculation@temp 006D  
                             __end_of_vfpfcnvrt 0920                           __size_of_BUTTONS_init 004E  
                         __size_of_BUTTONS_task 00EE                           ??_CLOCK_timerCallback 0070  
                               ??_DMX_interrupt 0070                             __end_of_address_dec 1E2A  
                   __size_of_PWM4_LoadDutyValue 001E                             __end_of_address_inc 1E5B  
                              ?_ADCC_Initialize 0070                                      ??_vfprintf 0066  
                          ??_EUSART1_Initialize 0022                           __CFG_WDTCPS$WDTCPS_31 0000  
                                       strlen@a 0023                                         strlen@s 0020  
                      _TMR0_SetInterruptHandler 1C72                     __end_of_LED_task_BEAT_MIXED 0800  
                    ??_LED_task_BEAT_CONTINUOUS 0020                                  _getManualColor 1FB4  
                     __size_of_I2C1_MasterWrite 002A                               __size_of_I2C1_ISR 0152  
                             __end_of_writeData 101D                                 ??_menuSelection 00CF  
                       ?_ADCC_SetUpperThreshold 0020                                   ??_CONTROL_DMX 0039  
                                 ___xxtofl@sign 0028                                       _TRISAbits 0012  
                                     _TRISCbits 0014                                     ___fldiv@grs 0042  
                                   ___fldiv@rem 003B                                 ??_BEAT_detected 0020  
              __size_of_EUSART1_SetErrorHandler 0009                                __CFG_FEXTOSC$OFF 0000  
                         __end_of_TM1650_enable 1DCE               I2C1_ISR@i2c_10bit_address_restart 00BE  
                                    ?_GPIO_init 0070                             getManualColor@input 0022  
                        __size_of_CLOCK_getTime 0009                                     ___flmul@grs 0057  
                                  _BUTTONS_init 1357                                    _BUTTONS_task 0DC0  
                        __end_of_DMX_getAddress 1C26                                     _CCP1CONbits 030E  
                                   _CCP2CONbits 0312                                     _CCP3CONbits 0316  
                                   _CCP4CONbits 031A                         I2C1_MasterWrite@address 0028  
                    __end_of_PWM3_LoadDutyValue 1EEB            __size_of_EUSART1_DefaultErrorHandler 0003  
                      __size_of_PWM1_Initialize 000B                               __size_of_LED_init 0008  
                             __size_of_LED_task 00C3                               __size_of_DMX_init 0013  
                      __end_of_beatColorCreator 09CF                  ??_ADCC_DefaultInterruptHandler 0070  
                                 ??_TM1650_init 006F                                     vfpfcnvrt@ap 005B  
                                   vfpfcnvrt@fp 0062                         I2C1_MasterWrite@trBlock 0154  
                        __end_of_getManualColor 1FDA                                   __pidataCOMMON 0002  
                             __size_of_TMR0_ISR 000D                        I2C1_Stop@completion_code 0071  
                            _PWM2_LoadDutyValue 1EAF                        __size_of_TM1650_setDigit 0012  
                        ?_OSCILLATOR_Initialize 0070                  __end_of_ADCC_SetUpperThreshold 1C60  
                  __size_of_TM1650_fastPrintNum 00C2                                  __end_of_printf 1DE3  
                         __size_of_LED_setColor 0163                                  __end_of_strlen 1E42  
                                  _lastDetected 014C                           __size_of_LED_task_DMX 006E  
                           start_initialization 0032                                    _enterPressed 00B6  
                                   ??_I2C1_Stop 0070                        __size_of_PWM2_Initialize 000B  
                      __size_of_TMR0_Initialize 0014                             ?_PWM2_LoadDutyValue 00C5  
               __size_of_PIN_MANAGER_Initialize 0033                             TM1650_setDigit@data 0036  
                                   __end_of_pad 144A   EUSART1_SetRxInterruptHandler@interruptHandler 0020  
                                _beatBrightness 00EF                   __size_of_ADCC_StartConversion 0009  
             __size_of_I2C1_MasterWriteTRBBuild 0023                       ?_I2C1_MasterWriteTRBBuild 0020  
                             _BUTTONS_isClicked 1D7D                             __end_of_CONTROL_DMX 1800  
                                _CONTROL_MANUAL 09CF                                 ?_DMX_getAddress 0070  
                            ?_BUTTONS_isClicked 0070                                     _address_dec 1E12  
                                   _address_inc 1E42                                     ??_BEAT_init 0022  
                              ?_I2C1_Initialize 0070                                     ??_BEAT_task 0028  
                              __CFG_LPBOREN$OFF 0000                            ??_PWM2_LoadDutyValue 006D  
                      __size_of_PWM3_Initialize 000B                                     vfprintf@fmt 0063  
                   PWM2_LoadDutyValue@dutyValue 00C5                             ??_BUTTONS_isClicked 0020  
                              ??_PMD_Initialize 0020                           _EUSART1_RxDataHandler 1DFA  
                                  _LED_setColor 05FD                  ?_EUSART1_SetRxInterruptHandler 0020  
                           CONTROL_MANUAL@input 0025                                       __Umul8_16 1F29  
                                   __pdataBANK1 00EA                                     __pdataBANK2 0167  
                                  _LED_task_DMX 1505                                 ?_getManualColor 0070  
                                 _CLOCK_getTime 1C69                                        ??_printf 006B  
                                      ??_strlen 0022                    I2C1_MasterWriteTRBBuild@ptrb 0026  
                                _eusart1RxCount 00C4                          beatColorCreator@inBlue 00CF  
                                     ___fldiv@a 002E                                       ___fldiv@b 0032  
                                   __pbssBIGRAM 23EE                             __end_of_TM1650_init 1DB9  
                                     ___flmul@a 004C                                       ___flmul@b 0048  
                                   __pbssCOMMON 0077               _EUSART1_RxDefaultInterruptHandler 0165  
                                     ___latbits 0003                                   __pcstackBANK0 0020  
                                 __pcstackBANK1 00C5                                   __pcstackBANK2 016D  
                                 __pcstackBANK3 01E0                               _CONTROL_ANIMATION 1043  
            __size_of_beatBrightnessCalculation 007D                        __size_of_PWM4_Initialize 000B  
                      __size_of_TMR2_Initialize 000E                                   _i2c1_tr_queue 0158  
                             __size_of___xxtofl 0096                       __end_of_BUTTONS_isClicked 1D91  
                     beatColorCreator@tempColor 00D7                              ?_CONTROL_ANIMATION 0070  
                        __end_of_CONTROL_MANUAL 0A87                                     ??_GPIO_init 0020  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                       ??_I2C1_FunctionComplete 0070                    __size_of_EUSART1_Receive_ISR 0034  
                             __size_of_colorDec 0036                               __size_of_colorInc 0046  
                                  _menuSelected 00B9                                    _currentState 00A9  
                                     _charTable 1800                             ??_CONTROL_ANIMATION 0020  
                         _TMR0_InterruptHandler 015D                                       __pnvBANK2 015B  
                   __size_of_PWM1_LoadDutyValue 001E                                ___lwdiv@dividend 0022  
                        _PIN_MANAGER_Initialize 1152                                       _getIsHold 1C1B  
                   ?_TM1650_fastPrintNum_2digit 0070                                        ?___fldiv 002E  
                   ?_TM1650_fastPrintNum_3digit 0036                                        ?___awdiv 0020  
                                     __ptext100 1121                                       __ptext101 1185  
                                     __ptext102 0800                                       __ptext103 1C16  
                                     __ptext104 1C1D                                       __ptext105 1DFA  
                                     __ptext106 1CFF                                       __ptext107 1C15  
                                     __ptext108 1C29                                        ?___awmod 0029  
                                      ?___flmul 0048                                        ?___fltol 0062  
                                    ?__Umul8_16 0020                                        ?___lwdiv 0020  
                                      ?___lwmod 0028                                  ?_CLOCK_getTime 0020  
                                      _I2C1_ISR 0EAE                   __size_of_LED_task_BEAT_STROBE 00DF  
                             ??_PWM1_Initialize 0020                    ??_INTERRUPT_InterruptManager 0077  
                               writeData@status 0035                                        ?_getMode 0070  
                             __size_of_vfprintf 002F                                _I2C1_MasterWrite 106B  
                                      _BAUD1CON 011F                       __end_of_CONTROL_ANIMATION 106B  
                  __end_of_I2C1_MasterTRBInsert 149F      __end_of_EUSART1_DefaultOverrunErrorHandler 0804  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0070  
           ?_EUSART1_DefaultOverrunErrorHandler 0070              _EUSART1_DefaultOverrunErrorHandler 0800  
                          _EUSART1_ErrorHandler 015F                                       _downState 00B4  
                                   _CONTROL_DMX 1767                         _EUSART1_SetErrorHandler 1C8D  
                             ??_TM1650_setDigit 0037                                ___lwdiv@quotient 0025  
             __end_of_beatBrightnessCalculation 16D1                                  __size_of_fputc 0037  
                                      _T2CLKCON 0290                                       _menuState 00B3  
                                __size_of_fputs 0026                                 ?_CONTROL_MANUAL 0070  
                                __size_of_putch 0024        __end_of_I2C1_WaitForLastPacketToComplete 1C32  
     __size_of_I2C1_WaitForLastPacketToComplete 0005              ??_I2C1_WaitForLastPacketToComplete 0020  
             ?_I2C1_WaitForLastPacketToComplete 0070                _I2C1_WaitForLastPacketToComplete 1C2D  
                        I2C1_MasterRead@trBlock 0150                               ??_TMR0_Initialize 0022  
                             ??_PWM2_Initialize 0020         EUSART1_SetErrorHandler@interruptHandler 0020  
                       BUTTONS_isClicked@button 0020                                       clear_ram0 1CE7  
                                      _PIE0bits 0716                                        _LED_init 1C46  
                                      _PIE1bits 0717                                        _PIE3bits 0719  
                                      _LED_task 0B49                                        _DMX_init 1D6A  
           __size_of_INTERRUPT_InterruptManager 002C                      ??_TMR0_SetInterruptHandler 0022  
                                      _PIR0bits 070C                                     _incInterval 007C  
                                      _PIR1bits 070D                                        _PIR3bits 070F  
                                      _PIR4bits 0710                                        _RX1DTPPS 1ECB  
                        ?_EUSART1_RxDataHandler 0070                                      ?_getIsHold 0070  
                       CONTROLLER_task@isActive 006F                               __CFG_BBSIZE$BB512 0000  
                                      _SSP1CON1 0190                                        _SSP1CON3 0192  
                                      _TMR0_ISR 1D0C                      __end_of_LED_task_BEAT_FADE 1C1B  
                                      _SSP1STAT 018F                        __size_of_CONTROLLER_task 01CD  
                                   _TM1650_init 1DA5                                       _threshold 016B  
                                     _vfpfcnvrt 0878                               ??_PWM3_Initialize 0020  
                                    _ADCON0bits 0111                                      _ADCON1bits 0112  
                                    _ADCON2bits 0113                                      _ADCON3bits 0114  
                                     _startTime 014A                      __end_of_LED_task_ANIMATION 1C19  
                            DMX_interrupt@dummy 0076                                        _WPUAbits 1F39  
                                      _WPUCbits 1F4F                                       _writeData 1000  
                    __size_of_BUTTONS_isClicked 0014                                      vfpfcnvrt@c 0061  
                                   _lastIncTime 00AB                               ??_TMR2_Initialize 0020  
                             ??_PWM4_Initialize 0020                    __size_of_adcThresholdHandler 0004  
                   __end_of_CLOCK_timerCallback 1C38                                BUTTONS_task@time 0026  
                           _TM1650_fastPrintNum 0A87                                      _ADSTATbits 0115  
                    __end_of_PWM4_LoadDutyValue 1F09                   __size_of_I2C1_BusCollisionISR 0003  
                                    vfprintf@ap 0065                                      vfprintf@fp 0068  
                               ??_CLOCK_getTime 0022                          I2C1_ISR@i2c_bytes_left 00BF  
                       ??_OSCILLATOR_Initialize 0020                                     ??__Umul8_16 0022  
                              __size_of___fldiv 017A                                __size_of___awdiv 0052  
                             ?_beatColorCreator 00CE                           beatColorCreator@inRed 00D2  
                              __size_of___awmod 0046                                __size_of___flmul 022C  
                              __size_of___fltol 0066                           __end_of_DMX_interrupt 1152  
                   __size_of_EUSART1_Initialize 0034                                      ?_vfpfcnvrt 005A  
                              __size_of___lwdiv 0035                                __size_of___lwmod 002D  
                         _beatColorCreator$3606 00D3                __end_of_I2C1_MasterWriteTRBBuild 1F6C  
                            ??_beatColorCreator 006E                              _PWM3_LoadDutyValue 1ECD  
                                    _ANSELAbits 1F38                                        _beatHold 00B1  
                                    _ANSELCbits 1F4E                                __size_of_getMode 0003  
                          ?_TM1650_fastPrintNum 0036                       ??_EUSART1_SetErrorHandler 0022  
                               BEAT_task@offset 002A                      __size_of_CONTROL_ANIMATION 0028  
                           TM1650_enable@enable 0036             __end_of_EUSART1_DefaultErrorHandler 1C20  
                   _EUSART1_DefaultErrorHandler 1C1D                                     _currentTime 0146  
                                    _CLOCK_init 1C3E                                        ___xxtofl 16D1  
                                    _T0CON0bits 059E                        __size_of_ADCC_Initialize 0026  
                                   _menuPressed 00B7                                 ___lwdiv@divisor 0020  
                         __end_of_menuSelection 1654                             I2C1_ISR@i2c_address 007A  
                               ___lwdiv@counter 0027                                        _detected 00AE  
                                    ?_writeData 0030                                        __ptext10 1152  
                                      __ptext11 1CA8                                        __ptext20 1C1B  
                                      __ptext12 1E75                                        __ptext21 1505  
                                      __ptext13 11B9                                        __ptext30 1F29  
                                      __ptext22 1C23                                        __ptext14 1C9F  
                                      __ptext31 0483                                        __ptext23 0CE1  
                                      __ptext15 1C96                                        __ptext40 1C18  
                                      __ptext32 1EEB                                        __ptext24 0920  
                                      __ptext16 1C8D                                        __ptext41 1C46  
                                      __ptext33 1ECD                                        __ptext25 1654  
                                      __ptext17 101D                                        __ptext50 13F7  
                                      __ptext42 1D6A                                        __ptext34 1EAF  
                                      __ptext26 05FD                                        __ptext18 0B49  
                                      __ptext51 1E2A                                        __ptext43 1C7B  
                                      __ptext35 1E91                                        __ptext27 16D1  
                                      __ptext19 1C26                                        __ptext60 13A5  
                                      __ptext52 1FDA                                        __ptext44 02B6  
                                      __ptext36 1C84                                        __ptext28 149F  
                                      __ptext61 1DB9                                        __ptext53 1258  
                                      __ptext45 15E2                                        __ptext37 07FF  
                                      __ptext29 008A                                        __ptext70 106B  
                                      __ptext62 09CF                                        __ptext54 1F6C  
                                      __ptext46 1DCE                                        __ptext38 1C1A  
                                      __ptext71 1F49                                        __ptext63 12CB  
                                      __ptext55 1D58                                        __ptext47 10C2  
                                      __ptext39 1C19                                        __ptext80 1C72  
                                      __ptext72 144A                                        __ptext64 1222  
                                      __ptext56 1FB4                                        __ptext48 0878  
                                      __ptext81 0DC0                                        __ptext73 1C2D  
                                      __ptext65 1767                                        __ptext57 0760  
                                      __ptext49 10F1                                        __ptext90 1C57  
                                      __ptext82 1357                                        __ptext74 1095  
                                      __ptext66 1E42                                        __ptext58 0804  
                           ?_PWM3_LoadDutyValue 00C5                                        __ptext91 1C4E  
                                      __ptext83 1F09                                        __ptext75 1573  
                                      __ptext67 1E12                                        __ptext59 1311  
                                      __ptext84 1D47                                        __ptext76 1D27  
                                      __ptext68 0A87                                        __ptext93 1D0C  
                                      __ptext85 0C0C                                        __ptext77 1043  
                                      __ptext69 1000                                        __ptext94 1C32  
                                      __ptext86 11ED                                        __ptext78 1D7D  
                                      __ptext95 1C17                                        __ptext87 1C69  
                                      __ptext79 1C3E                                        __ptext96 0EAE  
                                      __ptext88 1DE3                                        __ptext97 1E5B  
                                      __ptext89 1C60                                        __ptext98 1D36  
                                      __ptext99 1C20                    __size_of_LED_task_BEAT_MIXED 0001  
                                  _SSP1CON1bits 0190                                    _SSP1CON2bits 0191  
                                      _dmxArray 23EE                                ??_DMX_getAddress 0020  
                                      _colorDec 1222                                        _colorInc 12CB  
                          BUTTONS_isHeld@button 0020                           __end_of_BEAT_detected 1C8D  
                                      _lastBeat 0142                                        _lastTime 0148  
             __size_of_LED_task_BEAT_CONTINUOUS 0001                                 LED_task_DMX@dmx 01E0  
                     ?_LED_task_BEAT_CONTINUOUS 0070                                   __size_of_ctoa 0030  
                                 __size_of_main 003C                                   __size_of_init 0020  
                                  ?_address_dec 0070            __end_of_TMR0_DefaultInterruptHandler 1C18  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 1C17  
                                  ?_address_inc 0070                            __CFG_WDTCWS$WDTCWS_7 0000  
                          _I2C1_MasterTRBInsert 144A                                      _RC1STAbits 011D  
                              ??_getManualColor 0020  EUSART1_SetOverrunErrorHandler@interruptHandler 0020  
                                   ??_getIsHold 0020                            ??_PWM3_LoadDutyValue 006D  
                  __end_of_ADCC_StartConversion 1C69                                        int$flags 007E  
                                      _position 00AF                         __size_of_BUTTONS_isHeld 000F  
                                      _vfprintf 10C2              __end_of_INTERRUPT_InterruptManager 0030  
                    _INTERRUPT_InterruptManager 0004                                       printf@fmt 00C5  
                        __size_of_TM1650_enable 0015                     _EUSART1_FramingErrorHandler 0163  
                           _EUSART1_Receive_ISR 1185                           ??_TM1650_fastPrintNum 0038  
                                    _INTCONbits 000B                               ??_CONTROLLER_task 00D1  
                                      init@port 0020                                  __pstringtext10 2043  
                                __pstringtext11 2049                                  __pstringtext20 2075  
                                __pstringtext12 204F                                  __pstringtext21 2078  
                                __pstringtext13 2055                                  __pstringtext22 207B  
                                __pstringtext14 205B                                  __pstringtext23 207E  
                                __pstringtext15 2061                                  __pstringtext24 2080  
                                __pstringtext16 2067                                  __pstringtext25 2082  
                                __pstringtext17 206C                                  __pstringtext26 2084  
                                __pstringtext18 206F                                  __pstringtext27 0000  
                                __pstringtext19 2072            __end_of_ADCC_DefaultInterruptHandler 1C16  
         __size_of_ADCC_DefaultInterruptHandler 0001                    _ADCC_DefaultInterruptHandler 1C15  
                                      intlevel1 0000                                  _thresholdCount 013C  
                          ?_EUSART1_Receive_ISR 0070                                   writeData@data 0030  
                              ___lwmod@dividend 002A                         ?_PIN_MANAGER_Initialize 0070  
                      __end_of_I2C1_MasterWrite 1095                               __CFG_CLKOUTEN$OFF 0000  
                __size_of_I2C1_FunctionComplete 0011          __end_of_EUSART1_SetOverrunErrorHandler 1CA8  
       __size_of_EUSART1_SetOverrunErrorHandler 0009                  _EUSART1_SetOverrunErrorHandler 1C9F  
                 __end_of_I2C1_FunctionComplete 1D47                                   ?_CONTROL_BEAT 0070  
                         ?_I2C1_MasterTRBInsert 0020                                 _PWM1_Initialize 1CBB  
                 ?_TMR0_DefaultInterruptHandler 0070                     __size_of_PWM2_LoadDutyValue 001E  
                        TM1650_fastPrintNum@num 0036                               _lastLedActiveTime 0138  
                                      printf@ap 006E  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                   PWM3_LoadDutyValue@dutyValue 00C5                                 _TM1650_setDigit 1D58  
                                   ??_vfpfcnvrt 005C                        __size_of_I2C1_Initialize 001C  
                            _eusart1RxLastError 014F                                   __pstringtext1 1800  
                                 __pstringtext2 2000                                   __pstringtext3 200A  
                                 __pstringtext4 2013                                   __pstringtext5 201C  
                                 __pstringtext6 2025                                   __pstringtext7 202D  
                                 __pstringtext8 2035                                   __pstringtext9 203C  
                        __Umul8_16@multiplicand 0020                                      _SSP1DATPPS 1EC6  
                                    _SSP1CLKPPS 1EC5                                 ___lwmod@divisor 0028  
                                   ?_CLOCK_init 0070                                 _TMR0_Initialize 1D91  
                               _PWM2_Initialize 1CC6                                ??_CONTROL_MANUAL 0023  
                               ___lwmod@counter 002D                                    ?_CONTROL_DMX 0070  
                      _I2C1_MasterWriteTRBBuild 1F49                                     ??_writeData 0031  
                                    _TX1STAbits 011E                    __end_of_LED_task_BEAT_STROBE 0DC0  
                ??_ADCC_SetADTIInterruptHandler 0022                           ??_EUSART1_Receive_ISR 0071  
                __end_of_PIN_MANAGER_Initialize 1185                               ??_ADCC_Initialize 0022  
                                 _TM1650_enable 1DB9                              __size_of_I2C1_Stop 001A  
                 ?_ADCC_DefaultInterruptHandler 0070                      __end_of_PWM1_LoadDutyValue 1EAF  
                          __Umul8_16@multiplier 0028                                  ??_CONTROL_BEAT 0021  
                       ??_EUSART1_RxDataHandler 0070                                 _PWM3_Initialize 1CD1  
                             __Umul8_16@product 0024  
