

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed May  1 01:34:46 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	nvBANK4,global,class=BANK4,space=1,delta=1
     9                           	psect	nvBANK5,global,class=BANK5,space=1,delta=1
    10                           	psect	stringtext2,global,class=STRCODE,delta=2
    11                           	psect	stringtext3,global,class=STRCODE,delta=2
    12                           	psect	stringtext4,global,class=STRCODE,delta=2
    13                           	psect	stringtext5,global,class=STRCODE,delta=2
    14                           	psect	stringtext6,global,class=STRCODE,delta=2
    15                           	psect	stringtext7,global,class=STRCODE,delta=2
    16                           	psect	stringtext8,global,class=STRCODE,delta=2
    17                           	psect	stringtext9,global,class=STRCODE,delta=2
    18                           	psect	stringtext10,global,class=STRCODE,delta=2
    19                           	psect	stringtext11,global,class=STRCODE,delta=2
    20                           	psect	stringtext12,global,class=STRCODE,delta=2
    21                           	psect	stringtext13,global,class=STRCODE,delta=2
    22                           	psect	stringtext14,global,class=STRCODE,delta=2
    23                           	psect	stringtext15,global,class=STRCODE,delta=2
    24                           	psect	stringtext16,global,class=STRCODE,delta=2
    25                           	psect	stringtext17,global,class=STRCODE,delta=2
    26                           	psect	stringtext18,global,class=STRCODE,delta=2
    27                           	psect	stringtext19,global,class=STRCODE,delta=2
    28                           	psect	stringtext20,global,class=STRCODE,delta=2
    29                           	psect	stringtext21,global,class=STRCODE,delta=2
    30                           	psect	stringtext22,global,class=STRCODE,delta=2
    31                           	psect	stringtext23,global,class=STRCODE,delta=2
    32                           	psect	stringtext24,global,class=STRCODE,delta=2
    33                           	psect	stringtext25,global,class=STRCODE,delta=2
    34                           	psect	stringtext26,global,class=STRCODE,delta=2
    35                           	psect	stringtext27,global,class=STRCODE,delta=2
    36                           	psect	stringtext28,global,class=STRCODE,delta=2
    37                           	psect	stringtext29,global,class=STRCODE,delta=2
    38                           	psect	stringtext30,global,class=STRCODE,delta=2
    39                           	psect	cinit,global,class=CODE,merge=1,delta=2
    40                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    41                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    42                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    43                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    44                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    45                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    46                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    47                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    48                           	psect	inittext,global,class=CODE,delta=2
    49                           	psect	clrtext,global,class=CODE,delta=2
    50                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    51                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    52                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    53                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    54                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    55                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    56                           	psect	text1,local,class=CODE,merge=1,delta=2
    57                           	psect	text2,local,class=CODE,merge=1,delta=2
    58                           	psect	text3,local,class=CODE,merge=1,delta=2
    59                           	psect	text4,local,class=CODE,merge=1,delta=2
    60                           	psect	text5,local,class=CODE,merge=1,delta=2
    61                           	psect	text6,local,class=CODE,merge=1,delta=2
    62                           	psect	text7,local,class=CODE,merge=1,delta=2
    63                           	psect	text8,local,class=CODE,merge=1,delta=2
    64                           	psect	text9,local,class=CODE,merge=1,delta=2
    65                           	psect	text10,local,class=CODE,merge=1,delta=2
    66                           	psect	text11,local,class=CODE,merge=1,delta=2
    67                           	psect	text12,local,class=CODE,merge=1,delta=2
    68                           	psect	text13,local,class=CODE,merge=1,delta=2
    69                           	psect	text14,local,class=CODE,merge=1,delta=2
    70                           	psect	text15,local,class=CODE,merge=1,delta=2
    71                           	psect	text16,local,class=CODE,merge=1,delta=2
    72                           	psect	text17,local,class=CODE,merge=1,delta=2
    73                           	psect	text18,local,class=CODE,merge=1,delta=2
    74                           	psect	text19,local,class=CODE,merge=1,delta=2
    75                           	psect	text20,local,class=CODE,merge=1,delta=2
    76                           	psect	text21,local,class=CODE,merge=1,delta=2
    77                           	psect	text22,local,class=CODE,merge=1,delta=2
    78                           	psect	text23,local,class=CODE,merge=1,delta=2
    79                           	psect	text24,local,class=CODE,merge=1,delta=2
    80                           	psect	text25,local,class=CODE,merge=1,delta=2
    81                           	psect	text26,local,class=CODE,merge=1,delta=2
    82                           	psect	text27,local,class=CODE,merge=1,delta=2
    83                           	psect	text28,local,class=CODE,merge=1,delta=2
    84                           	psect	text29,local,class=CODE,merge=1,delta=2
    85                           	psect	text30,local,class=CODE,merge=1,delta=2
    86                           	psect	text31,local,class=CODE,merge=1,delta=2
    87                           	psect	text32,local,class=CODE,merge=1,delta=2
    88                           	psect	text33,local,class=CODE,merge=1,delta=2
    89                           	psect	text34,local,class=CODE,merge=1,delta=2
    90                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    91                           	psect	text36,local,class=CODE,merge=1,delta=2
    92                           	psect	text37,local,class=CODE,merge=1,delta=2
    93                           	psect	text38,local,class=CODE,merge=1,delta=2
    94                           	psect	text39,local,class=CODE,merge=1,delta=2
    95                           	psect	text40,local,class=CODE,merge=1,delta=2
    96                           	psect	text41,local,class=CODE,merge=1,delta=2
    97                           	psect	text42,local,class=CODE,merge=1,delta=2
    98                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    99                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
   100                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
   101                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
   102                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
   103                           	psect	text48,local,class=CODE,merge=1,delta=2
   104                           	psect	text49,local,class=CODE,merge=1,delta=2
   105                           	psect	text50,local,class=CODE,merge=1,delta=2
   106                           	psect	text51,local,class=CODE,merge=1,delta=2
   107                           	psect	text52,local,class=CODE,merge=1,delta=2
   108                           	psect	text53,local,class=CODE,merge=1,delta=2
   109                           	psect	text54,local,class=CODE,merge=1,delta=2
   110                           	psect	text55,local,class=CODE,merge=1,delta=2,group=2
   111                           	psect	text56,local,class=CODE,merge=1,delta=2
   112                           	psect	text57,local,class=CODE,merge=1,delta=2
   113                           	psect	text58,local,class=CODE,merge=1,delta=2
   114                           	psect	text59,local,class=CODE,merge=1,delta=2
   115                           	psect	text60,local,class=CODE,merge=1,delta=2,group=2
   116                           	psect	text61,local,class=CODE,merge=1,delta=2,group=2
   117                           	psect	text62,local,class=CODE,merge=1,delta=2,group=2
   118                           	psect	text63,local,class=CODE,merge=1,delta=2
   119                           	psect	text64,local,class=CODE,merge=1,delta=2
   120                           	psect	text65,local,class=CODE,merge=1,delta=2
   121                           	psect	text66,local,class=CODE,merge=1,delta=2
   122                           	psect	text67,local,class=CODE,merge=1,delta=2
   123                           	psect	text68,local,class=CODE,merge=1,delta=2
   124                           	psect	text69,local,class=CODE,merge=1,delta=2
   125                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
   126                           	psect	text71,local,class=CODE,merge=1,delta=2,group=1
   127                           	psect	text72,local,class=CODE,merge=1,delta=2,group=1
   128                           	psect	text73,local,class=CODE,merge=1,delta=2
   129                           	psect	text74,local,class=CODE,merge=1,delta=2
   130                           	psect	text75,local,class=CODE,merge=1,delta=2
   131                           	psect	text76,local,class=CODE,merge=1,delta=2
   132                           	psect	text77,local,class=CODE,merge=1,delta=2
   133                           	psect	text78,local,class=CODE,merge=1,delta=2
   134                           	psect	text79,local,class=CODE,merge=1,delta=2
   135                           	psect	text80,local,class=CODE,merge=1,delta=2
   136                           	psect	text81,local,class=CODE,merge=1,delta=2
   137                           	psect	text82,local,class=CODE,merge=1,delta=2
   138                           	psect	text83,local,class=CODE,merge=1,delta=2,group=1
   139                           	psect	text84,local,class=CODE,merge=1,delta=2
   140                           	psect	text85,local,class=CODE,merge=1,delta=2
   141                           	psect	text86,local,class=CODE,merge=1,delta=2
   142                           	psect	text87,local,class=CODE,merge=1,delta=2
   143                           	psect	text88,local,class=CODE,merge=1,delta=2
   144                           	psect	intentry,global,class=CODE,delta=2
   145                           	psect	text90,local,class=CODE,merge=1,delta=2
   146                           	psect	text91,local,class=CODE,merge=1,delta=2
   147                           	psect	text92,local,class=CODE,merge=1,delta=2
   148                           	psect	text93,local,class=CODE,merge=1,delta=2
   149                           	psect	text94,local,class=CODE,merge=1,delta=2
   150                           	psect	text95,local,class=CODE,merge=1,delta=2
   151                           	psect	text96,local,class=CODE,merge=1,delta=2
   152                           	psect	text97,local,class=CODE,merge=1,delta=2
   153                           	psect	text98,local,class=CODE,merge=1,delta=2
   154                           	psect	text99,local,class=CODE,merge=1,delta=2
   155                           	psect	text100,local,class=CODE,merge=1,delta=2
   156                           	psect	text101,local,class=CODE,merge=1,delta=2
   157                           	psect	text102,local,class=CODE,merge=1,delta=2
   158                           	psect	text103,local,class=CODE,merge=1,delta=2
   159                           	psect	text104,local,class=CODE,merge=1,delta=2
   160                           	psect	text105,local,class=CODE,merge=1,delta=2
   161                           	dabs	1,0xCA0,32
   162                           	dabs	1,0xC20,80
   163                           	dabs	1,0xBA0,80
   164                           	dabs	1,0xB20,80
   165                           	dabs	1,0xAA0,80
   166                           	dabs	1,0xA20,80
   167                           	dabs	1,0x9A0,80
   168                           	dabs	1,0x920,80
   169                           	dabs	1,0x8A0,80
   170                           	dabs	1,0x820,80
   171                           	dabs	1,0x7A0,80
   172                           	dabs	1,0x720,80
   173                           	dabs	1,0x6A0,80
   174                           	dabs	1,0x64E,34
   175                           	dabs	1,0x23EE,0,_dmxArray
   176                           	dabs	1,0x7E,2
   177  0000                     
   178                           ; Version 2.05
   179                           ; Generated 20/12/2018 GMT
   180                           ; 
   181                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   182                           ; All rights reserved.
   183                           ; 
   184                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   185                           ; 
   186                           ; Redistribution and use in source and binary forms, with or without modification, are
   187                           ; permitted provided that the following conditions are met:
   188                           ; 
   189                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   190                           ;        conditions and the following disclaimer.
   191                           ; 
   192                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   193                           ;        of conditions and the following disclaimer in the documentation and/or other
   194                           ;        materials provided with the distribution.
   195                           ; 
   196                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   197                           ;        software without specific prior written permission.
   198                           ; 
   199                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   200                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   201                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   202                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   203                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   204                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   205                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   206                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   207                           ; 
   208                           ; 
   209                           ; Code-generator required, PIC16F18446 Definitions
   210                           ; 
   211                           ; SFR Addresses
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  008C                     	;# 
   234  008C                     	;# 
   235  008D                     	;# 
   236  008E                     	;# 
   237  008E                     	;# 
   238  008F                     	;# 
   239  0090                     	;# 
   240  0090                     	;# 
   241  0091                     	;# 
   242  0092                     	;# 
   243  0092                     	;# 
   244  0093                     	;# 
   245  0094                     	;# 
   246  0094                     	;# 
   247  0095                     	;# 
   248  0096                     	;# 
   249  0096                     	;# 
   250  0097                     	;# 
   251  0098                     	;# 
   252  0099                     	;# 
   253  009A                     	;# 
   254  009B                     	;# 
   255  009B                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009D                     	;# 
   259  009E                     	;# 
   260  009F                     	;# 
   261  010C                     	;# 
   262  010C                     	;# 
   263  010D                     	;# 
   264  010E                     	;# 
   265  010F                     	;# 
   266  010F                     	;# 
   267  0110                     	;# 
   268  0111                     	;# 
   269  0112                     	;# 
   270  0113                     	;# 
   271  0114                     	;# 
   272  0115                     	;# 
   273  0116                     	;# 
   274  0117                     	;# 
   275  0118                     	;# 
   276  0119                     	;# 
   277  0119                     	;# 
   278  0119                     	;# 
   279  011A                     	;# 
   280  011A                     	;# 
   281  011A                     	;# 
   282  011B                     	;# 
   283  011B                     	;# 
   284  011B                     	;# 
   285  011B                     	;# 
   286  011B                     	;# 
   287  011C                     	;# 
   288  011C                     	;# 
   289  011C                     	;# 
   290  011D                     	;# 
   291  011D                     	;# 
   292  011D                     	;# 
   293  011E                     	;# 
   294  011E                     	;# 
   295  011E                     	;# 
   296  011F                     	;# 
   297  011F                     	;# 
   298  011F                     	;# 
   299  011F                     	;# 
   300  011F                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  018E                     	;# 
   304  018F                     	;# 
   305  0190                     	;# 
   306  0191                     	;# 
   307  0192                     	;# 
   308  0196                     	;# 
   309  0197                     	;# 
   310  0198                     	;# 
   311  0199                     	;# 
   312  019A                     	;# 
   313  019B                     	;# 
   314  019C                     	;# 
   315  020C                     	;# 
   316  020D                     	;# 
   317  020E                     	;# 
   318  020E                     	;# 
   319  020F                     	;# 
   320  020F                     	;# 
   321  0210                     	;# 
   322  0210                     	;# 
   323  0211                     	;# 
   324  0211                     	;# 
   325  0212                     	;# 
   326  0213                     	;# 
   327  0214                     	;# 
   328  0214                     	;# 
   329  0215                     	;# 
   330  0215                     	;# 
   331  0216                     	;# 
   332  0216                     	;# 
   333  0217                     	;# 
   334  0217                     	;# 
   335  0218                     	;# 
   336  0219                     	;# 
   337  021A                     	;# 
   338  021A                     	;# 
   339  021B                     	;# 
   340  021B                     	;# 
   341  021C                     	;# 
   342  021C                     	;# 
   343  021D                     	;# 
   344  021D                     	;# 
   345  021E                     	;# 
   346  021F                     	;# 
   347  028C                     	;# 
   348  028C                     	;# 
   349  028D                     	;# 
   350  028D                     	;# 
   351  028E                     	;# 
   352  028F                     	;# 
   353  0290                     	;# 
   354  0291                     	;# 
   355  0292                     	;# 
   356  0292                     	;# 
   357  0293                     	;# 
   358  0293                     	;# 
   359  0294                     	;# 
   360  0295                     	;# 
   361  0296                     	;# 
   362  0297                     	;# 
   363  0298                     	;# 
   364  0298                     	;# 
   365  0299                     	;# 
   366  0299                     	;# 
   367  029A                     	;# 
   368  029B                     	;# 
   369  029C                     	;# 
   370  029D                     	;# 
   371  029F                     	;# 
   372  030C                     	;# 
   373  030C                     	;# 
   374  030D                     	;# 
   375  030E                     	;# 
   376  030F                     	;# 
   377  0310                     	;# 
   378  0310                     	;# 
   379  0311                     	;# 
   380  0312                     	;# 
   381  0313                     	;# 
   382  0314                     	;# 
   383  0314                     	;# 
   384  0315                     	;# 
   385  0316                     	;# 
   386  0317                     	;# 
   387  0318                     	;# 
   388  0318                     	;# 
   389  0319                     	;# 
   390  031A                     	;# 
   391  031B                     	;# 
   392  038C                     	;# 
   393  038C                     	;# 
   394  038D                     	;# 
   395  038E                     	;# 
   396  0390                     	;# 
   397  0390                     	;# 
   398  0391                     	;# 
   399  0392                     	;# 
   400  048C                     	;# 
   401  048C                     	;# 
   402  048D                     	;# 
   403  048E                     	;# 
   404  048F                     	;# 
   405  048F                     	;# 
   406  0490                     	;# 
   407  0491                     	;# 
   408  0492                     	;# 
   409  0492                     	;# 
   410  0493                     	;# 
   411  0494                     	;# 
   412  0495                     	;# 
   413  0495                     	;# 
   414  0496                     	;# 
   415  0497                     	;# 
   416  0498                     	;# 
   417  0499                     	;# 
   418  049A                     	;# 
   419  049B                     	;# 
   420  049C                     	;# 
   421  049D                     	;# 
   422  058C                     	;# 
   423  058C                     	;# 
   424  058D                     	;# 
   425  058E                     	;# 
   426  058F                     	;# 
   427  058F                     	;# 
   428  0590                     	;# 
   429  0591                     	;# 
   430  0592                     	;# 
   431  0593                     	;# 
   432  059C                     	;# 
   433  059C                     	;# 
   434  059D                     	;# 
   435  059D                     	;# 
   436  059E                     	;# 
   437  059F                     	;# 
   438  060C                     	;# 
   439  060C                     	;# 
   440  060D                     	;# 
   441  060D                     	;# 
   442  060E                     	;# 
   443  060F                     	;# 
   444  0610                     	;# 
   445  0611                     	;# 
   446  0612                     	;# 
   447  0613                     	;# 
   448  0614                     	;# 
   449  0616                     	;# 
   450  0616                     	;# 
   451  0617                     	;# 
   452  0617                     	;# 
   453  0618                     	;# 
   454  0619                     	;# 
   455  061A                     	;# 
   456  061B                     	;# 
   457  061C                     	;# 
   458  061D                     	;# 
   459  061E                     	;# 
   460  070C                     	;# 
   461  070D                     	;# 
   462  070E                     	;# 
   463  070F                     	;# 
   464  0710                     	;# 
   465  0711                     	;# 
   466  0712                     	;# 
   467  0713                     	;# 
   468  0714                     	;# 
   469  0716                     	;# 
   470  0717                     	;# 
   471  0718                     	;# 
   472  0719                     	;# 
   473  071A                     	;# 
   474  071B                     	;# 
   475  071C                     	;# 
   476  071D                     	;# 
   477  071E                     	;# 
   478  0796                     	;# 
   479  0797                     	;# 
   480  0798                     	;# 
   481  0799                     	;# 
   482  079A                     	;# 
   483  079B                     	;# 
   484  079C                     	;# 
   485  079D                     	;# 
   486  080C                     	;# 
   487  080D                     	;# 
   488  080E                     	;# 
   489  080F                     	;# 
   490  0810                     	;# 
   491  0811                     	;# 
   492  0812                     	;# 
   493  0813                     	;# 
   494  0814                     	;# 
   495  081A                     	;# 
   496  081A                     	;# 
   497  081B                     	;# 
   498  081C                     	;# 
   499  081C                     	;# 
   500  081D                     	;# 
   501  081E                     	;# 
   502  081F                     	;# 
   503  088C                     	;# 
   504  088D                     	;# 
   505  088E                     	;# 
   506  088F                     	;# 
   507  0890                     	;# 
   508  0891                     	;# 
   509  0892                     	;# 
   510  0893                     	;# 
   511  0895                     	;# 
   512  0896                     	;# 
   513  0897                     	;# 
   514  0898                     	;# 
   515  0899                     	;# 
   516  089A                     	;# 
   517  089B                     	;# 
   518  090C                     	;# 
   519  090E                     	;# 
   520  090F                     	;# 
   521  091F                     	;# 
   522  098F                     	;# 
   523  098F                     	;# 
   524  0990                     	;# 
   525  0991                     	;# 
   526  0992                     	;# 
   527  0993                     	;# 
   528  0994                     	;# 
   529  0995                     	;# 
   530  0996                     	;# 
   531  0997                     	;# 
   532  1E0F                     	;# 
   533  1E10                     	;# 
   534  1E11                     	;# 
   535  1E12                     	;# 
   536  1E13                     	;# 
   537  1E14                     	;# 
   538  1E15                     	;# 
   539  1E16                     	;# 
   540  1E17                     	;# 
   541  1E18                     	;# 
   542  1E19                     	;# 
   543  1E1A                     	;# 
   544  1E1B                     	;# 
   545  1E1C                     	;# 
   546  1E1D                     	;# 
   547  1E1E                     	;# 
   548  1E1F                     	;# 
   549  1E20                     	;# 
   550  1E21                     	;# 
   551  1E22                     	;# 
   552  1E23                     	;# 
   553  1E24                     	;# 
   554  1E25                     	;# 
   555  1E26                     	;# 
   556  1E27                     	;# 
   557  1E28                     	;# 
   558  1E29                     	;# 
   559  1E2A                     	;# 
   560  1E2B                     	;# 
   561  1E2C                     	;# 
   562  1E2D                     	;# 
   563  1E2E                     	;# 
   564  1E2F                     	;# 
   565  1E30                     	;# 
   566  1E31                     	;# 
   567  1E32                     	;# 
   568  1E33                     	;# 
   569  1E34                     	;# 
   570  1E35                     	;# 
   571  1E36                     	;# 
   572  1E37                     	;# 
   573  1E8F                     	;# 
   574  1E90                     	;# 
   575  1E91                     	;# 
   576  1E92                     	;# 
   577  1E93                     	;# 
   578  1E94                     	;# 
   579  1E95                     	;# 
   580  1E96                     	;# 
   581  1E97                     	;# 
   582  1E9C                     	;# 
   583  1E9D                     	;# 
   584  1E9E                     	;# 
   585  1EA1                     	;# 
   586  1EA2                     	;# 
   587  1EA3                     	;# 
   588  1EA4                     	;# 
   589  1EA9                     	;# 
   590  1EAA                     	;# 
   591  1EB1                     	;# 
   592  1EB2                     	;# 
   593  1EB8                     	;# 
   594  1EB9                     	;# 
   595  1EBA                     	;# 
   596  1EBB                     	;# 
   597  1EBC                     	;# 
   598  1EBD                     	;# 
   599  1EBE                     	;# 
   600  1EC3                     	;# 
   601  1EC5                     	;# 
   602  1EC6                     	;# 
   603  1EC7                     	;# 
   604  1EC8                     	;# 
   605  1EC9                     	;# 
   606  1ECA                     	;# 
   607  1ECB                     	;# 
   608  1ECB                     	;# 
   609  1ECB                     	;# 
   610  1ECC                     	;# 
   611  1ECC                     	;# 
   612  1ECC                     	;# 
   613  1F10                     	;# 
   614  1F11                     	;# 
   615  1F12                     	;# 
   616  1F14                     	;# 
   617  1F15                     	;# 
   618  1F1C                     	;# 
   619  1F1D                     	;# 
   620  1F1E                     	;# 
   621  1F1F                     	;# 
   622  1F20                     	;# 
   623  1F21                     	;# 
   624  1F22                     	;# 
   625  1F23                     	;# 
   626  1F24                     	;# 
   627  1F25                     	;# 
   628  1F26                     	;# 
   629  1F27                     	;# 
   630  1F38                     	;# 
   631  1F39                     	;# 
   632  1F3A                     	;# 
   633  1F3B                     	;# 
   634  1F3C                     	;# 
   635  1F3D                     	;# 
   636  1F3E                     	;# 
   637  1F3F                     	;# 
   638  1F43                     	;# 
   639  1F44                     	;# 
   640  1F45                     	;# 
   641  1F46                     	;# 
   642  1F47                     	;# 
   643  1F48                     	;# 
   644  1F49                     	;# 
   645  1F4A                     	;# 
   646  1F4E                     	;# 
   647  1F4F                     	;# 
   648  1F50                     	;# 
   649  1F51                     	;# 
   650  1F52                     	;# 
   651  1F53                     	;# 
   652  1F54                     	;# 
   653  1F55                     	;# 
   654  1FE4                     	;# 
   655  1FE5                     	;# 
   656  1FE6                     	;# 
   657  1FE7                     	;# 
   658  1FE8                     	;# 
   659  1FE8                     	;# 
   660  1FE9                     	;# 
   661  1FEA                     	;# 
   662  1FEB                     	;# 
   663  1FED                     	;# 
   664  1FEE                     	;# 
   665  1FEF                     	;# 
   666  0000                     	;# 
   667  0001                     	;# 
   668  0002                     	;# 
   669  0003                     	;# 
   670  0004                     	;# 
   671  0005                     	;# 
   672  0006                     	;# 
   673  0007                     	;# 
   674  0008                     	;# 
   675  0009                     	;# 
   676  000A                     	;# 
   677  000B                     	;# 
   678  000C                     	;# 
   679  000D                     	;# 
   680  000E                     	;# 
   681  0012                     	;# 
   682  0013                     	;# 
   683  0014                     	;# 
   684  0018                     	;# 
   685  0019                     	;# 
   686  001A                     	;# 
   687  008C                     	;# 
   688  008C                     	;# 
   689  008D                     	;# 
   690  008E                     	;# 
   691  008E                     	;# 
   692  008F                     	;# 
   693  0090                     	;# 
   694  0090                     	;# 
   695  0091                     	;# 
   696  0092                     	;# 
   697  0092                     	;# 
   698  0093                     	;# 
   699  0094                     	;# 
   700  0094                     	;# 
   701  0095                     	;# 
   702  0096                     	;# 
   703  0096                     	;# 
   704  0097                     	;# 
   705  0098                     	;# 
   706  0099                     	;# 
   707  009A                     	;# 
   708  009B                     	;# 
   709  009B                     	;# 
   710  009C                     	;# 
   711  009D                     	;# 
   712  009D                     	;# 
   713  009E                     	;# 
   714  009F                     	;# 
   715  010C                     	;# 
   716  010C                     	;# 
   717  010D                     	;# 
   718  010E                     	;# 
   719  010F                     	;# 
   720  010F                     	;# 
   721  0110                     	;# 
   722  0111                     	;# 
   723  0112                     	;# 
   724  0113                     	;# 
   725  0114                     	;# 
   726  0115                     	;# 
   727  0116                     	;# 
   728  0117                     	;# 
   729  0118                     	;# 
   730  0119                     	;# 
   731  0119                     	;# 
   732  0119                     	;# 
   733  011A                     	;# 
   734  011A                     	;# 
   735  011A                     	;# 
   736  011B                     	;# 
   737  011B                     	;# 
   738  011B                     	;# 
   739  011B                     	;# 
   740  011B                     	;# 
   741  011C                     	;# 
   742  011C                     	;# 
   743  011C                     	;# 
   744  011D                     	;# 
   745  011D                     	;# 
   746  011D                     	;# 
   747  011E                     	;# 
   748  011E                     	;# 
   749  011E                     	;# 
   750  011F                     	;# 
   751  011F                     	;# 
   752  011F                     	;# 
   753  011F                     	;# 
   754  011F                     	;# 
   755  018C                     	;# 
   756  018D                     	;# 
   757  018E                     	;# 
   758  018F                     	;# 
   759  0190                     	;# 
   760  0191                     	;# 
   761  0192                     	;# 
   762  0196                     	;# 
   763  0197                     	;# 
   764  0198                     	;# 
   765  0199                     	;# 
   766  019A                     	;# 
   767  019B                     	;# 
   768  019C                     	;# 
   769  020C                     	;# 
   770  020D                     	;# 
   771  020E                     	;# 
   772  020E                     	;# 
   773  020F                     	;# 
   774  020F                     	;# 
   775  0210                     	;# 
   776  0210                     	;# 
   777  0211                     	;# 
   778  0211                     	;# 
   779  0212                     	;# 
   780  0213                     	;# 
   781  0214                     	;# 
   782  0214                     	;# 
   783  0215                     	;# 
   784  0215                     	;# 
   785  0216                     	;# 
   786  0216                     	;# 
   787  0217                     	;# 
   788  0217                     	;# 
   789  0218                     	;# 
   790  0219                     	;# 
   791  021A                     	;# 
   792  021A                     	;# 
   793  021B                     	;# 
   794  021B                     	;# 
   795  021C                     	;# 
   796  021C                     	;# 
   797  021D                     	;# 
   798  021D                     	;# 
   799  021E                     	;# 
   800  021F                     	;# 
   801  028C                     	;# 
   802  028C                     	;# 
   803  028D                     	;# 
   804  028D                     	;# 
   805  028E                     	;# 
   806  028F                     	;# 
   807  0290                     	;# 
   808  0291                     	;# 
   809  0292                     	;# 
   810  0292                     	;# 
   811  0293                     	;# 
   812  0293                     	;# 
   813  0294                     	;# 
   814  0295                     	;# 
   815  0296                     	;# 
   816  0297                     	;# 
   817  0298                     	;# 
   818  0298                     	;# 
   819  0299                     	;# 
   820  0299                     	;# 
   821  029A                     	;# 
   822  029B                     	;# 
   823  029C                     	;# 
   824  029D                     	;# 
   825  029F                     	;# 
   826  030C                     	;# 
   827  030C                     	;# 
   828  030D                     	;# 
   829  030E                     	;# 
   830  030F                     	;# 
   831  0310                     	;# 
   832  0310                     	;# 
   833  0311                     	;# 
   834  0312                     	;# 
   835  0313                     	;# 
   836  0314                     	;# 
   837  0314                     	;# 
   838  0315                     	;# 
   839  0316                     	;# 
   840  0317                     	;# 
   841  0318                     	;# 
   842  0318                     	;# 
   843  0319                     	;# 
   844  031A                     	;# 
   845  031B                     	;# 
   846  038C                     	;# 
   847  038C                     	;# 
   848  038D                     	;# 
   849  038E                     	;# 
   850  0390                     	;# 
   851  0390                     	;# 
   852  0391                     	;# 
   853  0392                     	;# 
   854  048C                     	;# 
   855  048C                     	;# 
   856  048D                     	;# 
   857  048E                     	;# 
   858  048F                     	;# 
   859  048F                     	;# 
   860  0490                     	;# 
   861  0491                     	;# 
   862  0492                     	;# 
   863  0492                     	;# 
   864  0493                     	;# 
   865  0494                     	;# 
   866  0495                     	;# 
   867  0495                     	;# 
   868  0496                     	;# 
   869  0497                     	;# 
   870  0498                     	;# 
   871  0499                     	;# 
   872  049A                     	;# 
   873  049B                     	;# 
   874  049C                     	;# 
   875  049D                     	;# 
   876  058C                     	;# 
   877  058C                     	;# 
   878  058D                     	;# 
   879  058E                     	;# 
   880  058F                     	;# 
   881  058F                     	;# 
   882  0590                     	;# 
   883  0591                     	;# 
   884  0592                     	;# 
   885  0593                     	;# 
   886  059C                     	;# 
   887  059C                     	;# 
   888  059D                     	;# 
   889  059D                     	;# 
   890  059E                     	;# 
   891  059F                     	;# 
   892  060C                     	;# 
   893  060C                     	;# 
   894  060D                     	;# 
   895  060D                     	;# 
   896  060E                     	;# 
   897  060F                     	;# 
   898  0610                     	;# 
   899  0611                     	;# 
   900  0612                     	;# 
   901  0613                     	;# 
   902  0614                     	;# 
   903  0616                     	;# 
   904  0616                     	;# 
   905  0617                     	;# 
   906  0617                     	;# 
   907  0618                     	;# 
   908  0619                     	;# 
   909  061A                     	;# 
   910  061B                     	;# 
   911  061C                     	;# 
   912  061D                     	;# 
   913  061E                     	;# 
   914  070C                     	;# 
   915  070D                     	;# 
   916  070E                     	;# 
   917  070F                     	;# 
   918  0710                     	;# 
   919  0711                     	;# 
   920  0712                     	;# 
   921  0713                     	;# 
   922  0714                     	;# 
   923  0716                     	;# 
   924  0717                     	;# 
   925  0718                     	;# 
   926  0719                     	;# 
   927  071A                     	;# 
   928  071B                     	;# 
   929  071C                     	;# 
   930  071D                     	;# 
   931  071E                     	;# 
   932  0796                     	;# 
   933  0797                     	;# 
   934  0798                     	;# 
   935  0799                     	;# 
   936  079A                     	;# 
   937  079B                     	;# 
   938  079C                     	;# 
   939  079D                     	;# 
   940  080C                     	;# 
   941  080D                     	;# 
   942  080E                     	;# 
   943  080F                     	;# 
   944  0810                     	;# 
   945  0811                     	;# 
   946  0812                     	;# 
   947  0813                     	;# 
   948  0814                     	;# 
   949  081A                     	;# 
   950  081A                     	;# 
   951  081B                     	;# 
   952  081C                     	;# 
   953  081C                     	;# 
   954  081D                     	;# 
   955  081E                     	;# 
   956  081F                     	;# 
   957  088C                     	;# 
   958  088D                     	;# 
   959  088E                     	;# 
   960  088F                     	;# 
   961  0890                     	;# 
   962  0891                     	;# 
   963  0892                     	;# 
   964  0893                     	;# 
   965  0895                     	;# 
   966  0896                     	;# 
   967  0897                     	;# 
   968  0898                     	;# 
   969  0899                     	;# 
   970  089A                     	;# 
   971  089B                     	;# 
   972  090C                     	;# 
   973  090E                     	;# 
   974  090F                     	;# 
   975  091F                     	;# 
   976  098F                     	;# 
   977  098F                     	;# 
   978  0990                     	;# 
   979  0991                     	;# 
   980  0992                     	;# 
   981  0993                     	;# 
   982  0994                     	;# 
   983  0995                     	;# 
   984  0996                     	;# 
   985  0997                     	;# 
   986  1E0F                     	;# 
   987  1E10                     	;# 
   988  1E11                     	;# 
   989  1E12                     	;# 
   990  1E13                     	;# 
   991  1E14                     	;# 
   992  1E15                     	;# 
   993  1E16                     	;# 
   994  1E17                     	;# 
   995  1E18                     	;# 
   996  1E19                     	;# 
   997  1E1A                     	;# 
   998  1E1B                     	;# 
   999  1E1C                     	;# 
  1000  1E1D                     	;# 
  1001  1E1E                     	;# 
  1002  1E1F                     	;# 
  1003  1E20                     	;# 
  1004  1E21                     	;# 
  1005  1E22                     	;# 
  1006  1E23                     	;# 
  1007  1E24                     	;# 
  1008  1E25                     	;# 
  1009  1E26                     	;# 
  1010  1E27                     	;# 
  1011  1E28                     	;# 
  1012  1E29                     	;# 
  1013  1E2A                     	;# 
  1014  1E2B                     	;# 
  1015  1E2C                     	;# 
  1016  1E2D                     	;# 
  1017  1E2E                     	;# 
  1018  1E2F                     	;# 
  1019  1E30                     	;# 
  1020  1E31                     	;# 
  1021  1E32                     	;# 
  1022  1E33                     	;# 
  1023  1E34                     	;# 
  1024  1E35                     	;# 
  1025  1E36                     	;# 
  1026  1E37                     	;# 
  1027  1E8F                     	;# 
  1028  1E90                     	;# 
  1029  1E91                     	;# 
  1030  1E92                     	;# 
  1031  1E93                     	;# 
  1032  1E94                     	;# 
  1033  1E95                     	;# 
  1034  1E96                     	;# 
  1035  1E97                     	;# 
  1036  1E9C                     	;# 
  1037  1E9D                     	;# 
  1038  1E9E                     	;# 
  1039  1EA1                     	;# 
  1040  1EA2                     	;# 
  1041  1EA3                     	;# 
  1042  1EA4                     	;# 
  1043  1EA9                     	;# 
  1044  1EAA                     	;# 
  1045  1EB1                     	;# 
  1046  1EB2                     	;# 
  1047  1EB8                     	;# 
  1048  1EB9                     	;# 
  1049  1EBA                     	;# 
  1050  1EBB                     	;# 
  1051  1EBC                     	;# 
  1052  1EBD                     	;# 
  1053  1EBE                     	;# 
  1054  1EC3                     	;# 
  1055  1EC5                     	;# 
  1056  1EC6                     	;# 
  1057  1EC7                     	;# 
  1058  1EC8                     	;# 
  1059  1EC9                     	;# 
  1060  1ECA                     	;# 
  1061  1ECB                     	;# 
  1062  1ECB                     	;# 
  1063  1ECB                     	;# 
  1064  1ECC                     	;# 
  1065  1ECC                     	;# 
  1066  1ECC                     	;# 
  1067  1F10                     	;# 
  1068  1F11                     	;# 
  1069  1F12                     	;# 
  1070  1F14                     	;# 
  1071  1F15                     	;# 
  1072  1F1C                     	;# 
  1073  1F1D                     	;# 
  1074  1F1E                     	;# 
  1075  1F1F                     	;# 
  1076  1F20                     	;# 
  1077  1F21                     	;# 
  1078  1F22                     	;# 
  1079  1F23                     	;# 
  1080  1F24                     	;# 
  1081  1F25                     	;# 
  1082  1F26                     	;# 
  1083  1F27                     	;# 
  1084  1F38                     	;# 
  1085  1F39                     	;# 
  1086  1F3A                     	;# 
  1087  1F3B                     	;# 
  1088  1F3C                     	;# 
  1089  1F3D                     	;# 
  1090  1F3E                     	;# 
  1091  1F3F                     	;# 
  1092  1F43                     	;# 
  1093  1F44                     	;# 
  1094  1F45                     	;# 
  1095  1F46                     	;# 
  1096  1F47                     	;# 
  1097  1F48                     	;# 
  1098  1F49                     	;# 
  1099  1F4A                     	;# 
  1100  1F4E                     	;# 
  1101  1F4F                     	;# 
  1102  1F50                     	;# 
  1103  1F51                     	;# 
  1104  1F52                     	;# 
  1105  1F53                     	;# 
  1106  1F54                     	;# 
  1107  1F55                     	;# 
  1108  1FE4                     	;# 
  1109  1FE5                     	;# 
  1110  1FE6                     	;# 
  1111  1FE7                     	;# 
  1112  1FE8                     	;# 
  1113  1FE8                     	;# 
  1114  1FE9                     	;# 
  1115  1FEA                     	;# 
  1116  1FEB                     	;# 
  1117  1FED                     	;# 
  1118  1FEE                     	;# 
  1119  1FEF                     	;# 
  1120  0000                     	;# 
  1121  0001                     	;# 
  1122  0002                     	;# 
  1123  0003                     	;# 
  1124  0004                     	;# 
  1125  0005                     	;# 
  1126  0006                     	;# 
  1127  0007                     	;# 
  1128  0008                     	;# 
  1129  0009                     	;# 
  1130  000A                     	;# 
  1131  000B                     	;# 
  1132  000C                     	;# 
  1133  000D                     	;# 
  1134  000E                     	;# 
  1135  0012                     	;# 
  1136  0013                     	;# 
  1137  0014                     	;# 
  1138  0018                     	;# 
  1139  0019                     	;# 
  1140  001A                     	;# 
  1141  008C                     	;# 
  1142  008C                     	;# 
  1143  008D                     	;# 
  1144  008E                     	;# 
  1145  008E                     	;# 
  1146  008F                     	;# 
  1147  0090                     	;# 
  1148  0090                     	;# 
  1149  0091                     	;# 
  1150  0092                     	;# 
  1151  0092                     	;# 
  1152  0093                     	;# 
  1153  0094                     	;# 
  1154  0094                     	;# 
  1155  0095                     	;# 
  1156  0096                     	;# 
  1157  0096                     	;# 
  1158  0097                     	;# 
  1159  0098                     	;# 
  1160  0099                     	;# 
  1161  009A                     	;# 
  1162  009B                     	;# 
  1163  009B                     	;# 
  1164  009C                     	;# 
  1165  009D                     	;# 
  1166  009D                     	;# 
  1167  009E                     	;# 
  1168  009F                     	;# 
  1169  010C                     	;# 
  1170  010C                     	;# 
  1171  010D                     	;# 
  1172  010E                     	;# 
  1173  010F                     	;# 
  1174  010F                     	;# 
  1175  0110                     	;# 
  1176  0111                     	;# 
  1177  0112                     	;# 
  1178  0113                     	;# 
  1179  0114                     	;# 
  1180  0115                     	;# 
  1181  0116                     	;# 
  1182  0117                     	;# 
  1183  0118                     	;# 
  1184  0119                     	;# 
  1185  0119                     	;# 
  1186  0119                     	;# 
  1187  011A                     	;# 
  1188  011A                     	;# 
  1189  011A                     	;# 
  1190  011B                     	;# 
  1191  011B                     	;# 
  1192  011B                     	;# 
  1193  011B                     	;# 
  1194  011B                     	;# 
  1195  011C                     	;# 
  1196  011C                     	;# 
  1197  011C                     	;# 
  1198  011D                     	;# 
  1199  011D                     	;# 
  1200  011D                     	;# 
  1201  011E                     	;# 
  1202  011E                     	;# 
  1203  011E                     	;# 
  1204  011F                     	;# 
  1205  011F                     	;# 
  1206  011F                     	;# 
  1207  011F                     	;# 
  1208  011F                     	;# 
  1209  018C                     	;# 
  1210  018D                     	;# 
  1211  018E                     	;# 
  1212  018F                     	;# 
  1213  0190                     	;# 
  1214  0191                     	;# 
  1215  0192                     	;# 
  1216  0196                     	;# 
  1217  0197                     	;# 
  1218  0198                     	;# 
  1219  0199                     	;# 
  1220  019A                     	;# 
  1221  019B                     	;# 
  1222  019C                     	;# 
  1223  020C                     	;# 
  1224  020D                     	;# 
  1225  020E                     	;# 
  1226  020E                     	;# 
  1227  020F                     	;# 
  1228  020F                     	;# 
  1229  0210                     	;# 
  1230  0210                     	;# 
  1231  0211                     	;# 
  1232  0211                     	;# 
  1233  0212                     	;# 
  1234  0213                     	;# 
  1235  0214                     	;# 
  1236  0214                     	;# 
  1237  0215                     	;# 
  1238  0215                     	;# 
  1239  0216                     	;# 
  1240  0216                     	;# 
  1241  0217                     	;# 
  1242  0217                     	;# 
  1243  0218                     	;# 
  1244  0219                     	;# 
  1245  021A                     	;# 
  1246  021A                     	;# 
  1247  021B                     	;# 
  1248  021B                     	;# 
  1249  021C                     	;# 
  1250  021C                     	;# 
  1251  021D                     	;# 
  1252  021D                     	;# 
  1253  021E                     	;# 
  1254  021F                     	;# 
  1255  028C                     	;# 
  1256  028C                     	;# 
  1257  028D                     	;# 
  1258  028D                     	;# 
  1259  028E                     	;# 
  1260  028F                     	;# 
  1261  0290                     	;# 
  1262  0291                     	;# 
  1263  0292                     	;# 
  1264  0292                     	;# 
  1265  0293                     	;# 
  1266  0293                     	;# 
  1267  0294                     	;# 
  1268  0295                     	;# 
  1269  0296                     	;# 
  1270  0297                     	;# 
  1271  0298                     	;# 
  1272  0298                     	;# 
  1273  0299                     	;# 
  1274  0299                     	;# 
  1275  029A                     	;# 
  1276  029B                     	;# 
  1277  029C                     	;# 
  1278  029D                     	;# 
  1279  029F                     	;# 
  1280  030C                     	;# 
  1281  030C                     	;# 
  1282  030D                     	;# 
  1283  030E                     	;# 
  1284  030F                     	;# 
  1285  0310                     	;# 
  1286  0310                     	;# 
  1287  0311                     	;# 
  1288  0312                     	;# 
  1289  0313                     	;# 
  1290  0314                     	;# 
  1291  0314                     	;# 
  1292  0315                     	;# 
  1293  0316                     	;# 
  1294  0317                     	;# 
  1295  0318                     	;# 
  1296  0318                     	;# 
  1297  0319                     	;# 
  1298  031A                     	;# 
  1299  031B                     	;# 
  1300  038C                     	;# 
  1301  038C                     	;# 
  1302  038D                     	;# 
  1303  038E                     	;# 
  1304  0390                     	;# 
  1305  0390                     	;# 
  1306  0391                     	;# 
  1307  0392                     	;# 
  1308  048C                     	;# 
  1309  048C                     	;# 
  1310  048D                     	;# 
  1311  048E                     	;# 
  1312  048F                     	;# 
  1313  048F                     	;# 
  1314  0490                     	;# 
  1315  0491                     	;# 
  1316  0492                     	;# 
  1317  0492                     	;# 
  1318  0493                     	;# 
  1319  0494                     	;# 
  1320  0495                     	;# 
  1321  0495                     	;# 
  1322  0496                     	;# 
  1323  0497                     	;# 
  1324  0498                     	;# 
  1325  0499                     	;# 
  1326  049A                     	;# 
  1327  049B                     	;# 
  1328  049C                     	;# 
  1329  049D                     	;# 
  1330  058C                     	;# 
  1331  058C                     	;# 
  1332  058D                     	;# 
  1333  058E                     	;# 
  1334  058F                     	;# 
  1335  058F                     	;# 
  1336  0590                     	;# 
  1337  0591                     	;# 
  1338  0592                     	;# 
  1339  0593                     	;# 
  1340  059C                     	;# 
  1341  059C                     	;# 
  1342  059D                     	;# 
  1343  059D                     	;# 
  1344  059E                     	;# 
  1345  059F                     	;# 
  1346  060C                     	;# 
  1347  060C                     	;# 
  1348  060D                     	;# 
  1349  060D                     	;# 
  1350  060E                     	;# 
  1351  060F                     	;# 
  1352  0610                     	;# 
  1353  0611                     	;# 
  1354  0612                     	;# 
  1355  0613                     	;# 
  1356  0614                     	;# 
  1357  0616                     	;# 
  1358  0616                     	;# 
  1359  0617                     	;# 
  1360  0617                     	;# 
  1361  0618                     	;# 
  1362  0619                     	;# 
  1363  061A                     	;# 
  1364  061B                     	;# 
  1365  061C                     	;# 
  1366  061D                     	;# 
  1367  061E                     	;# 
  1368  070C                     	;# 
  1369  070D                     	;# 
  1370  070E                     	;# 
  1371  070F                     	;# 
  1372  0710                     	;# 
  1373  0711                     	;# 
  1374  0712                     	;# 
  1375  0713                     	;# 
  1376  0714                     	;# 
  1377  0716                     	;# 
  1378  0717                     	;# 
  1379  0718                     	;# 
  1380  0719                     	;# 
  1381  071A                     	;# 
  1382  071B                     	;# 
  1383  071C                     	;# 
  1384  071D                     	;# 
  1385  071E                     	;# 
  1386  0796                     	;# 
  1387  0797                     	;# 
  1388  0798                     	;# 
  1389  0799                     	;# 
  1390  079A                     	;# 
  1391  079B                     	;# 
  1392  079C                     	;# 
  1393  079D                     	;# 
  1394  080C                     	;# 
  1395  080D                     	;# 
  1396  080E                     	;# 
  1397  080F                     	;# 
  1398  0810                     	;# 
  1399  0811                     	;# 
  1400  0812                     	;# 
  1401  0813                     	;# 
  1402  0814                     	;# 
  1403  081A                     	;# 
  1404  081A                     	;# 
  1405  081B                     	;# 
  1406  081C                     	;# 
  1407  081C                     	;# 
  1408  081D                     	;# 
  1409  081E                     	;# 
  1410  081F                     	;# 
  1411  088C                     	;# 
  1412  088D                     	;# 
  1413  088E                     	;# 
  1414  088F                     	;# 
  1415  0890                     	;# 
  1416  0891                     	;# 
  1417  0892                     	;# 
  1418  0893                     	;# 
  1419  0895                     	;# 
  1420  0896                     	;# 
  1421  0897                     	;# 
  1422  0898                     	;# 
  1423  0899                     	;# 
  1424  089A                     	;# 
  1425  089B                     	;# 
  1426  090C                     	;# 
  1427  090E                     	;# 
  1428  090F                     	;# 
  1429  091F                     	;# 
  1430  098F                     	;# 
  1431  098F                     	;# 
  1432  0990                     	;# 
  1433  0991                     	;# 
  1434  0992                     	;# 
  1435  0993                     	;# 
  1436  0994                     	;# 
  1437  0995                     	;# 
  1438  0996                     	;# 
  1439  0997                     	;# 
  1440  1E0F                     	;# 
  1441  1E10                     	;# 
  1442  1E11                     	;# 
  1443  1E12                     	;# 
  1444  1E13                     	;# 
  1445  1E14                     	;# 
  1446  1E15                     	;# 
  1447  1E16                     	;# 
  1448  1E17                     	;# 
  1449  1E18                     	;# 
  1450  1E19                     	;# 
  1451  1E1A                     	;# 
  1452  1E1B                     	;# 
  1453  1E1C                     	;# 
  1454  1E1D                     	;# 
  1455  1E1E                     	;# 
  1456  1E1F                     	;# 
  1457  1E20                     	;# 
  1458  1E21                     	;# 
  1459  1E22                     	;# 
  1460  1E23                     	;# 
  1461  1E24                     	;# 
  1462  1E25                     	;# 
  1463  1E26                     	;# 
  1464  1E27                     	;# 
  1465  1E28                     	;# 
  1466  1E29                     	;# 
  1467  1E2A                     	;# 
  1468  1E2B                     	;# 
  1469  1E2C                     	;# 
  1470  1E2D                     	;# 
  1471  1E2E                     	;# 
  1472  1E2F                     	;# 
  1473  1E30                     	;# 
  1474  1E31                     	;# 
  1475  1E32                     	;# 
  1476  1E33                     	;# 
  1477  1E34                     	;# 
  1478  1E35                     	;# 
  1479  1E36                     	;# 
  1480  1E37                     	;# 
  1481  1E8F                     	;# 
  1482  1E90                     	;# 
  1483  1E91                     	;# 
  1484  1E92                     	;# 
  1485  1E93                     	;# 
  1486  1E94                     	;# 
  1487  1E95                     	;# 
  1488  1E96                     	;# 
  1489  1E97                     	;# 
  1490  1E9C                     	;# 
  1491  1E9D                     	;# 
  1492  1E9E                     	;# 
  1493  1EA1                     	;# 
  1494  1EA2                     	;# 
  1495  1EA3                     	;# 
  1496  1EA4                     	;# 
  1497  1EA9                     	;# 
  1498  1EAA                     	;# 
  1499  1EB1                     	;# 
  1500  1EB2                     	;# 
  1501  1EB8                     	;# 
  1502  1EB9                     	;# 
  1503  1EBA                     	;# 
  1504  1EBB                     	;# 
  1505  1EBC                     	;# 
  1506  1EBD                     	;# 
  1507  1EBE                     	;# 
  1508  1EC3                     	;# 
  1509  1EC5                     	;# 
  1510  1EC6                     	;# 
  1511  1EC7                     	;# 
  1512  1EC8                     	;# 
  1513  1EC9                     	;# 
  1514  1ECA                     	;# 
  1515  1ECB                     	;# 
  1516  1ECB                     	;# 
  1517  1ECB                     	;# 
  1518  1ECC                     	;# 
  1519  1ECC                     	;# 
  1520  1ECC                     	;# 
  1521  1F10                     	;# 
  1522  1F11                     	;# 
  1523  1F12                     	;# 
  1524  1F14                     	;# 
  1525  1F15                     	;# 
  1526  1F1C                     	;# 
  1527  1F1D                     	;# 
  1528  1F1E                     	;# 
  1529  1F1F                     	;# 
  1530  1F20                     	;# 
  1531  1F21                     	;# 
  1532  1F22                     	;# 
  1533  1F23                     	;# 
  1534  1F24                     	;# 
  1535  1F25                     	;# 
  1536  1F26                     	;# 
  1537  1F27                     	;# 
  1538  1F38                     	;# 
  1539  1F39                     	;# 
  1540  1F3A                     	;# 
  1541  1F3B                     	;# 
  1542  1F3C                     	;# 
  1543  1F3D                     	;# 
  1544  1F3E                     	;# 
  1545  1F3F                     	;# 
  1546  1F43                     	;# 
  1547  1F44                     	;# 
  1548  1F45                     	;# 
  1549  1F46                     	;# 
  1550  1F47                     	;# 
  1551  1F48                     	;# 
  1552  1F49                     	;# 
  1553  1F4A                     	;# 
  1554  1F4E                     	;# 
  1555  1F4F                     	;# 
  1556  1F50                     	;# 
  1557  1F51                     	;# 
  1558  1F52                     	;# 
  1559  1F53                     	;# 
  1560  1F54                     	;# 
  1561  1F55                     	;# 
  1562  1FE4                     	;# 
  1563  1FE5                     	;# 
  1564  1FE6                     	;# 
  1565  1FE7                     	;# 
  1566  1FE8                     	;# 
  1567  1FE8                     	;# 
  1568  1FE9                     	;# 
  1569  1FEA                     	;# 
  1570  1FEB                     	;# 
  1571  1FED                     	;# 
  1572  1FEE                     	;# 
  1573  1FEF                     	;# 
  1574  0000                     	;# 
  1575  0001                     	;# 
  1576  0002                     	;# 
  1577  0003                     	;# 
  1578  0004                     	;# 
  1579  0005                     	;# 
  1580  0006                     	;# 
  1581  0007                     	;# 
  1582  0008                     	;# 
  1583  0009                     	;# 
  1584  000A                     	;# 
  1585  000B                     	;# 
  1586  000C                     	;# 
  1587  000D                     	;# 
  1588  000E                     	;# 
  1589  0012                     	;# 
  1590  0013                     	;# 
  1591  0014                     	;# 
  1592  0018                     	;# 
  1593  0019                     	;# 
  1594  001A                     	;# 
  1595  008C                     	;# 
  1596  008C                     	;# 
  1597  008D                     	;# 
  1598  008E                     	;# 
  1599  008E                     	;# 
  1600  008F                     	;# 
  1601  0090                     	;# 
  1602  0090                     	;# 
  1603  0091                     	;# 
  1604  0092                     	;# 
  1605  0092                     	;# 
  1606  0093                     	;# 
  1607  0094                     	;# 
  1608  0094                     	;# 
  1609  0095                     	;# 
  1610  0096                     	;# 
  1611  0096                     	;# 
  1612  0097                     	;# 
  1613  0098                     	;# 
  1614  0099                     	;# 
  1615  009A                     	;# 
  1616  009B                     	;# 
  1617  009B                     	;# 
  1618  009C                     	;# 
  1619  009D                     	;# 
  1620  009D                     	;# 
  1621  009E                     	;# 
  1622  009F                     	;# 
  1623  010C                     	;# 
  1624  010C                     	;# 
  1625  010D                     	;# 
  1626  010E                     	;# 
  1627  010F                     	;# 
  1628  010F                     	;# 
  1629  0110                     	;# 
  1630  0111                     	;# 
  1631  0112                     	;# 
  1632  0113                     	;# 
  1633  0114                     	;# 
  1634  0115                     	;# 
  1635  0116                     	;# 
  1636  0117                     	;# 
  1637  0118                     	;# 
  1638  0119                     	;# 
  1639  0119                     	;# 
  1640  0119                     	;# 
  1641  011A                     	;# 
  1642  011A                     	;# 
  1643  011A                     	;# 
  1644  011B                     	;# 
  1645  011B                     	;# 
  1646  011B                     	;# 
  1647  011B                     	;# 
  1648  011B                     	;# 
  1649  011C                     	;# 
  1650  011C                     	;# 
  1651  011C                     	;# 
  1652  011D                     	;# 
  1653  011D                     	;# 
  1654  011D                     	;# 
  1655  011E                     	;# 
  1656  011E                     	;# 
  1657  011E                     	;# 
  1658  011F                     	;# 
  1659  011F                     	;# 
  1660  011F                     	;# 
  1661  011F                     	;# 
  1662  011F                     	;# 
  1663  018C                     	;# 
  1664  018D                     	;# 
  1665  018E                     	;# 
  1666  018F                     	;# 
  1667  0190                     	;# 
  1668  0191                     	;# 
  1669  0192                     	;# 
  1670  0196                     	;# 
  1671  0197                     	;# 
  1672  0198                     	;# 
  1673  0199                     	;# 
  1674  019A                     	;# 
  1675  019B                     	;# 
  1676  019C                     	;# 
  1677  020C                     	;# 
  1678  020D                     	;# 
  1679  020E                     	;# 
  1680  020E                     	;# 
  1681  020F                     	;# 
  1682  020F                     	;# 
  1683  0210                     	;# 
  1684  0210                     	;# 
  1685  0211                     	;# 
  1686  0211                     	;# 
  1687  0212                     	;# 
  1688  0213                     	;# 
  1689  0214                     	;# 
  1690  0214                     	;# 
  1691  0215                     	;# 
  1692  0215                     	;# 
  1693  0216                     	;# 
  1694  0216                     	;# 
  1695  0217                     	;# 
  1696  0217                     	;# 
  1697  0218                     	;# 
  1698  0219                     	;# 
  1699  021A                     	;# 
  1700  021A                     	;# 
  1701  021B                     	;# 
  1702  021B                     	;# 
  1703  021C                     	;# 
  1704  021C                     	;# 
  1705  021D                     	;# 
  1706  021D                     	;# 
  1707  021E                     	;# 
  1708  021F                     	;# 
  1709  028C                     	;# 
  1710  028C                     	;# 
  1711  028D                     	;# 
  1712  028D                     	;# 
  1713  028E                     	;# 
  1714  028F                     	;# 
  1715  0290                     	;# 
  1716  0291                     	;# 
  1717  0292                     	;# 
  1718  0292                     	;# 
  1719  0293                     	;# 
  1720  0293                     	;# 
  1721  0294                     	;# 
  1722  0295                     	;# 
  1723  0296                     	;# 
  1724  0297                     	;# 
  1725  0298                     	;# 
  1726  0298                     	;# 
  1727  0299                     	;# 
  1728  0299                     	;# 
  1729  029A                     	;# 
  1730  029B                     	;# 
  1731  029C                     	;# 
  1732  029D                     	;# 
  1733  029F                     	;# 
  1734  030C                     	;# 
  1735  030C                     	;# 
  1736  030D                     	;# 
  1737  030E                     	;# 
  1738  030F                     	;# 
  1739  0310                     	;# 
  1740  0310                     	;# 
  1741  0311                     	;# 
  1742  0312                     	;# 
  1743  0313                     	;# 
  1744  0314                     	;# 
  1745  0314                     	;# 
  1746  0315                     	;# 
  1747  0316                     	;# 
  1748  0317                     	;# 
  1749  0318                     	;# 
  1750  0318                     	;# 
  1751  0319                     	;# 
  1752  031A                     	;# 
  1753  031B                     	;# 
  1754  038C                     	;# 
  1755  038C                     	;# 
  1756  038D                     	;# 
  1757  038E                     	;# 
  1758  0390                     	;# 
  1759  0390                     	;# 
  1760  0391                     	;# 
  1761  0392                     	;# 
  1762  048C                     	;# 
  1763  048C                     	;# 
  1764  048D                     	;# 
  1765  048E                     	;# 
  1766  048F                     	;# 
  1767  048F                     	;# 
  1768  0490                     	;# 
  1769  0491                     	;# 
  1770  0492                     	;# 
  1771  0492                     	;# 
  1772  0493                     	;# 
  1773  0494                     	;# 
  1774  0495                     	;# 
  1775  0495                     	;# 
  1776  0496                     	;# 
  1777  0497                     	;# 
  1778  0498                     	;# 
  1779  0499                     	;# 
  1780  049A                     	;# 
  1781  049B                     	;# 
  1782  049C                     	;# 
  1783  049D                     	;# 
  1784  058C                     	;# 
  1785  058C                     	;# 
  1786  058D                     	;# 
  1787  058E                     	;# 
  1788  058F                     	;# 
  1789  058F                     	;# 
  1790  0590                     	;# 
  1791  0591                     	;# 
  1792  0592                     	;# 
  1793  0593                     	;# 
  1794  059C                     	;# 
  1795  059C                     	;# 
  1796  059D                     	;# 
  1797  059D                     	;# 
  1798  059E                     	;# 
  1799  059F                     	;# 
  1800  060C                     	;# 
  1801  060C                     	;# 
  1802  060D                     	;# 
  1803  060D                     	;# 
  1804  060E                     	;# 
  1805  060F                     	;# 
  1806  0610                     	;# 
  1807  0611                     	;# 
  1808  0612                     	;# 
  1809  0613                     	;# 
  1810  0614                     	;# 
  1811  0616                     	;# 
  1812  0616                     	;# 
  1813  0617                     	;# 
  1814  0617                     	;# 
  1815  0618                     	;# 
  1816  0619                     	;# 
  1817  061A                     	;# 
  1818  061B                     	;# 
  1819  061C                     	;# 
  1820  061D                     	;# 
  1821  061E                     	;# 
  1822  070C                     	;# 
  1823  070D                     	;# 
  1824  070E                     	;# 
  1825  070F                     	;# 
  1826  0710                     	;# 
  1827  0711                     	;# 
  1828  0712                     	;# 
  1829  0713                     	;# 
  1830  0714                     	;# 
  1831  0716                     	;# 
  1832  0717                     	;# 
  1833  0718                     	;# 
  1834  0719                     	;# 
  1835  071A                     	;# 
  1836  071B                     	;# 
  1837  071C                     	;# 
  1838  071D                     	;# 
  1839  071E                     	;# 
  1840  0796                     	;# 
  1841  0797                     	;# 
  1842  0798                     	;# 
  1843  0799                     	;# 
  1844  079A                     	;# 
  1845  079B                     	;# 
  1846  079C                     	;# 
  1847  079D                     	;# 
  1848  080C                     	;# 
  1849  080D                     	;# 
  1850  080E                     	;# 
  1851  080F                     	;# 
  1852  0810                     	;# 
  1853  0811                     	;# 
  1854  0812                     	;# 
  1855  0813                     	;# 
  1856  0814                     	;# 
  1857  081A                     	;# 
  1858  081A                     	;# 
  1859  081B                     	;# 
  1860  081C                     	;# 
  1861  081C                     	;# 
  1862  081D                     	;# 
  1863  081E                     	;# 
  1864  081F                     	;# 
  1865  088C                     	;# 
  1866  088D                     	;# 
  1867  088E                     	;# 
  1868  088F                     	;# 
  1869  0890                     	;# 
  1870  0891                     	;# 
  1871  0892                     	;# 
  1872  0893                     	;# 
  1873  0895                     	;# 
  1874  0896                     	;# 
  1875  0897                     	;# 
  1876  0898                     	;# 
  1877  0899                     	;# 
  1878  089A                     	;# 
  1879  089B                     	;# 
  1880  090C                     	;# 
  1881  090E                     	;# 
  1882  090F                     	;# 
  1883  091F                     	;# 
  1884  098F                     	;# 
  1885  098F                     	;# 
  1886  0990                     	;# 
  1887  0991                     	;# 
  1888  0992                     	;# 
  1889  0993                     	;# 
  1890  0994                     	;# 
  1891  0995                     	;# 
  1892  0996                     	;# 
  1893  0997                     	;# 
  1894  1E0F                     	;# 
  1895  1E10                     	;# 
  1896  1E11                     	;# 
  1897  1E12                     	;# 
  1898  1E13                     	;# 
  1899  1E14                     	;# 
  1900  1E15                     	;# 
  1901  1E16                     	;# 
  1902  1E17                     	;# 
  1903  1E18                     	;# 
  1904  1E19                     	;# 
  1905  1E1A                     	;# 
  1906  1E1B                     	;# 
  1907  1E1C                     	;# 
  1908  1E1D                     	;# 
  1909  1E1E                     	;# 
  1910  1E1F                     	;# 
  1911  1E20                     	;# 
  1912  1E21                     	;# 
  1913  1E22                     	;# 
  1914  1E23                     	;# 
  1915  1E24                     	;# 
  1916  1E25                     	;# 
  1917  1E26                     	;# 
  1918  1E27                     	;# 
  1919  1E28                     	;# 
  1920  1E29                     	;# 
  1921  1E2A                     	;# 
  1922  1E2B                     	;# 
  1923  1E2C                     	;# 
  1924  1E2D                     	;# 
  1925  1E2E                     	;# 
  1926  1E2F                     	;# 
  1927  1E30                     	;# 
  1928  1E31                     	;# 
  1929  1E32                     	;# 
  1930  1E33                     	;# 
  1931  1E34                     	;# 
  1932  1E35                     	;# 
  1933  1E36                     	;# 
  1934  1E37                     	;# 
  1935  1E8F                     	;# 
  1936  1E90                     	;# 
  1937  1E91                     	;# 
  1938  1E92                     	;# 
  1939  1E93                     	;# 
  1940  1E94                     	;# 
  1941  1E95                     	;# 
  1942  1E96                     	;# 
  1943  1E97                     	;# 
  1944  1E9C                     	;# 
  1945  1E9D                     	;# 
  1946  1E9E                     	;# 
  1947  1EA1                     	;# 
  1948  1EA2                     	;# 
  1949  1EA3                     	;# 
  1950  1EA4                     	;# 
  1951  1EA9                     	;# 
  1952  1EAA                     	;# 
  1953  1EB1                     	;# 
  1954  1EB2                     	;# 
  1955  1EB8                     	;# 
  1956  1EB9                     	;# 
  1957  1EBA                     	;# 
  1958  1EBB                     	;# 
  1959  1EBC                     	;# 
  1960  1EBD                     	;# 
  1961  1EBE                     	;# 
  1962  1EC3                     	;# 
  1963  1EC5                     	;# 
  1964  1EC6                     	;# 
  1965  1EC7                     	;# 
  1966  1EC8                     	;# 
  1967  1EC9                     	;# 
  1968  1ECA                     	;# 
  1969  1ECB                     	;# 
  1970  1ECB                     	;# 
  1971  1ECB                     	;# 
  1972  1ECC                     	;# 
  1973  1ECC                     	;# 
  1974  1ECC                     	;# 
  1975  1F10                     	;# 
  1976  1F11                     	;# 
  1977  1F12                     	;# 
  1978  1F14                     	;# 
  1979  1F15                     	;# 
  1980  1F1C                     	;# 
  1981  1F1D                     	;# 
  1982  1F1E                     	;# 
  1983  1F1F                     	;# 
  1984  1F20                     	;# 
  1985  1F21                     	;# 
  1986  1F22                     	;# 
  1987  1F23                     	;# 
  1988  1F24                     	;# 
  1989  1F25                     	;# 
  1990  1F26                     	;# 
  1991  1F27                     	;# 
  1992  1F38                     	;# 
  1993  1F39                     	;# 
  1994  1F3A                     	;# 
  1995  1F3B                     	;# 
  1996  1F3C                     	;# 
  1997  1F3D                     	;# 
  1998  1F3E                     	;# 
  1999  1F3F                     	;# 
  2000  1F43                     	;# 
  2001  1F44                     	;# 
  2002  1F45                     	;# 
  2003  1F46                     	;# 
  2004  1F47                     	;# 
  2005  1F48                     	;# 
  2006  1F49                     	;# 
  2007  1F4A                     	;# 
  2008  1F4E                     	;# 
  2009  1F4F                     	;# 
  2010  1F50                     	;# 
  2011  1F51                     	;# 
  2012  1F52                     	;# 
  2013  1F53                     	;# 
  2014  1F54                     	;# 
  2015  1F55                     	;# 
  2016  1FE4                     	;# 
  2017  1FE5                     	;# 
  2018  1FE6                     	;# 
  2019  1FE7                     	;# 
  2020  1FE8                     	;# 
  2021  1FE8                     	;# 
  2022  1FE9                     	;# 
  2023  1FEA                     	;# 
  2024  1FEB                     	;# 
  2025  1FED                     	;# 
  2026  1FEE                     	;# 
  2027  1FEF                     	;# 
  2028  0000                     	;# 
  2029  0001                     	;# 
  2030  0002                     	;# 
  2031  0003                     	;# 
  2032  0004                     	;# 
  2033  0005                     	;# 
  2034  0006                     	;# 
  2035  0007                     	;# 
  2036  0008                     	;# 
  2037  0009                     	;# 
  2038  000A                     	;# 
  2039  000B                     	;# 
  2040  000C                     	;# 
  2041  000D                     	;# 
  2042  000E                     	;# 
  2043  0012                     	;# 
  2044  0013                     	;# 
  2045  0014                     	;# 
  2046  0018                     	;# 
  2047  0019                     	;# 
  2048  001A                     	;# 
  2049  008C                     	;# 
  2050  008C                     	;# 
  2051  008D                     	;# 
  2052  008E                     	;# 
  2053  008E                     	;# 
  2054  008F                     	;# 
  2055  0090                     	;# 
  2056  0090                     	;# 
  2057  0091                     	;# 
  2058  0092                     	;# 
  2059  0092                     	;# 
  2060  0093                     	;# 
  2061  0094                     	;# 
  2062  0094                     	;# 
  2063  0095                     	;# 
  2064  0096                     	;# 
  2065  0096                     	;# 
  2066  0097                     	;# 
  2067  0098                     	;# 
  2068  0099                     	;# 
  2069  009A                     	;# 
  2070  009B                     	;# 
  2071  009B                     	;# 
  2072  009C                     	;# 
  2073  009D                     	;# 
  2074  009D                     	;# 
  2075  009E                     	;# 
  2076  009F                     	;# 
  2077  010C                     	;# 
  2078  010C                     	;# 
  2079  010D                     	;# 
  2080  010E                     	;# 
  2081  010F                     	;# 
  2082  010F                     	;# 
  2083  0110                     	;# 
  2084  0111                     	;# 
  2085  0112                     	;# 
  2086  0113                     	;# 
  2087  0114                     	;# 
  2088  0115                     	;# 
  2089  0116                     	;# 
  2090  0117                     	;# 
  2091  0118                     	;# 
  2092  0119                     	;# 
  2093  0119                     	;# 
  2094  0119                     	;# 
  2095  011A                     	;# 
  2096  011A                     	;# 
  2097  011A                     	;# 
  2098  011B                     	;# 
  2099  011B                     	;# 
  2100  011B                     	;# 
  2101  011B                     	;# 
  2102  011B                     	;# 
  2103  011C                     	;# 
  2104  011C                     	;# 
  2105  011C                     	;# 
  2106  011D                     	;# 
  2107  011D                     	;# 
  2108  011D                     	;# 
  2109  011E                     	;# 
  2110  011E                     	;# 
  2111  011E                     	;# 
  2112  011F                     	;# 
  2113  011F                     	;# 
  2114  011F                     	;# 
  2115  011F                     	;# 
  2116  011F                     	;# 
  2117  018C                     	;# 
  2118  018D                     	;# 
  2119  018E                     	;# 
  2120  018F                     	;# 
  2121  0190                     	;# 
  2122  0191                     	;# 
  2123  0192                     	;# 
  2124  0196                     	;# 
  2125  0197                     	;# 
  2126  0198                     	;# 
  2127  0199                     	;# 
  2128  019A                     	;# 
  2129  019B                     	;# 
  2130  019C                     	;# 
  2131  020C                     	;# 
  2132  020D                     	;# 
  2133  020E                     	;# 
  2134  020E                     	;# 
  2135  020F                     	;# 
  2136  020F                     	;# 
  2137  0210                     	;# 
  2138  0210                     	;# 
  2139  0211                     	;# 
  2140  0211                     	;# 
  2141  0212                     	;# 
  2142  0213                     	;# 
  2143  0214                     	;# 
  2144  0214                     	;# 
  2145  0215                     	;# 
  2146  0215                     	;# 
  2147  0216                     	;# 
  2148  0216                     	;# 
  2149  0217                     	;# 
  2150  0217                     	;# 
  2151  0218                     	;# 
  2152  0219                     	;# 
  2153  021A                     	;# 
  2154  021A                     	;# 
  2155  021B                     	;# 
  2156  021B                     	;# 
  2157  021C                     	;# 
  2158  021C                     	;# 
  2159  021D                     	;# 
  2160  021D                     	;# 
  2161  021E                     	;# 
  2162  021F                     	;# 
  2163  028C                     	;# 
  2164  028C                     	;# 
  2165  028D                     	;# 
  2166  028D                     	;# 
  2167  028E                     	;# 
  2168  028F                     	;# 
  2169  0290                     	;# 
  2170  0291                     	;# 
  2171  0292                     	;# 
  2172  0292                     	;# 
  2173  0293                     	;# 
  2174  0293                     	;# 
  2175  0294                     	;# 
  2176  0295                     	;# 
  2177  0296                     	;# 
  2178  0297                     	;# 
  2179  0298                     	;# 
  2180  0298                     	;# 
  2181  0299                     	;# 
  2182  0299                     	;# 
  2183  029A                     	;# 
  2184  029B                     	;# 
  2185  029C                     	;# 
  2186  029D                     	;# 
  2187  029F                     	;# 
  2188  030C                     	;# 
  2189  030C                     	;# 
  2190  030D                     	;# 
  2191  030E                     	;# 
  2192  030F                     	;# 
  2193  0310                     	;# 
  2194  0310                     	;# 
  2195  0311                     	;# 
  2196  0312                     	;# 
  2197  0313                     	;# 
  2198  0314                     	;# 
  2199  0314                     	;# 
  2200  0315                     	;# 
  2201  0316                     	;# 
  2202  0317                     	;# 
  2203  0318                     	;# 
  2204  0318                     	;# 
  2205  0319                     	;# 
  2206  031A                     	;# 
  2207  031B                     	;# 
  2208  038C                     	;# 
  2209  038C                     	;# 
  2210  038D                     	;# 
  2211  038E                     	;# 
  2212  0390                     	;# 
  2213  0390                     	;# 
  2214  0391                     	;# 
  2215  0392                     	;# 
  2216  048C                     	;# 
  2217  048C                     	;# 
  2218  048D                     	;# 
  2219  048E                     	;# 
  2220  048F                     	;# 
  2221  048F                     	;# 
  2222  0490                     	;# 
  2223  0491                     	;# 
  2224  0492                     	;# 
  2225  0492                     	;# 
  2226  0493                     	;# 
  2227  0494                     	;# 
  2228  0495                     	;# 
  2229  0495                     	;# 
  2230  0496                     	;# 
  2231  0497                     	;# 
  2232  0498                     	;# 
  2233  0499                     	;# 
  2234  049A                     	;# 
  2235  049B                     	;# 
  2236  049C                     	;# 
  2237  049D                     	;# 
  2238  058C                     	;# 
  2239  058C                     	;# 
  2240  058D                     	;# 
  2241  058E                     	;# 
  2242  058F                     	;# 
  2243  058F                     	;# 
  2244  0590                     	;# 
  2245  0591                     	;# 
  2246  0592                     	;# 
  2247  0593                     	;# 
  2248  059C                     	;# 
  2249  059C                     	;# 
  2250  059D                     	;# 
  2251  059D                     	;# 
  2252  059E                     	;# 
  2253  059F                     	;# 
  2254  060C                     	;# 
  2255  060C                     	;# 
  2256  060D                     	;# 
  2257  060D                     	;# 
  2258  060E                     	;# 
  2259  060F                     	;# 
  2260  0610                     	;# 
  2261  0611                     	;# 
  2262  0612                     	;# 
  2263  0613                     	;# 
  2264  0614                     	;# 
  2265  0616                     	;# 
  2266  0616                     	;# 
  2267  0617                     	;# 
  2268  0617                     	;# 
  2269  0618                     	;# 
  2270  0619                     	;# 
  2271  061A                     	;# 
  2272  061B                     	;# 
  2273  061C                     	;# 
  2274  061D                     	;# 
  2275  061E                     	;# 
  2276  070C                     	;# 
  2277  070D                     	;# 
  2278  070E                     	;# 
  2279  070F                     	;# 
  2280  0710                     	;# 
  2281  0711                     	;# 
  2282  0712                     	;# 
  2283  0713                     	;# 
  2284  0714                     	;# 
  2285  0716                     	;# 
  2286  0717                     	;# 
  2287  0718                     	;# 
  2288  0719                     	;# 
  2289  071A                     	;# 
  2290  071B                     	;# 
  2291  071C                     	;# 
  2292  071D                     	;# 
  2293  071E                     	;# 
  2294  0796                     	;# 
  2295  0797                     	;# 
  2296  0798                     	;# 
  2297  0799                     	;# 
  2298  079A                     	;# 
  2299  079B                     	;# 
  2300  079C                     	;# 
  2301  079D                     	;# 
  2302  080C                     	;# 
  2303  080D                     	;# 
  2304  080E                     	;# 
  2305  080F                     	;# 
  2306  0810                     	;# 
  2307  0811                     	;# 
  2308  0812                     	;# 
  2309  0813                     	;# 
  2310  0814                     	;# 
  2311  081A                     	;# 
  2312  081A                     	;# 
  2313  081B                     	;# 
  2314  081C                     	;# 
  2315  081C                     	;# 
  2316  081D                     	;# 
  2317  081E                     	;# 
  2318  081F                     	;# 
  2319  088C                     	;# 
  2320  088D                     	;# 
  2321  088E                     	;# 
  2322  088F                     	;# 
  2323  0890                     	;# 
  2324  0891                     	;# 
  2325  0892                     	;# 
  2326  0893                     	;# 
  2327  0895                     	;# 
  2328  0896                     	;# 
  2329  0897                     	;# 
  2330  0898                     	;# 
  2331  0899                     	;# 
  2332  089A                     	;# 
  2333  089B                     	;# 
  2334  090C                     	;# 
  2335  090E                     	;# 
  2336  090F                     	;# 
  2337  091F                     	;# 
  2338  098F                     	;# 
  2339  098F                     	;# 
  2340  0990                     	;# 
  2341  0991                     	;# 
  2342  0992                     	;# 
  2343  0993                     	;# 
  2344  0994                     	;# 
  2345  0995                     	;# 
  2346  0996                     	;# 
  2347  0997                     	;# 
  2348  1E0F                     	;# 
  2349  1E10                     	;# 
  2350  1E11                     	;# 
  2351  1E12                     	;# 
  2352  1E13                     	;# 
  2353  1E14                     	;# 
  2354  1E15                     	;# 
  2355  1E16                     	;# 
  2356  1E17                     	;# 
  2357  1E18                     	;# 
  2358  1E19                     	;# 
  2359  1E1A                     	;# 
  2360  1E1B                     	;# 
  2361  1E1C                     	;# 
  2362  1E1D                     	;# 
  2363  1E1E                     	;# 
  2364  1E1F                     	;# 
  2365  1E20                     	;# 
  2366  1E21                     	;# 
  2367  1E22                     	;# 
  2368  1E23                     	;# 
  2369  1E24                     	;# 
  2370  1E25                     	;# 
  2371  1E26                     	;# 
  2372  1E27                     	;# 
  2373  1E28                     	;# 
  2374  1E29                     	;# 
  2375  1E2A                     	;# 
  2376  1E2B                     	;# 
  2377  1E2C                     	;# 
  2378  1E2D                     	;# 
  2379  1E2E                     	;# 
  2380  1E2F                     	;# 
  2381  1E30                     	;# 
  2382  1E31                     	;# 
  2383  1E32                     	;# 
  2384  1E33                     	;# 
  2385  1E34                     	;# 
  2386  1E35                     	;# 
  2387  1E36                     	;# 
  2388  1E37                     	;# 
  2389  1E8F                     	;# 
  2390  1E90                     	;# 
  2391  1E91                     	;# 
  2392  1E92                     	;# 
  2393  1E93                     	;# 
  2394  1E94                     	;# 
  2395  1E95                     	;# 
  2396  1E96                     	;# 
  2397  1E97                     	;# 
  2398  1E9C                     	;# 
  2399  1E9D                     	;# 
  2400  1E9E                     	;# 
  2401  1EA1                     	;# 
  2402  1EA2                     	;# 
  2403  1EA3                     	;# 
  2404  1EA4                     	;# 
  2405  1EA9                     	;# 
  2406  1EAA                     	;# 
  2407  1EB1                     	;# 
  2408  1EB2                     	;# 
  2409  1EB8                     	;# 
  2410  1EB9                     	;# 
  2411  1EBA                     	;# 
  2412  1EBB                     	;# 
  2413  1EBC                     	;# 
  2414  1EBD                     	;# 
  2415  1EBE                     	;# 
  2416  1EC3                     	;# 
  2417  1EC5                     	;# 
  2418  1EC6                     	;# 
  2419  1EC7                     	;# 
  2420  1EC8                     	;# 
  2421  1EC9                     	;# 
  2422  1ECA                     	;# 
  2423  1ECB                     	;# 
  2424  1ECB                     	;# 
  2425  1ECB                     	;# 
  2426  1ECC                     	;# 
  2427  1ECC                     	;# 
  2428  1ECC                     	;# 
  2429  1F10                     	;# 
  2430  1F11                     	;# 
  2431  1F12                     	;# 
  2432  1F14                     	;# 
  2433  1F15                     	;# 
  2434  1F1C                     	;# 
  2435  1F1D                     	;# 
  2436  1F1E                     	;# 
  2437  1F1F                     	;# 
  2438  1F20                     	;# 
  2439  1F21                     	;# 
  2440  1F22                     	;# 
  2441  1F23                     	;# 
  2442  1F24                     	;# 
  2443  1F25                     	;# 
  2444  1F26                     	;# 
  2445  1F27                     	;# 
  2446  1F38                     	;# 
  2447  1F39                     	;# 
  2448  1F3A                     	;# 
  2449  1F3B                     	;# 
  2450  1F3C                     	;# 
  2451  1F3D                     	;# 
  2452  1F3E                     	;# 
  2453  1F3F                     	;# 
  2454  1F43                     	;# 
  2455  1F44                     	;# 
  2456  1F45                     	;# 
  2457  1F46                     	;# 
  2458  1F47                     	;# 
  2459  1F48                     	;# 
  2460  1F49                     	;# 
  2461  1F4A                     	;# 
  2462  1F4E                     	;# 
  2463  1F4F                     	;# 
  2464  1F50                     	;# 
  2465  1F51                     	;# 
  2466  1F52                     	;# 
  2467  1F53                     	;# 
  2468  1F54                     	;# 
  2469  1F55                     	;# 
  2470  1FE4                     	;# 
  2471  1FE5                     	;# 
  2472  1FE6                     	;# 
  2473  1FE7                     	;# 
  2474  1FE8                     	;# 
  2475  1FE8                     	;# 
  2476  1FE9                     	;# 
  2477  1FEA                     	;# 
  2478  1FEB                     	;# 
  2479  1FED                     	;# 
  2480  1FEE                     	;# 
  2481  1FEF                     	;# 
  2482  0000                     	;# 
  2483  0001                     	;# 
  2484  0002                     	;# 
  2485  0003                     	;# 
  2486  0004                     	;# 
  2487  0005                     	;# 
  2488  0006                     	;# 
  2489  0007                     	;# 
  2490  0008                     	;# 
  2491  0009                     	;# 
  2492  000A                     	;# 
  2493  000B                     	;# 
  2494  000C                     	;# 
  2495  000D                     	;# 
  2496  000E                     	;# 
  2497  0012                     	;# 
  2498  0013                     	;# 
  2499  0014                     	;# 
  2500  0018                     	;# 
  2501  0019                     	;# 
  2502  001A                     	;# 
  2503  008C                     	;# 
  2504  008C                     	;# 
  2505  008D                     	;# 
  2506  008E                     	;# 
  2507  008E                     	;# 
  2508  008F                     	;# 
  2509  0090                     	;# 
  2510  0090                     	;# 
  2511  0091                     	;# 
  2512  0092                     	;# 
  2513  0092                     	;# 
  2514  0093                     	;# 
  2515  0094                     	;# 
  2516  0094                     	;# 
  2517  0095                     	;# 
  2518  0096                     	;# 
  2519  0096                     	;# 
  2520  0097                     	;# 
  2521  0098                     	;# 
  2522  0099                     	;# 
  2523  009A                     	;# 
  2524  009B                     	;# 
  2525  009B                     	;# 
  2526  009C                     	;# 
  2527  009D                     	;# 
  2528  009D                     	;# 
  2529  009E                     	;# 
  2530  009F                     	;# 
  2531  010C                     	;# 
  2532  010C                     	;# 
  2533  010D                     	;# 
  2534  010E                     	;# 
  2535  010F                     	;# 
  2536  010F                     	;# 
  2537  0110                     	;# 
  2538  0111                     	;# 
  2539  0112                     	;# 
  2540  0113                     	;# 
  2541  0114                     	;# 
  2542  0115                     	;# 
  2543  0116                     	;# 
  2544  0117                     	;# 
  2545  0118                     	;# 
  2546  0119                     	;# 
  2547  0119                     	;# 
  2548  0119                     	;# 
  2549  011A                     	;# 
  2550  011A                     	;# 
  2551  011A                     	;# 
  2552  011B                     	;# 
  2553  011B                     	;# 
  2554  011B                     	;# 
  2555  011B                     	;# 
  2556  011B                     	;# 
  2557  011C                     	;# 
  2558  011C                     	;# 
  2559  011C                     	;# 
  2560  011D                     	;# 
  2561  011D                     	;# 
  2562  011D                     	;# 
  2563  011E                     	;# 
  2564  011E                     	;# 
  2565  011E                     	;# 
  2566  011F                     	;# 
  2567  011F                     	;# 
  2568  011F                     	;# 
  2569  011F                     	;# 
  2570  011F                     	;# 
  2571  018C                     	;# 
  2572  018D                     	;# 
  2573  018E                     	;# 
  2574  018F                     	;# 
  2575  0190                     	;# 
  2576  0191                     	;# 
  2577  0192                     	;# 
  2578  0196                     	;# 
  2579  0197                     	;# 
  2580  0198                     	;# 
  2581  0199                     	;# 
  2582  019A                     	;# 
  2583  019B                     	;# 
  2584  019C                     	;# 
  2585  020C                     	;# 
  2586  020D                     	;# 
  2587  020E                     	;# 
  2588  020E                     	;# 
  2589  020F                     	;# 
  2590  020F                     	;# 
  2591  0210                     	;# 
  2592  0210                     	;# 
  2593  0211                     	;# 
  2594  0211                     	;# 
  2595  0212                     	;# 
  2596  0213                     	;# 
  2597  0214                     	;# 
  2598  0214                     	;# 
  2599  0215                     	;# 
  2600  0215                     	;# 
  2601  0216                     	;# 
  2602  0216                     	;# 
  2603  0217                     	;# 
  2604  0217                     	;# 
  2605  0218                     	;# 
  2606  0219                     	;# 
  2607  021A                     	;# 
  2608  021A                     	;# 
  2609  021B                     	;# 
  2610  021B                     	;# 
  2611  021C                     	;# 
  2612  021C                     	;# 
  2613  021D                     	;# 
  2614  021D                     	;# 
  2615  021E                     	;# 
  2616  021F                     	;# 
  2617  028C                     	;# 
  2618  028C                     	;# 
  2619  028D                     	;# 
  2620  028D                     	;# 
  2621  028E                     	;# 
  2622  028F                     	;# 
  2623  0290                     	;# 
  2624  0291                     	;# 
  2625  0292                     	;# 
  2626  0292                     	;# 
  2627  0293                     	;# 
  2628  0293                     	;# 
  2629  0294                     	;# 
  2630  0295                     	;# 
  2631  0296                     	;# 
  2632  0297                     	;# 
  2633  0298                     	;# 
  2634  0298                     	;# 
  2635  0299                     	;# 
  2636  0299                     	;# 
  2637  029A                     	;# 
  2638  029B                     	;# 
  2639  029C                     	;# 
  2640  029D                     	;# 
  2641  029F                     	;# 
  2642  030C                     	;# 
  2643  030C                     	;# 
  2644  030D                     	;# 
  2645  030E                     	;# 
  2646  030F                     	;# 
  2647  0310                     	;# 
  2648  0310                     	;# 
  2649  0311                     	;# 
  2650  0312                     	;# 
  2651  0313                     	;# 
  2652  0314                     	;# 
  2653  0314                     	;# 
  2654  0315                     	;# 
  2655  0316                     	;# 
  2656  0317                     	;# 
  2657  0318                     	;# 
  2658  0318                     	;# 
  2659  0319                     	;# 
  2660  031A                     	;# 
  2661  031B                     	;# 
  2662  038C                     	;# 
  2663  038C                     	;# 
  2664  038D                     	;# 
  2665  038E                     	;# 
  2666  0390                     	;# 
  2667  0390                     	;# 
  2668  0391                     	;# 
  2669  0392                     	;# 
  2670  048C                     	;# 
  2671  048C                     	;# 
  2672  048D                     	;# 
  2673  048E                     	;# 
  2674  048F                     	;# 
  2675  048F                     	;# 
  2676  0490                     	;# 
  2677  0491                     	;# 
  2678  0492                     	;# 
  2679  0492                     	;# 
  2680  0493                     	;# 
  2681  0494                     	;# 
  2682  0495                     	;# 
  2683  0495                     	;# 
  2684  0496                     	;# 
  2685  0497                     	;# 
  2686  0498                     	;# 
  2687  0499                     	;# 
  2688  049A                     	;# 
  2689  049B                     	;# 
  2690  049C                     	;# 
  2691  049D                     	;# 
  2692  058C                     	;# 
  2693  058C                     	;# 
  2694  058D                     	;# 
  2695  058E                     	;# 
  2696  058F                     	;# 
  2697  058F                     	;# 
  2698  0590                     	;# 
  2699  0591                     	;# 
  2700  0592                     	;# 
  2701  0593                     	;# 
  2702  059C                     	;# 
  2703  059C                     	;# 
  2704  059D                     	;# 
  2705  059D                     	;# 
  2706  059E                     	;# 
  2707  059F                     	;# 
  2708  060C                     	;# 
  2709  060C                     	;# 
  2710  060D                     	;# 
  2711  060D                     	;# 
  2712  060E                     	;# 
  2713  060F                     	;# 
  2714  0610                     	;# 
  2715  0611                     	;# 
  2716  0612                     	;# 
  2717  0613                     	;# 
  2718  0614                     	;# 
  2719  0616                     	;# 
  2720  0616                     	;# 
  2721  0617                     	;# 
  2722  0617                     	;# 
  2723  0618                     	;# 
  2724  0619                     	;# 
  2725  061A                     	;# 
  2726  061B                     	;# 
  2727  061C                     	;# 
  2728  061D                     	;# 
  2729  061E                     	;# 
  2730  070C                     	;# 
  2731  070D                     	;# 
  2732  070E                     	;# 
  2733  070F                     	;# 
  2734  0710                     	;# 
  2735  0711                     	;# 
  2736  0712                     	;# 
  2737  0713                     	;# 
  2738  0714                     	;# 
  2739  0716                     	;# 
  2740  0717                     	;# 
  2741  0718                     	;# 
  2742  0719                     	;# 
  2743  071A                     	;# 
  2744  071B                     	;# 
  2745  071C                     	;# 
  2746  071D                     	;# 
  2747  071E                     	;# 
  2748  0796                     	;# 
  2749  0797                     	;# 
  2750  0798                     	;# 
  2751  0799                     	;# 
  2752  079A                     	;# 
  2753  079B                     	;# 
  2754  079C                     	;# 
  2755  079D                     	;# 
  2756  080C                     	;# 
  2757  080D                     	;# 
  2758  080E                     	;# 
  2759  080F                     	;# 
  2760  0810                     	;# 
  2761  0811                     	;# 
  2762  0812                     	;# 
  2763  0813                     	;# 
  2764  0814                     	;# 
  2765  081A                     	;# 
  2766  081A                     	;# 
  2767  081B                     	;# 
  2768  081C                     	;# 
  2769  081C                     	;# 
  2770  081D                     	;# 
  2771  081E                     	;# 
  2772  081F                     	;# 
  2773  088C                     	;# 
  2774  088D                     	;# 
  2775  088E                     	;# 
  2776  088F                     	;# 
  2777  0890                     	;# 
  2778  0891                     	;# 
  2779  0892                     	;# 
  2780  0893                     	;# 
  2781  0895                     	;# 
  2782  0896                     	;# 
  2783  0897                     	;# 
  2784  0898                     	;# 
  2785  0899                     	;# 
  2786  089A                     	;# 
  2787  089B                     	;# 
  2788  090C                     	;# 
  2789  090E                     	;# 
  2790  090F                     	;# 
  2791  091F                     	;# 
  2792  098F                     	;# 
  2793  098F                     	;# 
  2794  0990                     	;# 
  2795  0991                     	;# 
  2796  0992                     	;# 
  2797  0993                     	;# 
  2798  0994                     	;# 
  2799  0995                     	;# 
  2800  0996                     	;# 
  2801  0997                     	;# 
  2802  1E0F                     	;# 
  2803  1E10                     	;# 
  2804  1E11                     	;# 
  2805  1E12                     	;# 
  2806  1E13                     	;# 
  2807  1E14                     	;# 
  2808  1E15                     	;# 
  2809  1E16                     	;# 
  2810  1E17                     	;# 
  2811  1E18                     	;# 
  2812  1E19                     	;# 
  2813  1E1A                     	;# 
  2814  1E1B                     	;# 
  2815  1E1C                     	;# 
  2816  1E1D                     	;# 
  2817  1E1E                     	;# 
  2818  1E1F                     	;# 
  2819  1E20                     	;# 
  2820  1E21                     	;# 
  2821  1E22                     	;# 
  2822  1E23                     	;# 
  2823  1E24                     	;# 
  2824  1E25                     	;# 
  2825  1E26                     	;# 
  2826  1E27                     	;# 
  2827  1E28                     	;# 
  2828  1E29                     	;# 
  2829  1E2A                     	;# 
  2830  1E2B                     	;# 
  2831  1E2C                     	;# 
  2832  1E2D                     	;# 
  2833  1E2E                     	;# 
  2834  1E2F                     	;# 
  2835  1E30                     	;# 
  2836  1E31                     	;# 
  2837  1E32                     	;# 
  2838  1E33                     	;# 
  2839  1E34                     	;# 
  2840  1E35                     	;# 
  2841  1E36                     	;# 
  2842  1E37                     	;# 
  2843  1E8F                     	;# 
  2844  1E90                     	;# 
  2845  1E91                     	;# 
  2846  1E92                     	;# 
  2847  1E93                     	;# 
  2848  1E94                     	;# 
  2849  1E95                     	;# 
  2850  1E96                     	;# 
  2851  1E97                     	;# 
  2852  1E9C                     	;# 
  2853  1E9D                     	;# 
  2854  1E9E                     	;# 
  2855  1EA1                     	;# 
  2856  1EA2                     	;# 
  2857  1EA3                     	;# 
  2858  1EA4                     	;# 
  2859  1EA9                     	;# 
  2860  1EAA                     	;# 
  2861  1EB1                     	;# 
  2862  1EB2                     	;# 
  2863  1EB8                     	;# 
  2864  1EB9                     	;# 
  2865  1EBA                     	;# 
  2866  1EBB                     	;# 
  2867  1EBC                     	;# 
  2868  1EBD                     	;# 
  2869  1EBE                     	;# 
  2870  1EC3                     	;# 
  2871  1EC5                     	;# 
  2872  1EC6                     	;# 
  2873  1EC7                     	;# 
  2874  1EC8                     	;# 
  2875  1EC9                     	;# 
  2876  1ECA                     	;# 
  2877  1ECB                     	;# 
  2878  1ECB                     	;# 
  2879  1ECB                     	;# 
  2880  1ECC                     	;# 
  2881  1ECC                     	;# 
  2882  1ECC                     	;# 
  2883  1F10                     	;# 
  2884  1F11                     	;# 
  2885  1F12                     	;# 
  2886  1F14                     	;# 
  2887  1F15                     	;# 
  2888  1F1C                     	;# 
  2889  1F1D                     	;# 
  2890  1F1E                     	;# 
  2891  1F1F                     	;# 
  2892  1F20                     	;# 
  2893  1F21                     	;# 
  2894  1F22                     	;# 
  2895  1F23                     	;# 
  2896  1F24                     	;# 
  2897  1F25                     	;# 
  2898  1F26                     	;# 
  2899  1F27                     	;# 
  2900  1F38                     	;# 
  2901  1F39                     	;# 
  2902  1F3A                     	;# 
  2903  1F3B                     	;# 
  2904  1F3C                     	;# 
  2905  1F3D                     	;# 
  2906  1F3E                     	;# 
  2907  1F3F                     	;# 
  2908  1F43                     	;# 
  2909  1F44                     	;# 
  2910  1F45                     	;# 
  2911  1F46                     	;# 
  2912  1F47                     	;# 
  2913  1F48                     	;# 
  2914  1F49                     	;# 
  2915  1F4A                     	;# 
  2916  1F4E                     	;# 
  2917  1F4F                     	;# 
  2918  1F50                     	;# 
  2919  1F51                     	;# 
  2920  1F52                     	;# 
  2921  1F53                     	;# 
  2922  1F54                     	;# 
  2923  1F55                     	;# 
  2924  1FE4                     	;# 
  2925  1FE5                     	;# 
  2926  1FE6                     	;# 
  2927  1FE7                     	;# 
  2928  1FE8                     	;# 
  2929  1FE8                     	;# 
  2930  1FE9                     	;# 
  2931  1FEA                     	;# 
  2932  1FEB                     	;# 
  2933  1FED                     	;# 
  2934  1FEE                     	;# 
  2935  1FEF                     	;# 
  2936  0000                     	;# 
  2937  0001                     	;# 
  2938  0002                     	;# 
  2939  0003                     	;# 
  2940  0004                     	;# 
  2941  0005                     	;# 
  2942  0006                     	;# 
  2943  0007                     	;# 
  2944  0008                     	;# 
  2945  0009                     	;# 
  2946  000A                     	;# 
  2947  000B                     	;# 
  2948  000C                     	;# 
  2949  000D                     	;# 
  2950  000E                     	;# 
  2951  0012                     	;# 
  2952  0013                     	;# 
  2953  0014                     	;# 
  2954  0018                     	;# 
  2955  0019                     	;# 
  2956  001A                     	;# 
  2957  008C                     	;# 
  2958  008C                     	;# 
  2959  008D                     	;# 
  2960  008E                     	;# 
  2961  008E                     	;# 
  2962  008F                     	;# 
  2963  0090                     	;# 
  2964  0090                     	;# 
  2965  0091                     	;# 
  2966  0092                     	;# 
  2967  0092                     	;# 
  2968  0093                     	;# 
  2969  0094                     	;# 
  2970  0094                     	;# 
  2971  0095                     	;# 
  2972  0096                     	;# 
  2973  0096                     	;# 
  2974  0097                     	;# 
  2975  0098                     	;# 
  2976  0099                     	;# 
  2977  009A                     	;# 
  2978  009B                     	;# 
  2979  009B                     	;# 
  2980  009C                     	;# 
  2981  009D                     	;# 
  2982  009D                     	;# 
  2983  009E                     	;# 
  2984  009F                     	;# 
  2985  010C                     	;# 
  2986  010C                     	;# 
  2987  010D                     	;# 
  2988  010E                     	;# 
  2989  010F                     	;# 
  2990  010F                     	;# 
  2991  0110                     	;# 
  2992  0111                     	;# 
  2993  0112                     	;# 
  2994  0113                     	;# 
  2995  0114                     	;# 
  2996  0115                     	;# 
  2997  0116                     	;# 
  2998  0117                     	;# 
  2999  0118                     	;# 
  3000  0119                     	;# 
  3001  0119                     	;# 
  3002  0119                     	;# 
  3003  011A                     	;# 
  3004  011A                     	;# 
  3005  011A                     	;# 
  3006  011B                     	;# 
  3007  011B                     	;# 
  3008  011B                     	;# 
  3009  011B                     	;# 
  3010  011B                     	;# 
  3011  011C                     	;# 
  3012  011C                     	;# 
  3013  011C                     	;# 
  3014  011D                     	;# 
  3015  011D                     	;# 
  3016  011D                     	;# 
  3017  011E                     	;# 
  3018  011E                     	;# 
  3019  011E                     	;# 
  3020  011F                     	;# 
  3021  011F                     	;# 
  3022  011F                     	;# 
  3023  011F                     	;# 
  3024  011F                     	;# 
  3025  018C                     	;# 
  3026  018D                     	;# 
  3027  018E                     	;# 
  3028  018F                     	;# 
  3029  0190                     	;# 
  3030  0191                     	;# 
  3031  0192                     	;# 
  3032  0196                     	;# 
  3033  0197                     	;# 
  3034  0198                     	;# 
  3035  0199                     	;# 
  3036  019A                     	;# 
  3037  019B                     	;# 
  3038  019C                     	;# 
  3039  020C                     	;# 
  3040  020D                     	;# 
  3041  020E                     	;# 
  3042  020E                     	;# 
  3043  020F                     	;# 
  3044  020F                     	;# 
  3045  0210                     	;# 
  3046  0210                     	;# 
  3047  0211                     	;# 
  3048  0211                     	;# 
  3049  0212                     	;# 
  3050  0213                     	;# 
  3051  0214                     	;# 
  3052  0214                     	;# 
  3053  0215                     	;# 
  3054  0215                     	;# 
  3055  0216                     	;# 
  3056  0216                     	;# 
  3057  0217                     	;# 
  3058  0217                     	;# 
  3059  0218                     	;# 
  3060  0219                     	;# 
  3061  021A                     	;# 
  3062  021A                     	;# 
  3063  021B                     	;# 
  3064  021B                     	;# 
  3065  021C                     	;# 
  3066  021C                     	;# 
  3067  021D                     	;# 
  3068  021D                     	;# 
  3069  021E                     	;# 
  3070  021F                     	;# 
  3071  028C                     	;# 
  3072  028C                     	;# 
  3073  028D                     	;# 
  3074  028D                     	;# 
  3075  028E                     	;# 
  3076  028F                     	;# 
  3077  0290                     	;# 
  3078  0291                     	;# 
  3079  0292                     	;# 
  3080  0292                     	;# 
  3081  0293                     	;# 
  3082  0293                     	;# 
  3083  0294                     	;# 
  3084  0295                     	;# 
  3085  0296                     	;# 
  3086  0297                     	;# 
  3087  0298                     	;# 
  3088  0298                     	;# 
  3089  0299                     	;# 
  3090  0299                     	;# 
  3091  029A                     	;# 
  3092  029B                     	;# 
  3093  029C                     	;# 
  3094  029D                     	;# 
  3095  029F                     	;# 
  3096  030C                     	;# 
  3097  030C                     	;# 
  3098  030D                     	;# 
  3099  030E                     	;# 
  3100  030F                     	;# 
  3101  0310                     	;# 
  3102  0310                     	;# 
  3103  0311                     	;# 
  3104  0312                     	;# 
  3105  0313                     	;# 
  3106  0314                     	;# 
  3107  0314                     	;# 
  3108  0315                     	;# 
  3109  0316                     	;# 
  3110  0317                     	;# 
  3111  0318                     	;# 
  3112  0318                     	;# 
  3113  0319                     	;# 
  3114  031A                     	;# 
  3115  031B                     	;# 
  3116  038C                     	;# 
  3117  038C                     	;# 
  3118  038D                     	;# 
  3119  038E                     	;# 
  3120  0390                     	;# 
  3121  0390                     	;# 
  3122  0391                     	;# 
  3123  0392                     	;# 
  3124  048C                     	;# 
  3125  048C                     	;# 
  3126  048D                     	;# 
  3127  048E                     	;# 
  3128  048F                     	;# 
  3129  048F                     	;# 
  3130  0490                     	;# 
  3131  0491                     	;# 
  3132  0492                     	;# 
  3133  0492                     	;# 
  3134  0493                     	;# 
  3135  0494                     	;# 
  3136  0495                     	;# 
  3137  0495                     	;# 
  3138  0496                     	;# 
  3139  0497                     	;# 
  3140  0498                     	;# 
  3141  0499                     	;# 
  3142  049A                     	;# 
  3143  049B                     	;# 
  3144  049C                     	;# 
  3145  049D                     	;# 
  3146  058C                     	;# 
  3147  058C                     	;# 
  3148  058D                     	;# 
  3149  058E                     	;# 
  3150  058F                     	;# 
  3151  058F                     	;# 
  3152  0590                     	;# 
  3153  0591                     	;# 
  3154  0592                     	;# 
  3155  0593                     	;# 
  3156  059C                     	;# 
  3157  059C                     	;# 
  3158  059D                     	;# 
  3159  059D                     	;# 
  3160  059E                     	;# 
  3161  059F                     	;# 
  3162  060C                     	;# 
  3163  060C                     	;# 
  3164  060D                     	;# 
  3165  060D                     	;# 
  3166  060E                     	;# 
  3167  060F                     	;# 
  3168  0610                     	;# 
  3169  0611                     	;# 
  3170  0612                     	;# 
  3171  0613                     	;# 
  3172  0614                     	;# 
  3173  0616                     	;# 
  3174  0616                     	;# 
  3175  0617                     	;# 
  3176  0617                     	;# 
  3177  0618                     	;# 
  3178  0619                     	;# 
  3179  061A                     	;# 
  3180  061B                     	;# 
  3181  061C                     	;# 
  3182  061D                     	;# 
  3183  061E                     	;# 
  3184  070C                     	;# 
  3185  070D                     	;# 
  3186  070E                     	;# 
  3187  070F                     	;# 
  3188  0710                     	;# 
  3189  0711                     	;# 
  3190  0712                     	;# 
  3191  0713                     	;# 
  3192  0714                     	;# 
  3193  0716                     	;# 
  3194  0717                     	;# 
  3195  0718                     	;# 
  3196  0719                     	;# 
  3197  071A                     	;# 
  3198  071B                     	;# 
  3199  071C                     	;# 
  3200  071D                     	;# 
  3201  071E                     	;# 
  3202  0796                     	;# 
  3203  0797                     	;# 
  3204  0798                     	;# 
  3205  0799                     	;# 
  3206  079A                     	;# 
  3207  079B                     	;# 
  3208  079C                     	;# 
  3209  079D                     	;# 
  3210  080C                     	;# 
  3211  080D                     	;# 
  3212  080E                     	;# 
  3213  080F                     	;# 
  3214  0810                     	;# 
  3215  0811                     	;# 
  3216  0812                     	;# 
  3217  0813                     	;# 
  3218  0814                     	;# 
  3219  081A                     	;# 
  3220  081A                     	;# 
  3221  081B                     	;# 
  3222  081C                     	;# 
  3223  081C                     	;# 
  3224  081D                     	;# 
  3225  081E                     	;# 
  3226  081F                     	;# 
  3227  088C                     	;# 
  3228  088D                     	;# 
  3229  088E                     	;# 
  3230  088F                     	;# 
  3231  0890                     	;# 
  3232  0891                     	;# 
  3233  0892                     	;# 
  3234  0893                     	;# 
  3235  0895                     	;# 
  3236  0896                     	;# 
  3237  0897                     	;# 
  3238  0898                     	;# 
  3239  0899                     	;# 
  3240  089A                     	;# 
  3241  089B                     	;# 
  3242  090C                     	;# 
  3243  090E                     	;# 
  3244  090F                     	;# 
  3245  091F                     	;# 
  3246  098F                     	;# 
  3247  098F                     	;# 
  3248  0990                     	;# 
  3249  0991                     	;# 
  3250  0992                     	;# 
  3251  0993                     	;# 
  3252  0994                     	;# 
  3253  0995                     	;# 
  3254  0996                     	;# 
  3255  0997                     	;# 
  3256  1E0F                     	;# 
  3257  1E10                     	;# 
  3258  1E11                     	;# 
  3259  1E12                     	;# 
  3260  1E13                     	;# 
  3261  1E14                     	;# 
  3262  1E15                     	;# 
  3263  1E16                     	;# 
  3264  1E17                     	;# 
  3265  1E18                     	;# 
  3266  1E19                     	;# 
  3267  1E1A                     	;# 
  3268  1E1B                     	;# 
  3269  1E1C                     	;# 
  3270  1E1D                     	;# 
  3271  1E1E                     	;# 
  3272  1E1F                     	;# 
  3273  1E20                     	;# 
  3274  1E21                     	;# 
  3275  1E22                     	;# 
  3276  1E23                     	;# 
  3277  1E24                     	;# 
  3278  1E25                     	;# 
  3279  1E26                     	;# 
  3280  1E27                     	;# 
  3281  1E28                     	;# 
  3282  1E29                     	;# 
  3283  1E2A                     	;# 
  3284  1E2B                     	;# 
  3285  1E2C                     	;# 
  3286  1E2D                     	;# 
  3287  1E2E                     	;# 
  3288  1E2F                     	;# 
  3289  1E30                     	;# 
  3290  1E31                     	;# 
  3291  1E32                     	;# 
  3292  1E33                     	;# 
  3293  1E34                     	;# 
  3294  1E35                     	;# 
  3295  1E36                     	;# 
  3296  1E37                     	;# 
  3297  1E8F                     	;# 
  3298  1E90                     	;# 
  3299  1E91                     	;# 
  3300  1E92                     	;# 
  3301  1E93                     	;# 
  3302  1E94                     	;# 
  3303  1E95                     	;# 
  3304  1E96                     	;# 
  3305  1E97                     	;# 
  3306  1E9C                     	;# 
  3307  1E9D                     	;# 
  3308  1E9E                     	;# 
  3309  1EA1                     	;# 
  3310  1EA2                     	;# 
  3311  1EA3                     	;# 
  3312  1EA4                     	;# 
  3313  1EA9                     	;# 
  3314  1EAA                     	;# 
  3315  1EB1                     	;# 
  3316  1EB2                     	;# 
  3317  1EB8                     	;# 
  3318  1EB9                     	;# 
  3319  1EBA                     	;# 
  3320  1EBB                     	;# 
  3321  1EBC                     	;# 
  3322  1EBD                     	;# 
  3323  1EBE                     	;# 
  3324  1EC3                     	;# 
  3325  1EC5                     	;# 
  3326  1EC6                     	;# 
  3327  1EC7                     	;# 
  3328  1EC8                     	;# 
  3329  1EC9                     	;# 
  3330  1ECA                     	;# 
  3331  1ECB                     	;# 
  3332  1ECB                     	;# 
  3333  1ECB                     	;# 
  3334  1ECC                     	;# 
  3335  1ECC                     	;# 
  3336  1ECC                     	;# 
  3337  1F10                     	;# 
  3338  1F11                     	;# 
  3339  1F12                     	;# 
  3340  1F14                     	;# 
  3341  1F15                     	;# 
  3342  1F1C                     	;# 
  3343  1F1D                     	;# 
  3344  1F1E                     	;# 
  3345  1F1F                     	;# 
  3346  1F20                     	;# 
  3347  1F21                     	;# 
  3348  1F22                     	;# 
  3349  1F23                     	;# 
  3350  1F24                     	;# 
  3351  1F25                     	;# 
  3352  1F26                     	;# 
  3353  1F27                     	;# 
  3354  1F38                     	;# 
  3355  1F39                     	;# 
  3356  1F3A                     	;# 
  3357  1F3B                     	;# 
  3358  1F3C                     	;# 
  3359  1F3D                     	;# 
  3360  1F3E                     	;# 
  3361  1F3F                     	;# 
  3362  1F43                     	;# 
  3363  1F44                     	;# 
  3364  1F45                     	;# 
  3365  1F46                     	;# 
  3366  1F47                     	;# 
  3367  1F48                     	;# 
  3368  1F49                     	;# 
  3369  1F4A                     	;# 
  3370  1F4E                     	;# 
  3371  1F4F                     	;# 
  3372  1F50                     	;# 
  3373  1F51                     	;# 
  3374  1F52                     	;# 
  3375  1F53                     	;# 
  3376  1F54                     	;# 
  3377  1F55                     	;# 
  3378  1FE4                     	;# 
  3379  1FE5                     	;# 
  3380  1FE6                     	;# 
  3381  1FE7                     	;# 
  3382  1FE8                     	;# 
  3383  1FE8                     	;# 
  3384  1FE9                     	;# 
  3385  1FEA                     	;# 
  3386  1FEB                     	;# 
  3387  1FED                     	;# 
  3388  1FEE                     	;# 
  3389  1FEF                     	;# 
  3390  0000                     	;# 
  3391  0001                     	;# 
  3392  0002                     	;# 
  3393  0003                     	;# 
  3394  0004                     	;# 
  3395  0005                     	;# 
  3396  0006                     	;# 
  3397  0007                     	;# 
  3398  0008                     	;# 
  3399  0009                     	;# 
  3400  000A                     	;# 
  3401  000B                     	;# 
  3402  000C                     	;# 
  3403  000D                     	;# 
  3404  000E                     	;# 
  3405  0012                     	;# 
  3406  0013                     	;# 
  3407  0014                     	;# 
  3408  0018                     	;# 
  3409  0019                     	;# 
  3410  001A                     	;# 
  3411  008C                     	;# 
  3412  008C                     	;# 
  3413  008D                     	;# 
  3414  008E                     	;# 
  3415  008E                     	;# 
  3416  008F                     	;# 
  3417  0090                     	;# 
  3418  0090                     	;# 
  3419  0091                     	;# 
  3420  0092                     	;# 
  3421  0092                     	;# 
  3422  0093                     	;# 
  3423  0094                     	;# 
  3424  0094                     	;# 
  3425  0095                     	;# 
  3426  0096                     	;# 
  3427  0096                     	;# 
  3428  0097                     	;# 
  3429  0098                     	;# 
  3430  0099                     	;# 
  3431  009A                     	;# 
  3432  009B                     	;# 
  3433  009B                     	;# 
  3434  009C                     	;# 
  3435  009D                     	;# 
  3436  009D                     	;# 
  3437  009E                     	;# 
  3438  009F                     	;# 
  3439  010C                     	;# 
  3440  010C                     	;# 
  3441  010D                     	;# 
  3442  010E                     	;# 
  3443  010F                     	;# 
  3444  010F                     	;# 
  3445  0110                     	;# 
  3446  0111                     	;# 
  3447  0112                     	;# 
  3448  0113                     	;# 
  3449  0114                     	;# 
  3450  0115                     	;# 
  3451  0116                     	;# 
  3452  0117                     	;# 
  3453  0118                     	;# 
  3454  0119                     	;# 
  3455  0119                     	;# 
  3456  0119                     	;# 
  3457  011A                     	;# 
  3458  011A                     	;# 
  3459  011A                     	;# 
  3460  011B                     	;# 
  3461  011B                     	;# 
  3462  011B                     	;# 
  3463  011B                     	;# 
  3464  011B                     	;# 
  3465  011C                     	;# 
  3466  011C                     	;# 
  3467  011C                     	;# 
  3468  011D                     	;# 
  3469  011D                     	;# 
  3470  011D                     	;# 
  3471  011E                     	;# 
  3472  011E                     	;# 
  3473  011E                     	;# 
  3474  011F                     	;# 
  3475  011F                     	;# 
  3476  011F                     	;# 
  3477  011F                     	;# 
  3478  011F                     	;# 
  3479  018C                     	;# 
  3480  018D                     	;# 
  3481  018E                     	;# 
  3482  018F                     	;# 
  3483  0190                     	;# 
  3484  0191                     	;# 
  3485  0192                     	;# 
  3486  0196                     	;# 
  3487  0197                     	;# 
  3488  0198                     	;# 
  3489  0199                     	;# 
  3490  019A                     	;# 
  3491  019B                     	;# 
  3492  019C                     	;# 
  3493  020C                     	;# 
  3494  020D                     	;# 
  3495  020E                     	;# 
  3496  020E                     	;# 
  3497  020F                     	;# 
  3498  020F                     	;# 
  3499  0210                     	;# 
  3500  0210                     	;# 
  3501  0211                     	;# 
  3502  0211                     	;# 
  3503  0212                     	;# 
  3504  0213                     	;# 
  3505  0214                     	;# 
  3506  0214                     	;# 
  3507  0215                     	;# 
  3508  0215                     	;# 
  3509  0216                     	;# 
  3510  0216                     	;# 
  3511  0217                     	;# 
  3512  0217                     	;# 
  3513  0218                     	;# 
  3514  0219                     	;# 
  3515  021A                     	;# 
  3516  021A                     	;# 
  3517  021B                     	;# 
  3518  021B                     	;# 
  3519  021C                     	;# 
  3520  021C                     	;# 
  3521  021D                     	;# 
  3522  021D                     	;# 
  3523  021E                     	;# 
  3524  021F                     	;# 
  3525  028C                     	;# 
  3526  028C                     	;# 
  3527  028D                     	;# 
  3528  028D                     	;# 
  3529  028E                     	;# 
  3530  028F                     	;# 
  3531  0290                     	;# 
  3532  0291                     	;# 
  3533  0292                     	;# 
  3534  0292                     	;# 
  3535  0293                     	;# 
  3536  0293                     	;# 
  3537  0294                     	;# 
  3538  0295                     	;# 
  3539  0296                     	;# 
  3540  0297                     	;# 
  3541  0298                     	;# 
  3542  0298                     	;# 
  3543  0299                     	;# 
  3544  0299                     	;# 
  3545  029A                     	;# 
  3546  029B                     	;# 
  3547  029C                     	;# 
  3548  029D                     	;# 
  3549  029F                     	;# 
  3550  030C                     	;# 
  3551  030C                     	;# 
  3552  030D                     	;# 
  3553  030E                     	;# 
  3554  030F                     	;# 
  3555  0310                     	;# 
  3556  0310                     	;# 
  3557  0311                     	;# 
  3558  0312                     	;# 
  3559  0313                     	;# 
  3560  0314                     	;# 
  3561  0314                     	;# 
  3562  0315                     	;# 
  3563  0316                     	;# 
  3564  0317                     	;# 
  3565  0318                     	;# 
  3566  0318                     	;# 
  3567  0319                     	;# 
  3568  031A                     	;# 
  3569  031B                     	;# 
  3570  038C                     	;# 
  3571  038C                     	;# 
  3572  038D                     	;# 
  3573  038E                     	;# 
  3574  0390                     	;# 
  3575  0390                     	;# 
  3576  0391                     	;# 
  3577  0392                     	;# 
  3578  048C                     	;# 
  3579  048C                     	;# 
  3580  048D                     	;# 
  3581  048E                     	;# 
  3582  048F                     	;# 
  3583  048F                     	;# 
  3584  0490                     	;# 
  3585  0491                     	;# 
  3586  0492                     	;# 
  3587  0492                     	;# 
  3588  0493                     	;# 
  3589  0494                     	;# 
  3590  0495                     	;# 
  3591  0495                     	;# 
  3592  0496                     	;# 
  3593  0497                     	;# 
  3594  0498                     	;# 
  3595  0499                     	;# 
  3596  049A                     	;# 
  3597  049B                     	;# 
  3598  049C                     	;# 
  3599  049D                     	;# 
  3600  058C                     	;# 
  3601  058C                     	;# 
  3602  058D                     	;# 
  3603  058E                     	;# 
  3604  058F                     	;# 
  3605  058F                     	;# 
  3606  0590                     	;# 
  3607  0591                     	;# 
  3608  0592                     	;# 
  3609  0593                     	;# 
  3610  059C                     	;# 
  3611  059C                     	;# 
  3612  059D                     	;# 
  3613  059D                     	;# 
  3614  059E                     	;# 
  3615  059F                     	;# 
  3616  060C                     	;# 
  3617  060C                     	;# 
  3618  060D                     	;# 
  3619  060D                     	;# 
  3620  060E                     	;# 
  3621  060F                     	;# 
  3622  0610                     	;# 
  3623  0611                     	;# 
  3624  0612                     	;# 
  3625  0613                     	;# 
  3626  0614                     	;# 
  3627  0616                     	;# 
  3628  0616                     	;# 
  3629  0617                     	;# 
  3630  0617                     	;# 
  3631  0618                     	;# 
  3632  0619                     	;# 
  3633  061A                     	;# 
  3634  061B                     	;# 
  3635  061C                     	;# 
  3636  061D                     	;# 
  3637  061E                     	;# 
  3638  070C                     	;# 
  3639  070D                     	;# 
  3640  070E                     	;# 
  3641  070F                     	;# 
  3642  0710                     	;# 
  3643  0711                     	;# 
  3644  0712                     	;# 
  3645  0713                     	;# 
  3646  0714                     	;# 
  3647  0716                     	;# 
  3648  0717                     	;# 
  3649  0718                     	;# 
  3650  0719                     	;# 
  3651  071A                     	;# 
  3652  071B                     	;# 
  3653  071C                     	;# 
  3654  071D                     	;# 
  3655  071E                     	;# 
  3656  0796                     	;# 
  3657  0797                     	;# 
  3658  0798                     	;# 
  3659  0799                     	;# 
  3660  079A                     	;# 
  3661  079B                     	;# 
  3662  079C                     	;# 
  3663  079D                     	;# 
  3664  080C                     	;# 
  3665  080D                     	;# 
  3666  080E                     	;# 
  3667  080F                     	;# 
  3668  0810                     	;# 
  3669  0811                     	;# 
  3670  0812                     	;# 
  3671  0813                     	;# 
  3672  0814                     	;# 
  3673  081A                     	;# 
  3674  081A                     	;# 
  3675  081B                     	;# 
  3676  081C                     	;# 
  3677  081C                     	;# 
  3678  081D                     	;# 
  3679  081E                     	;# 
  3680  081F                     	;# 
  3681  088C                     	;# 
  3682  088D                     	;# 
  3683  088E                     	;# 
  3684  088F                     	;# 
  3685  0890                     	;# 
  3686  0891                     	;# 
  3687  0892                     	;# 
  3688  0893                     	;# 
  3689  0895                     	;# 
  3690  0896                     	;# 
  3691  0897                     	;# 
  3692  0898                     	;# 
  3693  0899                     	;# 
  3694  089A                     	;# 
  3695  089B                     	;# 
  3696  090C                     	;# 
  3697  090E                     	;# 
  3698  090F                     	;# 
  3699  091F                     	;# 
  3700  098F                     	;# 
  3701  098F                     	;# 
  3702  0990                     	;# 
  3703  0991                     	;# 
  3704  0992                     	;# 
  3705  0993                     	;# 
  3706  0994                     	;# 
  3707  0995                     	;# 
  3708  0996                     	;# 
  3709  0997                     	;# 
  3710  1E0F                     	;# 
  3711  1E10                     	;# 
  3712  1E11                     	;# 
  3713  1E12                     	;# 
  3714  1E13                     	;# 
  3715  1E14                     	;# 
  3716  1E15                     	;# 
  3717  1E16                     	;# 
  3718  1E17                     	;# 
  3719  1E18                     	;# 
  3720  1E19                     	;# 
  3721  1E1A                     	;# 
  3722  1E1B                     	;# 
  3723  1E1C                     	;# 
  3724  1E1D                     	;# 
  3725  1E1E                     	;# 
  3726  1E1F                     	;# 
  3727  1E20                     	;# 
  3728  1E21                     	;# 
  3729  1E22                     	;# 
  3730  1E23                     	;# 
  3731  1E24                     	;# 
  3732  1E25                     	;# 
  3733  1E26                     	;# 
  3734  1E27                     	;# 
  3735  1E28                     	;# 
  3736  1E29                     	;# 
  3737  1E2A                     	;# 
  3738  1E2B                     	;# 
  3739  1E2C                     	;# 
  3740  1E2D                     	;# 
  3741  1E2E                     	;# 
  3742  1E2F                     	;# 
  3743  1E30                     	;# 
  3744  1E31                     	;# 
  3745  1E32                     	;# 
  3746  1E33                     	;# 
  3747  1E34                     	;# 
  3748  1E35                     	;# 
  3749  1E36                     	;# 
  3750  1E37                     	;# 
  3751  1E8F                     	;# 
  3752  1E90                     	;# 
  3753  1E91                     	;# 
  3754  1E92                     	;# 
  3755  1E93                     	;# 
  3756  1E94                     	;# 
  3757  1E95                     	;# 
  3758  1E96                     	;# 
  3759  1E97                     	;# 
  3760  1E9C                     	;# 
  3761  1E9D                     	;# 
  3762  1E9E                     	;# 
  3763  1EA1                     	;# 
  3764  1EA2                     	;# 
  3765  1EA3                     	;# 
  3766  1EA4                     	;# 
  3767  1EA9                     	;# 
  3768  1EAA                     	;# 
  3769  1EB1                     	;# 
  3770  1EB2                     	;# 
  3771  1EB8                     	;# 
  3772  1EB9                     	;# 
  3773  1EBA                     	;# 
  3774  1EBB                     	;# 
  3775  1EBC                     	;# 
  3776  1EBD                     	;# 
  3777  1EBE                     	;# 
  3778  1EC3                     	;# 
  3779  1EC5                     	;# 
  3780  1EC6                     	;# 
  3781  1EC7                     	;# 
  3782  1EC8                     	;# 
  3783  1EC9                     	;# 
  3784  1ECA                     	;# 
  3785  1ECB                     	;# 
  3786  1ECB                     	;# 
  3787  1ECB                     	;# 
  3788  1ECC                     	;# 
  3789  1ECC                     	;# 
  3790  1ECC                     	;# 
  3791  1F10                     	;# 
  3792  1F11                     	;# 
  3793  1F12                     	;# 
  3794  1F14                     	;# 
  3795  1F15                     	;# 
  3796  1F1C                     	;# 
  3797  1F1D                     	;# 
  3798  1F1E                     	;# 
  3799  1F1F                     	;# 
  3800  1F20                     	;# 
  3801  1F21                     	;# 
  3802  1F22                     	;# 
  3803  1F23                     	;# 
  3804  1F24                     	;# 
  3805  1F25                     	;# 
  3806  1F26                     	;# 
  3807  1F27                     	;# 
  3808  1F38                     	;# 
  3809  1F39                     	;# 
  3810  1F3A                     	;# 
  3811  1F3B                     	;# 
  3812  1F3C                     	;# 
  3813  1F3D                     	;# 
  3814  1F3E                     	;# 
  3815  1F3F                     	;# 
  3816  1F43                     	;# 
  3817  1F44                     	;# 
  3818  1F45                     	;# 
  3819  1F46                     	;# 
  3820  1F47                     	;# 
  3821  1F48                     	;# 
  3822  1F49                     	;# 
  3823  1F4A                     	;# 
  3824  1F4E                     	;# 
  3825  1F4F                     	;# 
  3826  1F50                     	;# 
  3827  1F51                     	;# 
  3828  1F52                     	;# 
  3829  1F53                     	;# 
  3830  1F54                     	;# 
  3831  1F55                     	;# 
  3832  1FE4                     	;# 
  3833  1FE5                     	;# 
  3834  1FE6                     	;# 
  3835  1FE7                     	;# 
  3836  1FE8                     	;# 
  3837  1FE8                     	;# 
  3838  1FE9                     	;# 
  3839  1FEA                     	;# 
  3840  1FEB                     	;# 
  3841  1FED                     	;# 
  3842  1FEE                     	;# 
  3843  1FEF                     	;# 
  3844  0000                     	;# 
  3845  0001                     	;# 
  3846  0002                     	;# 
  3847  0003                     	;# 
  3848  0004                     	;# 
  3849  0005                     	;# 
  3850  0006                     	;# 
  3851  0007                     	;# 
  3852  0008                     	;# 
  3853  0009                     	;# 
  3854  000A                     	;# 
  3855  000B                     	;# 
  3856  000C                     	;# 
  3857  000D                     	;# 
  3858  000E                     	;# 
  3859  0012                     	;# 
  3860  0013                     	;# 
  3861  0014                     	;# 
  3862  0018                     	;# 
  3863  0019                     	;# 
  3864  001A                     	;# 
  3865  008C                     	;# 
  3866  008C                     	;# 
  3867  008D                     	;# 
  3868  008E                     	;# 
  3869  008E                     	;# 
  3870  008F                     	;# 
  3871  0090                     	;# 
  3872  0090                     	;# 
  3873  0091                     	;# 
  3874  0092                     	;# 
  3875  0092                     	;# 
  3876  0093                     	;# 
  3877  0094                     	;# 
  3878  0094                     	;# 
  3879  0095                     	;# 
  3880  0096                     	;# 
  3881  0096                     	;# 
  3882  0097                     	;# 
  3883  0098                     	;# 
  3884  0099                     	;# 
  3885  009A                     	;# 
  3886  009B                     	;# 
  3887  009B                     	;# 
  3888  009C                     	;# 
  3889  009D                     	;# 
  3890  009D                     	;# 
  3891  009E                     	;# 
  3892  009F                     	;# 
  3893  010C                     	;# 
  3894  010C                     	;# 
  3895  010D                     	;# 
  3896  010E                     	;# 
  3897  010F                     	;# 
  3898  010F                     	;# 
  3899  0110                     	;# 
  3900  0111                     	;# 
  3901  0112                     	;# 
  3902  0113                     	;# 
  3903  0114                     	;# 
  3904  0115                     	;# 
  3905  0116                     	;# 
  3906  0117                     	;# 
  3907  0118                     	;# 
  3908  0119                     	;# 
  3909  0119                     	;# 
  3910  0119                     	;# 
  3911  011A                     	;# 
  3912  011A                     	;# 
  3913  011A                     	;# 
  3914  011B                     	;# 
  3915  011B                     	;# 
  3916  011B                     	;# 
  3917  011B                     	;# 
  3918  011B                     	;# 
  3919  011C                     	;# 
  3920  011C                     	;# 
  3921  011C                     	;# 
  3922  011D                     	;# 
  3923  011D                     	;# 
  3924  011D                     	;# 
  3925  011E                     	;# 
  3926  011E                     	;# 
  3927  011E                     	;# 
  3928  011F                     	;# 
  3929  011F                     	;# 
  3930  011F                     	;# 
  3931  011F                     	;# 
  3932  011F                     	;# 
  3933  018C                     	;# 
  3934  018D                     	;# 
  3935  018E                     	;# 
  3936  018F                     	;# 
  3937  0190                     	;# 
  3938  0191                     	;# 
  3939  0192                     	;# 
  3940  0196                     	;# 
  3941  0197                     	;# 
  3942  0198                     	;# 
  3943  0199                     	;# 
  3944  019A                     	;# 
  3945  019B                     	;# 
  3946  019C                     	;# 
  3947  020C                     	;# 
  3948  020D                     	;# 
  3949  020E                     	;# 
  3950  020E                     	;# 
  3951  020F                     	;# 
  3952  020F                     	;# 
  3953  0210                     	;# 
  3954  0210                     	;# 
  3955  0211                     	;# 
  3956  0211                     	;# 
  3957  0212                     	;# 
  3958  0213                     	;# 
  3959  0214                     	;# 
  3960  0214                     	;# 
  3961  0215                     	;# 
  3962  0215                     	;# 
  3963  0216                     	;# 
  3964  0216                     	;# 
  3965  0217                     	;# 
  3966  0217                     	;# 
  3967  0218                     	;# 
  3968  0219                     	;# 
  3969  021A                     	;# 
  3970  021A                     	;# 
  3971  021B                     	;# 
  3972  021B                     	;# 
  3973  021C                     	;# 
  3974  021C                     	;# 
  3975  021D                     	;# 
  3976  021D                     	;# 
  3977  021E                     	;# 
  3978  021F                     	;# 
  3979  028C                     	;# 
  3980  028C                     	;# 
  3981  028D                     	;# 
  3982  028D                     	;# 
  3983  028E                     	;# 
  3984  028F                     	;# 
  3985  0290                     	;# 
  3986  0291                     	;# 
  3987  0292                     	;# 
  3988  0292                     	;# 
  3989  0293                     	;# 
  3990  0293                     	;# 
  3991  0294                     	;# 
  3992  0295                     	;# 
  3993  0296                     	;# 
  3994  0297                     	;# 
  3995  0298                     	;# 
  3996  0298                     	;# 
  3997  0299                     	;# 
  3998  0299                     	;# 
  3999  029A                     	;# 
  4000  029B                     	;# 
  4001  029C                     	;# 
  4002  029D                     	;# 
  4003  029F                     	;# 
  4004  030C                     	;# 
  4005  030C                     	;# 
  4006  030D                     	;# 
  4007  030E                     	;# 
  4008  030F                     	;# 
  4009  0310                     	;# 
  4010  0310                     	;# 
  4011  0311                     	;# 
  4012  0312                     	;# 
  4013  0313                     	;# 
  4014  0314                     	;# 
  4015  0314                     	;# 
  4016  0315                     	;# 
  4017  0316                     	;# 
  4018  0317                     	;# 
  4019  0318                     	;# 
  4020  0318                     	;# 
  4021  0319                     	;# 
  4022  031A                     	;# 
  4023  031B                     	;# 
  4024  038C                     	;# 
  4025  038C                     	;# 
  4026  038D                     	;# 
  4027  038E                     	;# 
  4028  0390                     	;# 
  4029  0390                     	;# 
  4030  0391                     	;# 
  4031  0392                     	;# 
  4032  048C                     	;# 
  4033  048C                     	;# 
  4034  048D                     	;# 
  4035  048E                     	;# 
  4036  048F                     	;# 
  4037  048F                     	;# 
  4038  0490                     	;# 
  4039  0491                     	;# 
  4040  0492                     	;# 
  4041  0492                     	;# 
  4042  0493                     	;# 
  4043  0494                     	;# 
  4044  0495                     	;# 
  4045  0495                     	;# 
  4046  0496                     	;# 
  4047  0497                     	;# 
  4048  0498                     	;# 
  4049  0499                     	;# 
  4050  049A                     	;# 
  4051  049B                     	;# 
  4052  049C                     	;# 
  4053  049D                     	;# 
  4054  058C                     	;# 
  4055  058C                     	;# 
  4056  058D                     	;# 
  4057  058E                     	;# 
  4058  058F                     	;# 
  4059  058F                     	;# 
  4060  0590                     	;# 
  4061  0591                     	;# 
  4062  0592                     	;# 
  4063  0593                     	;# 
  4064  059C                     	;# 
  4065  059C                     	;# 
  4066  059D                     	;# 
  4067  059D                     	;# 
  4068  059E                     	;# 
  4069  059F                     	;# 
  4070  060C                     	;# 
  4071  060C                     	;# 
  4072  060D                     	;# 
  4073  060D                     	;# 
  4074  060E                     	;# 
  4075  060F                     	;# 
  4076  0610                     	;# 
  4077  0611                     	;# 
  4078  0612                     	;# 
  4079  0613                     	;# 
  4080  0614                     	;# 
  4081  0616                     	;# 
  4082  0616                     	;# 
  4083  0617                     	;# 
  4084  0617                     	;# 
  4085  0618                     	;# 
  4086  0619                     	;# 
  4087  061A                     	;# 
  4088  061B                     	;# 
  4089  061C                     	;# 
  4090  061D                     	;# 
  4091  061E                     	;# 
  4092  070C                     	;# 
  4093  070D                     	;# 
  4094  070E                     	;# 
  4095  070F                     	;# 
  4096  0710                     	;# 
  4097  0711                     	;# 
  4098  0712                     	;# 
  4099  0713                     	;# 
  4100  0714                     	;# 
  4101  0716                     	;# 
  4102  0717                     	;# 
  4103  0718                     	;# 
  4104  0719                     	;# 
  4105  071A                     	;# 
  4106  071B                     	;# 
  4107  071C                     	;# 
  4108  071D                     	;# 
  4109  071E                     	;# 
  4110  0796                     	;# 
  4111  0797                     	;# 
  4112  0798                     	;# 
  4113  0799                     	;# 
  4114  079A                     	;# 
  4115  079B                     	;# 
  4116  079C                     	;# 
  4117  079D                     	;# 
  4118  080C                     	;# 
  4119  080D                     	;# 
  4120  080E                     	;# 
  4121  080F                     	;# 
  4122  0810                     	;# 
  4123  0811                     	;# 
  4124  0812                     	;# 
  4125  0813                     	;# 
  4126  0814                     	;# 
  4127  081A                     	;# 
  4128  081A                     	;# 
  4129  081B                     	;# 
  4130  081C                     	;# 
  4131  081C                     	;# 
  4132  081D                     	;# 
  4133  081E                     	;# 
  4134  081F                     	;# 
  4135  088C                     	;# 
  4136  088D                     	;# 
  4137  088E                     	;# 
  4138  088F                     	;# 
  4139  0890                     	;# 
  4140  0891                     	;# 
  4141  0892                     	;# 
  4142  0893                     	;# 
  4143  0895                     	;# 
  4144  0896                     	;# 
  4145  0897                     	;# 
  4146  0898                     	;# 
  4147  0899                     	;# 
  4148  089A                     	;# 
  4149  089B                     	;# 
  4150  090C                     	;# 
  4151  090E                     	;# 
  4152  090F                     	;# 
  4153  091F                     	;# 
  4154  098F                     	;# 
  4155  098F                     	;# 
  4156  0990                     	;# 
  4157  0991                     	;# 
  4158  0992                     	;# 
  4159  0993                     	;# 
  4160  0994                     	;# 
  4161  0995                     	;# 
  4162  0996                     	;# 
  4163  0997                     	;# 
  4164  1E0F                     	;# 
  4165  1E10                     	;# 
  4166  1E11                     	;# 
  4167  1E12                     	;# 
  4168  1E13                     	;# 
  4169  1E14                     	;# 
  4170  1E15                     	;# 
  4171  1E16                     	;# 
  4172  1E17                     	;# 
  4173  1E18                     	;# 
  4174  1E19                     	;# 
  4175  1E1A                     	;# 
  4176  1E1B                     	;# 
  4177  1E1C                     	;# 
  4178  1E1D                     	;# 
  4179  1E1E                     	;# 
  4180  1E1F                     	;# 
  4181  1E20                     	;# 
  4182  1E21                     	;# 
  4183  1E22                     	;# 
  4184  1E23                     	;# 
  4185  1E24                     	;# 
  4186  1E25                     	;# 
  4187  1E26                     	;# 
  4188  1E27                     	;# 
  4189  1E28                     	;# 
  4190  1E29                     	;# 
  4191  1E2A                     	;# 
  4192  1E2B                     	;# 
  4193  1E2C                     	;# 
  4194  1E2D                     	;# 
  4195  1E2E                     	;# 
  4196  1E2F                     	;# 
  4197  1E30                     	;# 
  4198  1E31                     	;# 
  4199  1E32                     	;# 
  4200  1E33                     	;# 
  4201  1E34                     	;# 
  4202  1E35                     	;# 
  4203  1E36                     	;# 
  4204  1E37                     	;# 
  4205  1E8F                     	;# 
  4206  1E90                     	;# 
  4207  1E91                     	;# 
  4208  1E92                     	;# 
  4209  1E93                     	;# 
  4210  1E94                     	;# 
  4211  1E95                     	;# 
  4212  1E96                     	;# 
  4213  1E97                     	;# 
  4214  1E9C                     	;# 
  4215  1E9D                     	;# 
  4216  1E9E                     	;# 
  4217  1EA1                     	;# 
  4218  1EA2                     	;# 
  4219  1EA3                     	;# 
  4220  1EA4                     	;# 
  4221  1EA9                     	;# 
  4222  1EAA                     	;# 
  4223  1EB1                     	;# 
  4224  1EB2                     	;# 
  4225  1EB8                     	;# 
  4226  1EB9                     	;# 
  4227  1EBA                     	;# 
  4228  1EBB                     	;# 
  4229  1EBC                     	;# 
  4230  1EBD                     	;# 
  4231  1EBE                     	;# 
  4232  1EC3                     	;# 
  4233  1EC5                     	;# 
  4234  1EC6                     	;# 
  4235  1EC7                     	;# 
  4236  1EC8                     	;# 
  4237  1EC9                     	;# 
  4238  1ECA                     	;# 
  4239  1ECB                     	;# 
  4240  1ECB                     	;# 
  4241  1ECB                     	;# 
  4242  1ECC                     	;# 
  4243  1ECC                     	;# 
  4244  1ECC                     	;# 
  4245  1F10                     	;# 
  4246  1F11                     	;# 
  4247  1F12                     	;# 
  4248  1F14                     	;# 
  4249  1F15                     	;# 
  4250  1F1C                     	;# 
  4251  1F1D                     	;# 
  4252  1F1E                     	;# 
  4253  1F1F                     	;# 
  4254  1F20                     	;# 
  4255  1F21                     	;# 
  4256  1F22                     	;# 
  4257  1F23                     	;# 
  4258  1F24                     	;# 
  4259  1F25                     	;# 
  4260  1F26                     	;# 
  4261  1F27                     	;# 
  4262  1F38                     	;# 
  4263  1F39                     	;# 
  4264  1F3A                     	;# 
  4265  1F3B                     	;# 
  4266  1F3C                     	;# 
  4267  1F3D                     	;# 
  4268  1F3E                     	;# 
  4269  1F3F                     	;# 
  4270  1F43                     	;# 
  4271  1F44                     	;# 
  4272  1F45                     	;# 
  4273  1F46                     	;# 
  4274  1F47                     	;# 
  4275  1F48                     	;# 
  4276  1F49                     	;# 
  4277  1F4A                     	;# 
  4278  1F4E                     	;# 
  4279  1F4F                     	;# 
  4280  1F50                     	;# 
  4281  1F51                     	;# 
  4282  1F52                     	;# 
  4283  1F53                     	;# 
  4284  1F54                     	;# 
  4285  1F55                     	;# 
  4286  1FE4                     	;# 
  4287  1FE5                     	;# 
  4288  1FE6                     	;# 
  4289  1FE7                     	;# 
  4290  1FE8                     	;# 
  4291  1FE8                     	;# 
  4292  1FE9                     	;# 
  4293  1FEA                     	;# 
  4294  1FEB                     	;# 
  4295  1FED                     	;# 
  4296  1FEE                     	;# 
  4297  1FEF                     	;# 
  4298  0000                     	;# 
  4299  0001                     	;# 
  4300  0002                     	;# 
  4301  0003                     	;# 
  4302  0004                     	;# 
  4303  0005                     	;# 
  4304  0006                     	;# 
  4305  0007                     	;# 
  4306  0008                     	;# 
  4307  0009                     	;# 
  4308  000A                     	;# 
  4309  000B                     	;# 
  4310  000C                     	;# 
  4311  000D                     	;# 
  4312  000E                     	;# 
  4313  0012                     	;# 
  4314  0013                     	;# 
  4315  0014                     	;# 
  4316  0018                     	;# 
  4317  0019                     	;# 
  4318  001A                     	;# 
  4319  008C                     	;# 
  4320  008C                     	;# 
  4321  008D                     	;# 
  4322  008E                     	;# 
  4323  008E                     	;# 
  4324  008F                     	;# 
  4325  0090                     	;# 
  4326  0090                     	;# 
  4327  0091                     	;# 
  4328  0092                     	;# 
  4329  0092                     	;# 
  4330  0093                     	;# 
  4331  0094                     	;# 
  4332  0094                     	;# 
  4333  0095                     	;# 
  4334  0096                     	;# 
  4335  0096                     	;# 
  4336  0097                     	;# 
  4337  0098                     	;# 
  4338  0099                     	;# 
  4339  009A                     	;# 
  4340  009B                     	;# 
  4341  009B                     	;# 
  4342  009C                     	;# 
  4343  009D                     	;# 
  4344  009D                     	;# 
  4345  009E                     	;# 
  4346  009F                     	;# 
  4347  010C                     	;# 
  4348  010C                     	;# 
  4349  010D                     	;# 
  4350  010E                     	;# 
  4351  010F                     	;# 
  4352  010F                     	;# 
  4353  0110                     	;# 
  4354  0111                     	;# 
  4355  0112                     	;# 
  4356  0113                     	;# 
  4357  0114                     	;# 
  4358  0115                     	;# 
  4359  0116                     	;# 
  4360  0117                     	;# 
  4361  0118                     	;# 
  4362  0119                     	;# 
  4363  0119                     	;# 
  4364  0119                     	;# 
  4365  011A                     	;# 
  4366  011A                     	;# 
  4367  011A                     	;# 
  4368  011B                     	;# 
  4369  011B                     	;# 
  4370  011B                     	;# 
  4371  011B                     	;# 
  4372  011B                     	;# 
  4373  011C                     	;# 
  4374  011C                     	;# 
  4375  011C                     	;# 
  4376  011D                     	;# 
  4377  011D                     	;# 
  4378  011D                     	;# 
  4379  011E                     	;# 
  4380  011E                     	;# 
  4381  011E                     	;# 
  4382  011F                     	;# 
  4383  011F                     	;# 
  4384  011F                     	;# 
  4385  011F                     	;# 
  4386  011F                     	;# 
  4387  018C                     	;# 
  4388  018D                     	;# 
  4389  018E                     	;# 
  4390  018F                     	;# 
  4391  0190                     	;# 
  4392  0191                     	;# 
  4393  0192                     	;# 
  4394  0196                     	;# 
  4395  0197                     	;# 
  4396  0198                     	;# 
  4397  0199                     	;# 
  4398  019A                     	;# 
  4399  019B                     	;# 
  4400  019C                     	;# 
  4401  020C                     	;# 
  4402  020D                     	;# 
  4403  020E                     	;# 
  4404  020E                     	;# 
  4405  020F                     	;# 
  4406  020F                     	;# 
  4407  0210                     	;# 
  4408  0210                     	;# 
  4409  0211                     	;# 
  4410  0211                     	;# 
  4411  0212                     	;# 
  4412  0213                     	;# 
  4413  0214                     	;# 
  4414  0214                     	;# 
  4415  0215                     	;# 
  4416  0215                     	;# 
  4417  0216                     	;# 
  4418  0216                     	;# 
  4419  0217                     	;# 
  4420  0217                     	;# 
  4421  0218                     	;# 
  4422  0219                     	;# 
  4423  021A                     	;# 
  4424  021A                     	;# 
  4425  021B                     	;# 
  4426  021B                     	;# 
  4427  021C                     	;# 
  4428  021C                     	;# 
  4429  021D                     	;# 
  4430  021D                     	;# 
  4431  021E                     	;# 
  4432  021F                     	;# 
  4433  028C                     	;# 
  4434  028C                     	;# 
  4435  028D                     	;# 
  4436  028D                     	;# 
  4437  028E                     	;# 
  4438  028F                     	;# 
  4439  0290                     	;# 
  4440  0291                     	;# 
  4441  0292                     	;# 
  4442  0292                     	;# 
  4443  0293                     	;# 
  4444  0293                     	;# 
  4445  0294                     	;# 
  4446  0295                     	;# 
  4447  0296                     	;# 
  4448  0297                     	;# 
  4449  0298                     	;# 
  4450  0298                     	;# 
  4451  0299                     	;# 
  4452  0299                     	;# 
  4453  029A                     	;# 
  4454  029B                     	;# 
  4455  029C                     	;# 
  4456  029D                     	;# 
  4457  029F                     	;# 
  4458  030C                     	;# 
  4459  030C                     	;# 
  4460  030D                     	;# 
  4461  030E                     	;# 
  4462  030F                     	;# 
  4463  0310                     	;# 
  4464  0310                     	;# 
  4465  0311                     	;# 
  4466  0312                     	;# 
  4467  0313                     	;# 
  4468  0314                     	;# 
  4469  0314                     	;# 
  4470  0315                     	;# 
  4471  0316                     	;# 
  4472  0317                     	;# 
  4473  0318                     	;# 
  4474  0318                     	;# 
  4475  0319                     	;# 
  4476  031A                     	;# 
  4477  031B                     	;# 
  4478  038C                     	;# 
  4479  038C                     	;# 
  4480  038D                     	;# 
  4481  038E                     	;# 
  4482  0390                     	;# 
  4483  0390                     	;# 
  4484  0391                     	;# 
  4485  0392                     	;# 
  4486  048C                     	;# 
  4487  048C                     	;# 
  4488  048D                     	;# 
  4489  048E                     	;# 
  4490  048F                     	;# 
  4491  048F                     	;# 
  4492  0490                     	;# 
  4493  0491                     	;# 
  4494  0492                     	;# 
  4495  0492                     	;# 
  4496  0493                     	;# 
  4497  0494                     	;# 
  4498  0495                     	;# 
  4499  0495                     	;# 
  4500  0496                     	;# 
  4501  0497                     	;# 
  4502  0498                     	;# 
  4503  0499                     	;# 
  4504  049A                     	;# 
  4505  049B                     	;# 
  4506  049C                     	;# 
  4507  049D                     	;# 
  4508  058C                     	;# 
  4509  058C                     	;# 
  4510  058D                     	;# 
  4511  058E                     	;# 
  4512  058F                     	;# 
  4513  058F                     	;# 
  4514  0590                     	;# 
  4515  0591                     	;# 
  4516  0592                     	;# 
  4517  0593                     	;# 
  4518  059C                     	;# 
  4519  059C                     	;# 
  4520  059D                     	;# 
  4521  059D                     	;# 
  4522  059E                     	;# 
  4523  059F                     	;# 
  4524  060C                     	;# 
  4525  060C                     	;# 
  4526  060D                     	;# 
  4527  060D                     	;# 
  4528  060E                     	;# 
  4529  060F                     	;# 
  4530  0610                     	;# 
  4531  0611                     	;# 
  4532  0612                     	;# 
  4533  0613                     	;# 
  4534  0614                     	;# 
  4535  0616                     	;# 
  4536  0616                     	;# 
  4537  0617                     	;# 
  4538  0617                     	;# 
  4539  0618                     	;# 
  4540  0619                     	;# 
  4541  061A                     	;# 
  4542  061B                     	;# 
  4543  061C                     	;# 
  4544  061D                     	;# 
  4545  061E                     	;# 
  4546  070C                     	;# 
  4547  070D                     	;# 
  4548  070E                     	;# 
  4549  070F                     	;# 
  4550  0710                     	;# 
  4551  0711                     	;# 
  4552  0712                     	;# 
  4553  0713                     	;# 
  4554  0714                     	;# 
  4555  0716                     	;# 
  4556  0717                     	;# 
  4557  0718                     	;# 
  4558  0719                     	;# 
  4559  071A                     	;# 
  4560  071B                     	;# 
  4561  071C                     	;# 
  4562  071D                     	;# 
  4563  071E                     	;# 
  4564  0796                     	;# 
  4565  0797                     	;# 
  4566  0798                     	;# 
  4567  0799                     	;# 
  4568  079A                     	;# 
  4569  079B                     	;# 
  4570  079C                     	;# 
  4571  079D                     	;# 
  4572  080C                     	;# 
  4573  080D                     	;# 
  4574  080E                     	;# 
  4575  080F                     	;# 
  4576  0810                     	;# 
  4577  0811                     	;# 
  4578  0812                     	;# 
  4579  0813                     	;# 
  4580  0814                     	;# 
  4581  081A                     	;# 
  4582  081A                     	;# 
  4583  081B                     	;# 
  4584  081C                     	;# 
  4585  081C                     	;# 
  4586  081D                     	;# 
  4587  081E                     	;# 
  4588  081F                     	;# 
  4589  088C                     	;# 
  4590  088D                     	;# 
  4591  088E                     	;# 
  4592  088F                     	;# 
  4593  0890                     	;# 
  4594  0891                     	;# 
  4595  0892                     	;# 
  4596  0893                     	;# 
  4597  0895                     	;# 
  4598  0896                     	;# 
  4599  0897                     	;# 
  4600  0898                     	;# 
  4601  0899                     	;# 
  4602  089A                     	;# 
  4603  089B                     	;# 
  4604  090C                     	;# 
  4605  090E                     	;# 
  4606  090F                     	;# 
  4607  091F                     	;# 
  4608  098F                     	;# 
  4609  098F                     	;# 
  4610  0990                     	;# 
  4611  0991                     	;# 
  4612  0992                     	;# 
  4613  0993                     	;# 
  4614  0994                     	;# 
  4615  0995                     	;# 
  4616  0996                     	;# 
  4617  0997                     	;# 
  4618  1E0F                     	;# 
  4619  1E10                     	;# 
  4620  1E11                     	;# 
  4621  1E12                     	;# 
  4622  1E13                     	;# 
  4623  1E14                     	;# 
  4624  1E15                     	;# 
  4625  1E16                     	;# 
  4626  1E17                     	;# 
  4627  1E18                     	;# 
  4628  1E19                     	;# 
  4629  1E1A                     	;# 
  4630  1E1B                     	;# 
  4631  1E1C                     	;# 
  4632  1E1D                     	;# 
  4633  1E1E                     	;# 
  4634  1E1F                     	;# 
  4635  1E20                     	;# 
  4636  1E21                     	;# 
  4637  1E22                     	;# 
  4638  1E23                     	;# 
  4639  1E24                     	;# 
  4640  1E25                     	;# 
  4641  1E26                     	;# 
  4642  1E27                     	;# 
  4643  1E28                     	;# 
  4644  1E29                     	;# 
  4645  1E2A                     	;# 
  4646  1E2B                     	;# 
  4647  1E2C                     	;# 
  4648  1E2D                     	;# 
  4649  1E2E                     	;# 
  4650  1E2F                     	;# 
  4651  1E30                     	;# 
  4652  1E31                     	;# 
  4653  1E32                     	;# 
  4654  1E33                     	;# 
  4655  1E34                     	;# 
  4656  1E35                     	;# 
  4657  1E36                     	;# 
  4658  1E37                     	;# 
  4659  1E8F                     	;# 
  4660  1E90                     	;# 
  4661  1E91                     	;# 
  4662  1E92                     	;# 
  4663  1E93                     	;# 
  4664  1E94                     	;# 
  4665  1E95                     	;# 
  4666  1E96                     	;# 
  4667  1E97                     	;# 
  4668  1E9C                     	;# 
  4669  1E9D                     	;# 
  4670  1E9E                     	;# 
  4671  1EA1                     	;# 
  4672  1EA2                     	;# 
  4673  1EA3                     	;# 
  4674  1EA4                     	;# 
  4675  1EA9                     	;# 
  4676  1EAA                     	;# 
  4677  1EB1                     	;# 
  4678  1EB2                     	;# 
  4679  1EB8                     	;# 
  4680  1EB9                     	;# 
  4681  1EBA                     	;# 
  4682  1EBB                     	;# 
  4683  1EBC                     	;# 
  4684  1EBD                     	;# 
  4685  1EBE                     	;# 
  4686  1EC3                     	;# 
  4687  1EC5                     	;# 
  4688  1EC6                     	;# 
  4689  1EC7                     	;# 
  4690  1EC8                     	;# 
  4691  1EC9                     	;# 
  4692  1ECA                     	;# 
  4693  1ECB                     	;# 
  4694  1ECB                     	;# 
  4695  1ECB                     	;# 
  4696  1ECC                     	;# 
  4697  1ECC                     	;# 
  4698  1ECC                     	;# 
  4699  1F10                     	;# 
  4700  1F11                     	;# 
  4701  1F12                     	;# 
  4702  1F14                     	;# 
  4703  1F15                     	;# 
  4704  1F1C                     	;# 
  4705  1F1D                     	;# 
  4706  1F1E                     	;# 
  4707  1F1F                     	;# 
  4708  1F20                     	;# 
  4709  1F21                     	;# 
  4710  1F22                     	;# 
  4711  1F23                     	;# 
  4712  1F24                     	;# 
  4713  1F25                     	;# 
  4714  1F26                     	;# 
  4715  1F27                     	;# 
  4716  1F38                     	;# 
  4717  1F39                     	;# 
  4718  1F3A                     	;# 
  4719  1F3B                     	;# 
  4720  1F3C                     	;# 
  4721  1F3D                     	;# 
  4722  1F3E                     	;# 
  4723  1F3F                     	;# 
  4724  1F43                     	;# 
  4725  1F44                     	;# 
  4726  1F45                     	;# 
  4727  1F46                     	;# 
  4728  1F47                     	;# 
  4729  1F48                     	;# 
  4730  1F49                     	;# 
  4731  1F4A                     	;# 
  4732  1F4E                     	;# 
  4733  1F4F                     	;# 
  4734  1F50                     	;# 
  4735  1F51                     	;# 
  4736  1F52                     	;# 
  4737  1F53                     	;# 
  4738  1F54                     	;# 
  4739  1F55                     	;# 
  4740  1FE4                     	;# 
  4741  1FE5                     	;# 
  4742  1FE6                     	;# 
  4743  1FE7                     	;# 
  4744  1FE8                     	;# 
  4745  1FE8                     	;# 
  4746  1FE9                     	;# 
  4747  1FEA                     	;# 
  4748  1FEB                     	;# 
  4749  1FED                     	;# 
  4750  1FEE                     	;# 
  4751  1FEF                     	;# 
  4752  0000                     	;# 
  4753  0001                     	;# 
  4754  0002                     	;# 
  4755  0003                     	;# 
  4756  0004                     	;# 
  4757  0005                     	;# 
  4758  0006                     	;# 
  4759  0007                     	;# 
  4760  0008                     	;# 
  4761  0009                     	;# 
  4762  000A                     	;# 
  4763  000B                     	;# 
  4764  000C                     	;# 
  4765  000D                     	;# 
  4766  000E                     	;# 
  4767  0012                     	;# 
  4768  0013                     	;# 
  4769  0014                     	;# 
  4770  0018                     	;# 
  4771  0019                     	;# 
  4772  001A                     	;# 
  4773  008C                     	;# 
  4774  008C                     	;# 
  4775  008D                     	;# 
  4776  008E                     	;# 
  4777  008E                     	;# 
  4778  008F                     	;# 
  4779  0090                     	;# 
  4780  0090                     	;# 
  4781  0091                     	;# 
  4782  0092                     	;# 
  4783  0092                     	;# 
  4784  0093                     	;# 
  4785  0094                     	;# 
  4786  0094                     	;# 
  4787  0095                     	;# 
  4788  0096                     	;# 
  4789  0096                     	;# 
  4790  0097                     	;# 
  4791  0098                     	;# 
  4792  0099                     	;# 
  4793  009A                     	;# 
  4794  009B                     	;# 
  4795  009B                     	;# 
  4796  009C                     	;# 
  4797  009D                     	;# 
  4798  009D                     	;# 
  4799  009E                     	;# 
  4800  009F                     	;# 
  4801  010C                     	;# 
  4802  010C                     	;# 
  4803  010D                     	;# 
  4804  010E                     	;# 
  4805  010F                     	;# 
  4806  010F                     	;# 
  4807  0110                     	;# 
  4808  0111                     	;# 
  4809  0112                     	;# 
  4810  0113                     	;# 
  4811  0114                     	;# 
  4812  0115                     	;# 
  4813  0116                     	;# 
  4814  0117                     	;# 
  4815  0118                     	;# 
  4816  0119                     	;# 
  4817  0119                     	;# 
  4818  0119                     	;# 
  4819  011A                     	;# 
  4820  011A                     	;# 
  4821  011A                     	;# 
  4822  011B                     	;# 
  4823  011B                     	;# 
  4824  011B                     	;# 
  4825  011B                     	;# 
  4826  011B                     	;# 
  4827  011C                     	;# 
  4828  011C                     	;# 
  4829  011C                     	;# 
  4830  011D                     	;# 
  4831  011D                     	;# 
  4832  011D                     	;# 
  4833  011E                     	;# 
  4834  011E                     	;# 
  4835  011E                     	;# 
  4836  011F                     	;# 
  4837  011F                     	;# 
  4838  011F                     	;# 
  4839  011F                     	;# 
  4840  011F                     	;# 
  4841  018C                     	;# 
  4842  018D                     	;# 
  4843  018E                     	;# 
  4844  018F                     	;# 
  4845  0190                     	;# 
  4846  0191                     	;# 
  4847  0192                     	;# 
  4848  0196                     	;# 
  4849  0197                     	;# 
  4850  0198                     	;# 
  4851  0199                     	;# 
  4852  019A                     	;# 
  4853  019B                     	;# 
  4854  019C                     	;# 
  4855  020C                     	;# 
  4856  020D                     	;# 
  4857  020E                     	;# 
  4858  020E                     	;# 
  4859  020F                     	;# 
  4860  020F                     	;# 
  4861  0210                     	;# 
  4862  0210                     	;# 
  4863  0211                     	;# 
  4864  0211                     	;# 
  4865  0212                     	;# 
  4866  0213                     	;# 
  4867  0214                     	;# 
  4868  0214                     	;# 
  4869  0215                     	;# 
  4870  0215                     	;# 
  4871  0216                     	;# 
  4872  0216                     	;# 
  4873  0217                     	;# 
  4874  0217                     	;# 
  4875  0218                     	;# 
  4876  0219                     	;# 
  4877  021A                     	;# 
  4878  021A                     	;# 
  4879  021B                     	;# 
  4880  021B                     	;# 
  4881  021C                     	;# 
  4882  021C                     	;# 
  4883  021D                     	;# 
  4884  021D                     	;# 
  4885  021E                     	;# 
  4886  021F                     	;# 
  4887  028C                     	;# 
  4888  028C                     	;# 
  4889  028D                     	;# 
  4890  028D                     	;# 
  4891  028E                     	;# 
  4892  028F                     	;# 
  4893  0290                     	;# 
  4894  0291                     	;# 
  4895  0292                     	;# 
  4896  0292                     	;# 
  4897  0293                     	;# 
  4898  0293                     	;# 
  4899  0294                     	;# 
  4900  0295                     	;# 
  4901  0296                     	;# 
  4902  0297                     	;# 
  4903  0298                     	;# 
  4904  0298                     	;# 
  4905  0299                     	;# 
  4906  0299                     	;# 
  4907  029A                     	;# 
  4908  029B                     	;# 
  4909  029C                     	;# 
  4910  029D                     	;# 
  4911  029F                     	;# 
  4912  030C                     	;# 
  4913  030C                     	;# 
  4914  030D                     	;# 
  4915  030E                     	;# 
  4916  030F                     	;# 
  4917  0310                     	;# 
  4918  0310                     	;# 
  4919  0311                     	;# 
  4920  0312                     	;# 
  4921  0313                     	;# 
  4922  0314                     	;# 
  4923  0314                     	;# 
  4924  0315                     	;# 
  4925  0316                     	;# 
  4926  0317                     	;# 
  4927  0318                     	;# 
  4928  0318                     	;# 
  4929  0319                     	;# 
  4930  031A                     	;# 
  4931  031B                     	;# 
  4932  038C                     	;# 
  4933  038C                     	;# 
  4934  038D                     	;# 
  4935  038E                     	;# 
  4936  0390                     	;# 
  4937  0390                     	;# 
  4938  0391                     	;# 
  4939  0392                     	;# 
  4940  048C                     	;# 
  4941  048C                     	;# 
  4942  048D                     	;# 
  4943  048E                     	;# 
  4944  048F                     	;# 
  4945  048F                     	;# 
  4946  0490                     	;# 
  4947  0491                     	;# 
  4948  0492                     	;# 
  4949  0492                     	;# 
  4950  0493                     	;# 
  4951  0494                     	;# 
  4952  0495                     	;# 
  4953  0495                     	;# 
  4954  0496                     	;# 
  4955  0497                     	;# 
  4956  0498                     	;# 
  4957  0499                     	;# 
  4958  049A                     	;# 
  4959  049B                     	;# 
  4960  049C                     	;# 
  4961  049D                     	;# 
  4962  058C                     	;# 
  4963  058C                     	;# 
  4964  058D                     	;# 
  4965  058E                     	;# 
  4966  058F                     	;# 
  4967  058F                     	;# 
  4968  0590                     	;# 
  4969  0591                     	;# 
  4970  0592                     	;# 
  4971  0593                     	;# 
  4972  059C                     	;# 
  4973  059C                     	;# 
  4974  059D                     	;# 
  4975  059D                     	;# 
  4976  059E                     	;# 
  4977  059F                     	;# 
  4978  060C                     	;# 
  4979  060C                     	;# 
  4980  060D                     	;# 
  4981  060D                     	;# 
  4982  060E                     	;# 
  4983  060F                     	;# 
  4984  0610                     	;# 
  4985  0611                     	;# 
  4986  0612                     	;# 
  4987  0613                     	;# 
  4988  0614                     	;# 
  4989  0616                     	;# 
  4990  0616                     	;# 
  4991  0617                     	;# 
  4992  0617                     	;# 
  4993  0618                     	;# 
  4994  0619                     	;# 
  4995  061A                     	;# 
  4996  061B                     	;# 
  4997  061C                     	;# 
  4998  061D                     	;# 
  4999  061E                     	;# 
  5000  070C                     	;# 
  5001  070D                     	;# 
  5002  070E                     	;# 
  5003  070F                     	;# 
  5004  0710                     	;# 
  5005  0711                     	;# 
  5006  0712                     	;# 
  5007  0713                     	;# 
  5008  0714                     	;# 
  5009  0716                     	;# 
  5010  0717                     	;# 
  5011  0718                     	;# 
  5012  0719                     	;# 
  5013  071A                     	;# 
  5014  071B                     	;# 
  5015  071C                     	;# 
  5016  071D                     	;# 
  5017  071E                     	;# 
  5018  0796                     	;# 
  5019  0797                     	;# 
  5020  0798                     	;# 
  5021  0799                     	;# 
  5022  079A                     	;# 
  5023  079B                     	;# 
  5024  079C                     	;# 
  5025  079D                     	;# 
  5026  080C                     	;# 
  5027  080D                     	;# 
  5028  080E                     	;# 
  5029  080F                     	;# 
  5030  0810                     	;# 
  5031  0811                     	;# 
  5032  0812                     	;# 
  5033  0813                     	;# 
  5034  0814                     	;# 
  5035  081A                     	;# 
  5036  081A                     	;# 
  5037  081B                     	;# 
  5038  081C                     	;# 
  5039  081C                     	;# 
  5040  081D                     	;# 
  5041  081E                     	;# 
  5042  081F                     	;# 
  5043  088C                     	;# 
  5044  088D                     	;# 
  5045  088E                     	;# 
  5046  088F                     	;# 
  5047  0890                     	;# 
  5048  0891                     	;# 
  5049  0892                     	;# 
  5050  0893                     	;# 
  5051  0895                     	;# 
  5052  0896                     	;# 
  5053  0897                     	;# 
  5054  0898                     	;# 
  5055  0899                     	;# 
  5056  089A                     	;# 
  5057  089B                     	;# 
  5058  090C                     	;# 
  5059  090E                     	;# 
  5060  090F                     	;# 
  5061  091F                     	;# 
  5062  098F                     	;# 
  5063  098F                     	;# 
  5064  0990                     	;# 
  5065  0991                     	;# 
  5066  0992                     	;# 
  5067  0993                     	;# 
  5068  0994                     	;# 
  5069  0995                     	;# 
  5070  0996                     	;# 
  5071  0997                     	;# 
  5072  1E0F                     	;# 
  5073  1E10                     	;# 
  5074  1E11                     	;# 
  5075  1E12                     	;# 
  5076  1E13                     	;# 
  5077  1E14                     	;# 
  5078  1E15                     	;# 
  5079  1E16                     	;# 
  5080  1E17                     	;# 
  5081  1E18                     	;# 
  5082  1E19                     	;# 
  5083  1E1A                     	;# 
  5084  1E1B                     	;# 
  5085  1E1C                     	;# 
  5086  1E1D                     	;# 
  5087  1E1E                     	;# 
  5088  1E1F                     	;# 
  5089  1E20                     	;# 
  5090  1E21                     	;# 
  5091  1E22                     	;# 
  5092  1E23                     	;# 
  5093  1E24                     	;# 
  5094  1E25                     	;# 
  5095  1E26                     	;# 
  5096  1E27                     	;# 
  5097  1E28                     	;# 
  5098  1E29                     	;# 
  5099  1E2A                     	;# 
  5100  1E2B                     	;# 
  5101  1E2C                     	;# 
  5102  1E2D                     	;# 
  5103  1E2E                     	;# 
  5104  1E2F                     	;# 
  5105  1E30                     	;# 
  5106  1E31                     	;# 
  5107  1E32                     	;# 
  5108  1E33                     	;# 
  5109  1E34                     	;# 
  5110  1E35                     	;# 
  5111  1E36                     	;# 
  5112  1E37                     	;# 
  5113  1E8F                     	;# 
  5114  1E90                     	;# 
  5115  1E91                     	;# 
  5116  1E92                     	;# 
  5117  1E93                     	;# 
  5118  1E94                     	;# 
  5119  1E95                     	;# 
  5120  1E96                     	;# 
  5121  1E97                     	;# 
  5122  1E9C                     	;# 
  5123  1E9D                     	;# 
  5124  1E9E                     	;# 
  5125  1EA1                     	;# 
  5126  1EA2                     	;# 
  5127  1EA3                     	;# 
  5128  1EA4                     	;# 
  5129  1EA9                     	;# 
  5130  1EAA                     	;# 
  5131  1EB1                     	;# 
  5132  1EB2                     	;# 
  5133  1EB8                     	;# 
  5134  1EB9                     	;# 
  5135  1EBA                     	;# 
  5136  1EBB                     	;# 
  5137  1EBC                     	;# 
  5138  1EBD                     	;# 
  5139  1EBE                     	;# 
  5140  1EC3                     	;# 
  5141  1EC5                     	;# 
  5142  1EC6                     	;# 
  5143  1EC7                     	;# 
  5144  1EC8                     	;# 
  5145  1EC9                     	;# 
  5146  1ECA                     	;# 
  5147  1ECB                     	;# 
  5148  1ECB                     	;# 
  5149  1ECB                     	;# 
  5150  1ECC                     	;# 
  5151  1ECC                     	;# 
  5152  1ECC                     	;# 
  5153  1F10                     	;# 
  5154  1F11                     	;# 
  5155  1F12                     	;# 
  5156  1F14                     	;# 
  5157  1F15                     	;# 
  5158  1F1C                     	;# 
  5159  1F1D                     	;# 
  5160  1F1E                     	;# 
  5161  1F1F                     	;# 
  5162  1F20                     	;# 
  5163  1F21                     	;# 
  5164  1F22                     	;# 
  5165  1F23                     	;# 
  5166  1F24                     	;# 
  5167  1F25                     	;# 
  5168  1F26                     	;# 
  5169  1F27                     	;# 
  5170  1F38                     	;# 
  5171  1F39                     	;# 
  5172  1F3A                     	;# 
  5173  1F3B                     	;# 
  5174  1F3C                     	;# 
  5175  1F3D                     	;# 
  5176  1F3E                     	;# 
  5177  1F3F                     	;# 
  5178  1F43                     	;# 
  5179  1F44                     	;# 
  5180  1F45                     	;# 
  5181  1F46                     	;# 
  5182  1F47                     	;# 
  5183  1F48                     	;# 
  5184  1F49                     	;# 
  5185  1F4A                     	;# 
  5186  1F4E                     	;# 
  5187  1F4F                     	;# 
  5188  1F50                     	;# 
  5189  1F51                     	;# 
  5190  1F52                     	;# 
  5191  1F53                     	;# 
  5192  1F54                     	;# 
  5193  1F55                     	;# 
  5194  1FE4                     	;# 
  5195  1FE5                     	;# 
  5196  1FE6                     	;# 
  5197  1FE7                     	;# 
  5198  1FE8                     	;# 
  5199  1FE8                     	;# 
  5200  1FE9                     	;# 
  5201  1FEA                     	;# 
  5202  1FEB                     	;# 
  5203  1FED                     	;# 
  5204  1FEE                     	;# 
  5205  1FEF                     	;# 
  5206  0000                     	;# 
  5207  0001                     	;# 
  5208  0002                     	;# 
  5209  0003                     	;# 
  5210  0004                     	;# 
  5211  0005                     	;# 
  5212  0006                     	;# 
  5213  0007                     	;# 
  5214  0008                     	;# 
  5215  0009                     	;# 
  5216  000A                     	;# 
  5217  000B                     	;# 
  5218  000C                     	;# 
  5219  000D                     	;# 
  5220  000E                     	;# 
  5221  0012                     	;# 
  5222  0013                     	;# 
  5223  0014                     	;# 
  5224  0018                     	;# 
  5225  0019                     	;# 
  5226  001A                     	;# 
  5227  008C                     	;# 
  5228  008C                     	;# 
  5229  008D                     	;# 
  5230  008E                     	;# 
  5231  008E                     	;# 
  5232  008F                     	;# 
  5233  0090                     	;# 
  5234  0090                     	;# 
  5235  0091                     	;# 
  5236  0092                     	;# 
  5237  0092                     	;# 
  5238  0093                     	;# 
  5239  0094                     	;# 
  5240  0094                     	;# 
  5241  0095                     	;# 
  5242  0096                     	;# 
  5243  0096                     	;# 
  5244  0097                     	;# 
  5245  0098                     	;# 
  5246  0099                     	;# 
  5247  009A                     	;# 
  5248  009B                     	;# 
  5249  009B                     	;# 
  5250  009C                     	;# 
  5251  009D                     	;# 
  5252  009D                     	;# 
  5253  009E                     	;# 
  5254  009F                     	;# 
  5255  010C                     	;# 
  5256  010C                     	;# 
  5257  010D                     	;# 
  5258  010E                     	;# 
  5259  010F                     	;# 
  5260  010F                     	;# 
  5261  0110                     	;# 
  5262  0111                     	;# 
  5263  0112                     	;# 
  5264  0113                     	;# 
  5265  0114                     	;# 
  5266  0115                     	;# 
  5267  0116                     	;# 
  5268  0117                     	;# 
  5269  0118                     	;# 
  5270  0119                     	;# 
  5271  0119                     	;# 
  5272  0119                     	;# 
  5273  011A                     	;# 
  5274  011A                     	;# 
  5275  011A                     	;# 
  5276  011B                     	;# 
  5277  011B                     	;# 
  5278  011B                     	;# 
  5279  011B                     	;# 
  5280  011B                     	;# 
  5281  011C                     	;# 
  5282  011C                     	;# 
  5283  011C                     	;# 
  5284  011D                     	;# 
  5285  011D                     	;# 
  5286  011D                     	;# 
  5287  011E                     	;# 
  5288  011E                     	;# 
  5289  011E                     	;# 
  5290  011F                     	;# 
  5291  011F                     	;# 
  5292  011F                     	;# 
  5293  011F                     	;# 
  5294  011F                     	;# 
  5295  018C                     	;# 
  5296  018D                     	;# 
  5297  018E                     	;# 
  5298  018F                     	;# 
  5299  0190                     	;# 
  5300  0191                     	;# 
  5301  0192                     	;# 
  5302  0196                     	;# 
  5303  0197                     	;# 
  5304  0198                     	;# 
  5305  0199                     	;# 
  5306  019A                     	;# 
  5307  019B                     	;# 
  5308  019C                     	;# 
  5309  020C                     	;# 
  5310  020D                     	;# 
  5311  020E                     	;# 
  5312  020E                     	;# 
  5313  020F                     	;# 
  5314  020F                     	;# 
  5315  0210                     	;# 
  5316  0210                     	;# 
  5317  0211                     	;# 
  5318  0211                     	;# 
  5319  0212                     	;# 
  5320  0213                     	;# 
  5321  0214                     	;# 
  5322  0214                     	;# 
  5323  0215                     	;# 
  5324  0215                     	;# 
  5325  0216                     	;# 
  5326  0216                     	;# 
  5327  0217                     	;# 
  5328  0217                     	;# 
  5329  0218                     	;# 
  5330  0219                     	;# 
  5331  021A                     	;# 
  5332  021A                     	;# 
  5333  021B                     	;# 
  5334  021B                     	;# 
  5335  021C                     	;# 
  5336  021C                     	;# 
  5337  021D                     	;# 
  5338  021D                     	;# 
  5339  021E                     	;# 
  5340  021F                     	;# 
  5341  028C                     	;# 
  5342  028C                     	;# 
  5343  028D                     	;# 
  5344  028D                     	;# 
  5345  028E                     	;# 
  5346  028F                     	;# 
  5347  0290                     	;# 
  5348  0291                     	;# 
  5349  0292                     	;# 
  5350  0292                     	;# 
  5351  0293                     	;# 
  5352  0293                     	;# 
  5353  0294                     	;# 
  5354  0295                     	;# 
  5355  0296                     	;# 
  5356  0297                     	;# 
  5357  0298                     	;# 
  5358  0298                     	;# 
  5359  0299                     	;# 
  5360  0299                     	;# 
  5361  029A                     	;# 
  5362  029B                     	;# 
  5363  029C                     	;# 
  5364  029D                     	;# 
  5365  029F                     	;# 
  5366  030C                     	;# 
  5367  030C                     	;# 
  5368  030D                     	;# 
  5369  030E                     	;# 
  5370  030F                     	;# 
  5371  0310                     	;# 
  5372  0310                     	;# 
  5373  0311                     	;# 
  5374  0312                     	;# 
  5375  0313                     	;# 
  5376  0314                     	;# 
  5377  0314                     	;# 
  5378  0315                     	;# 
  5379  0316                     	;# 
  5380  0317                     	;# 
  5381  0318                     	;# 
  5382  0318                     	;# 
  5383  0319                     	;# 
  5384  031A                     	;# 
  5385  031B                     	;# 
  5386  038C                     	;# 
  5387  038C                     	;# 
  5388  038D                     	;# 
  5389  038E                     	;# 
  5390  0390                     	;# 
  5391  0390                     	;# 
  5392  0391                     	;# 
  5393  0392                     	;# 
  5394  048C                     	;# 
  5395  048C                     	;# 
  5396  048D                     	;# 
  5397  048E                     	;# 
  5398  048F                     	;# 
  5399  048F                     	;# 
  5400  0490                     	;# 
  5401  0491                     	;# 
  5402  0492                     	;# 
  5403  0492                     	;# 
  5404  0493                     	;# 
  5405  0494                     	;# 
  5406  0495                     	;# 
  5407  0495                     	;# 
  5408  0496                     	;# 
  5409  0497                     	;# 
  5410  0498                     	;# 
  5411  0499                     	;# 
  5412  049A                     	;# 
  5413  049B                     	;# 
  5414  049C                     	;# 
  5415  049D                     	;# 
  5416  058C                     	;# 
  5417  058C                     	;# 
  5418  058D                     	;# 
  5419  058E                     	;# 
  5420  058F                     	;# 
  5421  058F                     	;# 
  5422  0590                     	;# 
  5423  0591                     	;# 
  5424  0592                     	;# 
  5425  0593                     	;# 
  5426  059C                     	;# 
  5427  059C                     	;# 
  5428  059D                     	;# 
  5429  059D                     	;# 
  5430  059E                     	;# 
  5431  059F                     	;# 
  5432  060C                     	;# 
  5433  060C                     	;# 
  5434  060D                     	;# 
  5435  060D                     	;# 
  5436  060E                     	;# 
  5437  060F                     	;# 
  5438  0610                     	;# 
  5439  0611                     	;# 
  5440  0612                     	;# 
  5441  0613                     	;# 
  5442  0614                     	;# 
  5443  0616                     	;# 
  5444  0616                     	;# 
  5445  0617                     	;# 
  5446  0617                     	;# 
  5447  0618                     	;# 
  5448  0619                     	;# 
  5449  061A                     	;# 
  5450  061B                     	;# 
  5451  061C                     	;# 
  5452  061D                     	;# 
  5453  061E                     	;# 
  5454  070C                     	;# 
  5455  070D                     	;# 
  5456  070E                     	;# 
  5457  070F                     	;# 
  5458  0710                     	;# 
  5459  0711                     	;# 
  5460  0712                     	;# 
  5461  0713                     	;# 
  5462  0714                     	;# 
  5463  0716                     	;# 
  5464  0717                     	;# 
  5465  0718                     	;# 
  5466  0719                     	;# 
  5467  071A                     	;# 
  5468  071B                     	;# 
  5469  071C                     	;# 
  5470  071D                     	;# 
  5471  071E                     	;# 
  5472  0796                     	;# 
  5473  0797                     	;# 
  5474  0798                     	;# 
  5475  0799                     	;# 
  5476  079A                     	;# 
  5477  079B                     	;# 
  5478  079C                     	;# 
  5479  079D                     	;# 
  5480  080C                     	;# 
  5481  080D                     	;# 
  5482  080E                     	;# 
  5483  080F                     	;# 
  5484  0810                     	;# 
  5485  0811                     	;# 
  5486  0812                     	;# 
  5487  0813                     	;# 
  5488  0814                     	;# 
  5489  081A                     	;# 
  5490  081A                     	;# 
  5491  081B                     	;# 
  5492  081C                     	;# 
  5493  081C                     	;# 
  5494  081D                     	;# 
  5495  081E                     	;# 
  5496  081F                     	;# 
  5497  088C                     	;# 
  5498  088D                     	;# 
  5499  088E                     	;# 
  5500  088F                     	;# 
  5501  0890                     	;# 
  5502  0891                     	;# 
  5503  0892                     	;# 
  5504  0893                     	;# 
  5505  0895                     	;# 
  5506  0896                     	;# 
  5507  0897                     	;# 
  5508  0898                     	;# 
  5509  0899                     	;# 
  5510  089A                     	;# 
  5511  089B                     	;# 
  5512  090C                     	;# 
  5513  090E                     	;# 
  5514  090F                     	;# 
  5515  091F                     	;# 
  5516  098F                     	;# 
  5517  098F                     	;# 
  5518  0990                     	;# 
  5519  0991                     	;# 
  5520  0992                     	;# 
  5521  0993                     	;# 
  5522  0994                     	;# 
  5523  0995                     	;# 
  5524  0996                     	;# 
  5525  0997                     	;# 
  5526  1E0F                     	;# 
  5527  1E10                     	;# 
  5528  1E11                     	;# 
  5529  1E12                     	;# 
  5530  1E13                     	;# 
  5531  1E14                     	;# 
  5532  1E15                     	;# 
  5533  1E16                     	;# 
  5534  1E17                     	;# 
  5535  1E18                     	;# 
  5536  1E19                     	;# 
  5537  1E1A                     	;# 
  5538  1E1B                     	;# 
  5539  1E1C                     	;# 
  5540  1E1D                     	;# 
  5541  1E1E                     	;# 
  5542  1E1F                     	;# 
  5543  1E20                     	;# 
  5544  1E21                     	;# 
  5545  1E22                     	;# 
  5546  1E23                     	;# 
  5547  1E24                     	;# 
  5548  1E25                     	;# 
  5549  1E26                     	;# 
  5550  1E27                     	;# 
  5551  1E28                     	;# 
  5552  1E29                     	;# 
  5553  1E2A                     	;# 
  5554  1E2B                     	;# 
  5555  1E2C                     	;# 
  5556  1E2D                     	;# 
  5557  1E2E                     	;# 
  5558  1E2F                     	;# 
  5559  1E30                     	;# 
  5560  1E31                     	;# 
  5561  1E32                     	;# 
  5562  1E33                     	;# 
  5563  1E34                     	;# 
  5564  1E35                     	;# 
  5565  1E36                     	;# 
  5566  1E37                     	;# 
  5567  1E8F                     	;# 
  5568  1E90                     	;# 
  5569  1E91                     	;# 
  5570  1E92                     	;# 
  5571  1E93                     	;# 
  5572  1E94                     	;# 
  5573  1E95                     	;# 
  5574  1E96                     	;# 
  5575  1E97                     	;# 
  5576  1E9C                     	;# 
  5577  1E9D                     	;# 
  5578  1E9E                     	;# 
  5579  1EA1                     	;# 
  5580  1EA2                     	;# 
  5581  1EA3                     	;# 
  5582  1EA4                     	;# 
  5583  1EA9                     	;# 
  5584  1EAA                     	;# 
  5585  1EB1                     	;# 
  5586  1EB2                     	;# 
  5587  1EB8                     	;# 
  5588  1EB9                     	;# 
  5589  1EBA                     	;# 
  5590  1EBB                     	;# 
  5591  1EBC                     	;# 
  5592  1EBD                     	;# 
  5593  1EBE                     	;# 
  5594  1EC3                     	;# 
  5595  1EC5                     	;# 
  5596  1EC6                     	;# 
  5597  1EC7                     	;# 
  5598  1EC8                     	;# 
  5599  1EC9                     	;# 
  5600  1ECA                     	;# 
  5601  1ECB                     	;# 
  5602  1ECB                     	;# 
  5603  1ECB                     	;# 
  5604  1ECC                     	;# 
  5605  1ECC                     	;# 
  5606  1ECC                     	;# 
  5607  1F10                     	;# 
  5608  1F11                     	;# 
  5609  1F12                     	;# 
  5610  1F14                     	;# 
  5611  1F15                     	;# 
  5612  1F1C                     	;# 
  5613  1F1D                     	;# 
  5614  1F1E                     	;# 
  5615  1F1F                     	;# 
  5616  1F20                     	;# 
  5617  1F21                     	;# 
  5618  1F22                     	;# 
  5619  1F23                     	;# 
  5620  1F24                     	;# 
  5621  1F25                     	;# 
  5622  1F26                     	;# 
  5623  1F27                     	;# 
  5624  1F38                     	;# 
  5625  1F39                     	;# 
  5626  1F3A                     	;# 
  5627  1F3B                     	;# 
  5628  1F3C                     	;# 
  5629  1F3D                     	;# 
  5630  1F3E                     	;# 
  5631  1F3F                     	;# 
  5632  1F43                     	;# 
  5633  1F44                     	;# 
  5634  1F45                     	;# 
  5635  1F46                     	;# 
  5636  1F47                     	;# 
  5637  1F48                     	;# 
  5638  1F49                     	;# 
  5639  1F4A                     	;# 
  5640  1F4E                     	;# 
  5641  1F4F                     	;# 
  5642  1F50                     	;# 
  5643  1F51                     	;# 
  5644  1F52                     	;# 
  5645  1F53                     	;# 
  5646  1F54                     	;# 
  5647  1F55                     	;# 
  5648  1FE4                     	;# 
  5649  1FE5                     	;# 
  5650  1FE6                     	;# 
  5651  1FE7                     	;# 
  5652  1FE8                     	;# 
  5653  1FE8                     	;# 
  5654  1FE9                     	;# 
  5655  1FEA                     	;# 
  5656  1FEB                     	;# 
  5657  1FED                     	;# 
  5658  1FEE                     	;# 
  5659  1FEF                     	;# 
  5660  0000                     	;# 
  5661  0001                     	;# 
  5662  0002                     	;# 
  5663  0003                     	;# 
  5664  0004                     	;# 
  5665  0005                     	;# 
  5666  0006                     	;# 
  5667  0007                     	;# 
  5668  0008                     	;# 
  5669  0009                     	;# 
  5670  000A                     	;# 
  5671  000B                     	;# 
  5672  000C                     	;# 
  5673  000D                     	;# 
  5674  000E                     	;# 
  5675  0012                     	;# 
  5676  0013                     	;# 
  5677  0014                     	;# 
  5678  0018                     	;# 
  5679  0019                     	;# 
  5680  001A                     	;# 
  5681  008C                     	;# 
  5682  008C                     	;# 
  5683  008D                     	;# 
  5684  008E                     	;# 
  5685  008E                     	;# 
  5686  008F                     	;# 
  5687  0090                     	;# 
  5688  0090                     	;# 
  5689  0091                     	;# 
  5690  0092                     	;# 
  5691  0092                     	;# 
  5692  0093                     	;# 
  5693  0094                     	;# 
  5694  0094                     	;# 
  5695  0095                     	;# 
  5696  0096                     	;# 
  5697  0096                     	;# 
  5698  0097                     	;# 
  5699  0098                     	;# 
  5700  0099                     	;# 
  5701  009A                     	;# 
  5702  009B                     	;# 
  5703  009B                     	;# 
  5704  009C                     	;# 
  5705  009D                     	;# 
  5706  009D                     	;# 
  5707  009E                     	;# 
  5708  009F                     	;# 
  5709  010C                     	;# 
  5710  010C                     	;# 
  5711  010D                     	;# 
  5712  010E                     	;# 
  5713  010F                     	;# 
  5714  010F                     	;# 
  5715  0110                     	;# 
  5716  0111                     	;# 
  5717  0112                     	;# 
  5718  0113                     	;# 
  5719  0114                     	;# 
  5720  0115                     	;# 
  5721  0116                     	;# 
  5722  0117                     	;# 
  5723  0118                     	;# 
  5724  0119                     	;# 
  5725  0119                     	;# 
  5726  0119                     	;# 
  5727  011A                     	;# 
  5728  011A                     	;# 
  5729  011A                     	;# 
  5730  011B                     	;# 
  5731  011B                     	;# 
  5732  011B                     	;# 
  5733  011B                     	;# 
  5734  011B                     	;# 
  5735  011C                     	;# 
  5736  011C                     	;# 
  5737  011C                     	;# 
  5738  011D                     	;# 
  5739  011D                     	;# 
  5740  011D                     	;# 
  5741  011E                     	;# 
  5742  011E                     	;# 
  5743  011E                     	;# 
  5744  011F                     	;# 
  5745  011F                     	;# 
  5746  011F                     	;# 
  5747  011F                     	;# 
  5748  011F                     	;# 
  5749  018C                     	;# 
  5750  018D                     	;# 
  5751  018E                     	;# 
  5752  018F                     	;# 
  5753  0190                     	;# 
  5754  0191                     	;# 
  5755  0192                     	;# 
  5756  0196                     	;# 
  5757  0197                     	;# 
  5758  0198                     	;# 
  5759  0199                     	;# 
  5760  019A                     	;# 
  5761  019B                     	;# 
  5762  019C                     	;# 
  5763  020C                     	;# 
  5764  020D                     	;# 
  5765  020E                     	;# 
  5766  020E                     	;# 
  5767  020F                     	;# 
  5768  020F                     	;# 
  5769  0210                     	;# 
  5770  0210                     	;# 
  5771  0211                     	;# 
  5772  0211                     	;# 
  5773  0212                     	;# 
  5774  0213                     	;# 
  5775  0214                     	;# 
  5776  0214                     	;# 
  5777  0215                     	;# 
  5778  0215                     	;# 
  5779  0216                     	;# 
  5780  0216                     	;# 
  5781  0217                     	;# 
  5782  0217                     	;# 
  5783  0218                     	;# 
  5784  0219                     	;# 
  5785  021A                     	;# 
  5786  021A                     	;# 
  5787  021B                     	;# 
  5788  021B                     	;# 
  5789  021C                     	;# 
  5790  021C                     	;# 
  5791  021D                     	;# 
  5792  021D                     	;# 
  5793  021E                     	;# 
  5794  021F                     	;# 
  5795  028C                     	;# 
  5796  028C                     	;# 
  5797  028D                     	;# 
  5798  028D                     	;# 
  5799  028E                     	;# 
  5800  028F                     	;# 
  5801  0290                     	;# 
  5802  0291                     	;# 
  5803  0292                     	;# 
  5804  0292                     	;# 
  5805  0293                     	;# 
  5806  0293                     	;# 
  5807  0294                     	;# 
  5808  0295                     	;# 
  5809  0296                     	;# 
  5810  0297                     	;# 
  5811  0298                     	;# 
  5812  0298                     	;# 
  5813  0299                     	;# 
  5814  0299                     	;# 
  5815  029A                     	;# 
  5816  029B                     	;# 
  5817  029C                     	;# 
  5818  029D                     	;# 
  5819  029F                     	;# 
  5820  030C                     	;# 
  5821  030C                     	;# 
  5822  030D                     	;# 
  5823  030E                     	;# 
  5824  030F                     	;# 
  5825  0310                     	;# 
  5826  0310                     	;# 
  5827  0311                     	;# 
  5828  0312                     	;# 
  5829  0313                     	;# 
  5830  0314                     	;# 
  5831  0314                     	;# 
  5832  0315                     	;# 
  5833  0316                     	;# 
  5834  0317                     	;# 
  5835  0318                     	;# 
  5836  0318                     	;# 
  5837  0319                     	;# 
  5838  031A                     	;# 
  5839  031B                     	;# 
  5840  038C                     	;# 
  5841  038C                     	;# 
  5842  038D                     	;# 
  5843  038E                     	;# 
  5844  0390                     	;# 
  5845  0390                     	;# 
  5846  0391                     	;# 
  5847  0392                     	;# 
  5848  048C                     	;# 
  5849  048C                     	;# 
  5850  048D                     	;# 
  5851  048E                     	;# 
  5852  048F                     	;# 
  5853  048F                     	;# 
  5854  0490                     	;# 
  5855  0491                     	;# 
  5856  0492                     	;# 
  5857  0492                     	;# 
  5858  0493                     	;# 
  5859  0494                     	;# 
  5860  0495                     	;# 
  5861  0495                     	;# 
  5862  0496                     	;# 
  5863  0497                     	;# 
  5864  0498                     	;# 
  5865  0499                     	;# 
  5866  049A                     	;# 
  5867  049B                     	;# 
  5868  049C                     	;# 
  5869  049D                     	;# 
  5870  058C                     	;# 
  5871  058C                     	;# 
  5872  058D                     	;# 
  5873  058E                     	;# 
  5874  058F                     	;# 
  5875  058F                     	;# 
  5876  0590                     	;# 
  5877  0591                     	;# 
  5878  0592                     	;# 
  5879  0593                     	;# 
  5880  059C                     	;# 
  5881  059C                     	;# 
  5882  059D                     	;# 
  5883  059D                     	;# 
  5884  059E                     	;# 
  5885  059F                     	;# 
  5886  060C                     	;# 
  5887  060C                     	;# 
  5888  060D                     	;# 
  5889  060D                     	;# 
  5890  060E                     	;# 
  5891  060F                     	;# 
  5892  0610                     	;# 
  5893  0611                     	;# 
  5894  0612                     	;# 
  5895  0613                     	;# 
  5896  0614                     	;# 
  5897  0616                     	;# 
  5898  0616                     	;# 
  5899  0617                     	;# 
  5900  0617                     	;# 
  5901  0618                     	;# 
  5902  0619                     	;# 
  5903  061A                     	;# 
  5904  061B                     	;# 
  5905  061C                     	;# 
  5906  061D                     	;# 
  5907  061E                     	;# 
  5908  070C                     	;# 
  5909  070D                     	;# 
  5910  070E                     	;# 
  5911  070F                     	;# 
  5912  0710                     	;# 
  5913  0711                     	;# 
  5914  0712                     	;# 
  5915  0713                     	;# 
  5916  0714                     	;# 
  5917  0716                     	;# 
  5918  0717                     	;# 
  5919  0718                     	;# 
  5920  0719                     	;# 
  5921  071A                     	;# 
  5922  071B                     	;# 
  5923  071C                     	;# 
  5924  071D                     	;# 
  5925  071E                     	;# 
  5926  0796                     	;# 
  5927  0797                     	;# 
  5928  0798                     	;# 
  5929  0799                     	;# 
  5930  079A                     	;# 
  5931  079B                     	;# 
  5932  079C                     	;# 
  5933  079D                     	;# 
  5934  080C                     	;# 
  5935  080D                     	;# 
  5936  080E                     	;# 
  5937  080F                     	;# 
  5938  0810                     	;# 
  5939  0811                     	;# 
  5940  0812                     	;# 
  5941  0813                     	;# 
  5942  0814                     	;# 
  5943  081A                     	;# 
  5944  081A                     	;# 
  5945  081B                     	;# 
  5946  081C                     	;# 
  5947  081C                     	;# 
  5948  081D                     	;# 
  5949  081E                     	;# 
  5950  081F                     	;# 
  5951  088C                     	;# 
  5952  088D                     	;# 
  5953  088E                     	;# 
  5954  088F                     	;# 
  5955  0890                     	;# 
  5956  0891                     	;# 
  5957  0892                     	;# 
  5958  0893                     	;# 
  5959  0895                     	;# 
  5960  0896                     	;# 
  5961  0897                     	;# 
  5962  0898                     	;# 
  5963  0899                     	;# 
  5964  089A                     	;# 
  5965  089B                     	;# 
  5966  090C                     	;# 
  5967  090E                     	;# 
  5968  090F                     	;# 
  5969  091F                     	;# 
  5970  098F                     	;# 
  5971  098F                     	;# 
  5972  0990                     	;# 
  5973  0991                     	;# 
  5974  0992                     	;# 
  5975  0993                     	;# 
  5976  0994                     	;# 
  5977  0995                     	;# 
  5978  0996                     	;# 
  5979  0997                     	;# 
  5980  1E0F                     	;# 
  5981  1E10                     	;# 
  5982  1E11                     	;# 
  5983  1E12                     	;# 
  5984  1E13                     	;# 
  5985  1E14                     	;# 
  5986  1E15                     	;# 
  5987  1E16                     	;# 
  5988  1E17                     	;# 
  5989  1E18                     	;# 
  5990  1E19                     	;# 
  5991  1E1A                     	;# 
  5992  1E1B                     	;# 
  5993  1E1C                     	;# 
  5994  1E1D                     	;# 
  5995  1E1E                     	;# 
  5996  1E1F                     	;# 
  5997  1E20                     	;# 
  5998  1E21                     	;# 
  5999  1E22                     	;# 
  6000  1E23                     	;# 
  6001  1E24                     	;# 
  6002  1E25                     	;# 
  6003  1E26                     	;# 
  6004  1E27                     	;# 
  6005  1E28                     	;# 
  6006  1E29                     	;# 
  6007  1E2A                     	;# 
  6008  1E2B                     	;# 
  6009  1E2C                     	;# 
  6010  1E2D                     	;# 
  6011  1E2E                     	;# 
  6012  1E2F                     	;# 
  6013  1E30                     	;# 
  6014  1E31                     	;# 
  6015  1E32                     	;# 
  6016  1E33                     	;# 
  6017  1E34                     	;# 
  6018  1E35                     	;# 
  6019  1E36                     	;# 
  6020  1E37                     	;# 
  6021  1E8F                     	;# 
  6022  1E90                     	;# 
  6023  1E91                     	;# 
  6024  1E92                     	;# 
  6025  1E93                     	;# 
  6026  1E94                     	;# 
  6027  1E95                     	;# 
  6028  1E96                     	;# 
  6029  1E97                     	;# 
  6030  1E9C                     	;# 
  6031  1E9D                     	;# 
  6032  1E9E                     	;# 
  6033  1EA1                     	;# 
  6034  1EA2                     	;# 
  6035  1EA3                     	;# 
  6036  1EA4                     	;# 
  6037  1EA9                     	;# 
  6038  1EAA                     	;# 
  6039  1EB1                     	;# 
  6040  1EB2                     	;# 
  6041  1EB8                     	;# 
  6042  1EB9                     	;# 
  6043  1EBA                     	;# 
  6044  1EBB                     	;# 
  6045  1EBC                     	;# 
  6046  1EBD                     	;# 
  6047  1EBE                     	;# 
  6048  1EC3                     	;# 
  6049  1EC5                     	;# 
  6050  1EC6                     	;# 
  6051  1EC7                     	;# 
  6052  1EC8                     	;# 
  6053  1EC9                     	;# 
  6054  1ECA                     	;# 
  6055  1ECB                     	;# 
  6056  1ECB                     	;# 
  6057  1ECB                     	;# 
  6058  1ECC                     	;# 
  6059  1ECC                     	;# 
  6060  1ECC                     	;# 
  6061  1F10                     	;# 
  6062  1F11                     	;# 
  6063  1F12                     	;# 
  6064  1F14                     	;# 
  6065  1F15                     	;# 
  6066  1F1C                     	;# 
  6067  1F1D                     	;# 
  6068  1F1E                     	;# 
  6069  1F1F                     	;# 
  6070  1F20                     	;# 
  6071  1F21                     	;# 
  6072  1F22                     	;# 
  6073  1F23                     	;# 
  6074  1F24                     	;# 
  6075  1F25                     	;# 
  6076  1F26                     	;# 
  6077  1F27                     	;# 
  6078  1F38                     	;# 
  6079  1F39                     	;# 
  6080  1F3A                     	;# 
  6081  1F3B                     	;# 
  6082  1F3C                     	;# 
  6083  1F3D                     	;# 
  6084  1F3E                     	;# 
  6085  1F3F                     	;# 
  6086  1F43                     	;# 
  6087  1F44                     	;# 
  6088  1F45                     	;# 
  6089  1F46                     	;# 
  6090  1F47                     	;# 
  6091  1F48                     	;# 
  6092  1F49                     	;# 
  6093  1F4A                     	;# 
  6094  1F4E                     	;# 
  6095  1F4F                     	;# 
  6096  1F50                     	;# 
  6097  1F51                     	;# 
  6098  1F52                     	;# 
  6099  1F53                     	;# 
  6100  1F54                     	;# 
  6101  1F55                     	;# 
  6102  1FE4                     	;# 
  6103  1FE5                     	;# 
  6104  1FE6                     	;# 
  6105  1FE7                     	;# 
  6106  1FE8                     	;# 
  6107  1FE8                     	;# 
  6108  1FE9                     	;# 
  6109  1FEA                     	;# 
  6110  1FEB                     	;# 
  6111  1FED                     	;# 
  6112  1FEE                     	;# 
  6113  1FEF                     	;# 
  6114  0000                     	;# 
  6115  0001                     	;# 
  6116  0002                     	;# 
  6117  0003                     	;# 
  6118  0004                     	;# 
  6119  0005                     	;# 
  6120  0006                     	;# 
  6121  0007                     	;# 
  6122  0008                     	;# 
  6123  0009                     	;# 
  6124  000A                     	;# 
  6125  000B                     	;# 
  6126  000C                     	;# 
  6127  000D                     	;# 
  6128  000E                     	;# 
  6129  0012                     	;# 
  6130  0013                     	;# 
  6131  0014                     	;# 
  6132  0018                     	;# 
  6133  0019                     	;# 
  6134  001A                     	;# 
  6135  008C                     	;# 
  6136  008C                     	;# 
  6137  008D                     	;# 
  6138  008E                     	;# 
  6139  008E                     	;# 
  6140  008F                     	;# 
  6141  0090                     	;# 
  6142  0090                     	;# 
  6143  0091                     	;# 
  6144  0092                     	;# 
  6145  0092                     	;# 
  6146  0093                     	;# 
  6147  0094                     	;# 
  6148  0094                     	;# 
  6149  0095                     	;# 
  6150  0096                     	;# 
  6151  0096                     	;# 
  6152  0097                     	;# 
  6153  0098                     	;# 
  6154  0099                     	;# 
  6155  009A                     	;# 
  6156  009B                     	;# 
  6157  009B                     	;# 
  6158  009C                     	;# 
  6159  009D                     	;# 
  6160  009D                     	;# 
  6161  009E                     	;# 
  6162  009F                     	;# 
  6163  010C                     	;# 
  6164  010C                     	;# 
  6165  010D                     	;# 
  6166  010E                     	;# 
  6167  010F                     	;# 
  6168  010F                     	;# 
  6169  0110                     	;# 
  6170  0111                     	;# 
  6171  0112                     	;# 
  6172  0113                     	;# 
  6173  0114                     	;# 
  6174  0115                     	;# 
  6175  0116                     	;# 
  6176  0117                     	;# 
  6177  0118                     	;# 
  6178  0119                     	;# 
  6179  0119                     	;# 
  6180  0119                     	;# 
  6181  011A                     	;# 
  6182  011A                     	;# 
  6183  011A                     	;# 
  6184  011B                     	;# 
  6185  011B                     	;# 
  6186  011B                     	;# 
  6187  011B                     	;# 
  6188  011B                     	;# 
  6189  011C                     	;# 
  6190  011C                     	;# 
  6191  011C                     	;# 
  6192  011D                     	;# 
  6193  011D                     	;# 
  6194  011D                     	;# 
  6195  011E                     	;# 
  6196  011E                     	;# 
  6197  011E                     	;# 
  6198  011F                     	;# 
  6199  011F                     	;# 
  6200  011F                     	;# 
  6201  011F                     	;# 
  6202  011F                     	;# 
  6203  018C                     	;# 
  6204  018D                     	;# 
  6205  018E                     	;# 
  6206  018F                     	;# 
  6207  0190                     	;# 
  6208  0191                     	;# 
  6209  0192                     	;# 
  6210  0196                     	;# 
  6211  0197                     	;# 
  6212  0198                     	;# 
  6213  0199                     	;# 
  6214  019A                     	;# 
  6215  019B                     	;# 
  6216  019C                     	;# 
  6217  020C                     	;# 
  6218  020D                     	;# 
  6219  020E                     	;# 
  6220  020E                     	;# 
  6221  020F                     	;# 
  6222  020F                     	;# 
  6223  0210                     	;# 
  6224  0210                     	;# 
  6225  0211                     	;# 
  6226  0211                     	;# 
  6227  0212                     	;# 
  6228  0213                     	;# 
  6229  0214                     	;# 
  6230  0214                     	;# 
  6231  0215                     	;# 
  6232  0215                     	;# 
  6233  0216                     	;# 
  6234  0216                     	;# 
  6235  0217                     	;# 
  6236  0217                     	;# 
  6237  0218                     	;# 
  6238  0219                     	;# 
  6239  021A                     	;# 
  6240  021A                     	;# 
  6241  021B                     	;# 
  6242  021B                     	;# 
  6243  021C                     	;# 
  6244  021C                     	;# 
  6245  021D                     	;# 
  6246  021D                     	;# 
  6247  021E                     	;# 
  6248  021F                     	;# 
  6249  028C                     	;# 
  6250  028C                     	;# 
  6251  028D                     	;# 
  6252  028D                     	;# 
  6253  028E                     	;# 
  6254  028F                     	;# 
  6255  0290                     	;# 
  6256  0291                     	;# 
  6257  0292                     	;# 
  6258  0292                     	;# 
  6259  0293                     	;# 
  6260  0293                     	;# 
  6261  0294                     	;# 
  6262  0295                     	;# 
  6263  0296                     	;# 
  6264  0297                     	;# 
  6265  0298                     	;# 
  6266  0298                     	;# 
  6267  0299                     	;# 
  6268  0299                     	;# 
  6269  029A                     	;# 
  6270  029B                     	;# 
  6271  029C                     	;# 
  6272  029D                     	;# 
  6273  029F                     	;# 
  6274  030C                     	;# 
  6275  030C                     	;# 
  6276  030D                     	;# 
  6277  030E                     	;# 
  6278  030F                     	;# 
  6279  0310                     	;# 
  6280  0310                     	;# 
  6281  0311                     	;# 
  6282  0312                     	;# 
  6283  0313                     	;# 
  6284  0314                     	;# 
  6285  0314                     	;# 
  6286  0315                     	;# 
  6287  0316                     	;# 
  6288  0317                     	;# 
  6289  0318                     	;# 
  6290  0318                     	;# 
  6291  0319                     	;# 
  6292  031A                     	;# 
  6293  031B                     	;# 
  6294  038C                     	;# 
  6295  038C                     	;# 
  6296  038D                     	;# 
  6297  038E                     	;# 
  6298  0390                     	;# 
  6299  0390                     	;# 
  6300  0391                     	;# 
  6301  0392                     	;# 
  6302  048C                     	;# 
  6303  048C                     	;# 
  6304  048D                     	;# 
  6305  048E                     	;# 
  6306  048F                     	;# 
  6307  048F                     	;# 
  6308  0490                     	;# 
  6309  0491                     	;# 
  6310  0492                     	;# 
  6311  0492                     	;# 
  6312  0493                     	;# 
  6313  0494                     	;# 
  6314  0495                     	;# 
  6315  0495                     	;# 
  6316  0496                     	;# 
  6317  0497                     	;# 
  6318  0498                     	;# 
  6319  0499                     	;# 
  6320  049A                     	;# 
  6321  049B                     	;# 
  6322  049C                     	;# 
  6323  049D                     	;# 
  6324  058C                     	;# 
  6325  058C                     	;# 
  6326  058D                     	;# 
  6327  058E                     	;# 
  6328  058F                     	;# 
  6329  058F                     	;# 
  6330  0590                     	;# 
  6331  0591                     	;# 
  6332  0592                     	;# 
  6333  0593                     	;# 
  6334  059C                     	;# 
  6335  059C                     	;# 
  6336  059D                     	;# 
  6337  059D                     	;# 
  6338  059E                     	;# 
  6339  059F                     	;# 
  6340  060C                     	;# 
  6341  060C                     	;# 
  6342  060D                     	;# 
  6343  060D                     	;# 
  6344  060E                     	;# 
  6345  060F                     	;# 
  6346  0610                     	;# 
  6347  0611                     	;# 
  6348  0612                     	;# 
  6349  0613                     	;# 
  6350  0614                     	;# 
  6351  0616                     	;# 
  6352  0616                     	;# 
  6353  0617                     	;# 
  6354  0617                     	;# 
  6355  0618                     	;# 
  6356  0619                     	;# 
  6357  061A                     	;# 
  6358  061B                     	;# 
  6359  061C                     	;# 
  6360  061D                     	;# 
  6361  061E                     	;# 
  6362  070C                     	;# 
  6363  070D                     	;# 
  6364  070E                     	;# 
  6365  070F                     	;# 
  6366  0710                     	;# 
  6367  0711                     	;# 
  6368  0712                     	;# 
  6369  0713                     	;# 
  6370  0714                     	;# 
  6371  0716                     	;# 
  6372  0717                     	;# 
  6373  0718                     	;# 
  6374  0719                     	;# 
  6375  071A                     	;# 
  6376  071B                     	;# 
  6377  071C                     	;# 
  6378  071D                     	;# 
  6379  071E                     	;# 
  6380  0796                     	;# 
  6381  0797                     	;# 
  6382  0798                     	;# 
  6383  0799                     	;# 
  6384  079A                     	;# 
  6385  079B                     	;# 
  6386  079C                     	;# 
  6387  079D                     	;# 
  6388  080C                     	;# 
  6389  080D                     	;# 
  6390  080E                     	;# 
  6391  080F                     	;# 
  6392  0810                     	;# 
  6393  0811                     	;# 
  6394  0812                     	;# 
  6395  0813                     	;# 
  6396  0814                     	;# 
  6397  081A                     	;# 
  6398  081A                     	;# 
  6399  081B                     	;# 
  6400  081C                     	;# 
  6401  081C                     	;# 
  6402  081D                     	;# 
  6403  081E                     	;# 
  6404  081F                     	;# 
  6405  088C                     	;# 
  6406  088D                     	;# 
  6407  088E                     	;# 
  6408  088F                     	;# 
  6409  0890                     	;# 
  6410  0891                     	;# 
  6411  0892                     	;# 
  6412  0893                     	;# 
  6413  0895                     	;# 
  6414  0896                     	;# 
  6415  0897                     	;# 
  6416  0898                     	;# 
  6417  0899                     	;# 
  6418  089A                     	;# 
  6419  089B                     	;# 
  6420  090C                     	;# 
  6421  090E                     	;# 
  6422  090F                     	;# 
  6423  091F                     	;# 
  6424  098F                     	;# 
  6425  098F                     	;# 
  6426  0990                     	;# 
  6427  0991                     	;# 
  6428  0992                     	;# 
  6429  0993                     	;# 
  6430  0994                     	;# 
  6431  0995                     	;# 
  6432  0996                     	;# 
  6433  0997                     	;# 
  6434  1E0F                     	;# 
  6435  1E10                     	;# 
  6436  1E11                     	;# 
  6437  1E12                     	;# 
  6438  1E13                     	;# 
  6439  1E14                     	;# 
  6440  1E15                     	;# 
  6441  1E16                     	;# 
  6442  1E17                     	;# 
  6443  1E18                     	;# 
  6444  1E19                     	;# 
  6445  1E1A                     	;# 
  6446  1E1B                     	;# 
  6447  1E1C                     	;# 
  6448  1E1D                     	;# 
  6449  1E1E                     	;# 
  6450  1E1F                     	;# 
  6451  1E20                     	;# 
  6452  1E21                     	;# 
  6453  1E22                     	;# 
  6454  1E23                     	;# 
  6455  1E24                     	;# 
  6456  1E25                     	;# 
  6457  1E26                     	;# 
  6458  1E27                     	;# 
  6459  1E28                     	;# 
  6460  1E29                     	;# 
  6461  1E2A                     	;# 
  6462  1E2B                     	;# 
  6463  1E2C                     	;# 
  6464  1E2D                     	;# 
  6465  1E2E                     	;# 
  6466  1E2F                     	;# 
  6467  1E30                     	;# 
  6468  1E31                     	;# 
  6469  1E32                     	;# 
  6470  1E33                     	;# 
  6471  1E34                     	;# 
  6472  1E35                     	;# 
  6473  1E36                     	;# 
  6474  1E37                     	;# 
  6475  1E8F                     	;# 
  6476  1E90                     	;# 
  6477  1E91                     	;# 
  6478  1E92                     	;# 
  6479  1E93                     	;# 
  6480  1E94                     	;# 
  6481  1E95                     	;# 
  6482  1E96                     	;# 
  6483  1E97                     	;# 
  6484  1E9C                     	;# 
  6485  1E9D                     	;# 
  6486  1E9E                     	;# 
  6487  1EA1                     	;# 
  6488  1EA2                     	;# 
  6489  1EA3                     	;# 
  6490  1EA4                     	;# 
  6491  1EA9                     	;# 
  6492  1EAA                     	;# 
  6493  1EB1                     	;# 
  6494  1EB2                     	;# 
  6495  1EB8                     	;# 
  6496  1EB9                     	;# 
  6497  1EBA                     	;# 
  6498  1EBB                     	;# 
  6499  1EBC                     	;# 
  6500  1EBD                     	;# 
  6501  1EBE                     	;# 
  6502  1EC3                     	;# 
  6503  1EC5                     	;# 
  6504  1EC6                     	;# 
  6505  1EC7                     	;# 
  6506  1EC8                     	;# 
  6507  1EC9                     	;# 
  6508  1ECA                     	;# 
  6509  1ECB                     	;# 
  6510  1ECB                     	;# 
  6511  1ECB                     	;# 
  6512  1ECC                     	;# 
  6513  1ECC                     	;# 
  6514  1ECC                     	;# 
  6515  1F10                     	;# 
  6516  1F11                     	;# 
  6517  1F12                     	;# 
  6518  1F14                     	;# 
  6519  1F15                     	;# 
  6520  1F1C                     	;# 
  6521  1F1D                     	;# 
  6522  1F1E                     	;# 
  6523  1F1F                     	;# 
  6524  1F20                     	;# 
  6525  1F21                     	;# 
  6526  1F22                     	;# 
  6527  1F23                     	;# 
  6528  1F24                     	;# 
  6529  1F25                     	;# 
  6530  1F26                     	;# 
  6531  1F27                     	;# 
  6532  1F38                     	;# 
  6533  1F39                     	;# 
  6534  1F3A                     	;# 
  6535  1F3B                     	;# 
  6536  1F3C                     	;# 
  6537  1F3D                     	;# 
  6538  1F3E                     	;# 
  6539  1F3F                     	;# 
  6540  1F43                     	;# 
  6541  1F44                     	;# 
  6542  1F45                     	;# 
  6543  1F46                     	;# 
  6544  1F47                     	;# 
  6545  1F48                     	;# 
  6546  1F49                     	;# 
  6547  1F4A                     	;# 
  6548  1F4E                     	;# 
  6549  1F4F                     	;# 
  6550  1F50                     	;# 
  6551  1F51                     	;# 
  6552  1F52                     	;# 
  6553  1F53                     	;# 
  6554  1F54                     	;# 
  6555  1F55                     	;# 
  6556  1FE4                     	;# 
  6557  1FE5                     	;# 
  6558  1FE6                     	;# 
  6559  1FE7                     	;# 
  6560  1FE8                     	;# 
  6561  1FE8                     	;# 
  6562  1FE9                     	;# 
  6563  1FEA                     	;# 
  6564  1FEB                     	;# 
  6565  1FED                     	;# 
  6566  1FEE                     	;# 
  6567  1FEF                     	;# 
  6568  0000                     	;# 
  6569  0001                     	;# 
  6570  0002                     	;# 
  6571  0003                     	;# 
  6572  0004                     	;# 
  6573  0005                     	;# 
  6574  0006                     	;# 
  6575  0007                     	;# 
  6576  0008                     	;# 
  6577  0009                     	;# 
  6578  000A                     	;# 
  6579  000B                     	;# 
  6580  000C                     	;# 
  6581  000D                     	;# 
  6582  000E                     	;# 
  6583  0012                     	;# 
  6584  0013                     	;# 
  6585  0014                     	;# 
  6586  0018                     	;# 
  6587  0019                     	;# 
  6588  001A                     	;# 
  6589  008C                     	;# 
  6590  008C                     	;# 
  6591  008D                     	;# 
  6592  008E                     	;# 
  6593  008E                     	;# 
  6594  008F                     	;# 
  6595  0090                     	;# 
  6596  0090                     	;# 
  6597  0091                     	;# 
  6598  0092                     	;# 
  6599  0092                     	;# 
  6600  0093                     	;# 
  6601  0094                     	;# 
  6602  0094                     	;# 
  6603  0095                     	;# 
  6604  0096                     	;# 
  6605  0096                     	;# 
  6606  0097                     	;# 
  6607  0098                     	;# 
  6608  0099                     	;# 
  6609  009A                     	;# 
  6610  009B                     	;# 
  6611  009B                     	;# 
  6612  009C                     	;# 
  6613  009D                     	;# 
  6614  009D                     	;# 
  6615  009E                     	;# 
  6616  009F                     	;# 
  6617  010C                     	;# 
  6618  010C                     	;# 
  6619  010D                     	;# 
  6620  010E                     	;# 
  6621  010F                     	;# 
  6622  010F                     	;# 
  6623  0110                     	;# 
  6624  0111                     	;# 
  6625  0112                     	;# 
  6626  0113                     	;# 
  6627  0114                     	;# 
  6628  0115                     	;# 
  6629  0116                     	;# 
  6630  0117                     	;# 
  6631  0118                     	;# 
  6632  0119                     	;# 
  6633  0119                     	;# 
  6634  0119                     	;# 
  6635  011A                     	;# 
  6636  011A                     	;# 
  6637  011A                     	;# 
  6638  011B                     	;# 
  6639  011B                     	;# 
  6640  011B                     	;# 
  6641  011B                     	;# 
  6642  011B                     	;# 
  6643  011C                     	;# 
  6644  011C                     	;# 
  6645  011C                     	;# 
  6646  011D                     	;# 
  6647  011D                     	;# 
  6648  011D                     	;# 
  6649  011E                     	;# 
  6650  011E                     	;# 
  6651  011E                     	;# 
  6652  011F                     	;# 
  6653  011F                     	;# 
  6654  011F                     	;# 
  6655  011F                     	;# 
  6656  011F                     	;# 
  6657  018C                     	;# 
  6658  018D                     	;# 
  6659  018E                     	;# 
  6660  018F                     	;# 
  6661  0190                     	;# 
  6662  0191                     	;# 
  6663  0192                     	;# 
  6664  0196                     	;# 
  6665  0197                     	;# 
  6666  0198                     	;# 
  6667  0199                     	;# 
  6668  019A                     	;# 
  6669  019B                     	;# 
  6670  019C                     	;# 
  6671  020C                     	;# 
  6672  020D                     	;# 
  6673  020E                     	;# 
  6674  020E                     	;# 
  6675  020F                     	;# 
  6676  020F                     	;# 
  6677  0210                     	;# 
  6678  0210                     	;# 
  6679  0211                     	;# 
  6680  0211                     	;# 
  6681  0212                     	;# 
  6682  0213                     	;# 
  6683  0214                     	;# 
  6684  0214                     	;# 
  6685  0215                     	;# 
  6686  0215                     	;# 
  6687  0216                     	;# 
  6688  0216                     	;# 
  6689  0217                     	;# 
  6690  0217                     	;# 
  6691  0218                     	;# 
  6692  0219                     	;# 
  6693  021A                     	;# 
  6694  021A                     	;# 
  6695  021B                     	;# 
  6696  021B                     	;# 
  6697  021C                     	;# 
  6698  021C                     	;# 
  6699  021D                     	;# 
  6700  021D                     	;# 
  6701  021E                     	;# 
  6702  021F                     	;# 
  6703  028C                     	;# 
  6704  028C                     	;# 
  6705  028D                     	;# 
  6706  028D                     	;# 
  6707  028E                     	;# 
  6708  028F                     	;# 
  6709  0290                     	;# 
  6710  0291                     	;# 
  6711  0292                     	;# 
  6712  0292                     	;# 
  6713  0293                     	;# 
  6714  0293                     	;# 
  6715  0294                     	;# 
  6716  0295                     	;# 
  6717  0296                     	;# 
  6718  0297                     	;# 
  6719  0298                     	;# 
  6720  0298                     	;# 
  6721  0299                     	;# 
  6722  0299                     	;# 
  6723  029A                     	;# 
  6724  029B                     	;# 
  6725  029C                     	;# 
  6726  029D                     	;# 
  6727  029F                     	;# 
  6728  030C                     	;# 
  6729  030C                     	;# 
  6730  030D                     	;# 
  6731  030E                     	;# 
  6732  030F                     	;# 
  6733  0310                     	;# 
  6734  0310                     	;# 
  6735  0311                     	;# 
  6736  0312                     	;# 
  6737  0313                     	;# 
  6738  0314                     	;# 
  6739  0314                     	;# 
  6740  0315                     	;# 
  6741  0316                     	;# 
  6742  0317                     	;# 
  6743  0318                     	;# 
  6744  0318                     	;# 
  6745  0319                     	;# 
  6746  031A                     	;# 
  6747  031B                     	;# 
  6748  038C                     	;# 
  6749  038C                     	;# 
  6750  038D                     	;# 
  6751  038E                     	;# 
  6752  0390                     	;# 
  6753  0390                     	;# 
  6754  0391                     	;# 
  6755  0392                     	;# 
  6756  048C                     	;# 
  6757  048C                     	;# 
  6758  048D                     	;# 
  6759  048E                     	;# 
  6760  048F                     	;# 
  6761  048F                     	;# 
  6762  0490                     	;# 
  6763  0491                     	;# 
  6764  0492                     	;# 
  6765  0492                     	;# 
  6766  0493                     	;# 
  6767  0494                     	;# 
  6768  0495                     	;# 
  6769  0495                     	;# 
  6770  0496                     	;# 
  6771  0497                     	;# 
  6772  0498                     	;# 
  6773  0499                     	;# 
  6774  049A                     	;# 
  6775  049B                     	;# 
  6776  049C                     	;# 
  6777  049D                     	;# 
  6778  058C                     	;# 
  6779  058C                     	;# 
  6780  058D                     	;# 
  6781  058E                     	;# 
  6782  058F                     	;# 
  6783  058F                     	;# 
  6784  0590                     	;# 
  6785  0591                     	;# 
  6786  0592                     	;# 
  6787  0593                     	;# 
  6788  059C                     	;# 
  6789  059C                     	;# 
  6790  059D                     	;# 
  6791  059D                     	;# 
  6792  059E                     	;# 
  6793  059F                     	;# 
  6794  060C                     	;# 
  6795  060C                     	;# 
  6796  060D                     	;# 
  6797  060D                     	;# 
  6798  060E                     	;# 
  6799  060F                     	;# 
  6800  0610                     	;# 
  6801  0611                     	;# 
  6802  0612                     	;# 
  6803  0613                     	;# 
  6804  0614                     	;# 
  6805  0616                     	;# 
  6806  0616                     	;# 
  6807  0617                     	;# 
  6808  0617                     	;# 
  6809  0618                     	;# 
  6810  0619                     	;# 
  6811  061A                     	;# 
  6812  061B                     	;# 
  6813  061C                     	;# 
  6814  061D                     	;# 
  6815  061E                     	;# 
  6816  070C                     	;# 
  6817  070D                     	;# 
  6818  070E                     	;# 
  6819  070F                     	;# 
  6820  0710                     	;# 
  6821  0711                     	;# 
  6822  0712                     	;# 
  6823  0713                     	;# 
  6824  0714                     	;# 
  6825  0716                     	;# 
  6826  0717                     	;# 
  6827  0718                     	;# 
  6828  0719                     	;# 
  6829  071A                     	;# 
  6830  071B                     	;# 
  6831  071C                     	;# 
  6832  071D                     	;# 
  6833  071E                     	;# 
  6834  0796                     	;# 
  6835  0797                     	;# 
  6836  0798                     	;# 
  6837  0799                     	;# 
  6838  079A                     	;# 
  6839  079B                     	;# 
  6840  079C                     	;# 
  6841  079D                     	;# 
  6842  080C                     	;# 
  6843  080D                     	;# 
  6844  080E                     	;# 
  6845  080F                     	;# 
  6846  0810                     	;# 
  6847  0811                     	;# 
  6848  0812                     	;# 
  6849  0813                     	;# 
  6850  0814                     	;# 
  6851  081A                     	;# 
  6852  081A                     	;# 
  6853  081B                     	;# 
  6854  081C                     	;# 
  6855  081C                     	;# 
  6856  081D                     	;# 
  6857  081E                     	;# 
  6858  081F                     	;# 
  6859  088C                     	;# 
  6860  088D                     	;# 
  6861  088E                     	;# 
  6862  088F                     	;# 
  6863  0890                     	;# 
  6864  0891                     	;# 
  6865  0892                     	;# 
  6866  0893                     	;# 
  6867  0895                     	;# 
  6868  0896                     	;# 
  6869  0897                     	;# 
  6870  0898                     	;# 
  6871  0899                     	;# 
  6872  089A                     	;# 
  6873  089B                     	;# 
  6874  090C                     	;# 
  6875  090E                     	;# 
  6876  090F                     	;# 
  6877  091F                     	;# 
  6878  098F                     	;# 
  6879  098F                     	;# 
  6880  0990                     	;# 
  6881  0991                     	;# 
  6882  0992                     	;# 
  6883  0993                     	;# 
  6884  0994                     	;# 
  6885  0995                     	;# 
  6886  0996                     	;# 
  6887  0997                     	;# 
  6888  1E0F                     	;# 
  6889  1E10                     	;# 
  6890  1E11                     	;# 
  6891  1E12                     	;# 
  6892  1E13                     	;# 
  6893  1E14                     	;# 
  6894  1E15                     	;# 
  6895  1E16                     	;# 
  6896  1E17                     	;# 
  6897  1E18                     	;# 
  6898  1E19                     	;# 
  6899  1E1A                     	;# 
  6900  1E1B                     	;# 
  6901  1E1C                     	;# 
  6902  1E1D                     	;# 
  6903  1E1E                     	;# 
  6904  1E1F                     	;# 
  6905  1E20                     	;# 
  6906  1E21                     	;# 
  6907  1E22                     	;# 
  6908  1E23                     	;# 
  6909  1E24                     	;# 
  6910  1E25                     	;# 
  6911  1E26                     	;# 
  6912  1E27                     	;# 
  6913  1E28                     	;# 
  6914  1E29                     	;# 
  6915  1E2A                     	;# 
  6916  1E2B                     	;# 
  6917  1E2C                     	;# 
  6918  1E2D                     	;# 
  6919  1E2E                     	;# 
  6920  1E2F                     	;# 
  6921  1E30                     	;# 
  6922  1E31                     	;# 
  6923  1E32                     	;# 
  6924  1E33                     	;# 
  6925  1E34                     	;# 
  6926  1E35                     	;# 
  6927  1E36                     	;# 
  6928  1E37                     	;# 
  6929  1E8F                     	;# 
  6930  1E90                     	;# 
  6931  1E91                     	;# 
  6932  1E92                     	;# 
  6933  1E93                     	;# 
  6934  1E94                     	;# 
  6935  1E95                     	;# 
  6936  1E96                     	;# 
  6937  1E97                     	;# 
  6938  1E9C                     	;# 
  6939  1E9D                     	;# 
  6940  1E9E                     	;# 
  6941  1EA1                     	;# 
  6942  1EA2                     	;# 
  6943  1EA3                     	;# 
  6944  1EA4                     	;# 
  6945  1EA9                     	;# 
  6946  1EAA                     	;# 
  6947  1EB1                     	;# 
  6948  1EB2                     	;# 
  6949  1EB8                     	;# 
  6950  1EB9                     	;# 
  6951  1EBA                     	;# 
  6952  1EBB                     	;# 
  6953  1EBC                     	;# 
  6954  1EBD                     	;# 
  6955  1EBE                     	;# 
  6956  1EC3                     	;# 
  6957  1EC5                     	;# 
  6958  1EC6                     	;# 
  6959  1EC7                     	;# 
  6960  1EC8                     	;# 
  6961  1EC9                     	;# 
  6962  1ECA                     	;# 
  6963  1ECB                     	;# 
  6964  1ECB                     	;# 
  6965  1ECB                     	;# 
  6966  1ECC                     	;# 
  6967  1ECC                     	;# 
  6968  1ECC                     	;# 
  6969  1F10                     	;# 
  6970  1F11                     	;# 
  6971  1F12                     	;# 
  6972  1F14                     	;# 
  6973  1F15                     	;# 
  6974  1F1C                     	;# 
  6975  1F1D                     	;# 
  6976  1F1E                     	;# 
  6977  1F1F                     	;# 
  6978  1F20                     	;# 
  6979  1F21                     	;# 
  6980  1F22                     	;# 
  6981  1F23                     	;# 
  6982  1F24                     	;# 
  6983  1F25                     	;# 
  6984  1F26                     	;# 
  6985  1F27                     	;# 
  6986  1F38                     	;# 
  6987  1F39                     	;# 
  6988  1F3A                     	;# 
  6989  1F3B                     	;# 
  6990  1F3C                     	;# 
  6991  1F3D                     	;# 
  6992  1F3E                     	;# 
  6993  1F3F                     	;# 
  6994  1F43                     	;# 
  6995  1F44                     	;# 
  6996  1F45                     	;# 
  6997  1F46                     	;# 
  6998  1F47                     	;# 
  6999  1F48                     	;# 
  7000  1F49                     	;# 
  7001  1F4A                     	;# 
  7002  1F4E                     	;# 
  7003  1F4F                     	;# 
  7004  1F50                     	;# 
  7005  1F51                     	;# 
  7006  1F52                     	;# 
  7007  1F53                     	;# 
  7008  1F54                     	;# 
  7009  1F55                     	;# 
  7010  1FE4                     	;# 
  7011  1FE5                     	;# 
  7012  1FE6                     	;# 
  7013  1FE7                     	;# 
  7014  1FE8                     	;# 
  7015  1FE8                     	;# 
  7016  1FE9                     	;# 
  7017  1FEA                     	;# 
  7018  1FEB                     	;# 
  7019  1FED                     	;# 
  7020  1FEE                     	;# 
  7021  1FEF                     	;# 
  7022  0000                     	;# 
  7023  0001                     	;# 
  7024  0002                     	;# 
  7025  0003                     	;# 
  7026  0004                     	;# 
  7027  0005                     	;# 
  7028  0006                     	;# 
  7029  0007                     	;# 
  7030  0008                     	;# 
  7031  0009                     	;# 
  7032  000A                     	;# 
  7033  000B                     	;# 
  7034  000C                     	;# 
  7035  000D                     	;# 
  7036  000E                     	;# 
  7037  0012                     	;# 
  7038  0013                     	;# 
  7039  0014                     	;# 
  7040  0018                     	;# 
  7041  0019                     	;# 
  7042  001A                     	;# 
  7043  008C                     	;# 
  7044  008C                     	;# 
  7045  008D                     	;# 
  7046  008E                     	;# 
  7047  008E                     	;# 
  7048  008F                     	;# 
  7049  0090                     	;# 
  7050  0090                     	;# 
  7051  0091                     	;# 
  7052  0092                     	;# 
  7053  0092                     	;# 
  7054  0093                     	;# 
  7055  0094                     	;# 
  7056  0094                     	;# 
  7057  0095                     	;# 
  7058  0096                     	;# 
  7059  0096                     	;# 
  7060  0097                     	;# 
  7061  0098                     	;# 
  7062  0099                     	;# 
  7063  009A                     	;# 
  7064  009B                     	;# 
  7065  009B                     	;# 
  7066  009C                     	;# 
  7067  009D                     	;# 
  7068  009D                     	;# 
  7069  009E                     	;# 
  7070  009F                     	;# 
  7071  010C                     	;# 
  7072  010C                     	;# 
  7073  010D                     	;# 
  7074  010E                     	;# 
  7075  010F                     	;# 
  7076  010F                     	;# 
  7077  0110                     	;# 
  7078  0111                     	;# 
  7079  0112                     	;# 
  7080  0113                     	;# 
  7081  0114                     	;# 
  7082  0115                     	;# 
  7083  0116                     	;# 
  7084  0117                     	;# 
  7085  0118                     	;# 
  7086  0119                     	;# 
  7087  0119                     	;# 
  7088  0119                     	;# 
  7089  011A                     	;# 
  7090  011A                     	;# 
  7091  011A                     	;# 
  7092  011B                     	;# 
  7093  011B                     	;# 
  7094  011B                     	;# 
  7095  011B                     	;# 
  7096  011B                     	;# 
  7097  011C                     	;# 
  7098  011C                     	;# 
  7099  011C                     	;# 
  7100  011D                     	;# 
  7101  011D                     	;# 
  7102  011D                     	;# 
  7103  011E                     	;# 
  7104  011E                     	;# 
  7105  011E                     	;# 
  7106  011F                     	;# 
  7107  011F                     	;# 
  7108  011F                     	;# 
  7109  011F                     	;# 
  7110  011F                     	;# 
  7111  018C                     	;# 
  7112  018D                     	;# 
  7113  018E                     	;# 
  7114  018F                     	;# 
  7115  0190                     	;# 
  7116  0191                     	;# 
  7117  0192                     	;# 
  7118  0196                     	;# 
  7119  0197                     	;# 
  7120  0198                     	;# 
  7121  0199                     	;# 
  7122  019A                     	;# 
  7123  019B                     	;# 
  7124  019C                     	;# 
  7125  020C                     	;# 
  7126  020D                     	;# 
  7127  020E                     	;# 
  7128  020E                     	;# 
  7129  020F                     	;# 
  7130  020F                     	;# 
  7131  0210                     	;# 
  7132  0210                     	;# 
  7133  0211                     	;# 
  7134  0211                     	;# 
  7135  0212                     	;# 
  7136  0213                     	;# 
  7137  0214                     	;# 
  7138  0214                     	;# 
  7139  0215                     	;# 
  7140  0215                     	;# 
  7141  0216                     	;# 
  7142  0216                     	;# 
  7143  0217                     	;# 
  7144  0217                     	;# 
  7145  0218                     	;# 
  7146  0219                     	;# 
  7147  021A                     	;# 
  7148  021A                     	;# 
  7149  021B                     	;# 
  7150  021B                     	;# 
  7151  021C                     	;# 
  7152  021C                     	;# 
  7153  021D                     	;# 
  7154  021D                     	;# 
  7155  021E                     	;# 
  7156  021F                     	;# 
  7157  028C                     	;# 
  7158  028C                     	;# 
  7159  028D                     	;# 
  7160  028D                     	;# 
  7161  028E                     	;# 
  7162  028F                     	;# 
  7163  0290                     	;# 
  7164  0291                     	;# 
  7165  0292                     	;# 
  7166  0292                     	;# 
  7167  0293                     	;# 
  7168  0293                     	;# 
  7169  0294                     	;# 
  7170  0295                     	;# 
  7171  0296                     	;# 
  7172  0297                     	;# 
  7173  0298                     	;# 
  7174  0298                     	;# 
  7175  0299                     	;# 
  7176  0299                     	;# 
  7177  029A                     	;# 
  7178  029B                     	;# 
  7179  029C                     	;# 
  7180  029D                     	;# 
  7181  029F                     	;# 
  7182  030C                     	;# 
  7183  030C                     	;# 
  7184  030D                     	;# 
  7185  030E                     	;# 
  7186  030F                     	;# 
  7187  0310                     	;# 
  7188  0310                     	;# 
  7189  0311                     	;# 
  7190  0312                     	;# 
  7191  0313                     	;# 
  7192  0314                     	;# 
  7193  0314                     	;# 
  7194  0315                     	;# 
  7195  0316                     	;# 
  7196  0317                     	;# 
  7197  0318                     	;# 
  7198  0318                     	;# 
  7199  0319                     	;# 
  7200  031A                     	;# 
  7201  031B                     	;# 
  7202  038C                     	;# 
  7203  038C                     	;# 
  7204  038D                     	;# 
  7205  038E                     	;# 
  7206  0390                     	;# 
  7207  0390                     	;# 
  7208  0391                     	;# 
  7209  0392                     	;# 
  7210  048C                     	;# 
  7211  048C                     	;# 
  7212  048D                     	;# 
  7213  048E                     	;# 
  7214  048F                     	;# 
  7215  048F                     	;# 
  7216  0490                     	;# 
  7217  0491                     	;# 
  7218  0492                     	;# 
  7219  0492                     	;# 
  7220  0493                     	;# 
  7221  0494                     	;# 
  7222  0495                     	;# 
  7223  0495                     	;# 
  7224  0496                     	;# 
  7225  0497                     	;# 
  7226  0498                     	;# 
  7227  0499                     	;# 
  7228  049A                     	;# 
  7229  049B                     	;# 
  7230  049C                     	;# 
  7231  049D                     	;# 
  7232  058C                     	;# 
  7233  058C                     	;# 
  7234  058D                     	;# 
  7235  058E                     	;# 
  7236  058F                     	;# 
  7237  058F                     	;# 
  7238  0590                     	;# 
  7239  0591                     	;# 
  7240  0592                     	;# 
  7241  0593                     	;# 
  7242  059C                     	;# 
  7243  059C                     	;# 
  7244  059D                     	;# 
  7245  059D                     	;# 
  7246  059E                     	;# 
  7247  059F                     	;# 
  7248  060C                     	;# 
  7249  060C                     	;# 
  7250  060D                     	;# 
  7251  060D                     	;# 
  7252  060E                     	;# 
  7253  060F                     	;# 
  7254  0610                     	;# 
  7255  0611                     	;# 
  7256  0612                     	;# 
  7257  0613                     	;# 
  7258  0614                     	;# 
  7259  0616                     	;# 
  7260  0616                     	;# 
  7261  0617                     	;# 
  7262  0617                     	;# 
  7263  0618                     	;# 
  7264  0619                     	;# 
  7265  061A                     	;# 
  7266  061B                     	;# 
  7267  061C                     	;# 
  7268  061D                     	;# 
  7269  061E                     	;# 
  7270  070C                     	;# 
  7271  070D                     	;# 
  7272  070E                     	;# 
  7273  070F                     	;# 
  7274  0710                     	;# 
  7275  0711                     	;# 
  7276  0712                     	;# 
  7277  0713                     	;# 
  7278  0714                     	;# 
  7279  0716                     	;# 
  7280  0717                     	;# 
  7281  0718                     	;# 
  7282  0719                     	;# 
  7283  071A                     	;# 
  7284  071B                     	;# 
  7285  071C                     	;# 
  7286  071D                     	;# 
  7287  071E                     	;# 
  7288  0796                     	;# 
  7289  0797                     	;# 
  7290  0798                     	;# 
  7291  0799                     	;# 
  7292  079A                     	;# 
  7293  079B                     	;# 
  7294  079C                     	;# 
  7295  079D                     	;# 
  7296  080C                     	;# 
  7297  080D                     	;# 
  7298  080E                     	;# 
  7299  080F                     	;# 
  7300  0810                     	;# 
  7301  0811                     	;# 
  7302  0812                     	;# 
  7303  0813                     	;# 
  7304  0814                     	;# 
  7305  081A                     	;# 
  7306  081A                     	;# 
  7307  081B                     	;# 
  7308  081C                     	;# 
  7309  081C                     	;# 
  7310  081D                     	;# 
  7311  081E                     	;# 
  7312  081F                     	;# 
  7313  088C                     	;# 
  7314  088D                     	;# 
  7315  088E                     	;# 
  7316  088F                     	;# 
  7317  0890                     	;# 
  7318  0891                     	;# 
  7319  0892                     	;# 
  7320  0893                     	;# 
  7321  0895                     	;# 
  7322  0896                     	;# 
  7323  0897                     	;# 
  7324  0898                     	;# 
  7325  0899                     	;# 
  7326  089A                     	;# 
  7327  089B                     	;# 
  7328  090C                     	;# 
  7329  090E                     	;# 
  7330  090F                     	;# 
  7331  091F                     	;# 
  7332  098F                     	;# 
  7333  098F                     	;# 
  7334  0990                     	;# 
  7335  0991                     	;# 
  7336  0992                     	;# 
  7337  0993                     	;# 
  7338  0994                     	;# 
  7339  0995                     	;# 
  7340  0996                     	;# 
  7341  0997                     	;# 
  7342  1E0F                     	;# 
  7343  1E10                     	;# 
  7344  1E11                     	;# 
  7345  1E12                     	;# 
  7346  1E13                     	;# 
  7347  1E14                     	;# 
  7348  1E15                     	;# 
  7349  1E16                     	;# 
  7350  1E17                     	;# 
  7351  1E18                     	;# 
  7352  1E19                     	;# 
  7353  1E1A                     	;# 
  7354  1E1B                     	;# 
  7355  1E1C                     	;# 
  7356  1E1D                     	;# 
  7357  1E1E                     	;# 
  7358  1E1F                     	;# 
  7359  1E20                     	;# 
  7360  1E21                     	;# 
  7361  1E22                     	;# 
  7362  1E23                     	;# 
  7363  1E24                     	;# 
  7364  1E25                     	;# 
  7365  1E26                     	;# 
  7366  1E27                     	;# 
  7367  1E28                     	;# 
  7368  1E29                     	;# 
  7369  1E2A                     	;# 
  7370  1E2B                     	;# 
  7371  1E2C                     	;# 
  7372  1E2D                     	;# 
  7373  1E2E                     	;# 
  7374  1E2F                     	;# 
  7375  1E30                     	;# 
  7376  1E31                     	;# 
  7377  1E32                     	;# 
  7378  1E33                     	;# 
  7379  1E34                     	;# 
  7380  1E35                     	;# 
  7381  1E36                     	;# 
  7382  1E37                     	;# 
  7383  1E8F                     	;# 
  7384  1E90                     	;# 
  7385  1E91                     	;# 
  7386  1E92                     	;# 
  7387  1E93                     	;# 
  7388  1E94                     	;# 
  7389  1E95                     	;# 
  7390  1E96                     	;# 
  7391  1E97                     	;# 
  7392  1E9C                     	;# 
  7393  1E9D                     	;# 
  7394  1E9E                     	;# 
  7395  1EA1                     	;# 
  7396  1EA2                     	;# 
  7397  1EA3                     	;# 
  7398  1EA4                     	;# 
  7399  1EA9                     	;# 
  7400  1EAA                     	;# 
  7401  1EB1                     	;# 
  7402  1EB2                     	;# 
  7403  1EB8                     	;# 
  7404  1EB9                     	;# 
  7405  1EBA                     	;# 
  7406  1EBB                     	;# 
  7407  1EBC                     	;# 
  7408  1EBD                     	;# 
  7409  1EBE                     	;# 
  7410  1EC3                     	;# 
  7411  1EC5                     	;# 
  7412  1EC6                     	;# 
  7413  1EC7                     	;# 
  7414  1EC8                     	;# 
  7415  1EC9                     	;# 
  7416  1ECA                     	;# 
  7417  1ECB                     	;# 
  7418  1ECB                     	;# 
  7419  1ECB                     	;# 
  7420  1ECC                     	;# 
  7421  1ECC                     	;# 
  7422  1ECC                     	;# 
  7423  1F10                     	;# 
  7424  1F11                     	;# 
  7425  1F12                     	;# 
  7426  1F14                     	;# 
  7427  1F15                     	;# 
  7428  1F1C                     	;# 
  7429  1F1D                     	;# 
  7430  1F1E                     	;# 
  7431  1F1F                     	;# 
  7432  1F20                     	;# 
  7433  1F21                     	;# 
  7434  1F22                     	;# 
  7435  1F23                     	;# 
  7436  1F24                     	;# 
  7437  1F25                     	;# 
  7438  1F26                     	;# 
  7439  1F27                     	;# 
  7440  1F38                     	;# 
  7441  1F39                     	;# 
  7442  1F3A                     	;# 
  7443  1F3B                     	;# 
  7444  1F3C                     	;# 
  7445  1F3D                     	;# 
  7446  1F3E                     	;# 
  7447  1F3F                     	;# 
  7448  1F43                     	;# 
  7449  1F44                     	;# 
  7450  1F45                     	;# 
  7451  1F46                     	;# 
  7452  1F47                     	;# 
  7453  1F48                     	;# 
  7454  1F49                     	;# 
  7455  1F4A                     	;# 
  7456  1F4E                     	;# 
  7457  1F4F                     	;# 
  7458  1F50                     	;# 
  7459  1F51                     	;# 
  7460  1F52                     	;# 
  7461  1F53                     	;# 
  7462  1F54                     	;# 
  7463  1F55                     	;# 
  7464  1FE4                     	;# 
  7465  1FE5                     	;# 
  7466  1FE6                     	;# 
  7467  1FE7                     	;# 
  7468  1FE8                     	;# 
  7469  1FE8                     	;# 
  7470  1FE9                     	;# 
  7471  1FEA                     	;# 
  7472  1FEB                     	;# 
  7473  1FED                     	;# 
  7474  1FEE                     	;# 
  7475  1FEF                     	;# 
  7476  0000                     	;# 
  7477  0001                     	;# 
  7478  0002                     	;# 
  7479  0003                     	;# 
  7480  0004                     	;# 
  7481  0005                     	;# 
  7482  0006                     	;# 
  7483  0007                     	;# 
  7484  0008                     	;# 
  7485  0009                     	;# 
  7486  000A                     	;# 
  7487  000B                     	;# 
  7488  000C                     	;# 
  7489  000D                     	;# 
  7490  000E                     	;# 
  7491  0012                     	;# 
  7492  0013                     	;# 
  7493  0014                     	;# 
  7494  0018                     	;# 
  7495  0019                     	;# 
  7496  001A                     	;# 
  7497  008C                     	;# 
  7498  008C                     	;# 
  7499  008D                     	;# 
  7500  008E                     	;# 
  7501  008E                     	;# 
  7502  008F                     	;# 
  7503  0090                     	;# 
  7504  0090                     	;# 
  7505  0091                     	;# 
  7506  0092                     	;# 
  7507  0092                     	;# 
  7508  0093                     	;# 
  7509  0094                     	;# 
  7510  0094                     	;# 
  7511  0095                     	;# 
  7512  0096                     	;# 
  7513  0096                     	;# 
  7514  0097                     	;# 
  7515  0098                     	;# 
  7516  0099                     	;# 
  7517  009A                     	;# 
  7518  009B                     	;# 
  7519  009B                     	;# 
  7520  009C                     	;# 
  7521  009D                     	;# 
  7522  009D                     	;# 
  7523  009E                     	;# 
  7524  009F                     	;# 
  7525  010C                     	;# 
  7526  010C                     	;# 
  7527  010D                     	;# 
  7528  010E                     	;# 
  7529  010F                     	;# 
  7530  010F                     	;# 
  7531  0110                     	;# 
  7532  0111                     	;# 
  7533  0112                     	;# 
  7534  0113                     	;# 
  7535  0114                     	;# 
  7536  0115                     	;# 
  7537  0116                     	;# 
  7538  0117                     	;# 
  7539  0118                     	;# 
  7540  0119                     	;# 
  7541  0119                     	;# 
  7542  0119                     	;# 
  7543  011A                     	;# 
  7544  011A                     	;# 
  7545  011A                     	;# 
  7546  011B                     	;# 
  7547  011B                     	;# 
  7548  011B                     	;# 
  7549  011B                     	;# 
  7550  011B                     	;# 
  7551  011C                     	;# 
  7552  011C                     	;# 
  7553  011C                     	;# 
  7554  011D                     	;# 
  7555  011D                     	;# 
  7556  011D                     	;# 
  7557  011E                     	;# 
  7558  011E                     	;# 
  7559  011E                     	;# 
  7560  011F                     	;# 
  7561  011F                     	;# 
  7562  011F                     	;# 
  7563  011F                     	;# 
  7564  011F                     	;# 
  7565  018C                     	;# 
  7566  018D                     	;# 
  7567  018E                     	;# 
  7568  018F                     	;# 
  7569  0190                     	;# 
  7570  0191                     	;# 
  7571  0192                     	;# 
  7572  0196                     	;# 
  7573  0197                     	;# 
  7574  0198                     	;# 
  7575  0199                     	;# 
  7576  019A                     	;# 
  7577  019B                     	;# 
  7578  019C                     	;# 
  7579  020C                     	;# 
  7580  020D                     	;# 
  7581  020E                     	;# 
  7582  020E                     	;# 
  7583  020F                     	;# 
  7584  020F                     	;# 
  7585  0210                     	;# 
  7586  0210                     	;# 
  7587  0211                     	;# 
  7588  0211                     	;# 
  7589  0212                     	;# 
  7590  0213                     	;# 
  7591  0214                     	;# 
  7592  0214                     	;# 
  7593  0215                     	;# 
  7594  0215                     	;# 
  7595  0216                     	;# 
  7596  0216                     	;# 
  7597  0217                     	;# 
  7598  0217                     	;# 
  7599  0218                     	;# 
  7600  0219                     	;# 
  7601  021A                     	;# 
  7602  021A                     	;# 
  7603  021B                     	;# 
  7604  021B                     	;# 
  7605  021C                     	;# 
  7606  021C                     	;# 
  7607  021D                     	;# 
  7608  021D                     	;# 
  7609  021E                     	;# 
  7610  021F                     	;# 
  7611  028C                     	;# 
  7612  028C                     	;# 
  7613  028D                     	;# 
  7614  028D                     	;# 
  7615  028E                     	;# 
  7616  028F                     	;# 
  7617  0290                     	;# 
  7618  0291                     	;# 
  7619  0292                     	;# 
  7620  0292                     	;# 
  7621  0293                     	;# 
  7622  0293                     	;# 
  7623  0294                     	;# 
  7624  0295                     	;# 
  7625  0296                     	;# 
  7626  0297                     	;# 
  7627  0298                     	;# 
  7628  0298                     	;# 
  7629  0299                     	;# 
  7630  0299                     	;# 
  7631  029A                     	;# 
  7632  029B                     	;# 
  7633  029C                     	;# 
  7634  029D                     	;# 
  7635  029F                     	;# 
  7636  030C                     	;# 
  7637  030C                     	;# 
  7638  030D                     	;# 
  7639  030E                     	;# 
  7640  030F                     	;# 
  7641  0310                     	;# 
  7642  0310                     	;# 
  7643  0311                     	;# 
  7644  0312                     	;# 
  7645  0313                     	;# 
  7646  0314                     	;# 
  7647  0314                     	;# 
  7648  0315                     	;# 
  7649  0316                     	;# 
  7650  0317                     	;# 
  7651  0318                     	;# 
  7652  0318                     	;# 
  7653  0319                     	;# 
  7654  031A                     	;# 
  7655  031B                     	;# 
  7656  038C                     	;# 
  7657  038C                     	;# 
  7658  038D                     	;# 
  7659  038E                     	;# 
  7660  0390                     	;# 
  7661  0390                     	;# 
  7662  0391                     	;# 
  7663  0392                     	;# 
  7664  048C                     	;# 
  7665  048C                     	;# 
  7666  048D                     	;# 
  7667  048E                     	;# 
  7668  048F                     	;# 
  7669  048F                     	;# 
  7670  0490                     	;# 
  7671  0491                     	;# 
  7672  0492                     	;# 
  7673  0492                     	;# 
  7674  0493                     	;# 
  7675  0494                     	;# 
  7676  0495                     	;# 
  7677  0495                     	;# 
  7678  0496                     	;# 
  7679  0497                     	;# 
  7680  0498                     	;# 
  7681  0499                     	;# 
  7682  049A                     	;# 
  7683  049B                     	;# 
  7684  049C                     	;# 
  7685  049D                     	;# 
  7686  058C                     	;# 
  7687  058C                     	;# 
  7688  058D                     	;# 
  7689  058E                     	;# 
  7690  058F                     	;# 
  7691  058F                     	;# 
  7692  0590                     	;# 
  7693  0591                     	;# 
  7694  0592                     	;# 
  7695  0593                     	;# 
  7696  059C                     	;# 
  7697  059C                     	;# 
  7698  059D                     	;# 
  7699  059D                     	;# 
  7700  059E                     	;# 
  7701  059F                     	;# 
  7702  060C                     	;# 
  7703  060C                     	;# 
  7704  060D                     	;# 
  7705  060D                     	;# 
  7706  060E                     	;# 
  7707  060F                     	;# 
  7708  0610                     	;# 
  7709  0611                     	;# 
  7710  0612                     	;# 
  7711  0613                     	;# 
  7712  0614                     	;# 
  7713  0616                     	;# 
  7714  0616                     	;# 
  7715  0617                     	;# 
  7716  0617                     	;# 
  7717  0618                     	;# 
  7718  0619                     	;# 
  7719  061A                     	;# 
  7720  061B                     	;# 
  7721  061C                     	;# 
  7722  061D                     	;# 
  7723  061E                     	;# 
  7724  070C                     	;# 
  7725  070D                     	;# 
  7726  070E                     	;# 
  7727  070F                     	;# 
  7728  0710                     	;# 
  7729  0711                     	;# 
  7730  0712                     	;# 
  7731  0713                     	;# 
  7732  0714                     	;# 
  7733  0716                     	;# 
  7734  0717                     	;# 
  7735  0718                     	;# 
  7736  0719                     	;# 
  7737  071A                     	;# 
  7738  071B                     	;# 
  7739  071C                     	;# 
  7740  071D                     	;# 
  7741  071E                     	;# 
  7742  0796                     	;# 
  7743  0797                     	;# 
  7744  0798                     	;# 
  7745  0799                     	;# 
  7746  079A                     	;# 
  7747  079B                     	;# 
  7748  079C                     	;# 
  7749  079D                     	;# 
  7750  080C                     	;# 
  7751  080D                     	;# 
  7752  080E                     	;# 
  7753  080F                     	;# 
  7754  0810                     	;# 
  7755  0811                     	;# 
  7756  0812                     	;# 
  7757  0813                     	;# 
  7758  0814                     	;# 
  7759  081A                     	;# 
  7760  081A                     	;# 
  7761  081B                     	;# 
  7762  081C                     	;# 
  7763  081C                     	;# 
  7764  081D                     	;# 
  7765  081E                     	;# 
  7766  081F                     	;# 
  7767  088C                     	;# 
  7768  088D                     	;# 
  7769  088E                     	;# 
  7770  088F                     	;# 
  7771  0890                     	;# 
  7772  0891                     	;# 
  7773  0892                     	;# 
  7774  0893                     	;# 
  7775  0895                     	;# 
  7776  0896                     	;# 
  7777  0897                     	;# 
  7778  0898                     	;# 
  7779  0899                     	;# 
  7780  089A                     	;# 
  7781  089B                     	;# 
  7782  090C                     	;# 
  7783  090E                     	;# 
  7784  090F                     	;# 
  7785  091F                     	;# 
  7786  098F                     	;# 
  7787  098F                     	;# 
  7788  0990                     	;# 
  7789  0991                     	;# 
  7790  0992                     	;# 
  7791  0993                     	;# 
  7792  0994                     	;# 
  7793  0995                     	;# 
  7794  0996                     	;# 
  7795  0997                     	;# 
  7796  1E0F                     	;# 
  7797  1E10                     	;# 
  7798  1E11                     	;# 
  7799  1E12                     	;# 
  7800  1E13                     	;# 
  7801  1E14                     	;# 
  7802  1E15                     	;# 
  7803  1E16                     	;# 
  7804  1E17                     	;# 
  7805  1E18                     	;# 
  7806  1E19                     	;# 
  7807  1E1A                     	;# 
  7808  1E1B                     	;# 
  7809  1E1C                     	;# 
  7810  1E1D                     	;# 
  7811  1E1E                     	;# 
  7812  1E1F                     	;# 
  7813  1E20                     	;# 
  7814  1E21                     	;# 
  7815  1E22                     	;# 
  7816  1E23                     	;# 
  7817  1E24                     	;# 
  7818  1E25                     	;# 
  7819  1E26                     	;# 
  7820  1E27                     	;# 
  7821  1E28                     	;# 
  7822  1E29                     	;# 
  7823  1E2A                     	;# 
  7824  1E2B                     	;# 
  7825  1E2C                     	;# 
  7826  1E2D                     	;# 
  7827  1E2E                     	;# 
  7828  1E2F                     	;# 
  7829  1E30                     	;# 
  7830  1E31                     	;# 
  7831  1E32                     	;# 
  7832  1E33                     	;# 
  7833  1E34                     	;# 
  7834  1E35                     	;# 
  7835  1E36                     	;# 
  7836  1E37                     	;# 
  7837  1E8F                     	;# 
  7838  1E90                     	;# 
  7839  1E91                     	;# 
  7840  1E92                     	;# 
  7841  1E93                     	;# 
  7842  1E94                     	;# 
  7843  1E95                     	;# 
  7844  1E96                     	;# 
  7845  1E97                     	;# 
  7846  1E9C                     	;# 
  7847  1E9D                     	;# 
  7848  1E9E                     	;# 
  7849  1EA1                     	;# 
  7850  1EA2                     	;# 
  7851  1EA3                     	;# 
  7852  1EA4                     	;# 
  7853  1EA9                     	;# 
  7854  1EAA                     	;# 
  7855  1EB1                     	;# 
  7856  1EB2                     	;# 
  7857  1EB8                     	;# 
  7858  1EB9                     	;# 
  7859  1EBA                     	;# 
  7860  1EBB                     	;# 
  7861  1EBC                     	;# 
  7862  1EBD                     	;# 
  7863  1EBE                     	;# 
  7864  1EC3                     	;# 
  7865  1EC5                     	;# 
  7866  1EC6                     	;# 
  7867  1EC7                     	;# 
  7868  1EC8                     	;# 
  7869  1EC9                     	;# 
  7870  1ECA                     	;# 
  7871  1ECB                     	;# 
  7872  1ECB                     	;# 
  7873  1ECB                     	;# 
  7874  1ECC                     	;# 
  7875  1ECC                     	;# 
  7876  1ECC                     	;# 
  7877  1F10                     	;# 
  7878  1F11                     	;# 
  7879  1F12                     	;# 
  7880  1F14                     	;# 
  7881  1F15                     	;# 
  7882  1F1C                     	;# 
  7883  1F1D                     	;# 
  7884  1F1E                     	;# 
  7885  1F1F                     	;# 
  7886  1F20                     	;# 
  7887  1F21                     	;# 
  7888  1F22                     	;# 
  7889  1F23                     	;# 
  7890  1F24                     	;# 
  7891  1F25                     	;# 
  7892  1F26                     	;# 
  7893  1F27                     	;# 
  7894  1F38                     	;# 
  7895  1F39                     	;# 
  7896  1F3A                     	;# 
  7897  1F3B                     	;# 
  7898  1F3C                     	;# 
  7899  1F3D                     	;# 
  7900  1F3E                     	;# 
  7901  1F3F                     	;# 
  7902  1F43                     	;# 
  7903  1F44                     	;# 
  7904  1F45                     	;# 
  7905  1F46                     	;# 
  7906  1F47                     	;# 
  7907  1F48                     	;# 
  7908  1F49                     	;# 
  7909  1F4A                     	;# 
  7910  1F4E                     	;# 
  7911  1F4F                     	;# 
  7912  1F50                     	;# 
  7913  1F51                     	;# 
  7914  1F52                     	;# 
  7915  1F53                     	;# 
  7916  1F54                     	;# 
  7917  1F55                     	;# 
  7918  1FE4                     	;# 
  7919  1FE5                     	;# 
  7920  1FE6                     	;# 
  7921  1FE7                     	;# 
  7922  1FE8                     	;# 
  7923  1FE8                     	;# 
  7924  1FE9                     	;# 
  7925  1FEA                     	;# 
  7926  1FEB                     	;# 
  7927  1FED                     	;# 
  7928  1FEE                     	;# 
  7929  1FEF                     	;# 
  7930  0000                     	;# 
  7931  0001                     	;# 
  7932  0002                     	;# 
  7933  0003                     	;# 
  7934  0004                     	;# 
  7935  0005                     	;# 
  7936  0006                     	;# 
  7937  0007                     	;# 
  7938  0008                     	;# 
  7939  0009                     	;# 
  7940  000A                     	;# 
  7941  000B                     	;# 
  7942  000C                     	;# 
  7943  000D                     	;# 
  7944  000E                     	;# 
  7945  0012                     	;# 
  7946  0013                     	;# 
  7947  0014                     	;# 
  7948  0018                     	;# 
  7949  0019                     	;# 
  7950  001A                     	;# 
  7951  008C                     	;# 
  7952  008C                     	;# 
  7953  008D                     	;# 
  7954  008E                     	;# 
  7955  008E                     	;# 
  7956  008F                     	;# 
  7957  0090                     	;# 
  7958  0090                     	;# 
  7959  0091                     	;# 
  7960  0092                     	;# 
  7961  0092                     	;# 
  7962  0093                     	;# 
  7963  0094                     	;# 
  7964  0094                     	;# 
  7965  0095                     	;# 
  7966  0096                     	;# 
  7967  0096                     	;# 
  7968  0097                     	;# 
  7969  0098                     	;# 
  7970  0099                     	;# 
  7971  009A                     	;# 
  7972  009B                     	;# 
  7973  009B                     	;# 
  7974  009C                     	;# 
  7975  009D                     	;# 
  7976  009D                     	;# 
  7977  009E                     	;# 
  7978  009F                     	;# 
  7979  010C                     	;# 
  7980  010C                     	;# 
  7981  010D                     	;# 
  7982  010E                     	;# 
  7983  010F                     	;# 
  7984  010F                     	;# 
  7985  0110                     	;# 
  7986  0111                     	;# 
  7987  0112                     	;# 
  7988  0113                     	;# 
  7989  0114                     	;# 
  7990  0115                     	;# 
  7991  0116                     	;# 
  7992  0117                     	;# 
  7993  0118                     	;# 
  7994  0119                     	;# 
  7995  0119                     	;# 
  7996  0119                     	;# 
  7997  011A                     	;# 
  7998  011A                     	;# 
  7999  011A                     	;# 
  8000  011B                     	;# 
  8001  011B                     	;# 
  8002  011B                     	;# 
  8003  011B                     	;# 
  8004  011B                     	;# 
  8005  011C                     	;# 
  8006  011C                     	;# 
  8007  011C                     	;# 
  8008  011D                     	;# 
  8009  011D                     	;# 
  8010  011D                     	;# 
  8011  011E                     	;# 
  8012  011E                     	;# 
  8013  011E                     	;# 
  8014  011F                     	;# 
  8015  011F                     	;# 
  8016  011F                     	;# 
  8017  011F                     	;# 
  8018  011F                     	;# 
  8019  018C                     	;# 
  8020  018D                     	;# 
  8021  018E                     	;# 
  8022  018F                     	;# 
  8023  0190                     	;# 
  8024  0191                     	;# 
  8025  0192                     	;# 
  8026  0196                     	;# 
  8027  0197                     	;# 
  8028  0198                     	;# 
  8029  0199                     	;# 
  8030  019A                     	;# 
  8031  019B                     	;# 
  8032  019C                     	;# 
  8033  020C                     	;# 
  8034  020D                     	;# 
  8035  020E                     	;# 
  8036  020E                     	;# 
  8037  020F                     	;# 
  8038  020F                     	;# 
  8039  0210                     	;# 
  8040  0210                     	;# 
  8041  0211                     	;# 
  8042  0211                     	;# 
  8043  0212                     	;# 
  8044  0213                     	;# 
  8045  0214                     	;# 
  8046  0214                     	;# 
  8047  0215                     	;# 
  8048  0215                     	;# 
  8049  0216                     	;# 
  8050  0216                     	;# 
  8051  0217                     	;# 
  8052  0217                     	;# 
  8053  0218                     	;# 
  8054  0219                     	;# 
  8055  021A                     	;# 
  8056  021A                     	;# 
  8057  021B                     	;# 
  8058  021B                     	;# 
  8059  021C                     	;# 
  8060  021C                     	;# 
  8061  021D                     	;# 
  8062  021D                     	;# 
  8063  021E                     	;# 
  8064  021F                     	;# 
  8065  028C                     	;# 
  8066  028C                     	;# 
  8067  028D                     	;# 
  8068  028D                     	;# 
  8069  028E                     	;# 
  8070  028F                     	;# 
  8071  0290                     	;# 
  8072  0291                     	;# 
  8073  0292                     	;# 
  8074  0292                     	;# 
  8075  0293                     	;# 
  8076  0293                     	;# 
  8077  0294                     	;# 
  8078  0295                     	;# 
  8079  0296                     	;# 
  8080  0297                     	;# 
  8081  0298                     	;# 
  8082  0298                     	;# 
  8083  0299                     	;# 
  8084  0299                     	;# 
  8085  029A                     	;# 
  8086  029B                     	;# 
  8087  029C                     	;# 
  8088  029D                     	;# 
  8089  029F                     	;# 
  8090  030C                     	;# 
  8091  030C                     	;# 
  8092  030D                     	;# 
  8093  030E                     	;# 
  8094  030F                     	;# 
  8095  0310                     	;# 
  8096  0310                     	;# 
  8097  0311                     	;# 
  8098  0312                     	;# 
  8099  0313                     	;# 
  8100  0314                     	;# 
  8101  0314                     	;# 
  8102  0315                     	;# 
  8103  0316                     	;# 
  8104  0317                     	;# 
  8105  0318                     	;# 
  8106  0318                     	;# 
  8107  0319                     	;# 
  8108  031A                     	;# 
  8109  031B                     	;# 
  8110  038C                     	;# 
  8111  038C                     	;# 
  8112  038D                     	;# 
  8113  038E                     	;# 
  8114  0390                     	;# 
  8115  0390                     	;# 
  8116  0391                     	;# 
  8117  0392                     	;# 
  8118  048C                     	;# 
  8119  048C                     	;# 
  8120  048D                     	;# 
  8121  048E                     	;# 
  8122  048F                     	;# 
  8123  048F                     	;# 
  8124  0490                     	;# 
  8125  0491                     	;# 
  8126  0492                     	;# 
  8127  0492                     	;# 
  8128  0493                     	;# 
  8129  0494                     	;# 
  8130  0495                     	;# 
  8131  0495                     	;# 
  8132  0496                     	;# 
  8133  0497                     	;# 
  8134  0498                     	;# 
  8135  0499                     	;# 
  8136  049A                     	;# 
  8137  049B                     	;# 
  8138  049C                     	;# 
  8139  049D                     	;# 
  8140  058C                     	;# 
  8141  058C                     	;# 
  8142  058D                     	;# 
  8143  058E                     	;# 
  8144  058F                     	;# 
  8145  058F                     	;# 
  8146  0590                     	;# 
  8147  0591                     	;# 
  8148  0592                     	;# 
  8149  0593                     	;# 
  8150  059C                     	;# 
  8151  059C                     	;# 
  8152  059D                     	;# 
  8153  059D                     	;# 
  8154  059E                     	;# 
  8155  059F                     	;# 
  8156  060C                     	;# 
  8157  060C                     	;# 
  8158  060D                     	;# 
  8159  060D                     	;# 
  8160  060E                     	;# 
  8161  060F                     	;# 
  8162  0610                     	;# 
  8163  0611                     	;# 
  8164  0612                     	;# 
  8165  0613                     	;# 
  8166  0614                     	;# 
  8167  0616                     	;# 
  8168  0616                     	;# 
  8169  0617                     	;# 
  8170  0617                     	;# 
  8171  0618                     	;# 
  8172  0619                     	;# 
  8173  061A                     	;# 
  8174  061B                     	;# 
  8175  061C                     	;# 
  8176  061D                     	;# 
  8177  061E                     	;# 
  8178  070C                     	;# 
  8179  070D                     	;# 
  8180  070E                     	;# 
  8181  070F                     	;# 
  8182  0710                     	;# 
  8183  0711                     	;# 
  8184  0712                     	;# 
  8185  0713                     	;# 
  8186  0714                     	;# 
  8187  0716                     	;# 
  8188  0717                     	;# 
  8189  0718                     	;# 
  8190  0719                     	;# 
  8191  071A                     	;# 
  8192  071B                     	;# 
  8193  071C                     	;# 
  8194  071D                     	;# 
  8195  071E                     	;# 
  8196  0796                     	;# 
  8197  0797                     	;# 
  8198  0798                     	;# 
  8199  0799                     	;# 
  8200  079A                     	;# 
  8201  079B                     	;# 
  8202  079C                     	;# 
  8203  079D                     	;# 
  8204  080C                     	;# 
  8205  080D                     	;# 
  8206  080E                     	;# 
  8207  080F                     	;# 
  8208  0810                     	;# 
  8209  0811                     	;# 
  8210  0812                     	;# 
  8211  0813                     	;# 
  8212  0814                     	;# 
  8213  081A                     	;# 
  8214  081A                     	;# 
  8215  081B                     	;# 
  8216  081C                     	;# 
  8217  081C                     	;# 
  8218  081D                     	;# 
  8219  081E                     	;# 
  8220  081F                     	;# 
  8221  088C                     	;# 
  8222  088D                     	;# 
  8223  088E                     	;# 
  8224  088F                     	;# 
  8225  0890                     	;# 
  8226  0891                     	;# 
  8227  0892                     	;# 
  8228  0893                     	;# 
  8229  0895                     	;# 
  8230  0896                     	;# 
  8231  0897                     	;# 
  8232  0898                     	;# 
  8233  0899                     	;# 
  8234  089A                     	;# 
  8235  089B                     	;# 
  8236  090C                     	;# 
  8237  090E                     	;# 
  8238  090F                     	;# 
  8239  091F                     	;# 
  8240  098F                     	;# 
  8241  098F                     	;# 
  8242  0990                     	;# 
  8243  0991                     	;# 
  8244  0992                     	;# 
  8245  0993                     	;# 
  8246  0994                     	;# 
  8247  0995                     	;# 
  8248  0996                     	;# 
  8249  0997                     	;# 
  8250  1E0F                     	;# 
  8251  1E10                     	;# 
  8252  1E11                     	;# 
  8253  1E12                     	;# 
  8254  1E13                     	;# 
  8255  1E14                     	;# 
  8256  1E15                     	;# 
  8257  1E16                     	;# 
  8258  1E17                     	;# 
  8259  1E18                     	;# 
  8260  1E19                     	;# 
  8261  1E1A                     	;# 
  8262  1E1B                     	;# 
  8263  1E1C                     	;# 
  8264  1E1D                     	;# 
  8265  1E1E                     	;# 
  8266  1E1F                     	;# 
  8267  1E20                     	;# 
  8268  1E21                     	;# 
  8269  1E22                     	;# 
  8270  1E23                     	;# 
  8271  1E24                     	;# 
  8272  1E25                     	;# 
  8273  1E26                     	;# 
  8274  1E27                     	;# 
  8275  1E28                     	;# 
  8276  1E29                     	;# 
  8277  1E2A                     	;# 
  8278  1E2B                     	;# 
  8279  1E2C                     	;# 
  8280  1E2D                     	;# 
  8281  1E2E                     	;# 
  8282  1E2F                     	;# 
  8283  1E30                     	;# 
  8284  1E31                     	;# 
  8285  1E32                     	;# 
  8286  1E33                     	;# 
  8287  1E34                     	;# 
  8288  1E35                     	;# 
  8289  1E36                     	;# 
  8290  1E37                     	;# 
  8291  1E8F                     	;# 
  8292  1E90                     	;# 
  8293  1E91                     	;# 
  8294  1E92                     	;# 
  8295  1E93                     	;# 
  8296  1E94                     	;# 
  8297  1E95                     	;# 
  8298  1E96                     	;# 
  8299  1E97                     	;# 
  8300  1E9C                     	;# 
  8301  1E9D                     	;# 
  8302  1E9E                     	;# 
  8303  1EA1                     	;# 
  8304  1EA2                     	;# 
  8305  1EA3                     	;# 
  8306  1EA4                     	;# 
  8307  1EA9                     	;# 
  8308  1EAA                     	;# 
  8309  1EB1                     	;# 
  8310  1EB2                     	;# 
  8311  1EB8                     	;# 
  8312  1EB9                     	;# 
  8313  1EBA                     	;# 
  8314  1EBB                     	;# 
  8315  1EBC                     	;# 
  8316  1EBD                     	;# 
  8317  1EBE                     	;# 
  8318  1EC3                     	;# 
  8319  1EC5                     	;# 
  8320  1EC6                     	;# 
  8321  1EC7                     	;# 
  8322  1EC8                     	;# 
  8323  1EC9                     	;# 
  8324  1ECA                     	;# 
  8325  1ECB                     	;# 
  8326  1ECB                     	;# 
  8327  1ECB                     	;# 
  8328  1ECC                     	;# 
  8329  1ECC                     	;# 
  8330  1ECC                     	;# 
  8331  1F10                     	;# 
  8332  1F11                     	;# 
  8333  1F12                     	;# 
  8334  1F14                     	;# 
  8335  1F15                     	;# 
  8336  1F1C                     	;# 
  8337  1F1D                     	;# 
  8338  1F1E                     	;# 
  8339  1F1F                     	;# 
  8340  1F20                     	;# 
  8341  1F21                     	;# 
  8342  1F22                     	;# 
  8343  1F23                     	;# 
  8344  1F24                     	;# 
  8345  1F25                     	;# 
  8346  1F26                     	;# 
  8347  1F27                     	;# 
  8348  1F38                     	;# 
  8349  1F39                     	;# 
  8350  1F3A                     	;# 
  8351  1F3B                     	;# 
  8352  1F3C                     	;# 
  8353  1F3D                     	;# 
  8354  1F3E                     	;# 
  8355  1F3F                     	;# 
  8356  1F43                     	;# 
  8357  1F44                     	;# 
  8358  1F45                     	;# 
  8359  1F46                     	;# 
  8360  1F47                     	;# 
  8361  1F48                     	;# 
  8362  1F49                     	;# 
  8363  1F4A                     	;# 
  8364  1F4E                     	;# 
  8365  1F4F                     	;# 
  8366  1F50                     	;# 
  8367  1F51                     	;# 
  8368  1F52                     	;# 
  8369  1F53                     	;# 
  8370  1F54                     	;# 
  8371  1F55                     	;# 
  8372  1FE4                     	;# 
  8373  1FE5                     	;# 
  8374  1FE6                     	;# 
  8375  1FE7                     	;# 
  8376  1FE8                     	;# 
  8377  1FE8                     	;# 
  8378  1FE9                     	;# 
  8379  1FEA                     	;# 
  8380  1FEB                     	;# 
  8381  1FED                     	;# 
  8382  1FEE                     	;# 
  8383  1FEF                     	;# 
  8384  0000                     	;# 
  8385  0001                     	;# 
  8386  0002                     	;# 
  8387  0003                     	;# 
  8388  0004                     	;# 
  8389  0005                     	;# 
  8390  0006                     	;# 
  8391  0007                     	;# 
  8392  0008                     	;# 
  8393  0009                     	;# 
  8394  000A                     	;# 
  8395  000B                     	;# 
  8396  000C                     	;# 
  8397  000D                     	;# 
  8398  000E                     	;# 
  8399  0012                     	;# 
  8400  0013                     	;# 
  8401  0014                     	;# 
  8402  0018                     	;# 
  8403  0019                     	;# 
  8404  001A                     	;# 
  8405  008C                     	;# 
  8406  008C                     	;# 
  8407  008D                     	;# 
  8408  008E                     	;# 
  8409  008E                     	;# 
  8410  008F                     	;# 
  8411  0090                     	;# 
  8412  0090                     	;# 
  8413  0091                     	;# 
  8414  0092                     	;# 
  8415  0092                     	;# 
  8416  0093                     	;# 
  8417  0094                     	;# 
  8418  0094                     	;# 
  8419  0095                     	;# 
  8420  0096                     	;# 
  8421  0096                     	;# 
  8422  0097                     	;# 
  8423  0098                     	;# 
  8424  0099                     	;# 
  8425  009A                     	;# 
  8426  009B                     	;# 
  8427  009B                     	;# 
  8428  009C                     	;# 
  8429  009D                     	;# 
  8430  009D                     	;# 
  8431  009E                     	;# 
  8432  009F                     	;# 
  8433  010C                     	;# 
  8434  010C                     	;# 
  8435  010D                     	;# 
  8436  010E                     	;# 
  8437  010F                     	;# 
  8438  010F                     	;# 
  8439  0110                     	;# 
  8440  0111                     	;# 
  8441  0112                     	;# 
  8442  0113                     	;# 
  8443  0114                     	;# 
  8444  0115                     	;# 
  8445  0116                     	;# 
  8446  0117                     	;# 
  8447  0118                     	;# 
  8448  0119                     	;# 
  8449  0119                     	;# 
  8450  0119                     	;# 
  8451  011A                     	;# 
  8452  011A                     	;# 
  8453  011A                     	;# 
  8454  011B                     	;# 
  8455  011B                     	;# 
  8456  011B                     	;# 
  8457  011B                     	;# 
  8458  011B                     	;# 
  8459  011C                     	;# 
  8460  011C                     	;# 
  8461  011C                     	;# 
  8462  011D                     	;# 
  8463  011D                     	;# 
  8464  011D                     	;# 
  8465  011E                     	;# 
  8466  011E                     	;# 
  8467  011E                     	;# 
  8468  011F                     	;# 
  8469  011F                     	;# 
  8470  011F                     	;# 
  8471  011F                     	;# 
  8472  011F                     	;# 
  8473  018C                     	;# 
  8474  018D                     	;# 
  8475  018E                     	;# 
  8476  018F                     	;# 
  8477  0190                     	;# 
  8478  0191                     	;# 
  8479  0192                     	;# 
  8480  0196                     	;# 
  8481  0197                     	;# 
  8482  0198                     	;# 
  8483  0199                     	;# 
  8484  019A                     	;# 
  8485  019B                     	;# 
  8486  019C                     	;# 
  8487  020C                     	;# 
  8488  020D                     	;# 
  8489  020E                     	;# 
  8490  020E                     	;# 
  8491  020F                     	;# 
  8492  020F                     	;# 
  8493  0210                     	;# 
  8494  0210                     	;# 
  8495  0211                     	;# 
  8496  0211                     	;# 
  8497  0212                     	;# 
  8498  0213                     	;# 
  8499  0214                     	;# 
  8500  0214                     	;# 
  8501  0215                     	;# 
  8502  0215                     	;# 
  8503  0216                     	;# 
  8504  0216                     	;# 
  8505  0217                     	;# 
  8506  0217                     	;# 
  8507  0218                     	;# 
  8508  0219                     	;# 
  8509  021A                     	;# 
  8510  021A                     	;# 
  8511  021B                     	;# 
  8512  021B                     	;# 
  8513  021C                     	;# 
  8514  021C                     	;# 
  8515  021D                     	;# 
  8516  021D                     	;# 
  8517  021E                     	;# 
  8518  021F                     	;# 
  8519  028C                     	;# 
  8520  028C                     	;# 
  8521  028D                     	;# 
  8522  028D                     	;# 
  8523  028E                     	;# 
  8524  028F                     	;# 
  8525  0290                     	;# 
  8526  0291                     	;# 
  8527  0292                     	;# 
  8528  0292                     	;# 
  8529  0293                     	;# 
  8530  0293                     	;# 
  8531  0294                     	;# 
  8532  0295                     	;# 
  8533  0296                     	;# 
  8534  0297                     	;# 
  8535  0298                     	;# 
  8536  0298                     	;# 
  8537  0299                     	;# 
  8538  0299                     	;# 
  8539  029A                     	;# 
  8540  029B                     	;# 
  8541  029C                     	;# 
  8542  029D                     	;# 
  8543  029F                     	;# 
  8544  030C                     	;# 
  8545  030C                     	;# 
  8546  030D                     	;# 
  8547  030E                     	;# 
  8548  030F                     	;# 
  8549  0310                     	;# 
  8550  0310                     	;# 
  8551  0311                     	;# 
  8552  0312                     	;# 
  8553  0313                     	;# 
  8554  0314                     	;# 
  8555  0314                     	;# 
  8556  0315                     	;# 
  8557  0316                     	;# 
  8558  0317                     	;# 
  8559  0318                     	;# 
  8560  0318                     	;# 
  8561  0319                     	;# 
  8562  031A                     	;# 
  8563  031B                     	;# 
  8564  038C                     	;# 
  8565  038C                     	;# 
  8566  038D                     	;# 
  8567  038E                     	;# 
  8568  0390                     	;# 
  8569  0390                     	;# 
  8570  0391                     	;# 
  8571  0392                     	;# 
  8572  048C                     	;# 
  8573  048C                     	;# 
  8574  048D                     	;# 
  8575  048E                     	;# 
  8576  048F                     	;# 
  8577  048F                     	;# 
  8578  0490                     	;# 
  8579  0491                     	;# 
  8580  0492                     	;# 
  8581  0492                     	;# 
  8582  0493                     	;# 
  8583  0494                     	;# 
  8584  0495                     	;# 
  8585  0495                     	;# 
  8586  0496                     	;# 
  8587  0497                     	;# 
  8588  0498                     	;# 
  8589  0499                     	;# 
  8590  049A                     	;# 
  8591  049B                     	;# 
  8592  049C                     	;# 
  8593  049D                     	;# 
  8594  058C                     	;# 
  8595  058C                     	;# 
  8596  058D                     	;# 
  8597  058E                     	;# 
  8598  058F                     	;# 
  8599  058F                     	;# 
  8600  0590                     	;# 
  8601  0591                     	;# 
  8602  0592                     	;# 
  8603  0593                     	;# 
  8604  059C                     	;# 
  8605  059C                     	;# 
  8606  059D                     	;# 
  8607  059D                     	;# 
  8608  059E                     	;# 
  8609  059F                     	;# 
  8610  060C                     	;# 
  8611  060C                     	;# 
  8612  060D                     	;# 
  8613  060D                     	;# 
  8614  060E                     	;# 
  8615  060F                     	;# 
  8616  0610                     	;# 
  8617  0611                     	;# 
  8618  0612                     	;# 
  8619  0613                     	;# 
  8620  0614                     	;# 
  8621  0616                     	;# 
  8622  0616                     	;# 
  8623  0617                     	;# 
  8624  0617                     	;# 
  8625  0618                     	;# 
  8626  0619                     	;# 
  8627  061A                     	;# 
  8628  061B                     	;# 
  8629  061C                     	;# 
  8630  061D                     	;# 
  8631  061E                     	;# 
  8632  070C                     	;# 
  8633  070D                     	;# 
  8634  070E                     	;# 
  8635  070F                     	;# 
  8636  0710                     	;# 
  8637  0711                     	;# 
  8638  0712                     	;# 
  8639  0713                     	;# 
  8640  0714                     	;# 
  8641  0716                     	;# 
  8642  0717                     	;# 
  8643  0718                     	;# 
  8644  0719                     	;# 
  8645  071A                     	;# 
  8646  071B                     	;# 
  8647  071C                     	;# 
  8648  071D                     	;# 
  8649  071E                     	;# 
  8650  0796                     	;# 
  8651  0797                     	;# 
  8652  0798                     	;# 
  8653  0799                     	;# 
  8654  079A                     	;# 
  8655  079B                     	;# 
  8656  079C                     	;# 
  8657  079D                     	;# 
  8658  080C                     	;# 
  8659  080D                     	;# 
  8660  080E                     	;# 
  8661  080F                     	;# 
  8662  0810                     	;# 
  8663  0811                     	;# 
  8664  0812                     	;# 
  8665  0813                     	;# 
  8666  0814                     	;# 
  8667  081A                     	;# 
  8668  081A                     	;# 
  8669  081B                     	;# 
  8670  081C                     	;# 
  8671  081C                     	;# 
  8672  081D                     	;# 
  8673  081E                     	;# 
  8674  081F                     	;# 
  8675  088C                     	;# 
  8676  088D                     	;# 
  8677  088E                     	;# 
  8678  088F                     	;# 
  8679  0890                     	;# 
  8680  0891                     	;# 
  8681  0892                     	;# 
  8682  0893                     	;# 
  8683  0895                     	;# 
  8684  0896                     	;# 
  8685  0897                     	;# 
  8686  0898                     	;# 
  8687  0899                     	;# 
  8688  089A                     	;# 
  8689  089B                     	;# 
  8690  090C                     	;# 
  8691  090E                     	;# 
  8692  090F                     	;# 
  8693  091F                     	;# 
  8694  098F                     	;# 
  8695  098F                     	;# 
  8696  0990                     	;# 
  8697  0991                     	;# 
  8698  0992                     	;# 
  8699  0993                     	;# 
  8700  0994                     	;# 
  8701  0995                     	;# 
  8702  0996                     	;# 
  8703  0997                     	;# 
  8704  1E0F                     	;# 
  8705  1E10                     	;# 
  8706  1E11                     	;# 
  8707  1E12                     	;# 
  8708  1E13                     	;# 
  8709  1E14                     	;# 
  8710  1E15                     	;# 
  8711  1E16                     	;# 
  8712  1E17                     	;# 
  8713  1E18                     	;# 
  8714  1E19                     	;# 
  8715  1E1A                     	;# 
  8716  1E1B                     	;# 
  8717  1E1C                     	;# 
  8718  1E1D                     	;# 
  8719  1E1E                     	;# 
  8720  1E1F                     	;# 
  8721  1E20                     	;# 
  8722  1E21                     	;# 
  8723  1E22                     	;# 
  8724  1E23                     	;# 
  8725  1E24                     	;# 
  8726  1E25                     	;# 
  8727  1E26                     	;# 
  8728  1E27                     	;# 
  8729  1E28                     	;# 
  8730  1E29                     	;# 
  8731  1E2A                     	;# 
  8732  1E2B                     	;# 
  8733  1E2C                     	;# 
  8734  1E2D                     	;# 
  8735  1E2E                     	;# 
  8736  1E2F                     	;# 
  8737  1E30                     	;# 
  8738  1E31                     	;# 
  8739  1E32                     	;# 
  8740  1E33                     	;# 
  8741  1E34                     	;# 
  8742  1E35                     	;# 
  8743  1E36                     	;# 
  8744  1E37                     	;# 
  8745  1E8F                     	;# 
  8746  1E90                     	;# 
  8747  1E91                     	;# 
  8748  1E92                     	;# 
  8749  1E93                     	;# 
  8750  1E94                     	;# 
  8751  1E95                     	;# 
  8752  1E96                     	;# 
  8753  1E97                     	;# 
  8754  1E9C                     	;# 
  8755  1E9D                     	;# 
  8756  1E9E                     	;# 
  8757  1EA1                     	;# 
  8758  1EA2                     	;# 
  8759  1EA3                     	;# 
  8760  1EA4                     	;# 
  8761  1EA9                     	;# 
  8762  1EAA                     	;# 
  8763  1EB1                     	;# 
  8764  1EB2                     	;# 
  8765  1EB8                     	;# 
  8766  1EB9                     	;# 
  8767  1EBA                     	;# 
  8768  1EBB                     	;# 
  8769  1EBC                     	;# 
  8770  1EBD                     	;# 
  8771  1EBE                     	;# 
  8772  1EC3                     	;# 
  8773  1EC5                     	;# 
  8774  1EC6                     	;# 
  8775  1EC7                     	;# 
  8776  1EC8                     	;# 
  8777  1EC9                     	;# 
  8778  1ECA                     	;# 
  8779  1ECB                     	;# 
  8780  1ECB                     	;# 
  8781  1ECB                     	;# 
  8782  1ECC                     	;# 
  8783  1ECC                     	;# 
  8784  1ECC                     	;# 
  8785  1F10                     	;# 
  8786  1F11                     	;# 
  8787  1F12                     	;# 
  8788  1F14                     	;# 
  8789  1F15                     	;# 
  8790  1F1C                     	;# 
  8791  1F1D                     	;# 
  8792  1F1E                     	;# 
  8793  1F1F                     	;# 
  8794  1F20                     	;# 
  8795  1F21                     	;# 
  8796  1F22                     	;# 
  8797  1F23                     	;# 
  8798  1F24                     	;# 
  8799  1F25                     	;# 
  8800  1F26                     	;# 
  8801  1F27                     	;# 
  8802  1F38                     	;# 
  8803  1F39                     	;# 
  8804  1F3A                     	;# 
  8805  1F3B                     	;# 
  8806  1F3C                     	;# 
  8807  1F3D                     	;# 
  8808  1F3E                     	;# 
  8809  1F3F                     	;# 
  8810  1F43                     	;# 
  8811  1F44                     	;# 
  8812  1F45                     	;# 
  8813  1F46                     	;# 
  8814  1F47                     	;# 
  8815  1F48                     	;# 
  8816  1F49                     	;# 
  8817  1F4A                     	;# 
  8818  1F4E                     	;# 
  8819  1F4F                     	;# 
  8820  1F50                     	;# 
  8821  1F51                     	;# 
  8822  1F52                     	;# 
  8823  1F53                     	;# 
  8824  1F54                     	;# 
  8825  1F55                     	;# 
  8826  1FE4                     	;# 
  8827  1FE5                     	;# 
  8828  1FE6                     	;# 
  8829  1FE7                     	;# 
  8830  1FE8                     	;# 
  8831  1FE8                     	;# 
  8832  1FE9                     	;# 
  8833  1FEA                     	;# 
  8834  1FEB                     	;# 
  8835  1FED                     	;# 
  8836  1FEE                     	;# 
  8837  1FEF                     	;# 
  8838  0000                     	;# 
  8839  0001                     	;# 
  8840  0002                     	;# 
  8841  0003                     	;# 
  8842  0004                     	;# 
  8843  0005                     	;# 
  8844  0006                     	;# 
  8845  0007                     	;# 
  8846  0008                     	;# 
  8847  0009                     	;# 
  8848  000A                     	;# 
  8849  000B                     	;# 
  8850  000C                     	;# 
  8851  000D                     	;# 
  8852  000E                     	;# 
  8853  0012                     	;# 
  8854  0013                     	;# 
  8855  0014                     	;# 
  8856  0018                     	;# 
  8857  0019                     	;# 
  8858  001A                     	;# 
  8859  008C                     	;# 
  8860  008C                     	;# 
  8861  008D                     	;# 
  8862  008E                     	;# 
  8863  008E                     	;# 
  8864  008F                     	;# 
  8865  0090                     	;# 
  8866  0090                     	;# 
  8867  0091                     	;# 
  8868  0092                     	;# 
  8869  0092                     	;# 
  8870  0093                     	;# 
  8871  0094                     	;# 
  8872  0094                     	;# 
  8873  0095                     	;# 
  8874  0096                     	;# 
  8875  0096                     	;# 
  8876  0097                     	;# 
  8877  0098                     	;# 
  8878  0099                     	;# 
  8879  009A                     	;# 
  8880  009B                     	;# 
  8881  009B                     	;# 
  8882  009C                     	;# 
  8883  009D                     	;# 
  8884  009D                     	;# 
  8885  009E                     	;# 
  8886  009F                     	;# 
  8887  010C                     	;# 
  8888  010C                     	;# 
  8889  010D                     	;# 
  8890  010E                     	;# 
  8891  010F                     	;# 
  8892  010F                     	;# 
  8893  0110                     	;# 
  8894  0111                     	;# 
  8895  0112                     	;# 
  8896  0113                     	;# 
  8897  0114                     	;# 
  8898  0115                     	;# 
  8899  0116                     	;# 
  8900  0117                     	;# 
  8901  0118                     	;# 
  8902  0119                     	;# 
  8903  0119                     	;# 
  8904  0119                     	;# 
  8905  011A                     	;# 
  8906  011A                     	;# 
  8907  011A                     	;# 
  8908  011B                     	;# 
  8909  011B                     	;# 
  8910  011B                     	;# 
  8911  011B                     	;# 
  8912  011B                     	;# 
  8913  011C                     	;# 
  8914  011C                     	;# 
  8915  011C                     	;# 
  8916  011D                     	;# 
  8917  011D                     	;# 
  8918  011D                     	;# 
  8919  011E                     	;# 
  8920  011E                     	;# 
  8921  011E                     	;# 
  8922  011F                     	;# 
  8923  011F                     	;# 
  8924  011F                     	;# 
  8925  011F                     	;# 
  8926  011F                     	;# 
  8927  018C                     	;# 
  8928  018D                     	;# 
  8929  018E                     	;# 
  8930  018F                     	;# 
  8931  0190                     	;# 
  8932  0191                     	;# 
  8933  0192                     	;# 
  8934  0196                     	;# 
  8935  0197                     	;# 
  8936  0198                     	;# 
  8937  0199                     	;# 
  8938  019A                     	;# 
  8939  019B                     	;# 
  8940  019C                     	;# 
  8941  020C                     	;# 
  8942  020D                     	;# 
  8943  020E                     	;# 
  8944  020E                     	;# 
  8945  020F                     	;# 
  8946  020F                     	;# 
  8947  0210                     	;# 
  8948  0210                     	;# 
  8949  0211                     	;# 
  8950  0211                     	;# 
  8951  0212                     	;# 
  8952  0213                     	;# 
  8953  0214                     	;# 
  8954  0214                     	;# 
  8955  0215                     	;# 
  8956  0215                     	;# 
  8957  0216                     	;# 
  8958  0216                     	;# 
  8959  0217                     	;# 
  8960  0217                     	;# 
  8961  0218                     	;# 
  8962  0219                     	;# 
  8963  021A                     	;# 
  8964  021A                     	;# 
  8965  021B                     	;# 
  8966  021B                     	;# 
  8967  021C                     	;# 
  8968  021C                     	;# 
  8969  021D                     	;# 
  8970  021D                     	;# 
  8971  021E                     	;# 
  8972  021F                     	;# 
  8973  028C                     	;# 
  8974  028C                     	;# 
  8975  028D                     	;# 
  8976  028D                     	;# 
  8977  028E                     	;# 
  8978  028F                     	;# 
  8979  0290                     	;# 
  8980  0291                     	;# 
  8981  0292                     	;# 
  8982  0292                     	;# 
  8983  0293                     	;# 
  8984  0293                     	;# 
  8985  0294                     	;# 
  8986  0295                     	;# 
  8987  0296                     	;# 
  8988  0297                     	;# 
  8989  0298                     	;# 
  8990  0298                     	;# 
  8991  0299                     	;# 
  8992  0299                     	;# 
  8993  029A                     	;# 
  8994  029B                     	;# 
  8995  029C                     	;# 
  8996  029D                     	;# 
  8997  029F                     	;# 
  8998  030C                     	;# 
  8999  030C                     	;# 
  9000  030D                     	;# 
  9001  030E                     	;# 
  9002  030F                     	;# 
  9003  0310                     	;# 
  9004  0310                     	;# 
  9005  0311                     	;# 
  9006  0312                     	;# 
  9007  0313                     	;# 
  9008  0314                     	;# 
  9009  0314                     	;# 
  9010  0315                     	;# 
  9011  0316                     	;# 
  9012  0317                     	;# 
  9013  0318                     	;# 
  9014  0318                     	;# 
  9015  0319                     	;# 
  9016  031A                     	;# 
  9017  031B                     	;# 
  9018  038C                     	;# 
  9019  038C                     	;# 
  9020  038D                     	;# 
  9021  038E                     	;# 
  9022  0390                     	;# 
  9023  0390                     	;# 
  9024  0391                     	;# 
  9025  0392                     	;# 
  9026  048C                     	;# 
  9027  048C                     	;# 
  9028  048D                     	;# 
  9029  048E                     	;# 
  9030  048F                     	;# 
  9031  048F                     	;# 
  9032  0490                     	;# 
  9033  0491                     	;# 
  9034  0492                     	;# 
  9035  0492                     	;# 
  9036  0493                     	;# 
  9037  0494                     	;# 
  9038  0495                     	;# 
  9039  0495                     	;# 
  9040  0496                     	;# 
  9041  0497                     	;# 
  9042  0498                     	;# 
  9043  0499                     	;# 
  9044  049A                     	;# 
  9045  049B                     	;# 
  9046  049C                     	;# 
  9047  049D                     	;# 
  9048  058C                     	;# 
  9049  058C                     	;# 
  9050  058D                     	;# 
  9051  058E                     	;# 
  9052  058F                     	;# 
  9053  058F                     	;# 
  9054  0590                     	;# 
  9055  0591                     	;# 
  9056  0592                     	;# 
  9057  0593                     	;# 
  9058  059C                     	;# 
  9059  059C                     	;# 
  9060  059D                     	;# 
  9061  059D                     	;# 
  9062  059E                     	;# 
  9063  059F                     	;# 
  9064  060C                     	;# 
  9065  060C                     	;# 
  9066  060D                     	;# 
  9067  060D                     	;# 
  9068  060E                     	;# 
  9069  060F                     	;# 
  9070  0610                     	;# 
  9071  0611                     	;# 
  9072  0612                     	;# 
  9073  0613                     	;# 
  9074  0614                     	;# 
  9075  0616                     	;# 
  9076  0616                     	;# 
  9077  0617                     	;# 
  9078  0617                     	;# 
  9079  0618                     	;# 
  9080  0619                     	;# 
  9081  061A                     	;# 
  9082  061B                     	;# 
  9083  061C                     	;# 
  9084  061D                     	;# 
  9085  061E                     	;# 
  9086  070C                     	;# 
  9087  070D                     	;# 
  9088  070E                     	;# 
  9089  070F                     	;# 
  9090  0710                     	;# 
  9091  0711                     	;# 
  9092  0712                     	;# 
  9093  0713                     	;# 
  9094  0714                     	;# 
  9095  0716                     	;# 
  9096  0717                     	;# 
  9097  0718                     	;# 
  9098  0719                     	;# 
  9099  071A                     	;# 
  9100  071B                     	;# 
  9101  071C                     	;# 
  9102  071D                     	;# 
  9103  071E                     	;# 
  9104  0796                     	;# 
  9105  0797                     	;# 
  9106  0798                     	;# 
  9107  0799                     	;# 
  9108  079A                     	;# 
  9109  079B                     	;# 
  9110  079C                     	;# 
  9111  079D                     	;# 
  9112  080C                     	;# 
  9113  080D                     	;# 
  9114  080E                     	;# 
  9115  080F                     	;# 
  9116  0810                     	;# 
  9117  0811                     	;# 
  9118  0812                     	;# 
  9119  0813                     	;# 
  9120  0814                     	;# 
  9121  081A                     	;# 
  9122  081A                     	;# 
  9123  081B                     	;# 
  9124  081C                     	;# 
  9125  081C                     	;# 
  9126  081D                     	;# 
  9127  081E                     	;# 
  9128  081F                     	;# 
  9129  088C                     	;# 
  9130  088D                     	;# 
  9131  088E                     	;# 
  9132  088F                     	;# 
  9133  0890                     	;# 
  9134  0891                     	;# 
  9135  0892                     	;# 
  9136  0893                     	;# 
  9137  0895                     	;# 
  9138  0896                     	;# 
  9139  0897                     	;# 
  9140  0898                     	;# 
  9141  0899                     	;# 
  9142  089A                     	;# 
  9143  089B                     	;# 
  9144  090C                     	;# 
  9145  090E                     	;# 
  9146  090F                     	;# 
  9147  091F                     	;# 
  9148  098F                     	;# 
  9149  098F                     	;# 
  9150  0990                     	;# 
  9151  0991                     	;# 
  9152  0992                     	;# 
  9153  0993                     	;# 
  9154  0994                     	;# 
  9155  0995                     	;# 
  9156  0996                     	;# 
  9157  0997                     	;# 
  9158  1E0F                     	;# 
  9159  1E10                     	;# 
  9160  1E11                     	;# 
  9161  1E12                     	;# 
  9162  1E13                     	;# 
  9163  1E14                     	;# 
  9164  1E15                     	;# 
  9165  1E16                     	;# 
  9166  1E17                     	;# 
  9167  1E18                     	;# 
  9168  1E19                     	;# 
  9169  1E1A                     	;# 
  9170  1E1B                     	;# 
  9171  1E1C                     	;# 
  9172  1E1D                     	;# 
  9173  1E1E                     	;# 
  9174  1E1F                     	;# 
  9175  1E20                     	;# 
  9176  1E21                     	;# 
  9177  1E22                     	;# 
  9178  1E23                     	;# 
  9179  1E24                     	;# 
  9180  1E25                     	;# 
  9181  1E26                     	;# 
  9182  1E27                     	;# 
  9183  1E28                     	;# 
  9184  1E29                     	;# 
  9185  1E2A                     	;# 
  9186  1E2B                     	;# 
  9187  1E2C                     	;# 
  9188  1E2D                     	;# 
  9189  1E2E                     	;# 
  9190  1E2F                     	;# 
  9191  1E30                     	;# 
  9192  1E31                     	;# 
  9193  1E32                     	;# 
  9194  1E33                     	;# 
  9195  1E34                     	;# 
  9196  1E35                     	;# 
  9197  1E36                     	;# 
  9198  1E37                     	;# 
  9199  1E8F                     	;# 
  9200  1E90                     	;# 
  9201  1E91                     	;# 
  9202  1E92                     	;# 
  9203  1E93                     	;# 
  9204  1E94                     	;# 
  9205  1E95                     	;# 
  9206  1E96                     	;# 
  9207  1E97                     	;# 
  9208  1E9C                     	;# 
  9209  1E9D                     	;# 
  9210  1E9E                     	;# 
  9211  1EA1                     	;# 
  9212  1EA2                     	;# 
  9213  1EA3                     	;# 
  9214  1EA4                     	;# 
  9215  1EA9                     	;# 
  9216  1EAA                     	;# 
  9217  1EB1                     	;# 
  9218  1EB2                     	;# 
  9219  1EB8                     	;# 
  9220  1EB9                     	;# 
  9221  1EBA                     	;# 
  9222  1EBB                     	;# 
  9223  1EBC                     	;# 
  9224  1EBD                     	;# 
  9225  1EBE                     	;# 
  9226  1EC3                     	;# 
  9227  1EC5                     	;# 
  9228  1EC6                     	;# 
  9229  1EC7                     	;# 
  9230  1EC8                     	;# 
  9231  1EC9                     	;# 
  9232  1ECA                     	;# 
  9233  1ECB                     	;# 
  9234  1ECB                     	;# 
  9235  1ECB                     	;# 
  9236  1ECC                     	;# 
  9237  1ECC                     	;# 
  9238  1ECC                     	;# 
  9239  1F10                     	;# 
  9240  1F11                     	;# 
  9241  1F12                     	;# 
  9242  1F14                     	;# 
  9243  1F15                     	;# 
  9244  1F1C                     	;# 
  9245  1F1D                     	;# 
  9246  1F1E                     	;# 
  9247  1F1F                     	;# 
  9248  1F20                     	;# 
  9249  1F21                     	;# 
  9250  1F22                     	;# 
  9251  1F23                     	;# 
  9252  1F24                     	;# 
  9253  1F25                     	;# 
  9254  1F26                     	;# 
  9255  1F27                     	;# 
  9256  1F38                     	;# 
  9257  1F39                     	;# 
  9258  1F3A                     	;# 
  9259  1F3B                     	;# 
  9260  1F3C                     	;# 
  9261  1F3D                     	;# 
  9262  1F3E                     	;# 
  9263  1F3F                     	;# 
  9264  1F43                     	;# 
  9265  1F44                     	;# 
  9266  1F45                     	;# 
  9267  1F46                     	;# 
  9268  1F47                     	;# 
  9269  1F48                     	;# 
  9270  1F49                     	;# 
  9271  1F4A                     	;# 
  9272  1F4E                     	;# 
  9273  1F4F                     	;# 
  9274  1F50                     	;# 
  9275  1F51                     	;# 
  9276  1F52                     	;# 
  9277  1F53                     	;# 
  9278  1F54                     	;# 
  9279  1F55                     	;# 
  9280  1FE4                     	;# 
  9281  1FE5                     	;# 
  9282  1FE6                     	;# 
  9283  1FE7                     	;# 
  9284  1FE8                     	;# 
  9285  1FE8                     	;# 
  9286  1FE9                     	;# 
  9287  1FEA                     	;# 
  9288  1FEB                     	;# 
  9289  1FED                     	;# 
  9290  1FEE                     	;# 
  9291  1FEF                     	;# 
  9292  0000                     	;# 
  9293  0001                     	;# 
  9294  0002                     	;# 
  9295  0003                     	;# 
  9296  0004                     	;# 
  9297  0005                     	;# 
  9298  0006                     	;# 
  9299  0007                     	;# 
  9300  0008                     	;# 
  9301  0009                     	;# 
  9302  000A                     	;# 
  9303  000B                     	;# 
  9304  000C                     	;# 
  9305  000D                     	;# 
  9306  000E                     	;# 
  9307  0012                     	;# 
  9308  0013                     	;# 
  9309  0014                     	;# 
  9310  0018                     	;# 
  9311  0019                     	;# 
  9312  001A                     	;# 
  9313  008C                     	;# 
  9314  008C                     	;# 
  9315  008D                     	;# 
  9316  008E                     	;# 
  9317  008E                     	;# 
  9318  008F                     	;# 
  9319  0090                     	;# 
  9320  0090                     	;# 
  9321  0091                     	;# 
  9322  0092                     	;# 
  9323  0092                     	;# 
  9324  0093                     	;# 
  9325  0094                     	;# 
  9326  0094                     	;# 
  9327  0095                     	;# 
  9328  0096                     	;# 
  9329  0096                     	;# 
  9330  0097                     	;# 
  9331  0098                     	;# 
  9332  0099                     	;# 
  9333  009A                     	;# 
  9334  009B                     	;# 
  9335  009B                     	;# 
  9336  009C                     	;# 
  9337  009D                     	;# 
  9338  009D                     	;# 
  9339  009E                     	;# 
  9340  009F                     	;# 
  9341  010C                     	;# 
  9342  010C                     	;# 
  9343  010D                     	;# 
  9344  010E                     	;# 
  9345  010F                     	;# 
  9346  010F                     	;# 
  9347  0110                     	;# 
  9348  0111                     	;# 
  9349  0112                     	;# 
  9350  0113                     	;# 
  9351  0114                     	;# 
  9352  0115                     	;# 
  9353  0116                     	;# 
  9354  0117                     	;# 
  9355  0118                     	;# 
  9356  0119                     	;# 
  9357  0119                     	;# 
  9358  0119                     	;# 
  9359  011A                     	;# 
  9360  011A                     	;# 
  9361  011A                     	;# 
  9362  011B                     	;# 
  9363  011B                     	;# 
  9364  011B                     	;# 
  9365  011B                     	;# 
  9366  011B                     	;# 
  9367  011C                     	;# 
  9368  011C                     	;# 
  9369  011C                     	;# 
  9370  011D                     	;# 
  9371  011D                     	;# 
  9372  011D                     	;# 
  9373  011E                     	;# 
  9374  011E                     	;# 
  9375  011E                     	;# 
  9376  011F                     	;# 
  9377  011F                     	;# 
  9378  011F                     	;# 
  9379  011F                     	;# 
  9380  011F                     	;# 
  9381  018C                     	;# 
  9382  018D                     	;# 
  9383  018E                     	;# 
  9384  018F                     	;# 
  9385  0190                     	;# 
  9386  0191                     	;# 
  9387  0192                     	;# 
  9388  0196                     	;# 
  9389  0197                     	;# 
  9390  0198                     	;# 
  9391  0199                     	;# 
  9392  019A                     	;# 
  9393  019B                     	;# 
  9394  019C                     	;# 
  9395  020C                     	;# 
  9396  020D                     	;# 
  9397  020E                     	;# 
  9398  020E                     	;# 
  9399  020F                     	;# 
  9400  020F                     	;# 
  9401  0210                     	;# 
  9402  0210                     	;# 
  9403  0211                     	;# 
  9404  0211                     	;# 
  9405  0212                     	;# 
  9406  0213                     	;# 
  9407  0214                     	;# 
  9408  0214                     	;# 
  9409  0215                     	;# 
  9410  0215                     	;# 
  9411  0216                     	;# 
  9412  0216                     	;# 
  9413  0217                     	;# 
  9414  0217                     	;# 
  9415  0218                     	;# 
  9416  0219                     	;# 
  9417  021A                     	;# 
  9418  021A                     	;# 
  9419  021B                     	;# 
  9420  021B                     	;# 
  9421  021C                     	;# 
  9422  021C                     	;# 
  9423  021D                     	;# 
  9424  021D                     	;# 
  9425  021E                     	;# 
  9426  021F                     	;# 
  9427  028C                     	;# 
  9428  028C                     	;# 
  9429  028D                     	;# 
  9430  028D                     	;# 
  9431  028E                     	;# 
  9432  028F                     	;# 
  9433  0290                     	;# 
  9434  0291                     	;# 
  9435  0292                     	;# 
  9436  0292                     	;# 
  9437  0293                     	;# 
  9438  0293                     	;# 
  9439  0294                     	;# 
  9440  0295                     	;# 
  9441  0296                     	;# 
  9442  0297                     	;# 
  9443  0298                     	;# 
  9444  0298                     	;# 
  9445  0299                     	;# 
  9446  0299                     	;# 
  9447  029A                     	;# 
  9448  029B                     	;# 
  9449  029C                     	;# 
  9450  029D                     	;# 
  9451  029F                     	;# 
  9452  030C                     	;# 
  9453  030C                     	;# 
  9454  030D                     	;# 
  9455  030E                     	;# 
  9456  030F                     	;# 
  9457  0310                     	;# 
  9458  0310                     	;# 
  9459  0311                     	;# 
  9460  0312                     	;# 
  9461  0313                     	;# 
  9462  0314                     	;# 
  9463  0314                     	;# 
  9464  0315                     	;# 
  9465  0316                     	;# 
  9466  0317                     	;# 
  9467  0318                     	;# 
  9468  0318                     	;# 
  9469  0319                     	;# 
  9470  031A                     	;# 
  9471  031B                     	;# 
  9472  038C                     	;# 
  9473  038C                     	;# 
  9474  038D                     	;# 
  9475  038E                     	;# 
  9476  0390                     	;# 
  9477  0390                     	;# 
  9478  0391                     	;# 
  9479  0392                     	;# 
  9480  048C                     	;# 
  9481  048C                     	;# 
  9482  048D                     	;# 
  9483  048E                     	;# 
  9484  048F                     	;# 
  9485  048F                     	;# 
  9486  0490                     	;# 
  9487  0491                     	;# 
  9488  0492                     	;# 
  9489  0492                     	;# 
  9490  0493                     	;# 
  9491  0494                     	;# 
  9492  0495                     	;# 
  9493  0495                     	;# 
  9494  0496                     	;# 
  9495  0497                     	;# 
  9496  0498                     	;# 
  9497  0499                     	;# 
  9498  049A                     	;# 
  9499  049B                     	;# 
  9500  049C                     	;# 
  9501  049D                     	;# 
  9502  058C                     	;# 
  9503  058C                     	;# 
  9504  058D                     	;# 
  9505  058E                     	;# 
  9506  058F                     	;# 
  9507  058F                     	;# 
  9508  0590                     	;# 
  9509  0591                     	;# 
  9510  0592                     	;# 
  9511  0593                     	;# 
  9512  059C                     	;# 
  9513  059C                     	;# 
  9514  059D                     	;# 
  9515  059D                     	;# 
  9516  059E                     	;# 
  9517  059F                     	;# 
  9518  060C                     	;# 
  9519  060C                     	;# 
  9520  060D                     	;# 
  9521  060D                     	;# 
  9522  060E                     	;# 
  9523  060F                     	;# 
  9524  0610                     	;# 
  9525  0611                     	;# 
  9526  0612                     	;# 
  9527  0613                     	;# 
  9528  0614                     	;# 
  9529  0616                     	;# 
  9530  0616                     	;# 
  9531  0617                     	;# 
  9532  0617                     	;# 
  9533  0618                     	;# 
  9534  0619                     	;# 
  9535  061A                     	;# 
  9536  061B                     	;# 
  9537  061C                     	;# 
  9538  061D                     	;# 
  9539  061E                     	;# 
  9540  070C                     	;# 
  9541  070D                     	;# 
  9542  070E                     	;# 
  9543  070F                     	;# 
  9544  0710                     	;# 
  9545  0711                     	;# 
  9546  0712                     	;# 
  9547  0713                     	;# 
  9548  0714                     	;# 
  9549  0716                     	;# 
  9550  0717                     	;# 
  9551  0718                     	;# 
  9552  0719                     	;# 
  9553  071A                     	;# 
  9554  071B                     	;# 
  9555  071C                     	;# 
  9556  071D                     	;# 
  9557  071E                     	;# 
  9558  0796                     	;# 
  9559  0797                     	;# 
  9560  0798                     	;# 
  9561  0799                     	;# 
  9562  079A                     	;# 
  9563  079B                     	;# 
  9564  079C                     	;# 
  9565  079D                     	;# 
  9566  080C                     	;# 
  9567  080D                     	;# 
  9568  080E                     	;# 
  9569  080F                     	;# 
  9570  0810                     	;# 
  9571  0811                     	;# 
  9572  0812                     	;# 
  9573  0813                     	;# 
  9574  0814                     	;# 
  9575  081A                     	;# 
  9576  081A                     	;# 
  9577  081B                     	;# 
  9578  081C                     	;# 
  9579  081C                     	;# 
  9580  081D                     	;# 
  9581  081E                     	;# 
  9582  081F                     	;# 
  9583  088C                     	;# 
  9584  088D                     	;# 
  9585  088E                     	;# 
  9586  088F                     	;# 
  9587  0890                     	;# 
  9588  0891                     	;# 
  9589  0892                     	;# 
  9590  0893                     	;# 
  9591  0895                     	;# 
  9592  0896                     	;# 
  9593  0897                     	;# 
  9594  0898                     	;# 
  9595  0899                     	;# 
  9596  089A                     	;# 
  9597  089B                     	;# 
  9598  090C                     	;# 
  9599  090E                     	;# 
  9600  090F                     	;# 
  9601  091F                     	;# 
  9602  098F                     	;# 
  9603  098F                     	;# 
  9604  0990                     	;# 
  9605  0991                     	;# 
  9606  0992                     	;# 
  9607  0993                     	;# 
  9608  0994                     	;# 
  9609  0995                     	;# 
  9610  0996                     	;# 
  9611  0997                     	;# 
  9612  1E0F                     	;# 
  9613  1E10                     	;# 
  9614  1E11                     	;# 
  9615  1E12                     	;# 
  9616  1E13                     	;# 
  9617  1E14                     	;# 
  9618  1E15                     	;# 
  9619  1E16                     	;# 
  9620  1E17                     	;# 
  9621  1E18                     	;# 
  9622  1E19                     	;# 
  9623  1E1A                     	;# 
  9624  1E1B                     	;# 
  9625  1E1C                     	;# 
  9626  1E1D                     	;# 
  9627  1E1E                     	;# 
  9628  1E1F                     	;# 
  9629  1E20                     	;# 
  9630  1E21                     	;# 
  9631  1E22                     	;# 
  9632  1E23                     	;# 
  9633  1E24                     	;# 
  9634  1E25                     	;# 
  9635  1E26                     	;# 
  9636  1E27                     	;# 
  9637  1E28                     	;# 
  9638  1E29                     	;# 
  9639  1E2A                     	;# 
  9640  1E2B                     	;# 
  9641  1E2C                     	;# 
  9642  1E2D                     	;# 
  9643  1E2E                     	;# 
  9644  1E2F                     	;# 
  9645  1E30                     	;# 
  9646  1E31                     	;# 
  9647  1E32                     	;# 
  9648  1E33                     	;# 
  9649  1E34                     	;# 
  9650  1E35                     	;# 
  9651  1E36                     	;# 
  9652  1E37                     	;# 
  9653  1E8F                     	;# 
  9654  1E90                     	;# 
  9655  1E91                     	;# 
  9656  1E92                     	;# 
  9657  1E93                     	;# 
  9658  1E94                     	;# 
  9659  1E95                     	;# 
  9660  1E96                     	;# 
  9661  1E97                     	;# 
  9662  1E9C                     	;# 
  9663  1E9D                     	;# 
  9664  1E9E                     	;# 
  9665  1EA1                     	;# 
  9666  1EA2                     	;# 
  9667  1EA3                     	;# 
  9668  1EA4                     	;# 
  9669  1EA9                     	;# 
  9670  1EAA                     	;# 
  9671  1EB1                     	;# 
  9672  1EB2                     	;# 
  9673  1EB8                     	;# 
  9674  1EB9                     	;# 
  9675  1EBA                     	;# 
  9676  1EBB                     	;# 
  9677  1EBC                     	;# 
  9678  1EBD                     	;# 
  9679  1EBE                     	;# 
  9680  1EC3                     	;# 
  9681  1EC5                     	;# 
  9682  1EC6                     	;# 
  9683  1EC7                     	;# 
  9684  1EC8                     	;# 
  9685  1EC9                     	;# 
  9686  1ECA                     	;# 
  9687  1ECB                     	;# 
  9688  1ECB                     	;# 
  9689  1ECB                     	;# 
  9690  1ECC                     	;# 
  9691  1ECC                     	;# 
  9692  1ECC                     	;# 
  9693  1F10                     	;# 
  9694  1F11                     	;# 
  9695  1F12                     	;# 
  9696  1F14                     	;# 
  9697  1F15                     	;# 
  9698  1F1C                     	;# 
  9699  1F1D                     	;# 
  9700  1F1E                     	;# 
  9701  1F1F                     	;# 
  9702  1F20                     	;# 
  9703  1F21                     	;# 
  9704  1F22                     	;# 
  9705  1F23                     	;# 
  9706  1F24                     	;# 
  9707  1F25                     	;# 
  9708  1F26                     	;# 
  9709  1F27                     	;# 
  9710  1F38                     	;# 
  9711  1F39                     	;# 
  9712  1F3A                     	;# 
  9713  1F3B                     	;# 
  9714  1F3C                     	;# 
  9715  1F3D                     	;# 
  9716  1F3E                     	;# 
  9717  1F3F                     	;# 
  9718  1F43                     	;# 
  9719  1F44                     	;# 
  9720  1F45                     	;# 
  9721  1F46                     	;# 
  9722  1F47                     	;# 
  9723  1F48                     	;# 
  9724  1F49                     	;# 
  9725  1F4A                     	;# 
  9726  1F4E                     	;# 
  9727  1F4F                     	;# 
  9728  1F50                     	;# 
  9729  1F51                     	;# 
  9730  1F52                     	;# 
  9731  1F53                     	;# 
  9732  1F54                     	;# 
  9733  1F55                     	;# 
  9734  1FE4                     	;# 
  9735  1FE5                     	;# 
  9736  1FE6                     	;# 
  9737  1FE7                     	;# 
  9738  1FE8                     	;# 
  9739  1FE8                     	;# 
  9740  1FE9                     	;# 
  9741  1FEA                     	;# 
  9742  1FEB                     	;# 
  9743  1FED                     	;# 
  9744  1FEE                     	;# 
  9745  1FEF                     	;_dmxArray
  9746                           
  9747                           	psect	idataBANK1
  9748  1BA0                     __pidataBANK1:	
  9749                           
  9750                           ;initializer for _incInterval
  9751  1BA0  3464               	retlw	100
  9752  1BA1  3400               	retlw	0
  9753                           
  9754                           ;initializer for _address
  9755  1BA2  3401               	retlw	1
  9756  1BA3  3400               	retlw	0
  9757                           
  9758                           ;initializer for _animationBrightness
  9759  1BA4  3405               	retlw	5
  9760                           
  9761                           ;initializer for _animationModeSelected
  9762  1BA5  3401               	retlw	1
  9763                           
  9764                           ;initializer for _startup
  9765  1BA6  3401               	retlw	1
  9766                           
  9767                           ;initializer for _beatBrightness
  9768  1BA7  3405               	retlw	5
  9769                           
  9770                           	psect	idataBANK2
  9771  07F9                     __pidataBANK2:	
  9772                           
  9773                           ;initializer for _initial
  9774  07F9  3401               	retlw	1
  9775  07FA  3400               	retlw	0
  9776                           
  9777                           ;initializer for _delay
  9778  07FB  340A               	retlw	10
  9779  07FC  3400               	retlw	0
  9780                           
  9781                           ;initializer for _threshold
  9782  07FD  3490               	retlw	144
  9783  07FE  3406               	retlw	6
  9784                           
  9785                           	psect	stringtext1
  9786  1800                     __pstringtext1:	
  9787  1800                     _charTable:	
  9788  1800  3400               	retlw	0
  9789  1801  3482               	retlw	130
  9790  1802  3421               	retlw	33
  9791  1803  3400               	retlw	0
  9792  1804  3400               	retlw	0
  9793  1805  3400               	retlw	0
  9794  1806  3400               	retlw	0
  9795  1807  3402               	retlw	2
  9796  1808  3439               	retlw	57
  9797  1809  340F               	retlw	15
  9798  180A  3400               	retlw	0
  9799  180B  3400               	retlw	0
  9800  180C  3400               	retlw	0
  9801  180D  3440               	retlw	64
  9802  180E  3480               	retlw	128
  9803  180F  3400               	retlw	0
  9804  1810  343F               	retlw	63
  9805  1811  3406               	retlw	6
  9806  1812  345B               	retlw	91
  9807  1813  344F               	retlw	79
  9808  1814  3466               	retlw	102
  9809  1815  346D               	retlw	109
  9810  1816  347D               	retlw	125
  9811  1817  3407               	retlw	7
  9812  1818  347F               	retlw	127
  9813  1819  346F               	retlw	111
  9814  181A  3400               	retlw	0
  9815  181B  3400               	retlw	0
  9816  181C  3400               	retlw	0
  9817  181D  3448               	retlw	72
  9818  181E  3400               	retlw	0
  9819  181F  3453               	retlw	83
  9820  1820  3400               	retlw	0
  9821  1821  3477               	retlw	119
  9822  1822  347C               	retlw	124
  9823  1823  3439               	retlw	57
  9824  1824  345E               	retlw	94
  9825  1825  3479               	retlw	121
  9826  1826  3471               	retlw	113
  9827  1827  346F               	retlw	111
  9828  1828  3476               	retlw	118
  9829  1829  3406               	retlw	6
  9830  182A  341E               	retlw	30
  9831  182B  3400               	retlw	0
  9832  182C  3438               	retlw	56
  9833  182D  3400               	retlw	0
  9834  182E  3454               	retlw	84
  9835  182F  343F               	retlw	63
  9836  1830  3473               	retlw	115
  9837  1831  3467               	retlw	103
  9838  1832  3450               	retlw	80
  9839  1833  346D               	retlw	109
  9840  1834  3478               	retlw	120
  9841  1835  343E               	retlw	62
  9842  1836  3400               	retlw	0
  9843  1837  3400               	retlw	0
  9844  1838  3400               	retlw	0
  9845  1839  346E               	retlw	110
  9846  183A  3400               	retlw	0
  9847  183B  3439               	retlw	57
  9848  183C  3400               	retlw	0
  9849  183D  340F               	retlw	15
  9850  183E  3400               	retlw	0
  9851  183F  3408               	retlw	8
  9852  1840  3463               	retlw	99
  9853  1841  345F               	retlw	95
  9854  1842  347C               	retlw	124
  9855  1843  3458               	retlw	88
  9856  1844  345E               	retlw	94
  9857  1845  347B               	retlw	123
  9858  1846  3471               	retlw	113
  9859  1847  346F               	retlw	111
  9860  1848  3474               	retlw	116
  9861  1849  3402               	retlw	2
  9862  184A  341E               	retlw	30
  9863  184B  3400               	retlw	0
  9864  184C  3406               	retlw	6
  9865  184D  3400               	retlw	0
  9866  184E  3454               	retlw	84
  9867  184F  345C               	retlw	92
  9868  1850  3473               	retlw	115
  9869  1851  3467               	retlw	103
  9870  1852  3450               	retlw	80
  9871  1853  346D               	retlw	109
  9872  1854  3478               	retlw	120
  9873  1855  341C               	retlw	28
  9874  1856  3400               	retlw	0
  9875  1857  3400               	retlw	0
  9876  1858  3400               	retlw	0
  9877  1859  346E               	retlw	110
  9878  185A  3400               	retlw	0
  9879  185B  3439               	retlw	57
  9880  185C  3430               	retlw	48
  9881  185D  340F               	retlw	15
  9882  185E  3400               	retlw	0
  9883  185F  3400               	retlw	0
  9884  1860                     __end_of_charTable:	
  9885                           
  9886                           	psect	nvBANK2
  9887  0161                     __pnvBANK2:	
  9888  0161                     _ADCC_ADTI_InterruptHandler:	
  9889  0161                     	ds	2
  9890  0163                     _TMR0_InterruptHandler:	
  9891  0163                     	ds	2
  9892  0165                     _EUSART1_RxDefaultInterruptHandler:	
  9893  0165                     	ds	2
  9894                           
  9895                           	psect	nvBANK4
  9896  026C                     __pnvBANK4:	
  9897  026C                     _EUSART1_FramingErrorHandler:	
  9898  026C                     	ds	2
  9899                           
  9900                           	psect	nvBANK5
  9901  02E0                     __pnvBANK5:	
  9902  02E0                     _EUSART1_ErrorHandler:	
  9903  02E0                     	ds	2
  9904  02E2                     _EUSART1_OverrunErrorHandler:	
  9905  02E2                     	ds	2
  9906  0014                     _TRISCbits	set	20
  9907  0012                     _TRISAbits	set	18
  9908  000B                     _INTCONbits	set	11
  9909  0014                     _TRISC	set	20
  9910  0013                     _TRISB	set	19
  9911  0012                     _TRISA	set	18
  9912  001A                     _LATC	set	26
  9913  0019                     _LATB	set	25
  9914  0018                     _LATA	set	24
  9915  000C                     _PORTA	set	12
  9916  000E                     _PORTC	set	14
  9917  00D5                     _LATC5	set	213
  9918  0090                     _ADERRL	set	144
  9919  0091                     _ADERRH	set	145
  9920  009B                     _ADPREVL	set	155
  9921  009C                     _ADPREVH	set	156
  9922  0094                     _ADFLTRL	set	148
  9923  0095                     _ADFLTRH	set	149
  9924  0096                     _ADACCL	set	150
  9925  0097                     _ADACCH	set	151
  9926  0099                     _ADCNT	set	153
  9927  009D                     _ADRESL	set	157
  9928  009E                     _ADRESH	set	158
  9929  009F                     _ADPCH	set	159
  9930  009A                     _ADRPT	set	154
  9931  0098                     _ADACCU	set	152
  9932  0093                     _ADSTPTH	set	147
  9933  0092                     _ADSTPTL	set	146
  9934  008F                     _ADUTHH	set	143
  9935  008E                     _ADUTHL	set	142
  9936  008D                     _ADLTHH	set	141
  9937  008C                     _ADLTHL	set	140
  9938  0112                     _ADCON1bits	set	274
  9939  0115                     _ADSTATbits	set	277
  9940  0113                     _ADCON2bits	set	275
  9941  0114                     _ADCON3bits	set	276
  9942  0111                     _ADCON0bits	set	273
  9943  0111                     _ADCON0	set	273
  9944  0118                     _ADCLK	set	280
  9945  0117                     _ADACT	set	279
  9946  0116                     _ADREF	set	278
  9947  0115                     _ADSTAT	set	277
  9948  0114                     _ADCON3	set	276
  9949  0113                     _ADCON2	set	275
  9950  0112                     _ADCON1	set	274
  9951  0110                     _ADPREH	set	272
  9952  010F                     _ADPREL	set	271
  9953  010E                     _ADCAP	set	270
  9954  010D                     _ADACQH	set	269
  9955  010C                     _ADACQL	set	268
  9956  0119                     _RC1REG	set	281
  9957  011D                     _RC1STAbits	set	285
  9958  011A                     _TX1REG	set	282
  9959  011E                     _TX1STAbits	set	286
  9960  011C                     _SP1BRGH	set	284
  9961  011B                     _SP1BRGL	set	283
  9962  011E                     _TX1STA	set	286
  9963  011D                     _RC1STA	set	285
  9964  011F                     _BAUD1CON	set	287
  9965  018C                     _SSP1BUF	set	396
  9966  0191                     _SSP1CON2bits	set	401
  9967  0190                     _SSP1CON1bits	set	400
  9968  018D                     _SSP1ADD	set	397
  9969  0192                     _SSP1CON3	set	402
  9970  0190                     _SSP1CON1	set	400
  9971  018F                     _SSP1STAT	set	399
  9972  021E                     _CCPTMRS0bits	set	542
  9973  028D                     _PR2	set	653
  9974  028C                     _TMR2	set	652
  9975  028E                     _T2CONbits	set	654
  9976  0291                     _T2RSTbits	set	657
  9977  028F                     _T2HLTbits	set	655
  9978  028E                     _T2CON	set	654
  9979  028C                     _T2TMR	set	652
  9980  028D                     _T2PR	set	653
  9981  0291                     _T2RST	set	657
  9982  028F                     _T2HLT	set	655
  9983  0290                     _T2CLKCON	set	656
  9984  0312                     _CCP2CONbits	set	786
  9985  0310                     _CCPR2L	set	784
  9986  0311                     _CCPR2H	set	785
  9987  0312                     _CCP2CON	set	786
  9988  030E                     _CCP1CONbits	set	782
  9989  030C                     _CCPR1L	set	780
  9990  030D                     _CCPR1H	set	781
  9991  030E                     _CCP1CON	set	782
  9992  031A                     _CCP4CONbits	set	794
  9993  0318                     _CCPR4L	set	792
  9994  0319                     _CCPR4H	set	793
  9995  031A                     _CCP4CON	set	794
  9996  0316                     _CCP3CONbits	set	790
  9997  0314                     _CCPR3L	set	788
  9998  0315                     _CCPR3H	set	789
  9999  0316                     _CCP3CON	set	790
 10000  059E                     _T0CON0bits	set	1438
 10001  059E                     _T0CON0	set	1438
 10002  059C                     _TMR0L	set	1436
 10003  059D                     _TMR0H	set	1437
 10004  059F                     _T0CON1	set	1439
 10005  070D                     _PIR1bits	set	1805
 10006  0717                     _PIE1bits	set	1815
 10007  070C                     _PIR0bits	set	1804
 10008  0716                     _PIE0bits	set	1814
 10009  070F                     _PIR3bits	set	1807
 10010  0719                     _PIE3bits	set	1817
 10011  0710                     _PIR4bits	set	1808
 10012  079D                     _PMD7	set	1949
 10013  079C                     _PMD6	set	1948
 10014  079B                     _PMD5	set	1947
 10015  079A                     _PMD4	set	1946
 10016  0799                     _PMD3	set	1945
 10017  0798                     _PMD2	set	1944
 10018  0797                     _PMD1	set	1943
 10019  0796                     _PMD0	set	1942
 10020  0892                     _OSCTUNE	set	2194
 10021  0893                     _OSCFRQ	set	2195
 10022  0891                     _OSCEN	set	2193
 10023  088F                     _OSCCON3	set	2191
 10024  088D                     _OSCCON1	set	2189
 10025  1ECB                     _RX1DTPPS	set	7883
 10026  1EC6                     _SSP1DATPPS	set	7878
 10027  1EC5                     _SSP1CLKPPS	set	7877
 10028  1F4F                     _WPUCbits	set	8015
 10029  1F4E                     _ANSELCbits	set	8014
 10030  1F39                     _WPUAbits	set	7993
 10031  1F38                     _ANSELAbits	set	7992
 10032  1F27                     _RC7PPS	set	7975
 10033  1F26                     _RC6PPS	set	7974
 10034  1F25                     _RC5PPS	set	7973
 10035  1F15                     _RA5PPS	set	7957
 10036  1F24                     _RC4PPS	set	7972
 10037  1F23                     _RC3PPS	set	7971
 10038  1F14                     _RA4PPS	set	7956
 10039  1F51                     _SLRCONC	set	8017
 10040  1F46                     _SLRCONB	set	8006
 10041  1F3B                     _SLRCONA	set	7995
 10042  1F50                     _ODCONC	set	8016
 10043  1F45                     _ODCONB	set	8005
 10044  1F3A                     _ODCONA	set	7994
 10045  1F4F                     _WPUC	set	8015
 10046  1F39                     _WPUA	set	7993
 10047  1F44                     _WPUB	set	8004
 10048  1F38                     _ANSELA	set	7992
 10049  1F43                     _ANSELB	set	8003
 10050  1F4E                     _ANSELC	set	8014
 10051                           
 10052                           	psect	stringtext2
 10053  2000                     __pstringtext2:	
 10054  2000                     STR_25:	
 10055  2000  3425               	retlw	37	;'%'
 10056  2001  3463               	retlw	99	;'c'
 10057  2002  3425               	retlw	37	;'%'
 10058  2003  3463               	retlw	99	;'c'
 10059  2004  3425               	retlw	37	;'%'
 10060  2005  3463               	retlw	99	;'c'
 10061  2006  3425               	retlw	37	;'%'
 10062  2007  3463               	retlw	99	;'c'
 10063  2008  340D               	retlw	13
 10064  2009  3400               	retlw	0
 10065                           
 10066                           	psect	stringtext3
 10067  200A                     __pstringtext3:	
 10068  200A                     STR_26:	
 10069  200A  3425               	retlw	37	;'%'
 10070  200B  3463               	retlw	99	;'c'
 10071  200C  3425               	retlw	37	;'%'
 10072  200D  3463               	retlw	99	;'c'
 10073  200E  3425               	retlw	37	;'%'
 10074  200F  3463               	retlw	99	;'c'
 10075  2010  3420               	retlw	32	;' '
 10076  2011  340D               	retlw	13
 10077  2012  3400               	retlw	0
 10078                           
 10079                           	psect	stringtext4
 10080  2013                     __pstringtext4:	
 10081  2013                     STR_24:	
 10082  2013  3420               	retlw	32	;' '
 10083  2014  3425               	retlw	37	;'%'
 10084  2015  3463               	retlw	99	;'c'
 10085  2016  3425               	retlw	37	;'%'
 10086  2017  3463               	retlw	99	;'c'
 10087  2018  3425               	retlw	37	;'%'
 10088  2019  3463               	retlw	99	;'c'
 10089  201A  340D               	retlw	13
 10090  201B  3400               	retlw	0
 10091                           
 10092                           	psect	stringtext5
 10093  201C                     __pstringtext5:	
 10094  201C                     STR_21:	
 10095  201C  3448               	retlw	72	;'H'
 10096  201D  3445               	retlw	69	;'E'
 10097  201E  3459               	retlw	89	;'Y'
 10098  201F  3459               	retlw	89	;'Y'
 10099  2020  3459               	retlw	89	;'Y'
 10100  2021  3459               	retlw	89	;'Y'
 10101  2022  3459               	retlw	89	;'Y'
 10102  2023  3459               	retlw	89	;'Y'
 10103  2024  3400               	retlw	0
 10104                           
 10105                           	psect	stringtext6
 10106  2025                     __pstringtext6:	
 10107  2025                     STR_27:	
 10108  2025  3425               	retlw	37	;'%'
 10109  2026  3463               	retlw	99	;'c'
 10110  2027  3425               	retlw	37	;'%'
 10111  2028  3463               	retlw	99	;'c'
 10112  2029  3420               	retlw	32	;' '
 10113  202A  3420               	retlw	32	;' '
 10114  202B  340D               	retlw	13
 10115  202C  3400               	retlw	0
 10116                           
 10117                           	psect	stringtext7
 10118  202D                     __pstringtext7:	
 10119  202D                     STR_23:	
 10120  202D  3420               	retlw	32	;' '
 10121  202E  3420               	retlw	32	;' '
 10122  202F  3425               	retlw	37	;'%'
 10123  2030  3463               	retlw	99	;'c'
 10124  2031  3425               	retlw	37	;'%'
 10125  2032  3463               	retlw	99	;'c'
 10126  2033  340D               	retlw	13
 10127  2034  3400               	retlw	0
 10128                           
 10129                           	psect	stringtext8
 10130  2035                     __pstringtext8:	
 10131  2035                     STR_28:	
 10132  2035  3425               	retlw	37	;'%'
 10133  2036  3463               	retlw	99	;'c'
 10134  2037  3420               	retlw	32	;' '
 10135  2038  3420               	retlw	32	;' '
 10136  2039  3420               	retlw	32	;' '
 10137  203A  340D               	retlw	13
 10138  203B  3400               	retlw	0
 10139                           
 10140                           	psect	stringtext9
 10141  203C                     __pstringtext9:	
 10142  203C                     STR_22:	
 10143  203C  3420               	retlw	32	;' '
 10144  203D  3420               	retlw	32	;' '
 10145  203E  3420               	retlw	32	;' '
 10146  203F  3425               	retlw	37	;'%'
 10147  2040  3463               	retlw	99	;'c'
 10148  2041  340D               	retlw	13
 10149  2042  3400               	retlw	0
 10150                           
 10151                           	psect	stringtext10
 10152  2043                     __pstringtext10:	
 10153  2043                     STR_29:	
 10154  2043  3420               	retlw	32	;' '
 10155  2044  3420               	retlw	32	;' '
 10156  2045  3420               	retlw	32	;' '
 10157  2046  3420               	retlw	32	;' '
 10158  2047  340D               	retlw	13
 10159  2048  3400               	retlw	0
 10160                           
 10161                           	psect	stringtext11
 10162  2049                     __pstringtext11:	
 10163  2049                     STR_5:	
 10164  2049  3442               	retlw	66	;'B'
 10165  204A  3420               	retlw	32	;' '
 10166  204B  3420               	retlw	32	;' '
 10167  204C  3420               	retlw	32	;' '
 10168  204D  340D               	retlw	13
 10169  204E  3400               	retlw	0
 10170                           
 10171                           	psect	stringtext12
 10172  204F                     __pstringtext12:	
 10173  204F                     STR_7:	
 10174  204F  3443               	retlw	67	;'C'
 10175  2050  3420               	retlw	32	;' '
 10176  2051  3420               	retlw	32	;' '
 10177  2052  3420               	retlw	32	;' '
 10178  2053  340D               	retlw	13
 10179  2054  3400               	retlw	0
 10180                           
 10181                           	psect	stringtext13
 10182  2055                     __pstringtext13:	
 10183  2055                     STR_1:	
 10184  2055  3450               	retlw	80	;'P'
 10185  2056  3443               	retlw	67	;'C'
 10186  2057  3420               	retlw	32	;' '
 10187  2058  3420               	retlw	32	;' '
 10188  2059  340D               	retlw	13
 10189  205A  3400               	retlw	0
 10190                           
 10191                           	psect	stringtext14
 10192  205B                     __pstringtext14:	
 10193  205B                     STR_4:	
 10194  205B  344C               	retlw	76	;'L'
 10195  205C  3445               	retlw	69	;'E'
 10196  205D  3444               	retlw	68	;'D'
 10197  205E  3420               	retlw	32	;' '
 10198  205F  340D               	retlw	13
 10199  2060  3400               	retlw	0
 10200                           
 10201                           	psect	stringtext15
 10202  2061                     __pstringtext15:	
 10203  2061                     STR_3:	
 10204  2061  3441               	retlw	65	;'A'
 10205  2062  344E               	retlw	78	;'N'
 10206  2063  3449               	retlw	73	;'I'
 10207  2064  3420               	retlw	32	;' '
 10208  2065  340D               	retlw	13
 10209  2066  3400               	retlw	0
 10210                           
 10211                           	psect	stringtext16
 10212  2067                     __pstringtext16:	
 10213  2067                     STR_8:	
 10214  2067  3441               	retlw	65	;'A'
 10215  2068  344C               	retlw	76	;'L'
 10216  2069  344C               	retlw	76	;'L'
 10217  206A  3420               	retlw	32	;' '
 10218  206B  340D               	retlw	13
 10219  206C  3400               	retlw	0
 10220                           
 10221                           	psect	stringtext17
 10222  206D                     __pstringtext17:	
 10223  206D                     STR_6:	
 10224  206D  3446               	retlw	70	;'F'
 10225  206E  3441               	retlw	65	;'A'
 10226  206F  3444               	retlw	68	;'D'
 10227  2070  3445               	retlw	69	;'E'
 10228  2071  340D               	retlw	13
 10229  2072  3400               	retlw	0
 10230                           
 10231                           	psect	stringtext18
 10232  2073                     __pstringtext18:	
 10233  2073                     STR_2:	
 10234  2073  3442               	retlw	66	;'B'
 10235  2074  3445               	retlw	69	;'E'
 10236  2075  3441               	retlw	65	;'A'
 10237  2076  3454               	retlw	84	;'T'
 10238  2077  340D               	retlw	13
 10239  2078  3400               	retlw	0
 10240                           
 10241                           	psect	stringtext19
 10242  2079                     __pstringtext19:	
 10243  2079                     STR_19:	
 10244  2079  3420               	retlw	32	;' '
 10245  207A  3420               	retlw	32	;' '
 10246  207B  3420               	retlw	32	;' '
 10247  207C  3420               	retlw	32	;' '
 10248  207D  3400               	retlw	0
 10249                           
 10250                           	psect	stringtext20
 10251  207E                     __pstringtext20:	
 10252  207E                     STR_12:	
 10253  207E  3441               	retlw	65	;'A'
 10254  207F  342D               	retlw	45	;'-'
 10255  2080  340D               	retlw	13
 10256  2081  3400               	retlw	0
 10257                           
 10258                           	psect	stringtext21
 10259  2082                     __pstringtext21:	
 10260  2082                     STR_9:	
 10261  2082  3442               	retlw	66	;'B'
 10262  2083  342D               	retlw	45	;'-'
 10263  2084  340D               	retlw	13
 10264  2085  3400               	retlw	0
 10265                           
 10266                           	psect	stringtext22
 10267  2086                     __pstringtext22:	
 10268  2086                     STR_11:	
 10269  2086  3443               	retlw	67	;'C'
 10270  2087  342D               	retlw	45	;'-'
 10271  2088  340D               	retlw	13
 10272  2089  3400               	retlw	0
 10273                           
 10274                           	psect	stringtext23
 10275  208A                     __pstringtext23:	
 10276  208A                     STR_10:	
 10277  208A  3446               	retlw	70	;'F'
 10278  208B  342D               	retlw	45	;'-'
 10279  208C  340D               	retlw	13
 10280  208D  3400               	retlw	0
 10281                           
 10282                           	psect	stringtext24
 10283  208E                     __pstringtext24:	
 10284  208E                     STR_17:	
 10285  208E  3441               	retlw	65	;'A'
 10286  208F  346E               	retlw	110	;'n'
 10287  2090  340D               	retlw	13
 10288  2091  3400               	retlw	0
 10289                           
 10290                           	psect	stringtext25
 10291  2092                     __pstringtext25:	
 10292  2092                     STR_18:	
 10293  2092  3442               	retlw	66	;'B'
 10294  2093  3472               	retlw	114	;'r'
 10295  2094  340D               	retlw	13
 10296  2095  3400               	retlw	0
 10297                           
 10298                           	psect	stringtext26
 10299  2096                     __pstringtext26:	
 10300  2096                     STR_30:	
 10301  2096  3464               	retlw	100	;'d'
 10302  2097  340D               	retlw	13
 10303  2098  3400               	retlw	0
 10304                           
 10305                           	psect	stringtext27
 10306  2099                     __pstringtext27:	
 10307  2099                     STR_15:	
 10308  2099  3462               	retlw	98	;'b'
 10309  209A  340D               	retlw	13
 10310  209B  3400               	retlw	0
 10311                           
 10312                           	psect	stringtext28
 10313  209C                     __pstringtext28:	
 10314  209C                     STR_14:	
 10315  209C  3467               	retlw	103	;'g'
 10316  209D  340D               	retlw	13
 10317  209E  3400               	retlw	0
 10318                           
 10319                           	psect	stringtext29
 10320  209F                     __pstringtext29:	
 10321  209F                     STR_16:	
 10322  209F  3468               	retlw	104	;'h'
 10323  20A0  340D               	retlw	13
 10324  20A1  3400               	retlw	0
 10325                           
 10326                           	psect	stringtext30
 10327  0000                     __pstringtext30:	
 10328  2047                     
 10329                           ; #config settings
 10330  0000                     
 10331                           	psect	cinit
 10332  0032                     start_initialization:	
 10333  0032                     __initialization:		;BIGRAM
 10334                           
 10335                           ; Initialize objects allocated to BANK1
 10336  0032  30A0               	movlw	low __pidataBANK1
 10337  0033  0084               	movwf	4
 10338  0034  309B               	movlw	(high __pidataBANK1)| (0+128)
 10339  0035  0085               	movwf	5
 10340  0036  30E8               	movlw	low __pdataBANK1
 10341  0037  0086               	movwf	6
 10342  0038  3000               	movlw	high __pdataBANK1
 10343  0039  0087               	movwf	7
 10344  003A  3000               	movlw	0
 10345  003B  00FF               	movwf	btemp+1
 10346  003C  3008               	movlw	8
 10347  003D  319C  244E  3180   	fcall	init_ram
 10348                           
 10349                           ; Initialize objects allocated to BANK2
 10350  0040  30F9               	movlw	low __pidataBANK2
 10351  0041  0084               	movwf	4
 10352  0042  3087               	movlw	(high __pidataBANK2)| (0+128)
 10353  0043  0085               	movwf	5
 10354  0044  3067               	movlw	low __pdataBANK2
 10355  0045  0086               	movwf	6
 10356  0046  3001               	movlw	high __pdataBANK2
 10357  0047  0087               	movwf	7
 10358  0048  3000               	movlw	0
 10359  0049  00FF               	movwf	btemp+1
 10360  004A  3006               	movlw	6
 10361  004B  319C  244E  3180   	fcall	init_ram
 10362                           
 10363                           ; Clear objects allocated to BIGRAM
 10364  004E  30EE               	movlw	low (0+9198)
 10365  004F  0084               	movwf	4
 10366  0050  3023               	movlw	high (0+9198)
 10367  0051  0085               	movwf	5
 10368  0052  3002               	movlw	2
 10369  0053  00FE               	movwf	btemp
 10370  0054  3004               	movlw	4
 10371  0055  00FF               	movwf	btemp+1
 10372  0056  319C  2442  3180   	fcall	clear_ram0
 10373                           
 10374                           ; Clear objects allocated to COMMON
 10375  0059  01F0               	clrf	__pbssCOMMON& (0+127)
 10376  005A  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
 10377  005B  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
 10378  005C  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
 10379  005D  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
 10380  005E  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
 10381  005F  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
 10382                           
 10383                           ; Clear objects allocated to BANK1
 10384  0060  30C7               	movlw	low __pbssBANK1
 10385  0061  0084               	movwf	4
 10386  0062  3000               	movlw	high __pbssBANK1
 10387  0063  0085               	movwf	5
 10388  0064  3021               	movlw	33
 10389  0065  00FE               	movwf	btemp
 10390  0066  3000               	movlw	0
 10391  0067  00FF               	movwf	btemp+1
 10392  0068  319C  2442  3180   	fcall	clear_ram0
 10393                           
 10394                           ; Clear objects allocated to BANK2
 10395  006B  3020               	movlw	low __pbssBANK2
 10396  006C  0084               	movwf	4
 10397  006D  3001               	movlw	high __pbssBANK2
 10398  006E  0085               	movwf	5
 10399  006F  3041               	movlw	65
 10400  0070  00FE               	movwf	btemp
 10401  0071  3000               	movlw	0
 10402  0072  00FF               	movwf	btemp+1
 10403  0073  319C  2442  3180   	fcall	clear_ram0
 10404                           
 10405                           ; Clear objects allocated to BANK3
 10406  0076  30A0               	movlw	low __pbssBANK3
 10407  0077  0084               	movwf	4
 10408  0078  3001               	movlw	high __pbssBANK3
 10409  0079  0085               	movwf	5
 10410  007A  3050               	movlw	80
 10411  007B  00FE               	movwf	btemp
 10412  007C  3000               	movlw	0
 10413  007D  00FF               	movwf	btemp+1
 10414  007E  319C  2442  3180   	fcall	clear_ram0
 10415                           
 10416                           ; Clear objects allocated to BANK4
 10417  0081  3020               	movlw	low __pbssBANK4
 10418  0082  0084               	movwf	4
 10419  0083  3002               	movlw	high __pbssBANK4
 10420  0084  0085               	movwf	5
 10421  0085  3048               	movlw	72
 10422  0086  00FE               	movwf	btemp
 10423  0087  3000               	movlw	0
 10424  0088  00FF               	movwf	btemp+1
 10425  0089  319C  2442  3180   	fcall	clear_ram0
 10426                           
 10427                           ; Clear objects allocated to BANK5
 10428  008C  30A0               	movlw	low __pbssBANK5
 10429  008D  0084               	movwf	4
 10430  008E  3002               	movlw	high __pbssBANK5
 10431  008F  0085               	movwf	5
 10432  0090  3040               	movlw	64
 10433  0091  00FE               	movwf	btemp
 10434  0092  3000               	movlw	0
 10435  0093  00FF               	movwf	btemp+1
 10436  0094  319C  2442         	fcall	clear_ram0
 10437  0096                     end_of_initialization:	
 10438                           ;End of C runtime variable initialization code
 10439                           
 10440  0096                     __end_of__initialization:	
 10441  0096  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10442  0097  0140               	movlb	0
 10443  0098  3191  29B1         	ljmp	_main	;jump to C main() function
 10444                           
 10445                           	psect	bssCOMMON
 10446  0070                     __pbssCOMMON:	
 10447  0070                     _thresholdExceeded:	
 10448  0070                     	ds	1
 10449  0071                     _p_i2c1_current:	
 10450  0071                     	ds	1
 10451  0072                     _p_i2c1_trb_current:	
 10452  0072                     	ds	1
 10453  0073                     _eusart1RxTail:	
 10454  0073                     	ds	1
 10455  0074                     _eusart1RxHead:	
 10456  0074                     	ds	1
 10457  0075                     I2C1_ISR@i2c_address:	
 10458  0075                     	ds	2
 10459                           
 10460                           	psect	bssBANK1
 10461  00C7                     __pbssBANK1:	
 10462  00C7                     _i2c1_object:	
 10463  00C7                     	ds	5
 10464  00CC                     _manualColor:	
 10465  00CC                     	ds	4
 10466  00D0                     _currentState:	
 10467  00D0                     	ds	2
 10468  00D2                     _lastIncTime:	
 10469  00D2                     	ds	2
 10470  00D4                     _previousTask:	
 10471  00D4                     	ds	2
 10472  00D6                     _currentMenu:	
 10473  00D6                     	ds	2
 10474  00D8                     _detected:	
 10475  00D8                     	ds	1
 10476  00D9                     _position:	
 10477  00D9                     	ds	1
 10478  00DA                     _enterState:	
 10479  00DA                     	ds	1
 10480  00DB                     _menuState:	
 10481  00DB                     	ds	1
 10482  00DC                     _downState:	
 10483  00DC                     	ds	1
 10484  00DD                     _upState:	
 10485  00DD                     	ds	1
 10486  00DE                     _enter:	
 10487  00DE                     	ds	1
 10488  00DF                     _down:	
 10489  00DF                     	ds	1
 10490  00E0                     _up:	
 10491  00E0                     	ds	1
 10492  00E1                     _menu:	
 10493  00E1                     	ds	1
 10494  00E2                     I2C1_ISR@i2c_10bit_address_restart:	
 10495  00E2                     	ds	1
 10496  00E3                     I2C1_ISR@i2c_bytes_left:	
 10497  00E3                     	ds	1
 10498  00E4                     I2C1_ISR@pi2c_buf_ptr:	
 10499  00E4                     	ds	1
 10500  00E5                     _i2c1_trb_count:	
 10501  00E5                     	ds	1
 10502  00E6                     _i2c1_state:	
 10503  00E6                     	ds	1
 10504  00E7                     _eusart1RxCount:	
 10505  00E7                     	ds	1
 10506                           
 10507                           	psect	dataBANK1
 10508  00E8                     __pdataBANK1:	
 10509  00E8                     _incInterval:	
 10510  00E8                     	ds	2
 10511  00EA                     _address:	
 10512  00EA                     	ds	2
 10513  00EC                     _animationBrightness:	
 10514  00EC                     	ds	1
 10515  00ED                     _animationModeSelected:	
 10516  00ED                     	ds	1
 10517  00EE                     _startup:	
 10518  00EE                     	ds	1
 10519  00EF                     _beatBrightness:	
 10520  00EF                     	ds	1
 10521                           
 10522                           	psect	bssBANK2
 10523  0120                     __pbssBANK2:	
 10524  0120                     _nout:	
 10525  0120                     	ds	2
 10526  0122                     _width:	
 10527  0122                     	ds	2
 10528  0124                     _prec:	
 10529  0124                     	ds	2
 10530  0126                     _flags:	
 10531  0126                     	ds	2
 10532  0128                     _lastLedActiveTime:	
 10533  0128                     	ds	2
 10534  012A                     _arrayIndex:	
 10535  012A                     	ds	2
 10536  012C                     _thresholdCount:	
 10537  012C                     	ds	2
 10538  012E                     _lastRun:	
 10539  012E                     	ds	2
 10540  0130                     _bpm:	
 10541  0130                     	ds	2
 10542  0132                     _lastBeat:	
 10543  0132                     	ds	2
 10544  0134                     _lastActiveTime:	
 10545  0134                     	ds	2
 10546  0136                     _currentTime:	
 10547  0136                     	ds	2
 10548  0138                     _lastTime:	
 10549  0138                     	ds	2
 10550  013A                     _startTime:	
 10551  013A                     	ds	2
 10552  013C                     _lastDetected:	
 10553  013C                     	ds	1
 10554  013D                     _tm1650_status:	
 10555  013D                     	ds	1
 10556  013E                     _animationBrightnessControl:	
 10557  013E                     	ds	1
 10558  013F                     _colorModeSelected:	
 10559  013F                     	ds	1
 10560  0140                     _beatHold:	
 10561  0140                     	ds	1
 10562  0141                     _enterPressed:	
 10563  0141                     	ds	1
 10564  0142                     _menuPressed:	
 10565  0142                     	ds	1
 10566  0143                     _currentSelection:	
 10567  0143                     	ds	1
 10568  0144                     _menuSelected:	
 10569  0144                     	ds	1
 10570  0145                     _eusart1RxLastError:	
 10571  0145                     	ds	1
 10572  0146                     _manual:	
 10573  0146                     	ds	8
 10574  014E                     _beat:	
 10575  014E                     	ds	8
 10576  0156                     _dmx:	
 10577  0156                     	ds	8
 10578  015E                     _i2c1_tr_queue:	
 10579  015E                     	ds	3
 10580                           
 10581                           	psect	dataBANK2
 10582  0167                     __pdataBANK2:	
 10583  0167                     _initial:	
 10584  0167                     	ds	2
 10585  0169                     _delay:	
 10586  0169                     	ds	2
 10587  016B                     _threshold:	
 10588  016B                     	ds	2
 10589                           
 10590                           	psect	bssBANK3
 10591  01A0                     __pbssBANK3:	
 10592  01A0                     _eusart1RxStatusBuffer:	
 10593  01A0                     	ds	8
 10594  01A8                     _manualRed:	
 10595  01A8                     	ds	8
 10596  01B0                     _animationBrightnessCtrl:	
 10597  01B0                     	ds	8
 10598  01B8                     _beatMixed:	
 10599  01B8                     	ds	8
 10600  01C0                     _beatCont:	
 10601  01C0                     	ds	8
 10602  01C8                     _beatFade:	
 10603  01C8                     	ds	8
 10604  01D0                     _beatStrobe:	
 10605  01D0                     	ds	8
 10606  01D8                     _dmx_task:	
 10607  01D8                     	ds	8
 10608  01E0                     _animation:	
 10609  01E0                     	ds	8
 10610  01E8                     I2C1_MasterRead@trBlock:	
 10611  01E8                     	ds	4
 10612  01EC                     I2C1_MasterWrite@trBlock:	
 10613  01EC                     	ds	4
 10614                           
 10615                           	psect	bssBANK4
 10616  0220                     __pbssBANK4:	
 10617  0220                     _eusart1RxBuffer:	
 10618  0220                     	ds	8
 10619  0228                     _manualWhite:	
 10620  0228                     	ds	8
 10621  0230                     _manualBlue:	
 10622  0230                     	ds	8
 10623  0238                     _manualGreen:	
 10624  0238                     	ds	8
 10625  0240                     _animationType:	
 10626  0240                     	ds	8
 10627  0248                     _beatMixedTask:	
 10628  0248                     	ds	8
 10629  0250                     _beatContTask:	
 10630  0250                     	ds	8
 10631  0258                     _beatFadeTask:	
 10632  0258                     	ds	8
 10633  0260                     _beatStrobeTask:	
 10634  0260                     	ds	8
 10635                           
 10636                           	psect	bssBANK5
 10637  02A0                     __pbssBANK5:	
 10638  02A0                     _dbuf:	
 10639  02A0                     	ds	32
 10640  02C0                     _buttons:	
 10641  02C0                     	ds	32
 10642                           
 10643                           	psect	inittext
 10644  1C4E                     init_ram:	
 10645  1C4E  00FE               	movwf	126
 10646  1C4F                     initloop:	
 10647  1C4F  0012               	moviw fsr0++
 10648  1C50  001E               	movwi fsr1++
 10649  1C51  3001               	movlw	1
 10650  1C52  02FE               	subwf	126,f
 10651  1C53  3000               	movlw	0
 10652  1C54  3BFF               	subwfb	127,f
 10653  1C55  087F               	movf	127,w
 10654  1C56  047E               	iorwf	126,w
 10655  1C57  1903               	btfsc	3,2
 10656  1C58  3400               	retlw	0
 10657  1C59  2C4F               	goto	initloop
 10658                           
 10659                           	psect	clrtext
 10660  1C42                     clear_ram0:	
 10661                           ;	Called with FSR0 containing the base address, and
 10662                           ;	btemp/btemp+1 has the size to clear
 10663                           
 10664  1C42  0064               	clrwdt	;clear the watchdog before getting into this loop
 10665  1C43                     clrloop0:	
 10666  1C43  0180               	clrf	0	;clear RAM location pointed to by FSR
 10667  1C44  3101               	addfsr 0,1
 10668  1C45  3001               	movlw	1
 10669  1C46  02FE               	subwf	126,f
 10670  1C47  3000               	movlw	0
 10671  1C48  3BFF               	subwfb	127,f
 10672  1C49  087F               	movf	127,w
 10673  1C4A  047E               	iorwf	126,w
 10674  1C4B  1903               	btfsc	3,2
 10675  1C4C  3400               	retlw	0	;all done for this memory range, return
 10676  1C4D  2C43               	goto	clrloop0	;have we reached the end yet?
 10677                           
 10678                           	psect	cstackBANK4
 10679  0268                     __pcstackBANK4:	
 10680  0268                     ??_CONTROLLER_task:	
 10681                           
 10682                           ; 1 bytes @ 0x0
 10683  0268                     	ds	2
 10684  026A                     ??_main:	
 10685                           
 10686                           ; 1 bytes @ 0x2
 10687  026A                     	ds	2
 10688                           
 10689                           	psect	cstackBANK2
 10690  016D                     __pcstackBANK2:	
 10691  016D                     ??_CONTROL_DMX:	
 10692                           
 10693                           ; 1 bytes @ 0x0
 10694  016D                     	ds	2
 10695                           
 10696                           	psect	cstackBANK1
 10697  00A0                     __pcstackBANK1:	
 10698  00A0                     ?_PWM3_LoadDutyValue:	
 10699  00A0                     ?_PWM4_LoadDutyValue:	
 10700                           ; 1 bytes @ 0x0
 10701                           
 10702  00A0                     ?_PWM1_LoadDutyValue:	
 10703                           ; 1 bytes @ 0x0
 10704                           
 10705  00A0                     ?_PWM2_LoadDutyValue:	
 10706                           ; 1 bytes @ 0x0
 10707                           
 10708  00A0                     ?_printf:	
 10709                           ; 1 bytes @ 0x0
 10710                           
 10711  00A0                     ?_beatBrightnessCalculation:	
 10712                           ; 2 bytes @ 0x0
 10713                           
 10714  00A0                     PWM3_LoadDutyValue@dutyValue:	
 10715                           ; 4 bytes @ 0x0
 10716                           
 10717  00A0                     PWM4_LoadDutyValue@dutyValue:	
 10718                           ; 2 bytes @ 0x0
 10719                           
 10720  00A0                     PWM1_LoadDutyValue@dutyValue:	
 10721                           ; 2 bytes @ 0x0
 10722                           
 10723  00A0                     PWM2_LoadDutyValue@dutyValue:	
 10724                           ; 2 bytes @ 0x0
 10725                           
 10726  00A0                     printf@fmt:	
 10727                           ; 2 bytes @ 0x0
 10728                           
 10729                           
 10730                           ; 2 bytes @ 0x0
 10731  00A0                     	ds	4
 10732  00A4                     ??_beatBrightnessCalculation:	
 10733                           
 10734                           ; 1 bytes @ 0x4
 10735  00A4                     	ds	5
 10736  00A9                     ?_beatColorCreator:	
 10737  00A9                     beatColorCreator@inGreen:	
 10738                           ; 4 bytes @ 0x9
 10739                           
 10740                           
 10741                           ; 1 bytes @ 0x9
 10742  00A9                     	ds	1
 10743  00AA                     beatColorCreator@inBlue:	
 10744                           
 10745                           ; 1 bytes @ 0xA
 10746  00AA                     	ds	1
 10747  00AB                     beatColorCreator@inWhite:	
 10748                           
 10749                           ; 1 bytes @ 0xB
 10750  00AB                     	ds	2
 10751  00AD                     beatColorCreator@inRed:	
 10752                           
 10753                           ; 1 bytes @ 0xD
 10754  00AD                     	ds	1
 10755  00AE                     _beatColorCreator$4093:	
 10756                           
 10757                           ; 4 bytes @ 0xE
 10758  00AE                     	ds	4
 10759  00B2                     beatColorCreator@tempColor:	
 10760                           
 10761                           ; 4 bytes @ 0x12
 10762  00B2                     	ds	4
 10763  00B6                     ?_LED_setColor:	
 10764  00B6                     LED_setColor@input:	
 10765                           ; 1 bytes @ 0x16
 10766                           
 10767                           
 10768                           ; 4 bytes @ 0x16
 10769  00B6                     	ds	4
 10770  00BA                     ??_LED_setColor:	
 10771                           
 10772                           ; 1 bytes @ 0x1A
 10773  00BA                     	ds	4
 10774  00BE                     ??_CONTROL_MANUAL:	
 10775  00BE                     ??_LED_task_DMX:	
 10776                           ; 1 bytes @ 0x1E
 10777                           
 10778  00BE                     ??_LED_task_BEAT_STROBE:	
 10779                           ; 1 bytes @ 0x1E
 10780                           
 10781                           
 10782                           ; 1 bytes @ 0x1E
 10783  00BE                     	ds	2
 10784  00C0                     ??_CONTROL_BEAT:	
 10785                           
 10786                           ; 1 bytes @ 0x20
 10787  00C0                     	ds	3
 10788  00C3                     LED_task_DMX@dmx:	
 10789                           
 10790                           ; 4 bytes @ 0x23
 10791  00C3                     	ds	4
 10792                           
 10793                           	psect	cstackCOMMON
 10794  0077                     __pcstackCOMMON:	
 10795  0077                     ?_PMD_Initialize:	
 10796  0077                     ?_PIN_MANAGER_Initialize:	
 10797                           ; 1 bytes @ 0x0
 10798                           
 10799  0077                     ?_OSCILLATOR_Initialize:	
 10800                           ; 1 bytes @ 0x0
 10801                           
 10802  0077                     ?_I2C1_Initialize:	
 10803                           ; 1 bytes @ 0x0
 10804                           
 10805  0077                     ?_PWM1_Initialize:	
 10806                           ; 1 bytes @ 0x0
 10807                           
 10808  0077                     ?_PWM2_Initialize:	
 10809                           ; 1 bytes @ 0x0
 10810                           
 10811  0077                     ?_ADCC_Initialize:	
 10812                           ; 1 bytes @ 0x0
 10813                           
 10814  0077                     ?_PWM4_Initialize:	
 10815                           ; 1 bytes @ 0x0
 10816                           
 10817  0077                     ?_PWM3_Initialize:	
 10818                           ; 1 bytes @ 0x0
 10819                           
 10820  0077                     ?_TMR2_Initialize:	
 10821                           ; 1 bytes @ 0x0
 10822                           
 10823  0077                     ?_TMR0_Initialize:	
 10824                           ; 1 bytes @ 0x0
 10825                           
 10826  0077                     ?_EUSART1_Initialize:	
 10827                           ; 1 bytes @ 0x0
 10828                           
 10829  0077                     ?_EUSART1_Receive_ISR:	
 10830                           ; 1 bytes @ 0x0
 10831                           
 10832  0077                     ?_EUSART1_DefaultFramingErrorHandler:	
 10833                           ; 1 bytes @ 0x0
 10834                           
 10835  0077                     ??_EUSART1_DefaultFramingErrorHandler:	
 10836                           ; 1 bytes @ 0x0
 10837                           
 10838  0077                     ?_EUSART1_DefaultOverrunErrorHandler:	
 10839                           ; 1 bytes @ 0x0
 10840                           
 10841  0077                     ??_EUSART1_DefaultOverrunErrorHandler:	
 10842                           ; 1 bytes @ 0x0
 10843                           
 10844  0077                     ?_EUSART1_DefaultErrorHandler:	
 10845                           ; 1 bytes @ 0x0
 10846                           
 10847  0077                     ?_EUSART1_RxDataHandler:	
 10848                           ; 1 bytes @ 0x0
 10849                           
 10850  0077                     ??_EUSART1_RxDataHandler:	
 10851                           ; 1 bytes @ 0x0
 10852                           
 10853  0077                     ?_TMR0_ISR:	
 10854                           ; 1 bytes @ 0x0
 10855                           
 10856  0077                     ??_TMR0_ISR:	
 10857                           ; 1 bytes @ 0x0
 10858                           
 10859  0077                     ?_I2C1_BusCollisionISR:	
 10860                           ; 1 bytes @ 0x0
 10861                           
 10862  0077                     ??_I2C1_BusCollisionISR:	
 10863                           ; 1 bytes @ 0x0
 10864                           
 10865  0077                     ?_I2C1_ISR:	
 10866                           ; 1 bytes @ 0x0
 10867                           
 10868  0077                     ?_ADCC_ThresholdISR:	
 10869                           ; 1 bytes @ 0x0
 10870                           
 10871  0077                     ??_ADCC_ThresholdISR:	
 10872                           ; 1 bytes @ 0x0
 10873                           
 10874  0077                     ?_TMR0_DefaultInterruptHandler:	
 10875                           ; 1 bytes @ 0x0
 10876                           
 10877  0077                     ??_TMR0_DefaultInterruptHandler:	
 10878                           ; 1 bytes @ 0x0
 10879                           
 10880  0077                     ?_I2C1_Stop:	
 10881                           ; 1 bytes @ 0x0
 10882                           
 10883  0077                     ??_I2C1_Stop:	
 10884                           ; 1 bytes @ 0x0
 10885                           
 10886  0077                     ?_I2C1_FunctionComplete:	
 10887                           ; 1 bytes @ 0x0
 10888                           
 10889  0077                     ??_I2C1_FunctionComplete:	
 10890                           ; 1 bytes @ 0x0
 10891                           
 10892  0077                     ?_ADCC_DefaultInterruptHandler:	
 10893                           ; 1 bytes @ 0x0
 10894                           
 10895  0077                     ??_ADCC_DefaultInterruptHandler:	
 10896                           ; 1 bytes @ 0x0
 10897                           
 10898  0077                     ?_CLOCK_init:	
 10899                           ; 1 bytes @ 0x0
 10900                           
 10901  0077                     ?_BUTTONS_init:	
 10902                           ; 1 bytes @ 0x0
 10903                           
 10904  0077                     ?_BEAT_init:	
 10905                           ; 1 bytes @ 0x0
 10906                           
 10907  0077                     ?_LED_init:	
 10908                           ; 1 bytes @ 0x0
 10909                           
 10910  0077                     ?_CONTROLLER_init:	
 10911                           ; 1 bytes @ 0x0
 10912                           
 10913  0077                     ?_TM1650_init:	
 10914                           ; 1 bytes @ 0x0
 10915                           
 10916  0077                     ?_DMX_init:	
 10917                           ; 1 bytes @ 0x0
 10918                           
 10919  0077                     ?_BUTTONS_task:	
 10920                           ; 1 bytes @ 0x0
 10921                           
 10922  0077                     ?_CONTROLLER_task:	
 10923                           ; 1 bytes @ 0x0
 10924                           
 10925  0077                     ?_BEAT_task:	
 10926                           ; 1 bytes @ 0x0
 10927                           
 10928  0077                     ?_GPIO_init:	
 10929                           ; 1 bytes @ 0x0
 10930                           
 10931  0077                     ?_CLOCK_timerCallback:	
 10932                           ; 1 bytes @ 0x0
 10933                           
 10934  0077                     ??_CLOCK_timerCallback:	
 10935                           ; 1 bytes @ 0x0
 10936                           
 10937  0077                     ?_CONTROL_DMX:	
 10938                           ; 1 bytes @ 0x0
 10939                           
 10940  0077                     ?_CONTROL_ANIMATION:	
 10941                           ; 1 bytes @ 0x0
 10942                           
 10943  0077                     ?_CONTROL_MANUAL:	
 10944                           ; 1 bytes @ 0x0
 10945                           
 10946  0077                     ?_CONTROL_BEAT:	
 10947                           ; 1 bytes @ 0x0
 10948                           
 10949  0077                     ?_LED_task_DMX:	
 10950                           ; 1 bytes @ 0x0
 10951                           
 10952  0077                     ?_address_inc:	
 10953                           ; 1 bytes @ 0x0
 10954                           
 10955  0077                     ?_address_dec:	
 10956                           ; 1 bytes @ 0x0
 10957                           
 10958  0077                     ?_LED_task_BEAT_STROBE:	
 10959                           ; 1 bytes @ 0x0
 10960                           
 10961  0077                     ?_LED_task_BEAT_FADE:	
 10962                           ; 1 bytes @ 0x0
 10963                           
 10964  0077                     ?_LED_task_BEAT_MIXED:	
 10965                           ; 1 bytes @ 0x0
 10966                           
 10967  0077                     ?_TM1650_fastPrintNum_2digit:	
 10968                           ; 1 bytes @ 0x0
 10969                           
 10970  0077                     ?_LED_task_MANUAL:	
 10971                           ; 1 bytes @ 0x0
 10972                           
 10973  0077                     ?_colorInc:	
 10974                           ; 1 bytes @ 0x0
 10975                           
 10976  0077                     ?_colorDec:	
 10977                           ; 1 bytes @ 0x0
 10978                           
 10979  0077                     ?_LED_task_ANIMATION:	
 10980                           ; 1 bytes @ 0x0
 10981                           
 10982  0077                     ?_DMX_interrupt:	
 10983                           ; 1 bytes @ 0x0
 10984                           
 10985  0077                     ??_DMX_interrupt:	
 10986                           ; 1 bytes @ 0x0
 10987                           
 10988  0077                     ?_SYSTEM_Initialize:	
 10989                           ; 1 bytes @ 0x0
 10990                           
 10991  0077                     ?_INTERRUPT_InterruptManager:	
 10992                           ; 1 bytes @ 0x0
 10993                           
 10994  0077                     ?_I2C1_WaitForLastPacketToComplete:	
 10995                           ; 1 bytes @ 0x0
 10996                           
 10997  0077                     ?_ADCC_StartConversion:	
 10998                           ; 1 bytes @ 0x0
 10999                           
 11000  0077                     ?_main:	
 11001                           ; 1 bytes @ 0x0
 11002                           
 11003  0077                     ?_BUTTONS_isClicked:	
 11004                           ; 1 bytes @ 0x0
 11005                           
 11006  0077                     ?_BUTTONS_isHeld:	
 11007                           ; 1 bytes @ 0x0
 11008                           
 11009  0077                     ?_getCurrentMenu:	
 11010                           ; 1 bytes @ 0x0
 11011                           
 11012  0077                     ?_TM1650_enable:	
 11013                           ; 1 bytes @ 0x0
 11014                           
 11015  0077                     ?_putch:	
 11016                           ; 1 bytes @ 0x0
 11017                           
 11018  0077                     ?_adcThresholdHandler:	
 11019                           ; 1 bytes @ 0x0
 11020                           
 11021  0077                     ??_adcThresholdHandler:	
 11022                           ; 1 bytes @ 0x0
 11023                           
 11024  0077                     ?_BEAT_detected:	
 11025                           ; 1 bytes @ 0x0
 11026                           
 11027  0077                     ?_DMX_getAddress:	
 11028                           ; 1 bytes @ 0x0
 11029                           
 11030                           
 11031                           ; 1 bytes @ 0x0
 11032  0077                     	ds	1
 11033  0078                     ??_EUSART1_Receive_ISR:	
 11034  0078                     ??_EUSART1_DefaultErrorHandler:	
 11035                           ; 1 bytes @ 0x1
 11036                           
 11037  0078                     I2C1_Stop@completion_code:	
 11038                           ; 1 bytes @ 0x1
 11039                           
 11040                           
 11041                           ; 1 bytes @ 0x1
 11042  0078                     	ds	1
 11043  0079                     ??_I2C1_ISR:	
 11044                           
 11045                           ; 1 bytes @ 0x2
 11046  0079                     	ds	4
 11047  007D                     DMX_interrupt@dummy:	
 11048                           
 11049                           ; 1 bytes @ 0x6
 11050  007D                     	ds	1
 11051  007E                     ??_INTERRUPT_InterruptManager:	
 11052                           
 11053                           	psect	cstackBANK0
 11054  0020                     __pcstackBANK0:	
 11055                           ; 1 bytes @ 0x7
 11056                           
 11057  0020                     ??_PMD_Initialize:	
 11058  0020                     ??_PIN_MANAGER_Initialize:	
 11059                           ; 1 bytes @ 0x0
 11060                           
 11061  0020                     ??_OSCILLATOR_Initialize:	
 11062                           ; 1 bytes @ 0x0
 11063                           
 11064  0020                     ??_I2C1_Initialize:	
 11065                           ; 1 bytes @ 0x0
 11066                           
 11067  0020                     ??_PWM1_Initialize:	
 11068                           ; 1 bytes @ 0x0
 11069                           
 11070  0020                     ??_PWM2_Initialize:	
 11071                           ; 1 bytes @ 0x0
 11072                           
 11073  0020                     ??_PWM4_Initialize:	
 11074                           ; 1 bytes @ 0x0
 11075                           
 11076  0020                     ??_PWM3_Initialize:	
 11077                           ; 1 bytes @ 0x0
 11078                           
 11079  0020                     ??_TMR2_Initialize:	
 11080                           ; 1 bytes @ 0x0
 11081                           
 11082  0020                     ?_EUSART1_SetRxInterruptHandler:	
 11083                           ; 1 bytes @ 0x0
 11084                           
 11085  0020                     ?_EUSART1_SetFramingErrorHandler:	
 11086                           ; 1 bytes @ 0x0
 11087                           
 11088  0020                     ?_EUSART1_SetOverrunErrorHandler:	
 11089                           ; 1 bytes @ 0x0
 11090                           
 11091  0020                     ?_EUSART1_SetErrorHandler:	
 11092                           ; 1 bytes @ 0x0
 11093                           
 11094  0020                     ?_TMR0_SetInterruptHandler:	
 11095                           ; 1 bytes @ 0x0
 11096                           
 11097  0020                     ?_I2C1_MasterWriteTRBBuild:	
 11098                           ; 1 bytes @ 0x0
 11099                           
 11100  0020                     ?_I2C1_MasterTRBInsert:	
 11101                           ; 1 bytes @ 0x0
 11102                           
 11103  0020                     ?_ADCC_SetADTIInterruptHandler:	
 11104                           ; 1 bytes @ 0x0
 11105                           
 11106  0020                     ??_LED_init:	
 11107                           ; 1 bytes @ 0x0
 11108                           
 11109  0020                     ??_CONTROLLER_init:	
 11110                           ; 1 bytes @ 0x0
 11111                           
 11112  0020                     ??_GPIO_init:	
 11113                           ; 1 bytes @ 0x0
 11114                           
 11115  0020                     ??_LED_task_BEAT_FADE:	
 11116                           ; 1 bytes @ 0x0
 11117                           
 11118  0020                     ??_LED_task_BEAT_MIXED:	
 11119                           ; 1 bytes @ 0x0
 11120                           
 11121  0020                     ??_colorInc:	
 11122                           ; 1 bytes @ 0x0
 11123                           
 11124  0020                     ??_colorDec:	
 11125                           ; 1 bytes @ 0x0
 11126                           
 11127  0020                     ??_LED_task_ANIMATION:	
 11128                           ; 1 bytes @ 0x0
 11129                           
 11130  0020                     ??_I2C1_WaitForLastPacketToComplete:	
 11131                           ; 1 bytes @ 0x0
 11132                           
 11133  0020                     ??_ADCC_StartConversion:	
 11134                           ; 1 bytes @ 0x0
 11135                           
 11136  0020                     ?_ADCC_SetUpperThreshold:	
 11137                           ; 1 bytes @ 0x0
 11138                           
 11139  0020                     ?_init:	
 11140                           ; 1 bytes @ 0x0
 11141                           
 11142  0020                     ??_BUTTONS_isClicked:	
 11143                           ; 1 bytes @ 0x0
 11144                           
 11145  0020                     ??_BUTTONS_isHeld:	
 11146                           ; 1 bytes @ 0x0
 11147                           
 11148  0020                     ??_getCurrentMenu:	
 11149                           ; 1 bytes @ 0x0
 11150                           
 11151  0020                     ??_BEAT_detected:	
 11152                           ; 1 bytes @ 0x0
 11153                           
 11154  0020                     ??_DMX_getAddress:	
 11155                           ; 1 bytes @ 0x0
 11156                           
 11157  0020                     ?_CLOCK_getTime:	
 11158                           ; 1 bytes @ 0x0
 11159                           
 11160  0020                     ?_strlen:	
 11161                           ; 2 bytes @ 0x0
 11162                           
 11163  0020                     ?__Umul8_16:	
 11164                           ; 2 bytes @ 0x0
 11165                           
 11166  0020                     ?___awdiv:	
 11167                           ; 2 bytes @ 0x0
 11168                           
 11169  0020                     ?___lwdiv:	
 11170                           ; 2 bytes @ 0x0
 11171                           
 11172  0020                     ?___xxtofl:	
 11173                           ; 2 bytes @ 0x0
 11174                           
 11175  0020                     I2C1_MasterTRBInsert@ptrb_list:	
 11176                           ; 4 bytes @ 0x0
 11177                           
 11178  0020                     I2C1_MasterWriteTRBBuild@pdata:	
 11179                           ; 1 bytes @ 0x0
 11180                           
 11181  0020                     ADCC_StartConversion@channel:	
 11182                           ; 1 bytes @ 0x0
 11183                           
 11184  0020                     BUTTONS_isClicked@button:	
 11185                           ; 1 bytes @ 0x0
 11186                           
 11187  0020                     BUTTONS_isHeld@button:	
 11188                           ; 1 bytes @ 0x0
 11189                           
 11190  0020                     __Umul8_16@multiplicand:	
 11191                           ; 1 bytes @ 0x0
 11192                           
 11193  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
 11194                           ; 1 bytes @ 0x0
 11195                           
 11196  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
 11197                           ; 2 bytes @ 0x0
 11198                           
 11199  0020                     EUSART1_SetErrorHandler@interruptHandler:	
 11200                           ; 2 bytes @ 0x0
 11201                           
 11202  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
 11203                           ; 2 bytes @ 0x0
 11204                           
 11205  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
 11206                           ; 2 bytes @ 0x0
 11207                           
 11208  0020                     ADCC_SetUpperThreshold@upperThreshold:	
 11209                           ; 2 bytes @ 0x0
 11210                           
 11211  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
 11212                           ; 2 bytes @ 0x0
 11213                           
 11214  0020                     init@port:	
 11215                           ; 2 bytes @ 0x0
 11216                           
 11217  0020                     ___awdiv@divisor:	
 11218                           ; 2 bytes @ 0x0
 11219                           
 11220  0020                     ___lwdiv@divisor:	
 11221                           ; 2 bytes @ 0x0
 11222                           
 11223  0020                     strlen@s:	
 11224                           ; 2 bytes @ 0x0
 11225                           
 11226  0020                     ___xxtofl@val:	
 11227                           ; 2 bytes @ 0x0
 11228                           
 11229                           
 11230                           ; 4 bytes @ 0x0
 11231  0020                     	ds	1
 11232  0021                     I2C1_MasterTRBInsert@pflag:	
 11233  0021                     I2C1_MasterWriteTRBBuild@length:	
 11234                           ; 1 bytes @ 0x1
 11235                           
 11236                           
 11237                           ; 1 bytes @ 0x1
 11238  0021                     	ds	1
 11239  0022                     ??_ADCC_Initialize:	
 11240  0022                     ??_TMR0_Initialize:	
 11241                           ; 1 bytes @ 0x2
 11242                           
 11243  0022                     ??_EUSART1_Initialize:	
 11244                           ; 1 bytes @ 0x2
 11245                           
 11246  0022                     ??_EUSART1_SetRxInterruptHandler:	
 11247                           ; 1 bytes @ 0x2
 11248                           
 11249  0022                     ??_EUSART1_SetFramingErrorHandler:	
 11250                           ; 1 bytes @ 0x2
 11251                           
 11252  0022                     ??_EUSART1_SetOverrunErrorHandler:	
 11253                           ; 1 bytes @ 0x2
 11254                           
 11255  0022                     ??_EUSART1_SetErrorHandler:	
 11256                           ; 1 bytes @ 0x2
 11257                           
 11258  0022                     ??_TMR0_SetInterruptHandler:	
 11259                           ; 1 bytes @ 0x2
 11260                           
 11261  0022                     ??_I2C1_MasterTRBInsert:	
 11262                           ; 1 bytes @ 0x2
 11263                           
 11264  0022                     ??_ADCC_SetADTIInterruptHandler:	
 11265                           ; 1 bytes @ 0x2
 11266                           
 11267  0022                     ??_CLOCK_init:	
 11268                           ; 1 bytes @ 0x2
 11269                           
 11270  0022                     ??_BEAT_init:	
 11271                           ; 1 bytes @ 0x2
 11272                           
 11273  0022                     ??_CLOCK_getTime:	
 11274                           ; 1 bytes @ 0x2
 11275                           
 11276  0022                     ??_BUTTONS_task:	
 11277                           ; 1 bytes @ 0x2
 11278                           
 11279  0022                     ??_strlen:	
 11280                           ; 1 bytes @ 0x2
 11281                           
 11282  0022                     ??__Umul8_16:	
 11283                           ; 1 bytes @ 0x2
 11284                           
 11285  0022                     ??_SYSTEM_Initialize:	
 11286                           ; 1 bytes @ 0x2
 11287                           
 11288  0022                     ??_ADCC_SetUpperThreshold:	
 11289                           ; 1 bytes @ 0x2
 11290                           
 11291  0022                     init@pin:	
 11292                           ; 1 bytes @ 0x2
 11293                           
 11294  0022                     I2C1_MasterWriteTRBBuild@address:	
 11295                           ; 1 bytes @ 0x2
 11296                           
 11297  0022                     ___awdiv@dividend:	
 11298                           ; 2 bytes @ 0x2
 11299                           
 11300  0022                     ___lwdiv@dividend:	
 11301                           ; 2 bytes @ 0x2
 11302                           
 11303                           
 11304                           ; 2 bytes @ 0x2
 11305  0022                     	ds	1
 11306  0023                     ??_init:	
 11307  0023                     I2C1_MasterTRBInsert@count:	
 11308                           ; 1 bytes @ 0x3
 11309                           
 11310  0023                     strlen@a:	
 11311                           ; 1 bytes @ 0x3
 11312                           
 11313                           
 11314                           ; 2 bytes @ 0x3
 11315  0023                     	ds	1
 11316  0024                     ??_I2C1_MasterWriteTRBBuild:	
 11317  0024                     ??___awdiv:	
 11318                           ; 1 bytes @ 0x4
 11319                           
 11320  0024                     ??___lwdiv:	
 11321                           ; 1 bytes @ 0x4
 11322                           
 11323  0024                     ??___xxtofl:	
 11324                           ; 1 bytes @ 0x4
 11325                           
 11326  0024                     init@btn:	
 11327                           ; 1 bytes @ 0x4
 11328                           
 11329  0024                     __Umul8_16@product:	
 11330                           ; 1 bytes @ 0x4
 11331                           
 11332                           
 11333                           ; 2 bytes @ 0x4
 11334  0024                     	ds	1
 11335  0025                     ??_BUTTONS_init:	
 11336  0025                     BUTTONS_task@i:	
 11337                           ; 1 bytes @ 0x5
 11338                           
 11339  0025                     ___awdiv@counter:	
 11340                           ; 1 bytes @ 0x5
 11341                           
 11342  0025                     ___lwdiv@counter:	
 11343                           ; 1 bytes @ 0x5
 11344                           
 11345                           
 11346                           ; 1 bytes @ 0x5
 11347  0025                     	ds	1
 11348  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
 11349  0026                     ___awdiv@sign:	
 11350                           ; 1 bytes @ 0x6
 11351                           
 11352  0026                     BUTTONS_task@time:	
 11353                           ; 1 bytes @ 0x6
 11354                           
 11355  0026                     ___lwdiv@quotient:	
 11356                           ; 2 bytes @ 0x6
 11357                           
 11358  0026                     __Umul8_16@word_mpld:	
 11359                           ; 2 bytes @ 0x6
 11360                           
 11361                           
 11362                           ; 2 bytes @ 0x6
 11363  0026                     	ds	1
 11364  0027                     ?_I2C1_MasterWrite:	
 11365  0027                     I2C1_MasterWrite@length:	
 11366                           ; 1 bytes @ 0x7
 11367                           
 11368  0027                     ___awdiv@quotient:	
 11369                           ; 1 bytes @ 0x7
 11370                           
 11371                           
 11372                           ; 2 bytes @ 0x7
 11373  0027                     	ds	1
 11374  0028                     ??_BEAT_task:	
 11375  0028                     ?___lwmod:	
 11376                           ; 1 bytes @ 0x8
 11377                           
 11378  0028                     BUTTONS_task@btn:	
 11379                           ; 2 bytes @ 0x8
 11380                           
 11381  0028                     ___xxtofl@sign:	
 11382                           ; 1 bytes @ 0x8
 11383                           
 11384  0028                     __Umul8_16@multiplier:	
 11385                           ; 1 bytes @ 0x8
 11386                           
 11387  0028                     I2C1_MasterWrite@address:	
 11388                           ; 1 bytes @ 0x8
 11389                           
 11390  0028                     ___lwmod@divisor:	
 11391                           ; 2 bytes @ 0x8
 11392                           
 11393                           
 11394                           ; 2 bytes @ 0x8
 11395  0028                     	ds	1
 11396  0029                     ?___awmod:	
 11397  0029                     ___xxtofl@exp:	
 11398                           ; 2 bytes @ 0x9
 11399                           
 11400  0029                     ___awmod@divisor:	
 11401                           ; 1 bytes @ 0x9
 11402                           
 11403                           
 11404                           ; 2 bytes @ 0x9
 11405  0029                     	ds	1
 11406  002A                     I2C1_MasterWrite@pflag:	
 11407  002A                     BEAT_task@offset:	
 11408                           ; 1 bytes @ 0xA
 11409                           
 11410  002A                     ___lwmod@dividend:	
 11411                           ; 2 bytes @ 0xA
 11412                           
 11413  002A                     ___xxtofl@arg:	
 11414                           ; 2 bytes @ 0xA
 11415                           
 11416                           
 11417                           ; 4 bytes @ 0xA
 11418  002A                     	ds	1
 11419  002B                     ??_I2C1_MasterWrite:	
 11420  002B                     ___awmod@dividend:	
 11421                           ; 1 bytes @ 0xB
 11422                           
 11423                           
 11424                           ; 2 bytes @ 0xB
 11425  002B                     	ds	1
 11426  002C                     ??___lwmod:	
 11427                           
 11428                           ; 1 bytes @ 0xC
 11429  002C                     	ds	1
 11430  002D                     ??___awmod:	
 11431  002D                     I2C1_MasterWrite@pdata:	
 11432                           ; 1 bytes @ 0xD
 11433                           
 11434  002D                     ___lwmod@counter:	
 11435                           ; 1 bytes @ 0xD
 11436                           
 11437                           
 11438                           ; 1 bytes @ 0xD
 11439  002D                     	ds	1
 11440  002E                     ?___fldiv:	
 11441  002E                     ___awmod@counter:	
 11442                           ; 4 bytes @ 0xE
 11443                           
 11444  002E                     ___fldiv@a:	
 11445                           ; 1 bytes @ 0xE
 11446                           
 11447                           
 11448                           ; 4 bytes @ 0xE
 11449  002E                     	ds	1
 11450  002F                     ___awmod@sign:	
 11451                           
 11452                           ; 1 bytes @ 0xF
 11453  002F                     	ds	1
 11454  0030                     ?_writeData:	
 11455  0030                     writeData@data:	
 11456                           ; 1 bytes @ 0x10
 11457                           
 11458                           
 11459                           ; 1 bytes @ 0x10
 11460  0030                     	ds	1
 11461  0031                     ??_writeData:	
 11462                           
 11463                           ; 1 bytes @ 0x11
 11464  0031                     	ds	1
 11465  0032                     ___fldiv@b:	
 11466                           
 11467                           ; 4 bytes @ 0x12
 11468  0032                     	ds	2
 11469  0034                     writeData@address:	
 11470                           
 11471                           ; 1 bytes @ 0x14
 11472  0034                     	ds	1
 11473  0035                     writeData@status:	
 11474                           
 11475                           ; 1 bytes @ 0x15
 11476  0035                     	ds	1
 11477  0036                     ??_TM1650_fastPrintNum_2digit:	
 11478  0036                     ?_TM1650_fastPrintNum_3digit:	
 11479                           ; 1 bytes @ 0x16
 11480                           
 11481  0036                     ??_TM1650_enable:	
 11482                           ; 1 bytes @ 0x16
 11483                           
 11484  0036                     ?_TM1650_setDigit:	
 11485                           ; 1 bytes @ 0x16
 11486                           
 11487  0036                     ?_TM1650_fastPrintNum:	
 11488                           ; 1 bytes @ 0x16
 11489                           
 11490  0036                     ??___fldiv:	
 11491                           ; 1 bytes @ 0x16
 11492                           
 11493  0036                     TM1650_enable@enable:	
 11494                           ; 1 bytes @ 0x16
 11495                           
 11496  0036                     TM1650_setDigit@data:	
 11497                           ; 1 bytes @ 0x16
 11498                           
 11499  0036                     TM1650_fastPrintNum@num:	
 11500                           ; 1 bytes @ 0x16
 11501                           
 11502  0036                     TM1650_fastPrintNum_3digit@num:	
 11503                           ; 2 bytes @ 0x16
 11504                           
 11505                           
 11506                           ; 2 bytes @ 0x16
 11507  0036                     	ds	1
 11508  0037                     ??_TM1650_setDigit:	
 11509                           
 11510                           ; 1 bytes @ 0x17
 11511  0037                     	ds	1
 11512  0038                     ??_TM1650_fastPrintNum_3digit:	
 11513  0038                     ??_TM1650_fastPrintNum:	
 11514                           ; 1 bytes @ 0x18
 11515                           
 11516  0038                     TM1650_setDigit@digit:	
 11517                           ; 1 bytes @ 0x18
 11518                           
 11519                           
 11520                           ; 1 bytes @ 0x18
 11521  0038                     	ds	1
 11522  0039                     ??_DMX_init:	
 11523  0039                     ??_putch:	
 11524                           ; 1 bytes @ 0x19
 11525                           
 11526  0039                     TM1650_fastPrintNum_2digit@num:	
 11527                           ; 1 bytes @ 0x19
 11528                           
 11529                           
 11530                           ; 1 bytes @ 0x19
 11531  0039                     	ds	1
 11532  003A                     putch@n:	
 11533                           
 11534                           ; 1 bytes @ 0x1A
 11535  003A                     	ds	1
 11536  003B                     ?_fputc:	
 11537  003B                     fputc@c:	
 11538                           ; 2 bytes @ 0x1B
 11539                           
 11540  003B                     ___fldiv@rem:	
 11541                           ; 2 bytes @ 0x1B
 11542                           
 11543                           
 11544                           ; 4 bytes @ 0x1B
 11545  003B                     	ds	2
 11546  003D                     fputc@fp:	
 11547                           
 11548                           ; 1 bytes @ 0x1D
 11549  003D                     	ds	1
 11550  003E                     ??_fputc:	
 11551                           
 11552                           ; 1 bytes @ 0x1E
 11553  003E                     	ds	1
 11554  003F                     ___fldiv@sign:	
 11555                           
 11556                           ; 1 bytes @ 0x1F
 11557  003F                     	ds	1
 11558  0040                     ___fldiv@new_exp:	
 11559                           
 11560                           ; 2 bytes @ 0x20
 11561  0040                     	ds	2
 11562  0042                     ___fldiv@grs:	
 11563                           
 11564                           ; 4 bytes @ 0x22
 11565  0042                     	ds	1
 11566  0043                     ?_fputs:	
 11567  0043                     fputs@fp:	
 11568                           ; 2 bytes @ 0x23
 11569                           
 11570                           
 11571                           ; 1 bytes @ 0x23
 11572  0043                     	ds	1
 11573  0044                     ??_fputs:	
 11574                           
 11575                           ; 1 bytes @ 0x24
 11576  0044                     	ds	2
 11577  0046                     ___fldiv@bexp:	
 11578                           
 11579                           ; 1 bytes @ 0x26
 11580  0046                     	ds	1
 11581  0047                     ___fldiv@aexp:	
 11582  0047                     fputs@c:	
 11583                           ; 1 bytes @ 0x27
 11584                           
 11585                           
 11586                           ; 1 bytes @ 0x27
 11587  0047                     	ds	1
 11588  0048                     ?___flmul:	
 11589  0048                     fputs@i:	
 11590                           ; 4 bytes @ 0x28
 11591                           
 11592  0048                     ___flmul@b:	
 11593                           ; 2 bytes @ 0x28
 11594                           
 11595                           
 11596                           ; 4 bytes @ 0x28
 11597  0048                     	ds	2
 11598  004A                     fputs@s:	
 11599                           
 11600                           ; 1 bytes @ 0x2A
 11601  004A                     	ds	1
 11602  004B                     ?_pad:	
 11603  004B                     pad@buf:	
 11604                           ; 2 bytes @ 0x2B
 11605                           
 11606                           
 11607                           ; 1 bytes @ 0x2B
 11608  004B                     	ds	1
 11609  004C                     pad@p:	
 11610  004C                     ___flmul@a:	
 11611                           ; 2 bytes @ 0x2C
 11612                           
 11613                           
 11614                           ; 4 bytes @ 0x2C
 11615  004C                     	ds	2
 11616  004E                     ??_pad:	
 11617                           
 11618                           ; 1 bytes @ 0x2E
 11619  004E                     	ds	1
 11620  004F                     pad@i:	
 11621                           
 11622                           ; 2 bytes @ 0x2F
 11623  004F                     	ds	1
 11624  0050                     ??___flmul:	
 11625                           
 11626                           ; 1 bytes @ 0x30
 11627  0050                     	ds	1
 11628  0051                     pad@w:	
 11629                           
 11630                           ; 2 bytes @ 0x31
 11631  0051                     	ds	2
 11632  0053                     pad@fp:	
 11633                           
 11634                           ; 1 bytes @ 0x33
 11635  0053                     	ds	1
 11636  0054                     ?_ctoa:	
 11637  0054                     ctoa@c:	
 11638                           ; 2 bytes @ 0x34
 11639                           
 11640                           
 11641                           ; 1 bytes @ 0x34
 11642  0054                     	ds	1
 11643  0055                     ___flmul@sign:	
 11644                           
 11645                           ; 1 bytes @ 0x35
 11646  0055                     	ds	1
 11647  0056                     ??_ctoa:	
 11648  0056                     ___flmul@aexp:	
 11649                           ; 1 bytes @ 0x36
 11650                           
 11651                           
 11652                           ; 1 bytes @ 0x36
 11653  0056                     	ds	1
 11654  0057                     ctoa@w:	
 11655  0057                     ___flmul@grs:	
 11656                           ; 2 bytes @ 0x37
 11657                           
 11658                           
 11659                           ; 4 bytes @ 0x37
 11660  0057                     	ds	2
 11661  0059                     ctoa@fp:	
 11662                           
 11663                           ; 1 bytes @ 0x39
 11664  0059                     	ds	1
 11665  005A                     ?_vfpfcnvrt:	
 11666  005A                     vfpfcnvrt@fmt:	
 11667                           ; 2 bytes @ 0x3A
 11668                           
 11669                           
 11670                           ; 1 bytes @ 0x3A
 11671  005A                     	ds	1
 11672  005B                     vfpfcnvrt@ap:	
 11673  005B                     ___flmul@bexp:	
 11674                           ; 1 bytes @ 0x3B
 11675                           
 11676                           
 11677                           ; 1 bytes @ 0x3B
 11678  005B                     	ds	1
 11679  005C                     ??_vfpfcnvrt:	
 11680  005C                     ___flmul@prod:	
 11681                           ; 1 bytes @ 0x3C
 11682                           
 11683                           
 11684                           ; 4 bytes @ 0x3C
 11685  005C                     	ds	4
 11686  0060                     ___flmul@temp:	
 11687                           
 11688                           ; 2 bytes @ 0x40
 11689  0060                     	ds	1
 11690  0061                     vfpfcnvrt@c:	
 11691                           
 11692                           ; 1 bytes @ 0x41
 11693  0061                     	ds	1
 11694  0062                     ?___fltol:	
 11695  0062                     vfpfcnvrt@fp:	
 11696                           ; 4 bytes @ 0x42
 11697                           
 11698  0062                     ___fltol@f1:	
 11699                           ; 1 bytes @ 0x42
 11700                           
 11701                           
 11702                           ; 4 bytes @ 0x42
 11703  0062                     	ds	1
 11704  0063                     ?_vfprintf:	
 11705  0063                     vfprintf@fmt:	
 11706                           ; 2 bytes @ 0x43
 11707                           
 11708                           
 11709                           ; 2 bytes @ 0x43
 11710  0063                     	ds	2
 11711  0065                     vfprintf@ap:	
 11712                           
 11713                           ; 1 bytes @ 0x45
 11714  0065                     	ds	1
 11715  0066                     ??_vfprintf:	
 11716  0066                     ??___fltol:	
 11717                           ; 1 bytes @ 0x46
 11718                           
 11719                           
 11720                           ; 1 bytes @ 0x46
 11721  0066                     	ds	2
 11722  0068                     vfprintf@fp:	
 11723                           
 11724                           ; 1 bytes @ 0x48
 11725  0068                     	ds	1
 11726  0069                     vfprintf@cfmt:	
 11727                           
 11728                           ; 2 bytes @ 0x49
 11729  0069                     	ds	2
 11730  006B                     ??_printf:	
 11731  006B                     ___fltol@sign1:	
 11732                           ; 1 bytes @ 0x4B
 11733                           
 11734                           
 11735                           ; 1 bytes @ 0x4B
 11736  006B                     	ds	1
 11737  006C                     ___fltol@exp1:	
 11738                           
 11739                           ; 1 bytes @ 0x4C
 11740  006C                     	ds	1
 11741  006D                     ??_PWM3_LoadDutyValue:	
 11742  006D                     ??_PWM4_LoadDutyValue:	
 11743                           ; 1 bytes @ 0x4D
 11744                           
 11745  006D                     ??_PWM1_LoadDutyValue:	
 11746                           ; 1 bytes @ 0x4D
 11747                           
 11748  006D                     ??_PWM2_LoadDutyValue:	
 11749                           ; 1 bytes @ 0x4D
 11750                           
 11751  006D                     beatBrightnessCalculation@temp:	
 11752                           ; 1 bytes @ 0x4D
 11753                           
 11754                           
 11755                           ; 1 bytes @ 0x4D
 11756  006D                     	ds	1
 11757  006E                     ??_beatColorCreator:	
 11758  006E                     printf@ap:	
 11759                           ; 1 bytes @ 0x4E
 11760                           
 11761                           
 11762                           ; 1 bytes @ 0x4E
 11763  006E                     	ds	1
 11764  006F                     ??_TM1650_init:	
 11765  006F                     ??_CONTROL_ANIMATION:	
 11766                           ; 1 bytes @ 0x4F
 11767                           
 11768  006F                     ??_address_inc:	
 11769                           ; 1 bytes @ 0x4F
 11770                           
 11771  006F                     ??_address_dec:	
 11772                           ; 1 bytes @ 0x4F
 11773                           
 11774  006F                     ??_LED_task_MANUAL:	
 11775                           ; 1 bytes @ 0x4F
 11776                           
 11777  006F                     LED_task_BEAT_STROBE@beatState:	
 11778                           ; 1 bytes @ 0x4F
 11779                           
 11780                           
 11781                           ; 1 bytes @ 0x4F
 11782  006F                     	ds	1
 11783                           
 11784                           	psect	maintext
 11785  11B1                     __pmaintext:	
 11786 ;;
 11787 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
 11788 ;;
 11789 ;; *************** function _main *****************
 11790 ;; Defined at:
 11791 ;;		line 58 in file "main.c"
 11792 ;; Parameters:    Size  Location     Type
 11793 ;;		None
 11794 ;; Auto vars:     Size  Location     Type
 11795 ;;		None
 11796 ;; Return value:  Size  Location     Type
 11797 ;;                  1    wreg      void 
 11798 ;; Registers used:
 11799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11800 ;; Tracked objects:
 11801 ;;		On entry : B3F/0
 11802 ;;		On exit  : 0/0
 11803 ;;		Unchanged: 0/0
 11804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11807 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11808 ;;      Totals:         0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11809 ;;Total ram usage:        2 bytes
 11810 ;; Hardware stack levels required when called:   20
 11811 ;; This function calls:
 11812 ;;		_BEAT_init
 11813 ;;		_BEAT_task
 11814 ;;		_BUTTONS_init
 11815 ;;		_BUTTONS_task
 11816 ;;		_CLOCK_getTime
 11817 ;;		_CLOCK_init
 11818 ;;		_CONTROLLER_init
 11819 ;;		_CONTROLLER_task
 11820 ;;		_DMX_init
 11821 ;;		_LED_init
 11822 ;;		_SYSTEM_Initialize
 11823 ;;		_TM1650_init
 11824 ;; This function is called by:
 11825 ;;		Startup code after reset
 11826 ;; This function uses a non-reentrant model
 11827 ;;
 11828                           
 11829                           
 11830                           ;psect for function _main
 11831  11B1                     _main:	
 11832                           
 11833                           ;main.c: 61:     SYSTEM_Initialize();
 11834                           
 11835                           ;incstack = 0
 11836 ;; hardware stack exceeded
 11837                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11838  11B1  319F  270A  3191   	fcall	_SYSTEM_Initialize
 11839                           
 11840                           ;main.c: 62:     _delay((unsigned long)((500)*(32000000/4000.0)));
 11841  11B4  3015               	movlw	21
 11842  11B5  0144               	movlb	4	; select bank4
 11843  11B6  00EB               	movwf	(??_main^(0+512)+1)
 11844  11B7  304B               	movlw	75
 11845  11B8  00EA               	movwf	??_main^(0+512)
 11846  11B9  30BE               	movlw	190
 11847  11BA                     u9047:	
 11848  11BA  0B89               	decfsz	9,f
 11849  11BB  29BA               	goto	u9047
 11850  11BC  0BEA               	decfsz	??_main^(0+512),f
 11851  11BD  29BA               	goto	u9047
 11852  11BE  0BEB               	decfsz	(??_main^(0+512)+1),f
 11853  11BF  29BA               	goto	u9047
 11854  11C0  0000               	nop
 11855                           
 11856                           ;main.c: 63:     CLOCK_init();
 11857  11C1  319B  2388  3191   	fcall	_CLOCK_init
 11858                           
 11859                           ;main.c: 64:     BUTTONS_init();
 11860  11C4  3192  227A  3191   	fcall	_BUTTONS_init
 11861                           
 11862                           ;main.c: 65:     BEAT_init();
 11863  11C7  319D  2530  3191   	fcall	_BEAT_init
 11864                           
 11865                           ;main.c: 66:     LED_init();
 11866  11CA  319B  2398  3191   	fcall	_LED_init
 11867                           
 11868                           ;main.c: 67:     CONTROLLER_init();
 11869  11CD  3182  22C6  3191   	fcall	_CONTROLLER_init
 11870                           
 11871                           ;main.c: 69:     (INTCONbits.GIE = 1);
 11872  11D0  178B               	bsf	11,7	;volatile
 11873                           
 11874                           ;main.c: 70:     (INTCONbits.PEIE = 1);
 11875  11D1  170B               	bsf	11,6	;volatile
 11876                           
 11877                           ;main.c: 72:     TM1650_init();
 11878  11D2  319C  24F2  3191   	fcall	_TM1650_init
 11879                           
 11880                           ;main.c: 73:     DMX_init();
 11881  11D5  319C  24B7  3191   	fcall	_DMX_init
 11882                           
 11883                           ;main.c: 74:     startTime = CLOCK_getTime();
 11884  11D8  319B  23C3  3191   	fcall	_CLOCK_getTime
 11885  11DB  0140               	movlb	0	; select bank0
 11886  11DC  0821               	movf	?_CLOCK_getTime+1,w
 11887  11DD  0142               	movlb	2	; select bank2
 11888  11DE  00BB               	movwf	(_startTime+1)^(0+256)
 11889  11DF  0140               	movlb	0	; select bank0
 11890  11E0  0820               	movf	?_CLOCK_getTime,w
 11891  11E1  0142               	movlb	2	; select bank2
 11892  11E2  00BA               	movwf	_startTime^(0+256)
 11893  11E3                     l9478:	
 11894                           
 11895                           ;main.c: 79:     {;main.c: 80:         BUTTONS_task();
 11896  11E3  318B  23C1  3191   	fcall	_BUTTONS_task
 11897                           
 11898                           ;main.c: 81:         CONTROLLER_task();
 11899  11E6  318D  25AD  3191   	fcall	_CONTROLLER_task
 11900                           
 11901                           ;main.c: 82:         BEAT_task();
 11902  11E9  318A  2215  3191   	fcall	_BEAT_task
 11903  11EC  29E3               	goto	l9478
 11904  11ED                     __end_of_main:	
 11905                           
 11906                           	psect	text1
 11907  1CF2                     __ptext1:	
 11908 ;; *************** function _TM1650_init *****************
 11909 ;; Defined at:
 11910 ;;		line 51 in file "tm1650.c"
 11911 ;; Parameters:    Size  Location     Type
 11912 ;;		None
 11913 ;; Auto vars:     Size  Location     Type
 11914 ;;		None
 11915 ;; Return value:  Size  Location     Type
 11916 ;;                  1    wreg      void 
 11917 ;; Registers used:
 11918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11919 ;; Tracked objects:
 11920 ;;		On entry : 0/0
 11921 ;;		On exit  : 0/0
 11922 ;;		Unchanged: 0/0
 11923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11928 ;;Total ram usage:        0 bytes
 11929 ;; Hardware stack levels used:    1
 11930 ;; Hardware stack levels required when called:   17
 11931 ;; This function calls:
 11932 ;;		_TM1650_enable
 11933 ;;		_printf
 11934 ;; This function is called by:
 11935 ;;		_main
 11936 ;; This function uses a non-reentrant model
 11937 ;;
 11938                           
 11939                           
 11940                           ;psect for function _TM1650_init
 11941  1CF2                     _TM1650_init:	
 11942                           
 11943                           ;tm1650.c: 53:     TM1650_enable(1);
 11944                           
 11945                           ;incstack = 0
 11946 ;; hardware stack exceeded
 11947                           ; Regs used in _TM1650_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11948  1CF2  3001               	movlw	1
 11949  1CF3  319D  251B  319C   	fcall	_TM1650_enable
 11950                           
 11951                           ;tm1650.c: 54:     printf("    ");
 11952  1CF6  3079               	movlw	low (STR_19| (0+32768))
 11953  1CF7  0141               	movlb	1	; select bank1
 11954  1CF8  00A0               	movwf	printf@fmt^(0+128)
 11955  1CF9  30A0               	movlw	high (STR_19| (0+32768))
 11956  1CFA  00A1               	movwf	(printf@fmt^(0+128)+1)
 11957  1CFB  319D  2506  319C   	fcall	_printf
 11958                           
 11959                           ;tm1650.c: 55:     printf("\r");
 11960  1CFE  3047               	movlw	low ((STR_29+4)| (0+32768))
 11961  1CFF  0141               	movlb	1	; select bank1
 11962  1D00  00A0               	movwf	printf@fmt^(0+128)
 11963  1D01  30A0               	movlw	high ((STR_29+4)| (0+32768))
 11964  1D02  00A1               	movwf	(printf@fmt^(0+128)+1)
 11965  1D03  319D  2506         	fcall	_printf
 11966  1D05  0008               	return
 11967  1D06                     __end_of_TM1650_init:	
 11968                           
 11969                           	psect	text2
 11970  1D1B                     __ptext2:	
 11971 ;; *************** function _TM1650_enable *****************
 11972 ;; Defined at:
 11973 ;;		line 41 in file "tm1650.c"
 11974 ;; Parameters:    Size  Location     Type
 11975 ;;  enable          1    wreg     _Bool 
 11976 ;; Auto vars:     Size  Location     Type
 11977 ;;  enable          1   22[BANK0 ] _Bool 
 11978 ;; Return value:  Size  Location     Type
 11979 ;;                  1    wreg      void 
 11980 ;; Registers used:
 11981 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11982 ;; Tracked objects:
 11983 ;;		On entry : 0/0
 11984 ;;		On exit  : 0/0
 11985 ;;		Unchanged: 0/0
 11986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11988 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11990 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11991 ;;Total ram usage:        1 bytes
 11992 ;; Hardware stack levels used:    1
 11993 ;; Hardware stack levels required when called:    8
 11994 ;; This function calls:
 11995 ;;		_writeData
 11996 ;; This function is called by:
 11997 ;;		_TM1650_init
 11998 ;; This function uses a non-reentrant model
 11999 ;;
 12000                           
 12001                           
 12002                           ;psect for function _TM1650_enable
 12003  1D1B                     _TM1650_enable:	
 12004                           
 12005                           ;incstack = 0
 12006                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12007                           ;TM1650_enable@enable stored from wreg
 12008  1D1B  0140               	movlb	0	; select bank0
 12009  1D1C  00B6               	movwf	TM1650_enable@enable
 12010                           
 12011                           ;tm1650.c: 42:     if(enable){
 12012  1D1D  0836               	movf	TM1650_enable@enable,w
 12013  1D1E  1903               	btfsc	3,2
 12014  1D1F  2D29               	goto	l8432
 12015                           
 12016                           ;tm1650.c: 43:         writeData(0x24, 0x01);
 12017  1D20  01B0               	clrf	writeData@data
 12018  1D21  0AB0               	incf	writeData@data,f
 12019  1D22  3024               	movlw	36
 12020  1D23  319D  25AD         	fcall	_writeData
 12021                           
 12022                           ;tm1650.c: 44:         tm1650_status = 1;
 12023  1D25  0142               	movlb	2	; select bank2
 12024  1D26  01BD               	clrf	_tm1650_status^(0+256)
 12025  1D27  0ABD               	incf	_tm1650_status^(0+256),f
 12026                           
 12027                           ;tm1650.c: 45:     } else {
 12028  1D28  0008               	return
 12029  1D29                     l8432:	
 12030                           
 12031                           ;tm1650.c: 46:         writeData(0x24, 0x00);
 12032  1D29  01B0               	clrf	writeData@data
 12033  1D2A  3024               	movlw	36
 12034  1D2B  319D  25AD         	fcall	_writeData
 12035                           
 12036                           ;tm1650.c: 47:         tm1650_status = 0;
 12037  1D2D  0142               	movlb	2	; select bank2
 12038  1D2E  01BD               	clrf	_tm1650_status^(0+256)
 12039  1D2F  0008               	return
 12040  1D30                     __end_of_TM1650_enable:	
 12041                           
 12042                           	psect	text3
 12043  1F0A                     __ptext3:	
 12044 ;; *************** function _SYSTEM_Initialize *****************
 12045 ;; Defined at:
 12046 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12047 ;; Parameters:    Size  Location     Type
 12048 ;;		None
 12049 ;; Auto vars:     Size  Location     Type
 12050 ;;		None
 12051 ;; Return value:  Size  Location     Type
 12052 ;;                  1    wreg      void 
 12053 ;; Registers used:
 12054 ;;		wreg, status,2, status,0, pclath, cstack
 12055 ;; Tracked objects:
 12056 ;;		On entry : 0/0
 12057 ;;		On exit  : 0/0
 12058 ;;		Unchanged: 0/0
 12059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12064 ;;Total ram usage:        0 bytes
 12065 ;; Hardware stack levels used:    1
 12066 ;; Hardware stack levels required when called:    6
 12067 ;; This function calls:
 12068 ;;		_ADCC_Initialize
 12069 ;;		_EUSART1_Initialize
 12070 ;;		_I2C1_Initialize
 12071 ;;		_OSCILLATOR_Initialize
 12072 ;;		_PIN_MANAGER_Initialize
 12073 ;;		_PMD_Initialize
 12074 ;;		_PWM1_Initialize
 12075 ;;		_PWM2_Initialize
 12076 ;;		_PWM3_Initialize
 12077 ;;		_PWM4_Initialize
 12078 ;;		_TMR0_Initialize
 12079 ;;		_TMR2_Initialize
 12080 ;; This function is called by:
 12081 ;;		_main
 12082 ;; This function uses a non-reentrant model
 12083 ;;
 12084                           
 12085                           
 12086                           ;psect for function _SYSTEM_Initialize
 12087  1F0A                     _SYSTEM_Initialize:	
 12088                           
 12089                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 12090                           
 12091                           ;incstack = 0
 12092                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12093  1F0A  319C  240B  319F   	fcall	_PMD_Initialize
 12094                           
 12095                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 12096  1F0D  3190  20D8  319F   	fcall	_PIN_MANAGER_Initialize
 12097                           
 12098                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 12099  1F10  319C  2402  319F   	fcall	_OSCILLATOR_Initialize
 12100                           
 12101                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
 12102  1F13  319D  2591  319F   	fcall	_I2C1_Initialize
 12103                           
 12104                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
 12105  1F16  319C  2415  319F   	fcall	_PWM1_Initialize
 12106                           
 12107                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
 12108  1F19  319C  2420  319F   	fcall	_PWM2_Initialize
 12109                           
 12110                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 12111  1F1C  319F  2754  319F   	fcall	_ADCC_Initialize
 12112                           
 12113                           ;mcc_generated_files/mcc.c: 59:     PWM4_Initialize();
 12114  1F1F  3188  2000  319F   	fcall	_PWM4_Initialize
 12115                           
 12116                           ;mcc_generated_files/mcc.c: 60:     PWM3_Initialize();
 12117  1F22  319C  242B  319F   	fcall	_PWM3_Initialize
 12118                           
 12119                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 12120  1F25  3190  2000  319F   	fcall	_TMR2_Initialize
 12121                           
 12122                           ;mcc_generated_files/mcc.c: 62:     TMR0_Initialize();
 12123  1F28  319C  24DE  319F   	fcall	_TMR0_Initialize
 12124                           
 12125                           ;mcc_generated_files/mcc.c: 63:     EUSART1_Initialize();
 12126  1F2B  3190  206F         	fcall	_EUSART1_Initialize
 12127  1F2D  0008               	return
 12128  1F2E                     __end_of_SYSTEM_Initialize:	
 12129                           
 12130                           	psect	text4
 12131  1000                     __ptext4:	
 12132 ;; *************** function _TMR2_Initialize *****************
 12133 ;; Defined at:
 12134 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 12135 ;; Parameters:    Size  Location     Type
 12136 ;;		None
 12137 ;; Auto vars:     Size  Location     Type
 12138 ;;		None
 12139 ;; Return value:  Size  Location     Type
 12140 ;;                  1    wreg      void 
 12141 ;; Registers used:
 12142 ;;		wreg, status,2
 12143 ;; Tracked objects:
 12144 ;;		On entry : 0/0
 12145 ;;		On exit  : 0/0
 12146 ;;		Unchanged: 0/0
 12147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12152 ;;Total ram usage:        0 bytes
 12153 ;; Hardware stack levels used:    1
 12154 ;; Hardware stack levels required when called:    4
 12155 ;; This function calls:
 12156 ;;		Nothing
 12157 ;; This function is called by:
 12158 ;;		_SYSTEM_Initialize
 12159 ;; This function uses a non-reentrant model
 12160 ;;
 12161                           
 12162                           
 12163                           ;psect for function _TMR2_Initialize
 12164  1000                     _TMR2_Initialize:	
 12165                           
 12166                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 12167                           
 12168                           ;incstack = 0
 12169                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 12170  1000  3001               	movlw	1
 12171  1001  0145               	movlb	5	; select bank5
 12172  1002  0090               	movwf	16	;volatile
 12173                           
 12174                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 12175  1003  018F               	clrf	15	;volatile
 12176                           
 12177                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 12178  1004  0191               	clrf	17	;volatile
 12179                           
 12180                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 12181  1005  30FF               	movlw	255
 12182  1006  008D               	movwf	13	;volatile
 12183                           
 12184                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 12185  1007  018C               	clrf	12	;volatile
 12186                           
 12187                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 12188  1008  014E               	movlb	14	; select bank14
 12189  1009  1090               	bcf	16,1	;volatile
 12190                           
 12191                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xF0;
 12192  100A  30F0               	movlw	240
 12193  100B  0145               	movlb	5	; select bank5
 12194  100C  008E               	movwf	14	;volatile
 12195  100D  0008               	return
 12196  100E                     __end_of_TMR2_Initialize:	
 12197                           
 12198                           	psect	text5
 12199  1CDE                     __ptext5:	
 12200 ;; *************** function _TMR0_Initialize *****************
 12201 ;; Defined at:
 12202 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 12203 ;; Parameters:    Size  Location     Type
 12204 ;;		None
 12205 ;; Auto vars:     Size  Location     Type
 12206 ;;		None
 12207 ;; Return value:  Size  Location     Type
 12208 ;;                  1    wreg      void 
 12209 ;; Registers used:
 12210 ;;		wreg, status,2, status,0, pclath, cstack
 12211 ;; Tracked objects:
 12212 ;;		On entry : 0/0
 12213 ;;		On exit  : 0/0
 12214 ;;		Unchanged: 0/0
 12215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12220 ;;Total ram usage:        0 bytes
 12221 ;; Hardware stack levels used:    1
 12222 ;; Hardware stack levels required when called:    5
 12223 ;; This function calls:
 12224 ;;		_TMR0_SetInterruptHandler
 12225 ;; This function is called by:
 12226 ;;		_SYSTEM_Initialize
 12227 ;; This function uses a non-reentrant model
 12228 ;;
 12229                           
 12230                           
 12231                           ;psect for function _TMR0_Initialize
 12232  1CDE                     _TMR0_Initialize:	
 12233                           
 12234                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
 12235                           
 12236                           ;incstack = 0
 12237                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12238  1CDE  3045               	movlw	69
 12239  1CDF  014B               	movlb	11	; select bank11
 12240  1CE0  009F               	movwf	31	;volatile
 12241                           
 12242                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
 12243  1CE1  30F9               	movlw	249
 12244  1CE2  009D               	movwf	29	;volatile
 12245                           
 12246                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 12247  1CE3  019C               	clrf	28	;volatile
 12248                           
 12249                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 12250  1CE4  014E               	movlb	14	; select bank14
 12251  1CE5  128C               	bcf	12,5	;volatile
 12252                           
 12253                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 12254  1CE6  1696               	bsf	22,5	;volatile
 12255                           
 12256                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 12257  1CE7  306C               	movlw	low _TMR0_DefaultInterruptHandler
 12258  1CE8  0140               	movlb	0	; select bank0
 12259  1CE9  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12260  1CEA  301B               	movlw	high _TMR0_DefaultInterruptHandler
 12261  1CEB  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12262  1CEC  319B  23CC         	fcall	_TMR0_SetInterruptHandler
 12263                           
 12264                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 12265  1CEE  3080               	movlw	128
 12266  1CEF  014B               	movlb	11	; select bank11
 12267  1CF0  009E               	movwf	30	;volatile
 12268  1CF1  0008               	return
 12269  1CF2                     __end_of_TMR0_Initialize:	
 12270                           
 12271                           	psect	text6
 12272  0800                     __ptext6:	
 12273 ;; *************** function _PWM4_Initialize *****************
 12274 ;; Defined at:
 12275 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 12276 ;; Parameters:    Size  Location     Type
 12277 ;;		None
 12278 ;; Auto vars:     Size  Location     Type
 12279 ;;		None
 12280 ;; Return value:  Size  Location     Type
 12281 ;;                  1    wreg      void 
 12282 ;; Registers used:
 12283 ;;		wreg, status,2, status,0
 12284 ;; Tracked objects:
 12285 ;;		On entry : 0/0
 12286 ;;		On exit  : 0/0
 12287 ;;		Unchanged: 0/0
 12288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12293 ;;Total ram usage:        0 bytes
 12294 ;; Hardware stack levels used:    1
 12295 ;; Hardware stack levels required when called:    4
 12296 ;; This function calls:
 12297 ;;		Nothing
 12298 ;; This function is called by:
 12299 ;;		_SYSTEM_Initialize
 12300 ;; This function uses a non-reentrant model
 12301 ;;
 12302                           
 12303                           
 12304                           ;psect for function _PWM4_Initialize
 12305  0800                     _PWM4_Initialize:	
 12306                           
 12307                           ;mcc_generated_files/pwm4.c: 69:  CCP4CON = 0x8C;
 12308                           
 12309                           ;incstack = 0
 12310                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 12311  0800  308C               	movlw	140
 12312  0801  0146               	movlb	6	; select bank6
 12313  0802  009A               	movwf	26	;volatile
 12314                           
 12315                           ;mcc_generated_files/pwm4.c: 72:  CCPR4H = 0x00;
 12316  0803  0199               	clrf	25	;volatile
 12317                           
 12318                           ;mcc_generated_files/pwm4.c: 75:  CCPR4L = 0x00;
 12319  0804  0198               	clrf	24	;volatile
 12320                           
 12321                           ;mcc_generated_files/pwm4.c: 78:  CCPTMRS0bits.C4TSEL = 0x1;
 12322  0805  0144               	movlb	4	; select bank4
 12323  0806  081E               	movf	30,w	;volatile
 12324  0807  393F               	andlw	-193
 12325  0808  3840               	iorlw	64
 12326  0809  009E               	movwf	30	;volatile
 12327  080A  0008               	return
 12328  080B                     __end_of_PWM4_Initialize:	
 12329                           
 12330                           	psect	text7
 12331  1C2B                     __ptext7:	
 12332 ;; *************** function _PWM3_Initialize *****************
 12333 ;; Defined at:
 12334 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 12335 ;; Parameters:    Size  Location     Type
 12336 ;;		None
 12337 ;; Auto vars:     Size  Location     Type
 12338 ;;		None
 12339 ;; Return value:  Size  Location     Type
 12340 ;;                  1    wreg      void 
 12341 ;; Registers used:
 12342 ;;		wreg, status,2, status,0
 12343 ;; Tracked objects:
 12344 ;;		On entry : 0/0
 12345 ;;		On exit  : 0/0
 12346 ;;		Unchanged: 0/0
 12347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12352 ;;Total ram usage:        0 bytes
 12353 ;; Hardware stack levels used:    1
 12354 ;; Hardware stack levels required when called:    4
 12355 ;; This function calls:
 12356 ;;		Nothing
 12357 ;; This function is called by:
 12358 ;;		_SYSTEM_Initialize
 12359 ;; This function uses a non-reentrant model
 12360 ;;
 12361                           
 12362                           
 12363                           ;psect for function _PWM3_Initialize
 12364  1C2B                     _PWM3_Initialize:	
 12365                           
 12366                           ;mcc_generated_files/pwm3.c: 69:  CCP3CON = 0x8C;
 12367                           
 12368                           ;incstack = 0
 12369                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 12370  1C2B  308C               	movlw	140
 12371  1C2C  0146               	movlb	6	; select bank6
 12372  1C2D  0096               	movwf	22	;volatile
 12373                           
 12374                           ;mcc_generated_files/pwm3.c: 72:  CCPR3H = 0x00;
 12375  1C2E  0195               	clrf	21	;volatile
 12376                           
 12377                           ;mcc_generated_files/pwm3.c: 75:  CCPR3L = 0x00;
 12378  1C2F  0194               	clrf	20	;volatile
 12379                           
 12380                           ;mcc_generated_files/pwm3.c: 78:  CCPTMRS0bits.C3TSEL = 0x1;
 12381  1C30  0144               	movlb	4	; select bank4
 12382  1C31  081E               	movf	30,w	;volatile
 12383  1C32  39CF               	andlw	-49
 12384  1C33  3810               	iorlw	16
 12385  1C34  009E               	movwf	30	;volatile
 12386  1C35  0008               	return
 12387  1C36                     __end_of_PWM3_Initialize:	
 12388                           
 12389                           	psect	text8
 12390  1C20                     __ptext8:	
 12391 ;; *************** function _PWM2_Initialize *****************
 12392 ;; Defined at:
 12393 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 12394 ;; Parameters:    Size  Location     Type
 12395 ;;		None
 12396 ;; Auto vars:     Size  Location     Type
 12397 ;;		None
 12398 ;; Return value:  Size  Location     Type
 12399 ;;                  1    wreg      void 
 12400 ;; Registers used:
 12401 ;;		wreg, status,2, status,0
 12402 ;; Tracked objects:
 12403 ;;		On entry : 0/0
 12404 ;;		On exit  : 0/0
 12405 ;;		Unchanged: 0/0
 12406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12411 ;;Total ram usage:        0 bytes
 12412 ;; Hardware stack levels used:    1
 12413 ;; Hardware stack levels required when called:    4
 12414 ;; This function calls:
 12415 ;;		Nothing
 12416 ;; This function is called by:
 12417 ;;		_SYSTEM_Initialize
 12418 ;; This function uses a non-reentrant model
 12419 ;;
 12420                           
 12421                           
 12422                           ;psect for function _PWM2_Initialize
 12423  1C20                     _PWM2_Initialize:	
 12424                           
 12425                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8C;
 12426                           
 12427                           ;incstack = 0
 12428                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 12429  1C20  308C               	movlw	140
 12430  1C21  0146               	movlb	6	; select bank6
 12431  1C22  0092               	movwf	18	;volatile
 12432                           
 12433                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x00;
 12434  1C23  0191               	clrf	17	;volatile
 12435                           
 12436                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0x00;
 12437  1C24  0190               	clrf	16	;volatile
 12438                           
 12439                           ;mcc_generated_files/pwm2.c: 78:  CCPTMRS0bits.C2TSEL = 0x1;
 12440  1C25  0144               	movlb	4	; select bank4
 12441  1C26  081E               	movf	30,w	;volatile
 12442  1C27  39F3               	andlw	-13
 12443  1C28  3804               	iorlw	4
 12444  1C29  009E               	movwf	30	;volatile
 12445  1C2A  0008               	return
 12446  1C2B                     __end_of_PWM2_Initialize:	
 12447                           
 12448                           	psect	text9
 12449  1C15                     __ptext9:	
 12450 ;; *************** function _PWM1_Initialize *****************
 12451 ;; Defined at:
 12452 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 12453 ;; Parameters:    Size  Location     Type
 12454 ;;		None
 12455 ;; Auto vars:     Size  Location     Type
 12456 ;;		None
 12457 ;; Return value:  Size  Location     Type
 12458 ;;                  1    wreg      void 
 12459 ;; Registers used:
 12460 ;;		wreg, status,2, status,0
 12461 ;; Tracked objects:
 12462 ;;		On entry : 0/0
 12463 ;;		On exit  : 0/0
 12464 ;;		Unchanged: 0/0
 12465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12470 ;;Total ram usage:        0 bytes
 12471 ;; Hardware stack levels used:    1
 12472 ;; Hardware stack levels required when called:    4
 12473 ;; This function calls:
 12474 ;;		Nothing
 12475 ;; This function is called by:
 12476 ;;		_SYSTEM_Initialize
 12477 ;; This function uses a non-reentrant model
 12478 ;;
 12479                           
 12480                           
 12481                           ;psect for function _PWM1_Initialize
 12482  1C15                     _PWM1_Initialize:	
 12483                           
 12484                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
 12485                           
 12486                           ;incstack = 0
 12487                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 12488  1C15  308C               	movlw	140
 12489  1C16  0146               	movlb	6	; select bank6
 12490  1C17  008E               	movwf	14	;volatile
 12491                           
 12492                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x00;
 12493  1C18  018D               	clrf	13	;volatile
 12494                           
 12495                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x00;
 12496  1C19  018C               	clrf	12	;volatile
 12497                           
 12498                           ;mcc_generated_files/pwm1.c: 78:  CCPTMRS0bits.C1TSEL = 0x1;
 12499  1C1A  0144               	movlb	4	; select bank4
 12500  1C1B  081E               	movf	30,w	;volatile
 12501  1C1C  39FC               	andlw	-4
 12502  1C1D  3801               	iorlw	1
 12503  1C1E  009E               	movwf	30	;volatile
 12504  1C1F  0008               	return
 12505  1C20                     __end_of_PWM1_Initialize:	
 12506                           
 12507                           	psect	text10
 12508  1C0B                     __ptext10:	
 12509 ;; *************** function _PMD_Initialize *****************
 12510 ;; Defined at:
 12511 ;;		line 80 in file "mcc_generated_files/mcc.c"
 12512 ;; Parameters:    Size  Location     Type
 12513 ;;		None
 12514 ;; Auto vars:     Size  Location     Type
 12515 ;;		None
 12516 ;; Return value:  Size  Location     Type
 12517 ;;                  1    wreg      void 
 12518 ;; Registers used:
 12519 ;;		status,2
 12520 ;; Tracked objects:
 12521 ;;		On entry : 0/0
 12522 ;;		On exit  : 0/0
 12523 ;;		Unchanged: 0/0
 12524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12529 ;;Total ram usage:        0 bytes
 12530 ;; Hardware stack levels used:    1
 12531 ;; Hardware stack levels required when called:    4
 12532 ;; This function calls:
 12533 ;;		Nothing
 12534 ;; This function is called by:
 12535 ;;		_SYSTEM_Initialize
 12536 ;; This function uses a non-reentrant model
 12537 ;;
 12538                           
 12539                           
 12540                           ;psect for function _PMD_Initialize
 12541  1C0B                     _PMD_Initialize:	
 12542                           
 12543                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
 12544                           
 12545                           ;incstack = 0
 12546                           ; Regs used in _PMD_Initialize: [status,2]
 12547  1C0B  014F               	movlb	15	; select bank15
 12548  1C0C  0196               	clrf	22	;volatile
 12549                           
 12550                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
 12551  1C0D  0197               	clrf	23	;volatile
 12552                           
 12553                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
 12554  1C0E  0198               	clrf	24	;volatile
 12555                           
 12556                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
 12557  1C0F  0199               	clrf	25	;volatile
 12558                           
 12559                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
 12560  1C10  019A               	clrf	26	;volatile
 12561                           
 12562                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
 12563  1C11  019B               	clrf	27	;volatile
 12564                           
 12565                           ;mcc_generated_files/mcc.c: 95:     PMD6 = 0x00;
 12566  1C12  019C               	clrf	28	;volatile
 12567                           
 12568                           ;mcc_generated_files/mcc.c: 97:     PMD7 = 0x00;
 12569  1C13  019D               	clrf	29	;volatile
 12570  1C14  0008               	return
 12571  1C15                     __end_of_PMD_Initialize:	
 12572                           
 12573                           	psect	text11
 12574  10D8                     __ptext11:	
 12575 ;; *************** function _PIN_MANAGER_Initialize *****************
 12576 ;; Defined at:
 12577 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12578 ;; Parameters:    Size  Location     Type
 12579 ;;		None
 12580 ;; Auto vars:     Size  Location     Type
 12581 ;;		None
 12582 ;; Return value:  Size  Location     Type
 12583 ;;                  1    wreg      void 
 12584 ;; Registers used:
 12585 ;;		wreg, status,2
 12586 ;; Tracked objects:
 12587 ;;		On entry : 0/0
 12588 ;;		On exit  : 0/0
 12589 ;;		Unchanged: 0/0
 12590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12595 ;;Total ram usage:        0 bytes
 12596 ;; Hardware stack levels used:    1
 12597 ;; Hardware stack levels required when called:    4
 12598 ;; This function calls:
 12599 ;;		Nothing
 12600 ;; This function is called by:
 12601 ;;		_SYSTEM_Initialize
 12602 ;; This function uses a non-reentrant model
 12603 ;;
 12604                           
 12605                           
 12606                           ;psect for function _PIN_MANAGER_Initialize
 12607  10D8                     _PIN_MANAGER_Initialize:	
 12608                           
 12609                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12610                           
 12611                           ;incstack = 0
 12612                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12613  10D8  0140               	movlb	0	; select bank0
 12614  10D9  0198               	clrf	24	;volatile
 12615                           
 12616                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 12617  10DA  0199               	clrf	25	;volatile
 12618                           
 12619                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12620  10DB  019A               	clrf	26	;volatile
 12621                           
 12622                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
 12623  10DC  303F               	movlw	63
 12624  10DD  0092               	movwf	18	;volatile
 12625                           
 12626                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
 12627  10DE  30F0               	movlw	240
 12628  10DF  0093               	movwf	19	;volatile
 12629                           
 12630                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x06;
 12631  10E0  3006               	movlw	6
 12632  10E1  0094               	movwf	20	;volatile
 12633                           
 12634                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
 12635  10E2  30FF               	movlw	255
 12636  10E3  017E               	movlb	62	; select bank62
 12637  10E4  00CE               	movwf	78	;volatile
 12638                           
 12639                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
 12640  10E5  30E0               	movlw	224
 12641  10E6  00C3               	movwf	67	;volatile
 12642                           
 12643                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x07;
 12644  10E7  3007               	movlw	7
 12645  10E8  00B8               	movwf	56	;volatile
 12646                           
 12647                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 12648  10E9  01C4               	clrf	68	;volatile
 12649                           
 12650                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 12651  10EA  01B9               	clrf	57	;volatile
 12652                           
 12653                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 12654  10EB  01CF               	clrf	79	;volatile
 12655                           
 12656                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 12657  10EC  01BA               	clrf	58	;volatile
 12658                           
 12659                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 12660  10ED  01C5               	clrf	69	;volatile
 12661                           
 12662                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 12663  10EE  01D0               	clrf	80	;volatile
 12664                           
 12665                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 12666  10EF  3037               	movlw	55
 12667  10F0  00BB               	movwf	59	;volatile
 12668                           
 12669                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 12670  10F1  30F0               	movlw	240
 12671  10F2  00C6               	movwf	70	;volatile
 12672                           
 12673                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 12674  10F3  30FF               	movlw	255
 12675  10F4  00D1               	movwf	81	;volatile
 12676                           
 12677                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
 12678  10F5  3005               	movlw	5
 12679  10F6  017D               	movlb	61	; select bank61
 12680  10F7  00C5               	movwf	69	;volatile
 12681                           
 12682                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
 12683  10F8  3014               	movlw	20
 12684  10F9  017E               	movlb	62	; select bank62
 12685  10FA  0094               	movwf	20	;volatile
 12686                           
 12687                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x0B;
 12688  10FB  300B               	movlw	11
 12689  10FC  00A3               	movwf	35	;volatile
 12690                           
 12691                           ;mcc_generated_files/pin_manager.c: 109:     RC4PPS = 0x0C;
 12692  10FD  300C               	movlw	12
 12693  10FE  00A4               	movwf	36	;volatile
 12694                           
 12695                           ;mcc_generated_files/pin_manager.c: 110:     RA5PPS = 0x13;
 12696  10FF  3013               	movlw	19
 12697  1100  0095               	movwf	21	;volatile
 12698                           
 12699                           ;mcc_generated_files/pin_manager.c: 111:     RC5PPS = 0x09;
 12700  1101  3009               	movlw	9
 12701  1102  00A5               	movwf	37	;volatile
 12702                           
 12703                           ;mcc_generated_files/pin_manager.c: 112:     RC6PPS = 0x0A;
 12704  1103  300A               	movlw	10
 12705  1104  00A6               	movwf	38	;volatile
 12706                           
 12707                           ;mcc_generated_files/pin_manager.c: 113:     RC7PPS = 0x09;
 12708  1105  3009               	movlw	9
 12709  1106  00A7               	movwf	39	;volatile
 12710                           
 12711                           ;mcc_generated_files/pin_manager.c: 114:     SSP1DATPPS = 0x04;
 12712  1107  3004               	movlw	4
 12713  1108  017D               	movlb	61	; select bank61
 12714  1109  00C6               	movwf	70	;volatile
 12715                           
 12716                           ;mcc_generated_files/pin_manager.c: 115:     RX1DTPPS = 0x0C;
 12717  110A  300C               	movlw	12
 12718  110B  00CB               	movwf	75	;volatile
 12719  110C  0008               	return
 12720  110D                     __end_of_PIN_MANAGER_Initialize:	
 12721                           
 12722                           	psect	text12
 12723  1C02                     __ptext12:	
 12724 ;; *************** function _OSCILLATOR_Initialize *****************
 12725 ;; Defined at:
 12726 ;;		line 66 in file "mcc_generated_files/mcc.c"
 12727 ;; Parameters:    Size  Location     Type
 12728 ;;		None
 12729 ;; Auto vars:     Size  Location     Type
 12730 ;;		None
 12731 ;; Return value:  Size  Location     Type
 12732 ;;                  1    wreg      void 
 12733 ;; Registers used:
 12734 ;;		wreg, status,2
 12735 ;; Tracked objects:
 12736 ;;		On entry : 0/0
 12737 ;;		On exit  : 0/0
 12738 ;;		Unchanged: 0/0
 12739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12744 ;;Total ram usage:        0 bytes
 12745 ;; Hardware stack levels used:    1
 12746 ;; Hardware stack levels required when called:    4
 12747 ;; This function calls:
 12748 ;;		Nothing
 12749 ;; This function is called by:
 12750 ;;		_SYSTEM_Initialize
 12751 ;; This function uses a non-reentrant model
 12752 ;;
 12753                           
 12754                           
 12755                           ;psect for function _OSCILLATOR_Initialize
 12756  1C02                     _OSCILLATOR_Initialize:	
 12757                           
 12758                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x60;
 12759                           
 12760                           ;incstack = 0
 12761                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12762  1C02  3060               	movlw	96
 12763  1C03  0151               	movlb	17	; select bank17
 12764  1C04  008D               	movwf	13	;volatile
 12765                           
 12766                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
 12767  1C05  018F               	clrf	15	;volatile
 12768                           
 12769                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
 12770  1C06  0191               	clrf	17	;volatile
 12771                           
 12772                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x06;
 12773  1C07  3006               	movlw	6
 12774  1C08  0093               	movwf	19	;volatile
 12775                           
 12776                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
 12777  1C09  0192               	clrf	18	;volatile
 12778  1C0A  0008               	return
 12779  1C0B                     __end_of_OSCILLATOR_Initialize:	
 12780                           
 12781                           	psect	text13
 12782  1D91                     __ptext13:	
 12783 ;; *************** function _I2C1_Initialize *****************
 12784 ;; Defined at:
 12785 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 12786 ;; Parameters:    Size  Location     Type
 12787 ;;		None
 12788 ;; Auto vars:     Size  Location     Type
 12789 ;;		None
 12790 ;; Return value:  Size  Location     Type
 12791 ;;                  1    wreg      void 
 12792 ;; Registers used:
 12793 ;;		wreg, status,2
 12794 ;; Tracked objects:
 12795 ;;		On entry : 0/0
 12796 ;;		On exit  : 0/0
 12797 ;;		Unchanged: 0/0
 12798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12801 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12802 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12803 ;;Total ram usage:        1 bytes
 12804 ;; Hardware stack levels used:    1
 12805 ;; Hardware stack levels required when called:    4
 12806 ;; This function calls:
 12807 ;;		Nothing
 12808 ;; This function is called by:
 12809 ;;		_SYSTEM_Initialize
 12810 ;; This function uses a non-reentrant model
 12811 ;;
 12812                           
 12813                           
 12814                           ;psect for function _I2C1_Initialize
 12815  1D91                     _I2C1_Initialize:	
 12816                           
 12817                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
 12818                           
 12819                           ;incstack = 0
 12820                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12821  1D91  305E               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 12822  1D92  0140               	movlb	0	; select bank0
 12823  1D93  00A0               	movwf	??_I2C1_Initialize
 12824  1D94  0820               	movf	??_I2C1_Initialize,w
 12825  1D95  0141               	movlb	1	; select bank1
 12826  1D96  00C8               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 12827                           
 12828                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
 12829  1D97  305E               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 12830  1D98  0140               	movlb	0	; select bank0
 12831  1D99  00A0               	movwf	??_I2C1_Initialize
 12832  1D9A  0820               	movf	??_I2C1_Initialize,w
 12833  1D9B  0141               	movlb	1	; select bank1
 12834  1D9C  00C7               	movwf	_i2c1_object^(0+128)
 12835                           
 12836                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
 12837  1D9D  14C9               	bsf	(_i2c1_object^(0+128)+2),1
 12838                           
 12839                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
 12840  1D9E  1049               	bcf	(_i2c1_object^(0+128)+2),0
 12841                           
 12842                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
 12843  1D9F  01CB               	clrf	(_i2c1_object^(0+128)+4)
 12844                           
 12845                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
 12846  1DA0  0143               	movlb	3	; select bank3
 12847  1DA1  018F               	clrf	15	;volatile
 12848                           
 12849                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
 12850  1DA2  3028               	movlw	40
 12851  1DA3  0090               	movwf	16	;volatile
 12852                           
 12853                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
 12854  1DA4  0192               	clrf	18	;volatile
 12855                           
 12856                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x4F;
 12857  1DA5  304F               	movlw	79
 12858  1DA6  008D               	movwf	13	;volatile
 12859                           
 12860                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
 12861  1DA7  014E               	movlb	14	; select bank14
 12862  1DA8  100F               	bcf	15,0	;volatile
 12863                           
 12864                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
 12865  1DA9  108F               	bcf	15,1	;volatile
 12866                           
 12867                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
 12868  1DAA  1419               	bsf	25,0	;volatile
 12869                           
 12870                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
 12871  1DAB  1499               	bsf	25,1	;volatile
 12872  1DAC  0008               	return
 12873  1DAD                     __end_of_I2C1_Initialize:	
 12874                           
 12875                           	psect	text14
 12876  106F                     __ptext14:	
 12877 ;; *************** function _EUSART1_Initialize *****************
 12878 ;; Defined at:
 12879 ;;		line 81 in file "mcc_generated_files/eusart1.c"
 12880 ;; Parameters:    Size  Location     Type
 12881 ;;		None
 12882 ;; Auto vars:     Size  Location     Type
 12883 ;;		None
 12884 ;; Return value:  Size  Location     Type
 12885 ;;                  1    wreg      void 
 12886 ;; Registers used:
 12887 ;;		wreg, status,2, status,0, pclath, cstack
 12888 ;; Tracked objects:
 12889 ;;		On entry : 0/0
 12890 ;;		On exit  : 0/0
 12891 ;;		Unchanged: 0/0
 12892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12897 ;;Total ram usage:        0 bytes
 12898 ;; Hardware stack levels used:    1
 12899 ;; Hardware stack levels required when called:    5
 12900 ;; This function calls:
 12901 ;;		_EUSART1_SetErrorHandler
 12902 ;;		_EUSART1_SetFramingErrorHandler
 12903 ;;		_EUSART1_SetOverrunErrorHandler
 12904 ;;		_EUSART1_SetRxInterruptHandler
 12905 ;; This function is called by:
 12906 ;;		_SYSTEM_Initialize
 12907 ;; This function uses a non-reentrant model
 12908 ;;
 12909                           
 12910                           
 12911                           ;psect for function _EUSART1_Initialize
 12912  106F                     _EUSART1_Initialize:	
 12913                           
 12914                           ;mcc_generated_files/eusart1.c: 84:     PIE3bits.RC1IE = 0;
 12915                           
 12916                           ;incstack = 0
 12917                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12918  106F  014E               	movlb	14	; select bank14
 12919  1070  1299               	bcf	25,5	;volatile
 12920                           
 12921                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
 12922  1071  300D               	movlw	low _EUSART1_Receive_ISR
 12923  1072  0140               	movlb	0	; select bank0
 12924  1073  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 12925  1074  3011               	movlw	high _EUSART1_Receive_ISR
 12926  1075  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 12927  1076  319B  23DE  3190   	fcall	_EUSART1_SetRxInterruptHandler
 12928                           
 12929                           ;mcc_generated_files/eusart1.c: 89:     BAUD1CON = 0x08;
 12930  1079  3008               	movlw	8
 12931  107A  0142               	movlb	2	; select bank2
 12932  107B  009F               	movwf	31	;volatile
 12933                           
 12934                           ;mcc_generated_files/eusart1.c: 92:     RC1STA = 0x90;
 12935  107C  3090               	movlw	144
 12936  107D  009D               	movwf	29	;volatile
 12937                           
 12938                           ;mcc_generated_files/eusart1.c: 95:     TX1STA = 0x04;
 12939  107E  3004               	movlw	4
 12940  107F  009E               	movwf	30	;volatile
 12941                           
 12942                           ;mcc_generated_files/eusart1.c: 98:     SP1BRGL = 0x1F;
 12943  1080  301F               	movlw	31
 12944  1081  009B               	movwf	27	;volatile
 12945                           
 12946                           ;mcc_generated_files/eusart1.c: 101:     SP1BRGH = 0x00;
 12947  1082  019C               	clrf	28	;volatile
 12948                           
 12949                           ;mcc_generated_files/eusart1.c: 104:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
 12950  1083  306B               	movlw	low _EUSART1_DefaultFramingErrorHandler
 12951  1084  0140               	movlb	0	; select bank0
 12952  1085  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 12953  1086  301B               	movlw	high _EUSART1_DefaultFramingErrorHandler
 12954  1087  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 12955  1088  319B  23F0  3190   	fcall	_EUSART1_SetFramingErrorHandler
 12956                           
 12957                           ;mcc_generated_files/eusart1.c: 105:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
 12958  108B  3079               	movlw	low _EUSART1_DefaultOverrunErrorHandler
 12959  108C  0140               	movlb	0	; select bank0
 12960  108D  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 12961  108E  301B               	movlw	high _EUSART1_DefaultOverrunErrorHandler
 12962  108F  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 12963  1090  319B  23F9  3190   	fcall	_EUSART1_SetOverrunErrorHandler
 12964                           
 12965                           ;mcc_generated_files/eusart1.c: 106:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
 12966  1093  3070               	movlw	low _EUSART1_DefaultErrorHandler
 12967  1094  0140               	movlb	0	; select bank0
 12968  1095  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 12969  1096  301B               	movlw	high _EUSART1_DefaultErrorHandler
 12970  1097  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 12971  1098  319B  23E7         	fcall	_EUSART1_SetErrorHandler
 12972                           
 12973                           ;mcc_generated_files/eusart1.c: 108:     eusart1RxLastError.status = 0;
 12974  109A  0142               	movlb	2	; select bank2
 12975  109B  01C5               	clrf	_eusart1RxLastError^(0+256)	;volatile
 12976                           
 12977                           ;mcc_generated_files/eusart1.c: 111:     eusart1RxHead = 0;
 12978  109C  01F4               	clrf	_eusart1RxHead	;volatile
 12979                           
 12980                           ;mcc_generated_files/eusart1.c: 112:     eusart1RxTail = 0;
 12981  109D  01F3               	clrf	_eusart1RxTail	;volatile
 12982                           
 12983                           ;mcc_generated_files/eusart1.c: 113:     eusart1RxCount = 0;
 12984  109E  0141               	movlb	1	; select bank1
 12985  109F  01E7               	clrf	_eusart1RxCount^(0+128)	;volatile
 12986                           
 12987                           ;mcc_generated_files/eusart1.c: 116:     PIE3bits.RC1IE = 1;
 12988  10A0  014E               	movlb	14	; select bank14
 12989  10A1  1699               	bsf	25,5	;volatile
 12990  10A2  0008               	return
 12991  10A3                     __end_of_EUSART1_Initialize:	
 12992                           
 12993                           	psect	text15
 12994  1BF9                     __ptext15:	
 12995 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 12996 ;; Defined at:
 12997 ;;		line 223 in file "mcc_generated_files/eusart1.c"
 12998 ;; Parameters:    Size  Location     Type
 12999 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13000 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 13001 ;; Auto vars:     Size  Location     Type
 13002 ;;		None
 13003 ;; Return value:  Size  Location     Type
 13004 ;;                  1    wreg      void 
 13005 ;; Registers used:
 13006 ;;		wreg
 13007 ;; Tracked objects:
 13008 ;;		On entry : 0/0
 13009 ;;		On exit  : 0/0
 13010 ;;		Unchanged: 0/0
 13011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13012 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13015 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13016 ;;Total ram usage:        2 bytes
 13017 ;; Hardware stack levels used:    1
 13018 ;; Hardware stack levels required when called:    4
 13019 ;; This function calls:
 13020 ;;		Nothing
 13021 ;; This function is called by:
 13022 ;;		_EUSART1_Initialize
 13023 ;; This function uses a non-reentrant model
 13024 ;;
 13025                           
 13026                           
 13027                           ;psect for function _EUSART1_SetOverrunErrorHandler
 13028  1BF9                     _EUSART1_SetOverrunErrorHandler:	
 13029                           
 13030                           ;mcc_generated_files/eusart1.c: 224:     EUSART1_OverrunErrorHandler = interruptHandler;
 13031                           
 13032                           ;incstack = 0
 13033                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 13034  1BF9  0140               	movlb	0	; select bank0
 13035  1BFA  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 13036  1BFB  0145               	movlb	5	; select bank5
 13037  1BFC  00E3               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+640)
 13038  1BFD  0140               	movlb	0	; select bank0
 13039  1BFE  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 13040  1BFF  0145               	movlb	5	; select bank5
 13041  1C00  00E2               	movwf	_EUSART1_OverrunErrorHandler^(0+640)
 13042  1C01  0008               	return
 13043  1C02                     __end_of_EUSART1_SetOverrunErrorHandler:	
 13044                           
 13045                           	psect	text16
 13046  1BF0                     __ptext16:	
 13047 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 13048 ;; Defined at:
 13049 ;;		line 219 in file "mcc_generated_files/eusart1.c"
 13050 ;; Parameters:    Size  Location     Type
 13051 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13052 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 13053 ;; Auto vars:     Size  Location     Type
 13054 ;;		None
 13055 ;; Return value:  Size  Location     Type
 13056 ;;                  1    wreg      void 
 13057 ;; Registers used:
 13058 ;;		wreg
 13059 ;; Tracked objects:
 13060 ;;		On entry : 0/0
 13061 ;;		On exit  : 0/0
 13062 ;;		Unchanged: 0/0
 13063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13064 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13067 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13068 ;;Total ram usage:        2 bytes
 13069 ;; Hardware stack levels used:    1
 13070 ;; Hardware stack levels required when called:    4
 13071 ;; This function calls:
 13072 ;;		Nothing
 13073 ;; This function is called by:
 13074 ;;		_EUSART1_Initialize
 13075 ;; This function uses a non-reentrant model
 13076 ;;
 13077                           
 13078                           
 13079                           ;psect for function _EUSART1_SetFramingErrorHandler
 13080  1BF0                     _EUSART1_SetFramingErrorHandler:	
 13081                           
 13082                           ;mcc_generated_files/eusart1.c: 220:     EUSART1_FramingErrorHandler = interruptHandler;
 13083                           
 13084                           ;incstack = 0
 13085                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 13086  1BF0  0140               	movlb	0	; select bank0
 13087  1BF1  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 13088  1BF2  0144               	movlb	4	; select bank4
 13089  1BF3  00ED               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+512)
 13090  1BF4  0140               	movlb	0	; select bank0
 13091  1BF5  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 13092  1BF6  0144               	movlb	4	; select bank4
 13093  1BF7  00EC               	movwf	_EUSART1_FramingErrorHandler^(0+512)
 13094  1BF8  0008               	return
 13095  1BF9                     __end_of_EUSART1_SetFramingErrorHandler:	
 13096                           
 13097                           	psect	text17
 13098  1BE7                     __ptext17:	
 13099 ;; *************** function _EUSART1_SetErrorHandler *****************
 13100 ;; Defined at:
 13101 ;;		line 227 in file "mcc_generated_files/eusart1.c"
 13102 ;; Parameters:    Size  Location     Type
 13103 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13104 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 13105 ;; Auto vars:     Size  Location     Type
 13106 ;;		None
 13107 ;; Return value:  Size  Location     Type
 13108 ;;                  1    wreg      void 
 13109 ;; Registers used:
 13110 ;;		wreg
 13111 ;; Tracked objects:
 13112 ;;		On entry : 0/0
 13113 ;;		On exit  : 0/0
 13114 ;;		Unchanged: 0/0
 13115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13116 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13119 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13120 ;;Total ram usage:        2 bytes
 13121 ;; Hardware stack levels used:    1
 13122 ;; Hardware stack levels required when called:    4
 13123 ;; This function calls:
 13124 ;;		Nothing
 13125 ;; This function is called by:
 13126 ;;		_EUSART1_Initialize
 13127 ;; This function uses a non-reentrant model
 13128 ;;
 13129                           
 13130                           
 13131                           ;psect for function _EUSART1_SetErrorHandler
 13132  1BE7                     _EUSART1_SetErrorHandler:	
 13133                           
 13134                           ;mcc_generated_files/eusart1.c: 228:     EUSART1_ErrorHandler = interruptHandler;
 13135                           
 13136                           ;incstack = 0
 13137                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 13138  1BE7  0140               	movlb	0	; select bank0
 13139  1BE8  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 13140  1BE9  0145               	movlb	5	; select bank5
 13141  1BEA  00E1               	movwf	(_EUSART1_ErrorHandler+1)^(0+640)
 13142  1BEB  0140               	movlb	0	; select bank0
 13143  1BEC  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 13144  1BED  0145               	movlb	5	; select bank5
 13145  1BEE  00E0               	movwf	_EUSART1_ErrorHandler^(0+640)
 13146  1BEF  0008               	return
 13147  1BF0                     __end_of_EUSART1_SetErrorHandler:	
 13148                           
 13149                           	psect	text18
 13150  1F54                     __ptext18:	
 13151 ;; *************** function _ADCC_Initialize *****************
 13152 ;; Defined at:
 13153 ;;		line 64 in file "mcc_generated_files/adcc.c"
 13154 ;; Parameters:    Size  Location     Type
 13155 ;;		None
 13156 ;; Auto vars:     Size  Location     Type
 13157 ;;		None
 13158 ;; Return value:  Size  Location     Type
 13159 ;;                  1    wreg      void 
 13160 ;; Registers used:
 13161 ;;		wreg, status,2, status,0, pclath, cstack
 13162 ;; Tracked objects:
 13163 ;;		On entry : 0/0
 13164 ;;		On exit  : 0/0
 13165 ;;		Unchanged: 0/0
 13166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13171 ;;Total ram usage:        0 bytes
 13172 ;; Hardware stack levels used:    1
 13173 ;; Hardware stack levels required when called:    5
 13174 ;; This function calls:
 13175 ;;		_ADCC_SetADTIInterruptHandler
 13176 ;; This function is called by:
 13177 ;;		_SYSTEM_Initialize
 13178 ;; This function uses a non-reentrant model
 13179 ;;
 13180                           
 13181                           
 13182                           ;psect for function _ADCC_Initialize
 13183  1F54                     _ADCC_Initialize:	
 13184                           
 13185                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 13186                           
 13187                           ;incstack = 0
 13188                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13189  1F54  0141               	movlb	1	; select bank1
 13190  1F55  018C               	clrf	12	;volatile
 13191                           
 13192                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 13193  1F56  018D               	clrf	13	;volatile
 13194                           
 13195                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 13196  1F57  018E               	clrf	14	;volatile
 13197                           
 13198                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 13199  1F58  018F               	clrf	15	;volatile
 13200                           
 13201                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 13202  1F59  0192               	clrf	18	;volatile
 13203                           
 13204                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 13205  1F5A  0193               	clrf	19	;volatile
 13206                           
 13207                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 13208  1F5B  0198               	clrf	24	;volatile
 13209                           
 13210                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 13211  1F5C  019A               	clrf	26	;volatile
 13212                           
 13213                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 13214  1F5D  019F               	clrf	31	;volatile
 13215                           
 13216                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 13217  1F5E  0142               	movlb	2	; select bank2
 13218  1F5F  018C               	clrf	12	;volatile
 13219                           
 13220                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 13221  1F60  018D               	clrf	13	;volatile
 13222                           
 13223                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 13224  1F61  018E               	clrf	14	;volatile
 13225                           
 13226                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 13227  1F62  018F               	clrf	15	;volatile
 13228                           
 13229                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 13230  1F63  0190               	clrf	16	;volatile
 13231                           
 13232                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 13233  1F64  0192               	clrf	18	;volatile
 13234                           
 13235                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
 13236  1F65  3054               	movlw	84
 13237  1F66  0093               	movwf	19	;volatile
 13238                           
 13239                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
 13240  1F67  3056               	movlw	86
 13241  1F68  0094               	movwf	20	;volatile
 13242                           
 13243                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 13244  1F69  0195               	clrf	21	;volatile
 13245                           
 13246                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
 13247  1F6A  0196               	clrf	22	;volatile
 13248                           
 13249                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 13250  1F6B  0197               	clrf	23	;volatile
 13251                           
 13252                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 13253  1F6C  0198               	clrf	24	;volatile
 13254                           
 13255                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
 13256  1F6D  30D4               	movlw	212
 13257  1F6E  0091               	movwf	17	;volatile
 13258                           
 13259                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
 13260  1F6F  014E               	movlb	14	; select bank14
 13261  1F70  108D               	bcf	13,1	;volatile
 13262                           
 13263                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
 13264  1F71  1497               	bsf	23,1	;volatile
 13265                           
 13266                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 13267  1F72  306A               	movlw	low _ADCC_DefaultInterruptHandler
 13268  1F73  0140               	movlb	0	; select bank0
 13269  1F74  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 13270  1F75  301B               	movlw	high _ADCC_DefaultInterruptHandler
 13271  1F76  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 13272  1F77  319B  23A8         	fcall	_ADCC_SetADTIInterruptHandler
 13273  1F79  0008               	return
 13274  1F7A                     __end_of_ADCC_Initialize:	
 13275                           
 13276                           	psect	text19
 13277  1B98                     __ptext19:	
 13278 ;; *************** function _LED_init *****************
 13279 ;; Defined at:
 13280 ;;		line 48 in file "led.c"
 13281 ;; Parameters:    Size  Location     Type
 13282 ;;		None
 13283 ;; Auto vars:     Size  Location     Type
 13284 ;;		None
 13285 ;; Return value:  Size  Location     Type
 13286 ;;                  1    wreg      void 
 13287 ;; Registers used:
 13288 ;;		status,2
 13289 ;; Tracked objects:
 13290 ;;		On entry : 0/0
 13291 ;;		On exit  : 0/0
 13292 ;;		Unchanged: 0/0
 13293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13298 ;;Total ram usage:        0 bytes
 13299 ;; Hardware stack levels used:    1
 13300 ;; Hardware stack levels required when called:    4
 13301 ;; This function calls:
 13302 ;;		Nothing
 13303 ;; This function is called by:
 13304 ;;		_main
 13305 ;; This function uses a non-reentrant model
 13306 ;;
 13307                           
 13308                           
 13309                           ;psect for function _LED_init
 13310  1B98                     _LED_init:	
 13311                           
 13312                           ;led.c: 49:     manualColor.red = 0;
 13313                           
 13314                           ;incstack = 0
 13315                           ; Regs used in _LED_init: [status,2]
 13316  1B98  0141               	movlb	1	; select bank1
 13317  1B99  01CD               	clrf	(_manualColor^(0+128)+1)
 13318                           
 13319                           ;led.c: 50:     manualColor.green = 0;
 13320  1B9A  01CE               	clrf	(_manualColor^(0+128)+2)
 13321                           
 13322                           ;led.c: 51:     manualColor.blue = 0;
 13323  1B9B  01CF               	clrf	(_manualColor^(0+128)+3)
 13324                           
 13325                           ;led.c: 52:     manualColor.white = 0;
 13326  1B9C  01CC               	clrf	_manualColor^(0+128)
 13327                           
 13328                           ;led.c: 53:     TRISCbits.TRISC5 = 0;
 13329  1B9D  0140               	movlb	0	; select bank0
 13330  1B9E  1294               	bcf	20,5	;volatile
 13331  1B9F  0008               	return
 13332  1BA0                     __end_of_LED_init:	
 13333                           
 13334                           	psect	text20
 13335  1CB7                     __ptext20:	
 13336 ;; *************** function _DMX_init *****************
 13337 ;; Defined at:
 13338 ;;		line 21 in file "dmx.c"
 13339 ;; Parameters:    Size  Location     Type
 13340 ;;		None
 13341 ;; Auto vars:     Size  Location     Type
 13342 ;;		None
 13343 ;; Return value:  Size  Location     Type
 13344 ;;                  1    wreg      void 
 13345 ;; Registers used:
 13346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13347 ;; Tracked objects:
 13348 ;;		On entry : 0/0
 13349 ;;		On exit  : 0/0
 13350 ;;		Unchanged: 0/0
 13351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13356 ;;Total ram usage:        0 bytes
 13357 ;; Hardware stack levels used:    1
 13358 ;; Hardware stack levels required when called:    9
 13359 ;; This function calls:
 13360 ;;		_EUSART1_SetRxInterruptHandler
 13361 ;;		_TM1650_fastPrintNum
 13362 ;; This function is called by:
 13363 ;;		_main
 13364 ;; This function uses a non-reentrant model
 13365 ;;
 13366                           
 13367                           
 13368                           ;psect for function _DMX_init
 13369  1CB7                     _DMX_init:	
 13370                           
 13371                           ;dmx.c: 22:     EUSART1_SetRxInterruptHandler(DMX_interrupt);
 13372                           
 13373                           ;incstack = 0
 13374                           ; Regs used in _DMX_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13375  1CB7  303E               	movlw	low _DMX_interrupt
 13376  1CB8  0140               	movlb	0	; select bank0
 13377  1CB9  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 13378  1CBA  3010               	movlw	high _DMX_interrupt
 13379  1CBB  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 13380  1CBC  319B  23DE  319C   	fcall	_EUSART1_SetRxInterruptHandler
 13381                           
 13382                           ;dmx.c: 23:     TM1650_fastPrintNum(address);
 13383  1CBF  0141               	movlb	1	; select bank1
 13384  1CC0  086B               	movf	(_address+1)^(0+128),w
 13385  1CC1  0140               	movlb	0	; select bank0
 13386  1CC2  00B7               	movwf	TM1650_fastPrintNum@num+1
 13387  1CC3  0141               	movlb	1	; select bank1
 13388  1CC4  086A               	movf	_address^(0+128),w
 13389  1CC5  0140               	movlb	0	; select bank0
 13390  1CC6  00B6               	movwf	TM1650_fastPrintNum@num
 13391  1CC7  3189  2153         	fcall	_TM1650_fastPrintNum
 13392  1CC9  0008               	return
 13393  1CCA                     __end_of_DMX_init:	
 13394                           
 13395                           	psect	text21
 13396  0953                     __ptext21:	
 13397 ;; *************** function _TM1650_fastPrintNum *****************
 13398 ;; Defined at:
 13399 ;;		line 101 in file "tm1650.c"
 13400 ;; Parameters:    Size  Location     Type
 13401 ;;  num             2   22[BANK0 ] unsigned short 
 13402 ;; Auto vars:     Size  Location     Type
 13403 ;;		None
 13404 ;; Return value:  Size  Location     Type
 13405 ;;                  1    wreg      void 
 13406 ;; Registers used:
 13407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13408 ;; Tracked objects:
 13409 ;;		On entry : 0/0
 13410 ;;		On exit  : 0/0
 13411 ;;		Unchanged: 0/0
 13412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13413 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13415 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13416 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13417 ;;Total ram usage:        3 bytes
 13418 ;; Hardware stack levels used:    1
 13419 ;; Hardware stack levels required when called:    8
 13420 ;; This function calls:
 13421 ;;		___lwdiv
 13422 ;;		___lwmod
 13423 ;;		_writeData
 13424 ;; This function is called by:
 13425 ;;		_DMX_init
 13426 ;; This function uses a non-reentrant model
 13427 ;;
 13428                           
 13429                           
 13430                           ;psect for function _TM1650_fastPrintNum
 13431  0953                     _TM1650_fastPrintNum:	
 13432                           
 13433                           ;tm1650.c: 103:     if(num > 9999){
 13434                           
 13435                           ;incstack = 0
 13436                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13437  0953  3027               	movlw	39
 13438  0954  0140               	movlb	0	; select bank0
 13439  0955  0237               	subwf	TM1650_fastPrintNum@num+1,w
 13440  0956  3010               	movlw	16
 13441  0957  1903               	skipnz
 13442  0958  0236               	subwf	TM1650_fastPrintNum@num,w
 13443  0959  1C03               	skipc
 13444  095A  297E               	goto	l8442
 13445                           
 13446                           ;tm1650.c: 104:         writeData(0x34, 0x79);
 13447  095B  3079               	movlw	121
 13448  095C  00B8               	movwf	??_TM1650_fastPrintNum
 13449  095D  0838               	movf	??_TM1650_fastPrintNum,w
 13450  095E  00B0               	movwf	writeData@data
 13451  095F  3034               	movlw	52
 13452  0960  319D  25AD  3189   	fcall	_writeData
 13453                           
 13454                           ;tm1650.c: 105:         writeData(0x35, 0x79);
 13455  0963  3079               	movlw	121
 13456  0964  0140               	movlb	0	; select bank0
 13457  0965  00B8               	movwf	??_TM1650_fastPrintNum
 13458  0966  0838               	movf	??_TM1650_fastPrintNum,w
 13459  0967  00B0               	movwf	writeData@data
 13460  0968  3035               	movlw	53
 13461  0969  319D  25AD  3189   	fcall	_writeData
 13462                           
 13463                           ;tm1650.c: 106:         writeData(0x36, 0x79);
 13464  096C  3079               	movlw	121
 13465  096D  0140               	movlb	0	; select bank0
 13466  096E  00B8               	movwf	??_TM1650_fastPrintNum
 13467  096F  0838               	movf	??_TM1650_fastPrintNum,w
 13468  0970  00B0               	movwf	writeData@data
 13469  0971  3036               	movlw	54
 13470  0972  319D  25AD  3189   	fcall	_writeData
 13471                           
 13472                           ;tm1650.c: 107:         writeData(0x37, 0x79);
 13473  0975  3079               	movlw	121
 13474  0976  0140               	movlb	0	; select bank0
 13475  0977  00B8               	movwf	??_TM1650_fastPrintNum
 13476  0978  0838               	movf	??_TM1650_fastPrintNum,w
 13477  0979  00B0               	movwf	writeData@data
 13478  097A  3037               	movlw	55
 13479  097B  319D  25AD         	fcall	_writeData
 13480  097D  0008               	return
 13481  097E                     l8442:	
 13482                           
 13483                           ;tm1650.c: 111:     writeData(0x37, charTable[(num % 10) + 16]);
 13484  097E  300A               	movlw	10
 13485  097F  00A8               	movwf	___lwmod@divisor
 13486  0980  3000               	movlw	0
 13487  0981  00A9               	movwf	___lwmod@divisor+1
 13488  0982  0837               	movf	TM1650_fastPrintNum@num+1,w
 13489  0983  00AB               	movwf	___lwmod@dividend+1
 13490  0984  0836               	movf	TM1650_fastPrintNum@num,w
 13491  0985  00AA               	movwf	___lwmod@dividend
 13492  0986  319F  27A4  3189   	fcall	___lwmod
 13493  0989  0140               	movlb	0	; select bank0
 13494  098A  0829               	movf	?___lwmod+1,w
 13495  098B  0085               	movwf	5
 13496  098C  0828               	movf	?___lwmod,w
 13497  098D  0084               	movwf	4
 13498  098E  3010               	movlw	low ((_charTable+16)| (0+32768))
 13499  098F  0784               	addwf	4,f
 13500  0990  3098               	movlw	high ((_charTable+16)| (0+32768))
 13501  0991  3D85               	addwfc	5,f
 13502  0992  0800               	movf	0,w	;code access
 13503  0993  00B8               	movwf	??_TM1650_fastPrintNum
 13504  0994  0838               	movf	??_TM1650_fastPrintNum,w
 13505  0995  00B0               	movwf	writeData@data
 13506  0996  3037               	movlw	55
 13507  0997  319D  25AD  3189   	fcall	_writeData
 13508                           
 13509                           ;tm1650.c: 112:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 13510  099A  300A               	movlw	10
 13511  099B  0140               	movlb	0	; select bank0
 13512  099C  00A8               	movwf	___lwmod@divisor
 13513  099D  3000               	movlw	0
 13514  099E  00A9               	movwf	___lwmod@divisor+1
 13515  099F  300A               	movlw	10
 13516  09A0  00A0               	movwf	___lwdiv@divisor
 13517  09A1  3000               	movlw	0
 13518  09A2  00A1               	movwf	___lwdiv@divisor+1
 13519  09A3  0837               	movf	TM1650_fastPrintNum@num+1,w
 13520  09A4  00A3               	movwf	___lwdiv@dividend+1
 13521  09A5  0836               	movf	TM1650_fastPrintNum@num,w
 13522  09A6  00A2               	movwf	___lwdiv@dividend
 13523  09A7  3190  20A3  3189   	fcall	___lwdiv
 13524  09AA  0140               	movlb	0	; select bank0
 13525  09AB  0821               	movf	?___lwdiv+1,w
 13526  09AC  00AB               	movwf	___lwmod@dividend+1
 13527  09AD  0820               	movf	?___lwdiv,w
 13528  09AE  00AA               	movwf	___lwmod@dividend
 13529  09AF  319F  27A4  3189   	fcall	___lwmod
 13530  09B2  0140               	movlb	0	; select bank0
 13531  09B3  0829               	movf	?___lwmod+1,w
 13532  09B4  0085               	movwf	5
 13533  09B5  0828               	movf	?___lwmod,w
 13534  09B6  0084               	movwf	4
 13535  09B7  3010               	movlw	low ((_charTable+16)| (0+32768))
 13536  09B8  0784               	addwf	4,f
 13537  09B9  3098               	movlw	high ((_charTable+16)| (0+32768))
 13538  09BA  3D85               	addwfc	5,f
 13539  09BB  0800               	movf	0,w	;code access
 13540  09BC  00B8               	movwf	??_TM1650_fastPrintNum
 13541  09BD  0838               	movf	??_TM1650_fastPrintNum,w
 13542  09BE  00B0               	movwf	writeData@data
 13543  09BF  3036               	movlw	54
 13544  09C0  319D  25AD  3189   	fcall	_writeData
 13545                           
 13546                           ;tm1650.c: 113:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 13547  09C3  300A               	movlw	10
 13548  09C4  0140               	movlb	0	; select bank0
 13549  09C5  00A8               	movwf	___lwmod@divisor
 13550  09C6  3000               	movlw	0
 13551  09C7  00A9               	movwf	___lwmod@divisor+1
 13552  09C8  3064               	movlw	100
 13553  09C9  00A0               	movwf	___lwdiv@divisor
 13554  09CA  3000               	movlw	0
 13555  09CB  00A1               	movwf	___lwdiv@divisor+1
 13556  09CC  0837               	movf	TM1650_fastPrintNum@num+1,w
 13557  09CD  00A3               	movwf	___lwdiv@dividend+1
 13558  09CE  0836               	movf	TM1650_fastPrintNum@num,w
 13559  09CF  00A2               	movwf	___lwdiv@dividend
 13560  09D0  3190  20A3  3189   	fcall	___lwdiv
 13561  09D3  0140               	movlb	0	; select bank0
 13562  09D4  0821               	movf	?___lwdiv+1,w
 13563  09D5  00AB               	movwf	___lwmod@dividend+1
 13564  09D6  0820               	movf	?___lwdiv,w
 13565  09D7  00AA               	movwf	___lwmod@dividend
 13566  09D8  319F  27A4  3189   	fcall	___lwmod
 13567  09DB  0140               	movlb	0	; select bank0
 13568  09DC  0829               	movf	?___lwmod+1,w
 13569  09DD  0085               	movwf	5
 13570  09DE  0828               	movf	?___lwmod,w
 13571  09DF  0084               	movwf	4
 13572  09E0  3010               	movlw	low ((_charTable+16)| (0+32768))
 13573  09E1  0784               	addwf	4,f
 13574  09E2  3098               	movlw	high ((_charTable+16)| (0+32768))
 13575  09E3  3D85               	addwfc	5,f
 13576  09E4  0800               	movf	0,w	;code access
 13577  09E5  00B8               	movwf	??_TM1650_fastPrintNum
 13578  09E6  0838               	movf	??_TM1650_fastPrintNum,w
 13579  09E7  00B0               	movwf	writeData@data
 13580  09E8  3035               	movlw	53
 13581  09E9  319D  25AD  3189   	fcall	_writeData
 13582                           
 13583                           ;tm1650.c: 114:     writeData(0x34, charTable[( (num/1000) % 10) + 16]);
 13584  09EC  300A               	movlw	10
 13585  09ED  0140               	movlb	0	; select bank0
 13586  09EE  00A8               	movwf	___lwmod@divisor
 13587  09EF  3000               	movlw	0
 13588  09F0  00A9               	movwf	___lwmod@divisor+1
 13589  09F1  30E8               	movlw	232
 13590  09F2  00A0               	movwf	___lwdiv@divisor
 13591  09F3  3003               	movlw	3
 13592  09F4  00A1               	movwf	___lwdiv@divisor+1
 13593  09F5  0837               	movf	TM1650_fastPrintNum@num+1,w
 13594  09F6  00A3               	movwf	___lwdiv@dividend+1
 13595  09F7  0836               	movf	TM1650_fastPrintNum@num,w
 13596  09F8  00A2               	movwf	___lwdiv@dividend
 13597  09F9  3190  20A3  3189   	fcall	___lwdiv
 13598  09FC  0140               	movlb	0	; select bank0
 13599  09FD  0821               	movf	?___lwdiv+1,w
 13600  09FE  00AB               	movwf	___lwmod@dividend+1
 13601  09FF  0820               	movf	?___lwdiv,w
 13602  0A00  00AA               	movwf	___lwmod@dividend
 13603  0A01  319F  27A4  3189   	fcall	___lwmod
 13604  0A04  0140               	movlb	0	; select bank0
 13605  0A05  0829               	movf	?___lwmod+1,w
 13606  0A06  0085               	movwf	5
 13607  0A07  0828               	movf	?___lwmod,w
 13608  0A08  0084               	movwf	4
 13609  0A09  3010               	movlw	low ((_charTable+16)| (0+32768))
 13610  0A0A  0784               	addwf	4,f
 13611  0A0B  3098               	movlw	high ((_charTable+16)| (0+32768))
 13612  0A0C  3D85               	addwfc	5,f
 13613  0A0D  0800               	movf	0,w	;code access
 13614  0A0E  00B8               	movwf	??_TM1650_fastPrintNum
 13615  0A0F  0838               	movf	??_TM1650_fastPrintNum,w
 13616  0A10  00B0               	movwf	writeData@data
 13617  0A11  3034               	movlw	52
 13618  0A12  319D  25AD         	fcall	_writeData
 13619  0A14  0008               	return
 13620  0A15                     __end_of_TM1650_fastPrintNum:	
 13621                           
 13622                           	psect	text22
 13623  1BDE                     __ptext22:	
 13624 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 13625 ;; Defined at:
 13626 ;;		line 232 in file "mcc_generated_files/eusart1.c"
 13627 ;; Parameters:    Size  Location     Type
 13628 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 13629 ;;		 -> DMX_interrupt(1), EUSART1_Receive_ISR(1), 
 13630 ;; Auto vars:     Size  Location     Type
 13631 ;;		None
 13632 ;; Return value:  Size  Location     Type
 13633 ;;                  1    wreg      void 
 13634 ;; Registers used:
 13635 ;;		wreg
 13636 ;; Tracked objects:
 13637 ;;		On entry : 0/0
 13638 ;;		On exit  : 0/0
 13639 ;;		Unchanged: 0/0
 13640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13641 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13644 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13645 ;;Total ram usage:        2 bytes
 13646 ;; Hardware stack levels used:    1
 13647 ;; Hardware stack levels required when called:    4
 13648 ;; This function calls:
 13649 ;;		Nothing
 13650 ;; This function is called by:
 13651 ;;		_EUSART1_Initialize
 13652 ;;		_DMX_init
 13653 ;; This function uses a non-reentrant model
 13654 ;;
 13655                           
 13656                           
 13657                           ;psect for function _EUSART1_SetRxInterruptHandler
 13658  1BDE                     _EUSART1_SetRxInterruptHandler:	
 13659                           
 13660                           ;mcc_generated_files/eusart1.c: 233:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 13661                           
 13662                           ;incstack = 0
 13663                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 13664  1BDE  0140               	movlb	0	; select bank0
 13665  1BDF  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 13666  1BE0  0142               	movlb	2	; select bank2
 13667  1BE1  00E6               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 13668  1BE2  0140               	movlb	0	; select bank0
 13669  1BE3  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 13670  1BE4  0142               	movlb	2	; select bank2
 13671  1BE5  00E5               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 13672  1BE6  0008               	return
 13673  1BE7                     __end_of_EUSART1_SetRxInterruptHandler:	
 13674                           
 13675                           	psect	text23
 13676  0DAD                     __ptext23:	
 13677 ;; *************** function _CONTROLLER_task *****************
 13678 ;; Defined at:
 13679 ;;		line 228 in file "controller.c"
 13680 ;; Parameters:    Size  Location     Type
 13681 ;;		None
 13682 ;; Auto vars:     Size  Location     Type
 13683 ;;		None
 13684 ;; Return value:  Size  Location     Type
 13685 ;;                  1    wreg      void 
 13686 ;; Registers used:
 13687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13688 ;; Tracked objects:
 13689 ;;		On entry : 0/0
 13690 ;;		On exit  : 0/0
 13691 ;;		Unchanged: 0/0
 13692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13695 ;;      Temps:          0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13696 ;;      Totals:         0       0       0       0       0       2       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13697 ;;Total ram usage:        2 bytes
 13698 ;; Hardware stack levels used:    1
 13699 ;; Hardware stack levels required when called:   19
 13700 ;; This function calls:
 13701 ;;		Absolute function
 13702 ;;		_BUTTONS_isClicked
 13703 ;;		_CONTROL_ANIMATION
 13704 ;;		_CONTROL_BEAT
 13705 ;;		_CONTROL_DMX
 13706 ;;		_CONTROL_MANUAL
 13707 ;;		_printf
 13708 ;; This function is called by:
 13709 ;;		_main
 13710 ;; This function uses a non-reentrant model
 13711 ;;
 13712                           
 13713                           
 13714                           ;psect for function _CONTROLLER_task
 13715  0DAD                     _CONTROLLER_task:	
 13716                           
 13717                           ;controller.c: 230:     if(startup == 1){
 13718                           
 13719                           ;incstack = 0
 13720 ;; hardware stack exceeded
 13721                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13722  0DAD  0141               	movlb	1	; select bank1
 13723  0DAE  036E               	decf	_startup^(0+128),w
 13724  0DAF  1D03               	btfss	3,2
 13725  0DB0  2DB6               	goto	l9394
 13726                           
 13727                           ;controller.c: 231:         currentMenu = &dmx;
 13728  0DB1  3056               	movlw	low _dmx
 13729  0DB2  00D6               	movwf	_currentMenu^(0+128)
 13730  0DB3  3001               	movlw	high _dmx
 13731  0DB4  00D7               	movwf	(_currentMenu+1)^(0+128)
 13732                           
 13733                           ;controller.c: 232:         startup = 0;
 13734  0DB5  01EE               	clrf	_startup^(0+128)
 13735  0DB6                     l9394:	
 13736                           
 13737                           ;controller.c: 235:     upState = BUTTONS_isClicked(up);
 13738  0DB6  0860               	movf	_up^(0+128),w
 13739  0DB7  319C  24CA  318D   	fcall	_BUTTONS_isClicked
 13740  0DBA  0144               	movlb	4	; select bank4
 13741  0DBB  00E8               	movwf	??_CONTROLLER_task^(0+512)
 13742  0DBC  0868               	movf	??_CONTROLLER_task^(0+512),w
 13743  0DBD  0141               	movlb	1	; select bank1
 13744  0DBE  00DD               	movwf	_upState^(0+128)
 13745                           
 13746                           ;controller.c: 236:     downState = BUTTONS_isClicked(down);
 13747  0DBF  085F               	movf	_down^(0+128),w
 13748  0DC0  319C  24CA  318D   	fcall	_BUTTONS_isClicked
 13749  0DC3  0144               	movlb	4	; select bank4
 13750  0DC4  00E8               	movwf	??_CONTROLLER_task^(0+512)
 13751  0DC5  0868               	movf	??_CONTROLLER_task^(0+512),w
 13752  0DC6  0141               	movlb	1	; select bank1
 13753  0DC7  00DC               	movwf	_downState^(0+128)
 13754                           
 13755                           ;controller.c: 237:     menuState = BUTTONS_isClicked(menu);
 13756  0DC8  0861               	movf	_menu^(0+128),w
 13757  0DC9  319C  24CA  318D   	fcall	_BUTTONS_isClicked
 13758  0DCC  0144               	movlb	4	; select bank4
 13759  0DCD  00E8               	movwf	??_CONTROLLER_task^(0+512)
 13760  0DCE  0868               	movf	??_CONTROLLER_task^(0+512),w
 13761  0DCF  0141               	movlb	1	; select bank1
 13762  0DD0  00DB               	movwf	_menuState^(0+128)
 13763                           
 13764                           ;controller.c: 238:     enterState = BUTTONS_isClicked(enter);
 13765  0DD1  085E               	movf	_enter^(0+128),w
 13766  0DD2  319C  24CA  318D   	fcall	_BUTTONS_isClicked
 13767  0DD5  0144               	movlb	4	; select bank4
 13768  0DD6  00E8               	movwf	??_CONTROLLER_task^(0+512)
 13769  0DD7  0868               	movf	??_CONTROLLER_task^(0+512),w
 13770  0DD8  0141               	movlb	1	; select bank1
 13771  0DD9  00DA               	movwf	_enterState^(0+128)
 13772                           
 13773                           ;controller.c: 240:     if(menuState){
 13774  0DDA  085B               	movf	_menuState^(0+128),w
 13775  0DDB  1903               	btfsc	3,2
 13776  0DDC  2DE5               	goto	l9406
 13777                           
 13778                           ;controller.c: 241:         currentMenu = currentMenu->parent;
 13779  0DDD  0856               	movf	_currentMenu^(0+128),w
 13780  0DDE  0086               	movwf	6
 13781  0DDF  0857               	movf	(_currentMenu+1)^(0+128),w
 13782  0DE0  0087               	movwf	7
 13783  0DE1  3144               	addfsr 1,4
 13784  0DE2  0801               	movf	1,w
 13785  0DE3  00D6               	movwf	_currentMenu^(0+128)
 13786  0DE4  2DF7               	goto	L1
 13787  0DE5                     l9406:	
 13788                           ;controller.c: 242:     } else if(upState && currentMenu->nextItem != ((void*)0)){
 13789                           
 13790  0DE5  085D               	movf	_upState^(0+128),w
 13791  0DE6  1903               	btfsc	3,2
 13792  0DE7  2DFA               	goto	l9412
 13793  0DE8  0856               	movf	_currentMenu^(0+128),w
 13794  0DE9  0086               	movwf	6
 13795  0DEA  0857               	movf	(_currentMenu+1)^(0+128),w
 13796  0DEB  0087               	movwf	7
 13797  0DEC  0801               	movf	1,w
 13798  0DED  1903               	btfsc	3,2
 13799  0DEE  2DFA               	goto	l9412
 13800                           
 13801                           ;controller.c: 243:         currentMenu = currentMenu->nextItem;
 13802  0DEF  0856               	movf	_currentMenu^(0+128),w
 13803  0DF0  0086               	movwf	6
 13804  0DF1  0857               	movf	(_currentMenu+1)^(0+128),w
 13805  0DF2  0087               	movwf	7
 13806  0DF3  0801               	movf	1,w
 13807  0DF4  00D6               	movwf	_currentMenu^(0+128)
 13808  0DF5  39FF               	andlw	255
 13809  0DF6  1D03               	skipz
 13810  0DF7                     L1:	
 13811  0DF7  3001               	movlw	1
 13812  0DF8  00D7               	movwf	(_currentMenu+1)^(0+128)
 13813                           
 13814                           ;controller.c: 244:     } else if(downState && currentMenu->prevItem != ((void*)0)){
 13815  0DF9  2E85               	goto	l9446
 13816  0DFA                     l9412:	
 13817  0DFA  085C               	movf	_downState^(0+128),w
 13818  0DFB  1903               	btfsc	3,2
 13819  0DFC  2E11               	goto	l9418
 13820  0DFD  0856               	movf	_currentMenu^(0+128),w
 13821  0DFE  0086               	movwf	6
 13822  0DFF  0857               	movf	(_currentMenu+1)^(0+128),w
 13823  0E00  0087               	movwf	7
 13824  0E01  3141               	addfsr 1,1
 13825  0E02  0801               	movf	1,w
 13826  0E03  1903               	btfsc	3,2
 13827  0E04  2E11               	goto	l9418
 13828                           
 13829                           ;controller.c: 245:         currentMenu = currentMenu->prevItem;
 13830  0E05  0856               	movf	_currentMenu^(0+128),w
 13831  0E06  0086               	movwf	6
 13832  0E07  0857               	movf	(_currentMenu+1)^(0+128),w
 13833  0E08  0087               	movwf	7
 13834  0E09  3141               	addfsr 1,1
 13835  0E0A  0801               	movf	1,w
 13836  0E0B  00D6               	movwf	_currentMenu^(0+128)
 13837  0E0C  39FF               	andlw	255
 13838  0E0D  1D03               	skipz
 13839  0E0E  3001               	movlw	1
 13840  0E0F  00D7               	movwf	(_currentMenu+1)^(0+128)
 13841                           
 13842                           ;controller.c: 246:     } else if(enterState && currentMenu->config != ((void*)0)){
 13843  0E10  2E85               	goto	l9446
 13844  0E11                     l9418:	
 13845  0E11  085A               	movf	_enterState^(0+128),w
 13846  0E12  1903               	btfsc	3,2
 13847  0E13  2E85               	goto	l9446
 13848  0E14  0856               	movf	_currentMenu^(0+128),w
 13849  0E15  0086               	movwf	6
 13850  0E16  0857               	movf	(_currentMenu+1)^(0+128),w
 13851  0E17  0087               	movwf	7
 13852  0E18  3142               	addfsr 1,2
 13853  0E19  0016               	moviw fsr1++
 13854  0E1A  0401               	iorwf	1,w
 13855  0E1B  1903               	btfsc	3,2
 13856  0E1C  2E85               	goto	l9446
 13857                           
 13858                           ;controller.c: 247:         currentMenu = currentMenu->config;
 13859  0E1D  0856               	movf	_currentMenu^(0+128),w
 13860  0E1E  0086               	movwf	6
 13861  0E1F  0857               	movf	(_currentMenu+1)^(0+128),w
 13862  0E20  0087               	movwf	7
 13863  0E21  3142               	addfsr 1,2
 13864  0E22  3F40               	moviw [0]fsr1
 13865  0E23  00D6               	movwf	_currentMenu^(0+128)
 13866  0E24  3F41               	moviw [1]fsr1
 13867  0E25  00D7               	movwf	(_currentMenu+1)^(0+128)
 13868                           
 13869                           ;controller.c: 248:         previousTask = currentMenu->task;
 13870  0E26  0856               	movf	_currentMenu^(0+128),w
 13871  0E27  0086               	movwf	6
 13872  0E28  0857               	movf	(_currentMenu+1)^(0+128),w
 13873  0E29  0087               	movwf	7
 13874  0E2A  3146               	addfsr 1,6
 13875  0E2B  3F40               	moviw [0]fsr1
 13876  0E2C  00D4               	movwf	_previousTask^(0+128)
 13877  0E2D  3F41               	moviw [1]fsr1
 13878  0E2E  00D5               	movwf	(_previousTask+1)^(0+128)
 13879                           
 13880                           ;controller.c: 251:     switch(currentMenu->name){
 13881  0E2F  2E85               	goto	l9446
 13882  0E30                     l9424:	
 13883                           
 13884                           ;controller.c: 253:             printf("PC  \r");
 13885  0E30  3055               	movlw	low (STR_1| (0+32768))
 13886  0E31  0141               	movlb	1	; select bank1
 13887  0E32  00A0               	movwf	printf@fmt^(0+128)
 13888  0E33  30A0               	movlw	high (STR_1| (0+32768))
 13889  0E34  00A1               	movwf	(printf@fmt^(0+128)+1)
 13890  0E35  319D  2506         	fcall	_printf
 13891                           
 13892                           ;controller.c: 254:             break;
 13893  0E37  0008               	return
 13894  0E38                     l9426:	
 13895                           
 13896                           ;controller.c: 257:             printf("BEAT\r");
 13897  0E38  3073               	movlw	low (STR_2| (0+32768))
 13898  0E39  0141               	movlb	1	; select bank1
 13899  0E3A  00A0               	movwf	printf@fmt^(0+128)
 13900  0E3B  30A0               	movlw	high (STR_2| (0+32768))
 13901  0E3C  00A1               	movwf	(printf@fmt^(0+128)+1)
 13902  0E3D  319D  2506         	fcall	_printf
 13903                           
 13904                           ;controller.c: 258:             break;
 13905  0E3F  0008               	return
 13906  0E40                     l9428:	
 13907                           
 13908                           ;controller.c: 261:             printf("ANI \r");
 13909  0E40  3061               	movlw	low (STR_3| (0+32768))
 13910  0E41  0141               	movlb	1	; select bank1
 13911  0E42  00A0               	movwf	printf@fmt^(0+128)
 13912  0E43  30A0               	movlw	high (STR_3| (0+32768))
 13913  0E44  00A1               	movwf	(printf@fmt^(0+128)+1)
 13914  0E45  319D  2506         	fcall	_printf
 13915                           
 13916                           ;controller.c: 262:             break;
 13917  0E47  0008               	return
 13918  0E48                     l9430:	
 13919                           
 13920                           ;controller.c: 265:             printf("LED \r");
 13921  0E48  305B               	movlw	low (STR_4| (0+32768))
 13922  0E49  0141               	movlb	1	; select bank1
 13923  0E4A  00A0               	movwf	printf@fmt^(0+128)
 13924  0E4B  30A0               	movlw	high (STR_4| (0+32768))
 13925  0E4C  00A1               	movwf	(printf@fmt^(0+128)+1)
 13926  0E4D  319D  2506         	fcall	_printf
 13927                           
 13928                           ;controller.c: 266:             break;
 13929  0E4F  0008               	return
 13930  0E50                     l9432:	
 13931                           
 13932                           ;controller.c: 269:             printf("B   \r");
 13933  0E50  3049               	movlw	low (STR_5| (0+32768))
 13934  0E51  0141               	movlb	1	; select bank1
 13935  0E52  00A0               	movwf	printf@fmt^(0+128)
 13936  0E53  30A0               	movlw	high (STR_5| (0+32768))
 13937  0E54  00A1               	movwf	(printf@fmt^(0+128)+1)
 13938  0E55  319D  2506         	fcall	_printf
 13939                           
 13940                           ;controller.c: 270:             break;
 13941  0E57  0008               	return
 13942  0E58                     l9434:	
 13943                           
 13944                           ;controller.c: 273:             printf("FADE\r");
 13945  0E58  306D               	movlw	low (STR_6| (0+32768))
 13946  0E59  0141               	movlb	1	; select bank1
 13947  0E5A  00A0               	movwf	printf@fmt^(0+128)
 13948  0E5B  30A0               	movlw	high (STR_6| (0+32768))
 13949  0E5C  00A1               	movwf	(printf@fmt^(0+128)+1)
 13950  0E5D  319D  2506         	fcall	_printf
 13951                           
 13952                           ;controller.c: 274:             break;
 13953  0E5F  0008               	return
 13954  0E60                     l9436:	
 13955                           
 13956                           ;controller.c: 277:             printf("C   \r");
 13957  0E60  304F               	movlw	low (STR_7| (0+32768))
 13958  0E61  0141               	movlb	1	; select bank1
 13959  0E62  00A0               	movwf	printf@fmt^(0+128)
 13960  0E63  30A0               	movlw	high (STR_7| (0+32768))
 13961  0E64  00A1               	movwf	(printf@fmt^(0+128)+1)
 13962  0E65  319D  2506         	fcall	_printf
 13963                           
 13964                           ;controller.c: 278:             break;
 13965  0E67  0008               	return
 13966  0E68                     l9438:	
 13967                           
 13968                           ;controller.c: 281:             printf("ALL \r");
 13969  0E68  3067               	movlw	low (STR_8| (0+32768))
 13970  0E69  0141               	movlb	1	; select bank1
 13971  0E6A  00A0               	movwf	printf@fmt^(0+128)
 13972  0E6B  30A0               	movlw	high (STR_8| (0+32768))
 13973  0E6C  00A1               	movwf	(printf@fmt^(0+128)+1)
 13974  0E6D  319D  2506         	fcall	_printf
 13975                           
 13976                           ;controller.c: 282:             break;
 13977  0E6F  0008               	return
 13978  0E70                     l9440:	
 13979                           
 13980                           ;controller.c: 285:             if(currentMenu->task != ((void*)0))
 13981  0E70  0141               	movlb	1	; select bank1
 13982  0E71  0856               	movf	_currentMenu^(0+128),w
 13983  0E72  0086               	movwf	6
 13984  0E73  0857               	movf	(_currentMenu+1)^(0+128),w
 13985  0E74  0087               	movwf	7
 13986  0E75  3146               	addfsr 1,6
 13987  0E76  0016               	moviw fsr1++
 13988  0E77  0401               	iorwf	1,w
 13989  0E78  1903               	btfsc	3,2
 13990  0E79  0008               	return
 13991                           
 13992                           ;controller.c: 286:             currentMenu->task();
 13993  0E7A  0856               	movf	_currentMenu^(0+128),w
 13994  0E7B  0086               	movwf	6
 13995  0E7C  0857               	movf	(_currentMenu+1)^(0+128),w
 13996  0E7D  0087               	movwf	7
 13997  0E7E  3146               	addfsr 1,6
 13998  0E7F  3F41               	moviw [1]fsr1
 13999  0E80  008A               	movwf	10
 14000  0E81  3F40               	moviw [0]fsr1
 14001  0E82  000A               	callw
 14002  0E83  318D               	pagesel	$
 14003  0E84  0008               	return
 14004  0E85                     l9446:	
 14005  0E85  0856               	movf	_currentMenu^(0+128),w
 14006  0E86  0086               	movwf	6
 14007  0E87  0857               	movf	(_currentMenu+1)^(0+128),w
 14008  0E88  0087               	movwf	7
 14009  0E89  3145               	addfsr 1,5
 14010  0E8A  0801               	movf	1,w
 14011  0E8B  0144               	movlb	4	; select bank4
 14012  0E8C  00E8               	movwf	??_CONTROLLER_task^(0+512)
 14013  0E8D  01E9               	clrf	(??_CONTROLLER_task^(0+512)+1)
 14014                           
 14015                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14016                           ; Switch size 1, requested type "simple"
 14017                           ; Number of cases is 1, Range of values is 0 to 0
 14018                           ; switch strategies available:
 14019                           ; Name         Instructions Cycles
 14020                           ; simple_byte            4     3 (average)
 14021                           ; direct_byte            8     6 (fixed)
 14022                           ; jumptable            260     6 (fixed)
 14023                           ;	Chosen strategy is simple_byte
 14024  0E8E  0869               	movf	(??_CONTROLLER_task+1)^(0+512),w
 14025  0E8F  3A00               	xorlw	0	; case 0
 14026  0E90  1903               	skipnz
 14027  0E91  2E93               	goto	l9644
 14028  0E92  2E70               	goto	l9440
 14029  0E93                     l9644:	
 14030                           
 14031                           ; Switch size 1, requested type "simple"
 14032                           ; Number of cases is 8, Range of values is 0 to 8
 14033                           ; switch strategies available:
 14034                           ; Name         Instructions Cycles
 14035                           ; direct_byte           24     6 (fixed)
 14036                           ; simple_byte           25    13 (average)
 14037                           ; jumptable            260     6 (fixed)
 14038                           ;	Chosen strategy is simple_byte
 14039  0E93  0868               	movf	??_CONTROLLER_task^(0+512),w
 14040  0E94  3A00               	xorlw	0	; case 0
 14041  0E95  1903               	skipnz
 14042  0E96  2E30               	goto	l9424
 14043  0E97  3A01               	xorlw	1	; case 1
 14044  0E98  1903               	skipnz
 14045  0E99  2E38               	goto	l9426
 14046  0E9A  3A03               	xorlw	3	; case 2
 14047  0E9B  1903               	skipnz
 14048  0E9C  2E40               	goto	l9428
 14049  0E9D  3A01               	xorlw	1	; case 3
 14050  0E9E  1903               	skipnz
 14051  0E9F  2E48               	goto	l9430
 14052  0EA0  3A06               	xorlw	6	; case 5
 14053  0EA1  1903               	skipnz
 14054  0EA2  2E50               	goto	l9432
 14055  0EA3  3A03               	xorlw	3	; case 6
 14056  0EA4  1903               	skipnz
 14057  0EA5  2E58               	goto	l9434
 14058  0EA6  3A01               	xorlw	1	; case 7
 14059  0EA7  1903               	skipnz
 14060  0EA8  2E60               	goto	l9436
 14061  0EA9  3A0F               	xorlw	15	; case 8
 14062  0EAA  1903               	skipnz
 14063  0EAB  2E68               	goto	l9438
 14064  0EAC  2E70               	goto	l9440
 14065  0EAD  0008               	return
 14066  0EAE                     __end_of_CONTROLLER_task:	
 14067                           
 14068                           	psect	text24
 14069  13D0                     __ptext24:	
 14070 ;; *************** function _CONTROL_BEAT *****************
 14071 ;; Defined at:
 14072 ;;		line 327 in file "controller.c"
 14073 ;; Parameters:    Size  Location     Type
 14074 ;;		None
 14075 ;; Auto vars:     Size  Location     Type
 14076 ;;		None
 14077 ;; Return value:  Size  Location     Type
 14078 ;;                  1    wreg      void 
 14079 ;; Registers used:
 14080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14081 ;; Tracked objects:
 14082 ;;		On entry : 0/0
 14083 ;;		On exit  : 0/0
 14084 ;;		Unchanged: 0/0
 14085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14088 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14089 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14090 ;;Total ram usage:        2 bytes
 14091 ;; Hardware stack levels used:    1
 14092 ;; Hardware stack levels required when called:   17
 14093 ;; This function calls:
 14094 ;;		_LED_task_BEAT_FADE
 14095 ;;		_LED_task_BEAT_MIXED
 14096 ;;		_LED_task_BEAT_STROBE
 14097 ;;		_TM1650_fastPrintNum_2digit
 14098 ;;		_printf
 14099 ;; This function is called by:
 14100 ;;		_CONTROLLER_init
 14101 ;;		_CONTROLLER_task
 14102 ;; This function uses a non-reentrant model
 14103 ;;
 14104                           
 14105                           
 14106                           ;psect for function _CONTROL_BEAT
 14107  13D0                     _CONTROL_BEAT:	
 14108                           
 14109                           ;controller.c: 329:     switch(currentMenu->name){
 14110                           
 14111                           ;incstack = 0
 14112 ;; hardware stack exceeded
 14113                           ; Regs used in _CONTROL_BEAT: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14114  13D0  2BF6               	goto	l8290
 14115  13D1                     l8272:	
 14116                           
 14117                           ;controller.c: 332:             printf("B-\r");
 14118  13D1  3082               	movlw	low (STR_9| (0+32768))
 14119  13D2  00A0               	movwf	printf@fmt^(0+128)
 14120  13D3  30A0               	movlw	high (STR_9| (0+32768))
 14121  13D4  00A1               	movwf	(printf@fmt^(0+128)+1)
 14122  13D5  319D  2506  3193   	fcall	_printf
 14123                           
 14124                           ;controller.c: 333:             LED_task_BEAT_STROBE();
 14125  13D8  318A  22E2  3193   	fcall	_LED_task_BEAT_STROBE
 14126                           
 14127                           ;controller.c: 334:             break;
 14128  13DB  2C12               	goto	l8292
 14129  13DC                     l8276:	
 14130                           
 14131                           ;controller.c: 337:             printf("F-\r");
 14132  13DC  308A               	movlw	low (STR_10| (0+32768))
 14133  13DD  00A0               	movwf	printf@fmt^(0+128)
 14134  13DE  30A0               	movlw	high (STR_10| (0+32768))
 14135  13DF                     L2:	
 14136  13DF  00A1               	movwf	(printf@fmt^(0+128)+1)
 14137  13E0  319D  2506  3193   	fcall	_printf
 14138                           
 14139                           ;controller.c: 338:             LED_task_BEAT_FADE();
 14140  13E3  3180  2003  3193   	fcall	_LED_task_BEAT_FADE
 14141                           
 14142                           ;controller.c: 339:             break;
 14143  13E6  2C12               	goto	l8292
 14144  13E7                     l8280:	
 14145                           
 14146                           ;controller.c: 342:             printf("C-\r");
 14147  13E7  3086               	movlw	low (STR_11| (0+32768))
 14148  13E8  00A0               	movwf	printf@fmt^(0+128)
 14149  13E9  30A0               	movlw	high (STR_11| (0+32768))
 14150  13EA  2BDF               	goto	L2
 14151  13EB                     l8284:	
 14152                           
 14153                           ;controller.c: 347:             printf("A-\r");
 14154  13EB  307E               	movlw	low (STR_12| (0+32768))
 14155  13EC  00A0               	movwf	printf@fmt^(0+128)
 14156  13ED  30A0               	movlw	high (STR_12| (0+32768))
 14157  13EE  00A1               	movwf	(printf@fmt^(0+128)+1)
 14158  13EF  319D  2506  3193   	fcall	_printf
 14159                           
 14160                           ;controller.c: 348:             LED_task_BEAT_MIXED();
 14161  13F2  3187  27FF  3193   	fcall	_LED_task_BEAT_MIXED
 14162                           
 14163                           ;controller.c: 349:             break;
 14164  13F5  2C12               	goto	l8292
 14165  13F6                     l8290:	
 14166  13F6  0141               	movlb	1	; select bank1
 14167  13F7  0856               	movf	_currentMenu^(0+128),w
 14168  13F8  0086               	movwf	6
 14169  13F9  0857               	movf	(_currentMenu+1)^(0+128),w
 14170  13FA  0087               	movwf	7
 14171  13FB  3145               	addfsr 1,5
 14172  13FC  0801               	movf	1,w
 14173  13FD  00C0               	movwf	??_CONTROL_BEAT^(0+128)
 14174  13FE  01C1               	clrf	(??_CONTROL_BEAT^(0+128)+1)
 14175                           
 14176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14177                           ; Switch size 1, requested type "simple"
 14178                           ; Number of cases is 1, Range of values is 0 to 0
 14179                           ; switch strategies available:
 14180                           ; Name         Instructions Cycles
 14181                           ; simple_byte            4     3 (average)
 14182                           ; direct_byte            8     6 (fixed)
 14183                           ; jumptable            260     6 (fixed)
 14184                           ;	Chosen strategy is simple_byte
 14185  13FF  0841               	movf	(??_CONTROL_BEAT+1)^(0+128),w
 14186  1400  3A00               	xorlw	0	; case 0
 14187  1401  1903               	skipnz
 14188  1402  2C04               	goto	l9646
 14189  1403  2C12               	goto	l8292
 14190  1404                     l9646:	
 14191                           
 14192                           ; Switch size 1, requested type "simple"
 14193                           ; Number of cases is 4, Range of values is 9 to 12
 14194                           ; switch strategies available:
 14195                           ; Name         Instructions Cycles
 14196                           ; simple_byte           13     7 (average)
 14197                           ; direct_byte           17     9 (fixed)
 14198                           ; jumptable            263     9 (fixed)
 14199                           ;	Chosen strategy is simple_byte
 14200  1404  0840               	movf	??_CONTROL_BEAT^(0+128),w
 14201  1405  3A09               	xorlw	9	; case 9
 14202  1406  1903               	skipnz
 14203  1407  2BD1               	goto	l8272
 14204  1408  3A03               	xorlw	3	; case 10
 14205  1409  1903               	skipnz
 14206  140A  2BDC               	goto	l8276
 14207  140B  3A01               	xorlw	1	; case 11
 14208  140C  1903               	skipnz
 14209  140D  2BE7               	goto	l8280
 14210  140E  3A07               	xorlw	7	; case 12
 14211  140F  1903               	skipnz
 14212  1410  2BEB               	goto	l8284
 14213  1411  2C12               	goto	l8292
 14214  1412                     l8292:	
 14215                           
 14216                           ;controller.c: 353:     TM1650_fastPrintNum_2digit(beatBrightness);
 14217  1412  0141               	movlb	1	; select bank1
 14218  1413  086F               	movf	_beatBrightness^(0+128),w
 14219  1414  3194  249A  3193   	fcall	_TM1650_fastPrintNum_2digit
 14220                           
 14221                           ;controller.c: 355:     if (upState) {
 14222  1417  0141               	movlb	1	; select bank1
 14223  1418  085D               	movf	_upState^(0+128),w
 14224  1419  1903               	btfsc	3,2
 14225  141A  2C29               	goto	l8302
 14226                           
 14227                           ;controller.c: 356:         if(beatBrightness < 9){
 14228  141B  3009               	movlw	9
 14229  141C  026F               	subwf	_beatBrightness^(0+128),w
 14230  141D  1803               	skipnc
 14231  141E  2C24               	goto	l8300
 14232                           
 14233                           ;controller.c: 357:             beatBrightness++;
 14234  141F  3001               	movlw	1
 14235  1420  00C0               	movwf	??_CONTROL_BEAT^(0+128)
 14236  1421  0840               	movf	??_CONTROL_BEAT^(0+128),w
 14237  1422  07EF               	addwf	_beatBrightness^(0+128),f
 14238                           
 14239                           ;controller.c: 358:         } else {
 14240  1423  0008               	return
 14241  1424                     l8300:	
 14242                           
 14243                           ;controller.c: 359:             beatBrightness = 9;
 14244  1424  3009               	movlw	9
 14245  1425  00C0               	movwf	??_CONTROL_BEAT^(0+128)
 14246  1426  0840               	movf	??_CONTROL_BEAT^(0+128),w
 14247  1427  00EF               	movwf	_beatBrightness^(0+128)
 14248  1428  0008               	return
 14249  1429                     l8302:	
 14250  1429  085C               	movf	_downState^(0+128),w
 14251  142A  1903               	btfsc	3,2
 14252  142B  0008               	return
 14253                           
 14254                           ;controller.c: 362:         if(beatBrightness > 0){
 14255  142C  086F               	movf	_beatBrightness^(0+128),w
 14256  142D  1903               	btfsc	3,2
 14257  142E  2C32               	goto	l8308
 14258                           
 14259                           ;controller.c: 363:             beatBrightness--;
 14260  142F  3001               	movlw	1
 14261  1430  02EF               	subwf	_beatBrightness^(0+128),f
 14262                           
 14263                           ;controller.c: 364:         } else {
 14264  1431  0008               	return
 14265  1432                     l8308:	
 14266                           
 14267                           ;controller.c: 365:             beatBrightness = 0;
 14268  1432  01EF               	clrf	_beatBrightness^(0+128)
 14269  1433  0008               	return
 14270  1434                     __end_of_CONTROL_BEAT:	
 14271                           
 14272                           	psect	text25
 14273  158B                     __ptext25:	
 14274 ;; *************** function _CONTROL_ANIMATION *****************
 14275 ;; Defined at:
 14276 ;;		line 436 in file "controller.c"
 14277 ;; Parameters:    Size  Location     Type
 14278 ;;		None
 14279 ;; Auto vars:     Size  Location     Type
 14280 ;;		None
 14281 ;; Return value:  Size  Location     Type
 14282 ;;                  1    wreg      void 
 14283 ;; Registers used:
 14284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14285 ;; Tracked objects:
 14286 ;;		On entry : 0/0
 14287 ;;		On exit  : 0/0
 14288 ;;		Unchanged: 0/0
 14289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14292 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14293 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14294 ;;Total ram usage:        1 bytes
 14295 ;; Hardware stack levels used:    1
 14296 ;; Hardware stack levels required when called:   17
 14297 ;; This function calls:
 14298 ;;		_LED_task_ANIMATION
 14299 ;;		_TM1650_fastPrintNum_2digit
 14300 ;;		_printf
 14301 ;; This function is called by:
 14302 ;;		_CONTROLLER_init
 14303 ;;		_CONTROLLER_task
 14304 ;; This function uses a non-reentrant model
 14305 ;;
 14306                           
 14307                           
 14308                           ;psect for function _CONTROL_ANIMATION
 14309  158B                     _CONTROL_ANIMATION:	
 14310                           
 14311                           ;controller.c: 438:     LED_task_ANIMATION();
 14312                           
 14313                           ;incstack = 0
 14314 ;; hardware stack exceeded
 14315                           ; Regs used in _CONTROL_ANIMATION: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14316  158B  3180  2002  3195   	fcall	_LED_task_ANIMATION
 14317                           
 14318                           ;controller.c: 440:     if (upState && currentMenu->name == A_SELECTION) {
 14319  158E  0141               	movlb	1	; select bank1
 14320  158F  085D               	movf	_upState^(0+128),w
 14321  1590  1903               	btfsc	3,2
 14322  1591  2DAD               	goto	l8390
 14323  1592  0856               	movf	_currentMenu^(0+128),w
 14324  1593  0086               	movwf	6
 14325  1594  0857               	movf	(_currentMenu+1)^(0+128),w
 14326  1595  0087               	movwf	7
 14327  1596  3145               	addfsr 1,5
 14328  1597  3012               	movlw	18
 14329  1598  0601               	xorwf	1,w
 14330  1599  1D03               	btfss	3,2
 14331  159A  2DAD               	goto	l8390
 14332                           
 14333                           ;controller.c: 441:         if (animationModeSelected < 10) {
 14334  159B  300A               	movlw	10
 14335  159C  026D               	subwf	_animationModeSelected^(0+128),w
 14336  159D  1803               	skipnc
 14337  159E  2DA6               	goto	l8388
 14338                           
 14339                           ;controller.c: 442:             animationModeSelected++;
 14340  159F  3001               	movlw	1
 14341  15A0  0140               	movlb	0	; select bank0
 14342  15A1  00EF               	movwf	??_CONTROL_ANIMATION
 14343  15A2  086F               	movf	??_CONTROL_ANIMATION,w
 14344  15A3  0141               	movlb	1	; select bank1
 14345  15A4  07ED               	addwf	_animationModeSelected^(0+128),f
 14346                           
 14347                           ;controller.c: 443:         } else {
 14348  15A5  2DF4               	goto	l8418
 14349  15A6                     l8388:	
 14350                           
 14351                           ;controller.c: 444:             animationModeSelected = 10;
 14352  15A6  300A               	movlw	10
 14353  15A7  0140               	movlb	0	; select bank0
 14354  15A8  00EF               	movwf	??_CONTROL_ANIMATION
 14355  15A9  086F               	movf	??_CONTROL_ANIMATION,w
 14356  15AA  0141               	movlb	1	; select bank1
 14357  15AB  00ED               	movwf	_animationModeSelected^(0+128)
 14358  15AC  2DF4               	goto	l8418
 14359  15AD                     l8390:	
 14360  15AD  085C               	movf	_downState^(0+128),w
 14361  15AE  1903               	btfsc	3,2
 14362  15AF  2DC3               	goto	l8398
 14363  15B0  0856               	movf	_currentMenu^(0+128),w
 14364  15B1  0086               	movwf	6
 14365  15B2  0857               	movf	(_currentMenu+1)^(0+128),w
 14366  15B3  0087               	movwf	7
 14367  15B4  3145               	addfsr 1,5
 14368  15B5  3012               	movlw	18
 14369  15B6  0601               	xorwf	1,w
 14370  15B7  1D03               	btfss	3,2
 14371  15B8  2DC3               	goto	l8398
 14372                           
 14373                           ;controller.c: 447:         if (animationModeSelected > 1) {
 14374  15B9  3002               	movlw	2
 14375  15BA  026D               	subwf	_animationModeSelected^(0+128),w
 14376  15BB  1C03               	skipc
 14377  15BC  2DC0               	goto	l1168
 14378                           
 14379                           ;controller.c: 448:             animationModeSelected--;
 14380  15BD  3001               	movlw	1
 14381  15BE  02ED               	subwf	_animationModeSelected^(0+128),f
 14382                           
 14383                           ;controller.c: 449:         } else {
 14384  15BF  2DF4               	goto	l8418
 14385  15C0                     l1168:	
 14386                           
 14387                           ;controller.c: 450:             animationModeSelected = 1;
 14388  15C0  01ED               	clrf	_animationModeSelected^(0+128)
 14389  15C1  0AED               	incf	_animationModeSelected^(0+128),f
 14390  15C2  2DF4               	goto	l8418
 14391  15C3                     l8398:	
 14392  15C3  085D               	movf	_upState^(0+128),w
 14393  15C4  1903               	btfsc	3,2
 14394  15C5  2DE1               	goto	l8408
 14395  15C6  0856               	movf	_currentMenu^(0+128),w
 14396  15C7  0086               	movwf	6
 14397  15C8  0857               	movf	(_currentMenu+1)^(0+128),w
 14398  15C9  0087               	movwf	7
 14399  15CA  3145               	addfsr 1,5
 14400  15CB  3011               	movlw	17
 14401  15CC  0601               	xorwf	1,w
 14402  15CD  1D03               	btfss	3,2
 14403  15CE  2DE1               	goto	l8408
 14404                           
 14405                           ;controller.c: 453:         if (animationBrightness < 10) {
 14406  15CF  300A               	movlw	10
 14407  15D0  026C               	subwf	_animationBrightness^(0+128),w
 14408  15D1  1803               	skipnc
 14409  15D2  2DDA               	goto	l8406
 14410                           
 14411                           ;controller.c: 454:             animationBrightness++;
 14412  15D3  3001               	movlw	1
 14413  15D4  0140               	movlb	0	; select bank0
 14414  15D5  00EF               	movwf	??_CONTROL_ANIMATION
 14415  15D6  086F               	movf	??_CONTROL_ANIMATION,w
 14416  15D7  0141               	movlb	1	; select bank1
 14417  15D8  07EC               	addwf	_animationBrightness^(0+128),f
 14418                           
 14419                           ;controller.c: 455:         } else {
 14420  15D9  2DF4               	goto	l8418
 14421  15DA                     l8406:	
 14422                           
 14423                           ;controller.c: 456:             animationBrightness = 10;
 14424  15DA  300A               	movlw	10
 14425  15DB  0140               	movlb	0	; select bank0
 14426  15DC  00EF               	movwf	??_CONTROL_ANIMATION
 14427  15DD  086F               	movf	??_CONTROL_ANIMATION,w
 14428  15DE  0141               	movlb	1	; select bank1
 14429  15DF  00EC               	movwf	_animationBrightness^(0+128)
 14430  15E0  2DF4               	goto	l8418
 14431  15E1                     l8408:	
 14432  15E1  085C               	movf	_downState^(0+128),w
 14433  15E2  1903               	btfsc	3,2
 14434  15E3  2DF4               	goto	l8418
 14435  15E4  0856               	movf	_currentMenu^(0+128),w
 14436  15E5  0086               	movwf	6
 14437  15E6  0857               	movf	(_currentMenu+1)^(0+128),w
 14438  15E7  0087               	movwf	7
 14439  15E8  3145               	addfsr 1,5
 14440  15E9  3011               	movlw	17
 14441  15EA  0601               	xorwf	1,w
 14442  15EB  1D03               	btfss	3,2
 14443  15EC  2DF4               	goto	l8418
 14444                           
 14445                           ;controller.c: 459:         if (animationBrightness > 0) {
 14446  15ED  086C               	movf	_animationBrightness^(0+128),w
 14447  15EE  1903               	btfsc	3,2
 14448  15EF  2DF3               	goto	l8416
 14449                           
 14450                           ;controller.c: 460:             animationBrightness--;
 14451  15F0  3001               	movlw	1
 14452  15F1  02EC               	subwf	_animationBrightness^(0+128),f
 14453                           
 14454                           ;controller.c: 461:         } else {
 14455  15F2  2DF4               	goto	l8418
 14456  15F3                     l8416:	
 14457                           
 14458                           ;controller.c: 462:             animationBrightness = 0;
 14459  15F3  01EC               	clrf	_animationBrightness^(0+128)
 14460  15F4                     l8418:	
 14461                           
 14462                           ;controller.c: 466:     if(currentMenu->name == A_SELECTION){
 14463  15F4  0856               	movf	_currentMenu^(0+128),w
 14464  15F5  0086               	movwf	6
 14465  15F6  0857               	movf	(_currentMenu+1)^(0+128),w
 14466  15F7  0087               	movwf	7
 14467  15F8  3145               	addfsr 1,5
 14468  15F9  3012               	movlw	18
 14469  15FA  0601               	xorwf	1,w
 14470  15FB  1D03               	btfss	3,2
 14471  15FC  2E07               	goto	l8422
 14472                           
 14473                           ;controller.c: 467:         printf("An\r");
 14474  15FD  308E               	movlw	low (STR_17| (0+32768))
 14475  15FE  00A0               	movwf	printf@fmt^(0+128)
 14476  15FF  30A0               	movlw	high (STR_17| (0+32768))
 14477  1600  00A1               	movwf	(printf@fmt^(0+128)+1)
 14478  1601  319D  2506  3195   	fcall	_printf
 14479                           
 14480                           ;controller.c: 468:         TM1650_fastPrintNum_2digit(animationModeSelected);
 14481  1604  0141               	movlb	1	; select bank1
 14482  1605  086D               	movf	_animationModeSelected^(0+128),w
 14483  1606  2E10               	goto	L3
 14484  1607                     l8422:	
 14485                           ;controller.c: 469:     } else{
 14486                           
 14487                           
 14488                           ;controller.c: 470:         printf("Br\r");
 14489  1607  3092               	movlw	low (STR_18| (0+32768))
 14490  1608  00A0               	movwf	printf@fmt^(0+128)
 14491  1609  30A0               	movlw	high (STR_18| (0+32768))
 14492  160A  00A1               	movwf	(printf@fmt^(0+128)+1)
 14493  160B  319D  2506  3195   	fcall	_printf
 14494                           
 14495                           ;controller.c: 471:         TM1650_fastPrintNum_2digit(animationBrightness);
 14496  160E  0141               	movlb	1	; select bank1
 14497  160F  086C               	movf	_animationBrightness^(0+128),w
 14498  1610                     L3:	
 14499  1610  3194  249A  3195   	fcall	_TM1650_fastPrintNum_2digit
 14500                           
 14501                           ;controller.c: 474:     LED_task_ANIMATION();
 14502  1613  3180  2002         	fcall	_LED_task_ANIMATION
 14503  1615  0008               	return
 14504  1616                     __end_of_CONTROL_ANIMATION:	
 14505                           
 14506                           	psect	text26
 14507  1754                     __ptext26:	
 14508 ;; *************** function _CONTROL_DMX *****************
 14509 ;; Defined at:
 14510 ;;		line 297 in file "controller.c"
 14511 ;; Parameters:    Size  Location     Type
 14512 ;;		None
 14513 ;; Auto vars:     Size  Location     Type
 14514 ;;		None
 14515 ;; Return value:  Size  Location     Type
 14516 ;;                  1    wreg      void 
 14517 ;; Registers used:
 14518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14519 ;; Tracked objects:
 14520 ;;		On entry : 0/0
 14521 ;;		On exit  : 0/0
 14522 ;;		Unchanged: 0/0
 14523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14526 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14527 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14528 ;;Total ram usage:        2 bytes
 14529 ;; Hardware stack levels used:    1
 14530 ;; Hardware stack levels required when called:   18
 14531 ;; This function calls:
 14532 ;;		_BUTTONS_isHeld
 14533 ;;		_CLOCK_getTime
 14534 ;;		_LED_task_DMX
 14535 ;;		_address_dec
 14536 ;;		_address_inc
 14537 ;; This function is called by:
 14538 ;;		_CONTROLLER_init
 14539 ;;		_CONTROLLER_task
 14540 ;; This function uses a non-reentrant model
 14541 ;;
 14542                           
 14543                           
 14544                           ;psect for function _CONTROL_DMX
 14545  1754                     _CONTROL_DMX:	
 14546                           
 14547                           ;controller.c: 299:     LED_task_DMX();
 14548                           
 14549                           ;incstack = 0
 14550 ;; hardware stack exceeded
 14551                           ; Regs used in _CONTROL_DMX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14552  1754  3193  236D  3197   	fcall	_LED_task_DMX
 14553                           
 14554                           ;controller.c: 301:     if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incInt
      +                          erval)){
 14555  1757  0141               	movlb	1	; select bank1
 14556  1758  0860               	movf	_up^(0+128),w
 14557  1759  319C  2474  3197   	fcall	_BUTTONS_isHeld
 14558  175C  3A00               	xorlw	0
 14559  175D  1903               	skipnz
 14560  175E  2F9A               	goto	l9164
 14561  175F  319B  23C3  3197   	fcall	_CLOCK_getTime
 14562  1762  0141               	movlb	1	; select bank1
 14563  1763  0852               	movf	_lastIncTime^(0+128),w
 14564  1764  0140               	movlb	0	; select bank0
 14565  1765  0220               	subwf	?_CLOCK_getTime,w
 14566  1766  0142               	movlb	2	; select bank2
 14567  1767  00ED               	movwf	??_CONTROL_DMX^(0+256)
 14568  1768  0141               	movlb	1	; select bank1
 14569  1769  0853               	movf	(_lastIncTime+1)^(0+128),w
 14570  176A  0140               	movlb	0	; select bank0
 14571  176B  3B21               	subwfb	?_CLOCK_getTime+1,w
 14572  176C  0142               	movlb	2	; select bank2
 14573  176D  00EE               	movwf	(??_CONTROL_DMX+1)^(0+256)
 14574  176E  086E               	movf	(??_CONTROL_DMX+1)^(0+256),w
 14575  176F  0141               	movlb	1	; select bank1
 14576  1770  0269               	subwf	(_incInterval+1)^(0+128),w
 14577  1771  1D03               	skipz
 14578  1772  2F77               	goto	u8835
 14579  1773  0142               	movlb	2	; select bank2
 14580  1774  086D               	movf	??_CONTROL_DMX^(0+256),w
 14581  1775  0141               	movlb	1	; select bank1
 14582  1776  0268               	subwf	_incInterval^(0+128),w
 14583  1777                     u8835:	
 14584  1777  1803               	skipnc
 14585  1778  2F9A               	goto	l9164
 14586                           
 14587                           ;controller.c: 302:         address_inc();
 14588  1779  319E  26A2  3197   	fcall	_address_inc
 14589  177C                     L4:	
 14590                           
 14591                           ;controller.c: 303:         lastIncTime = CLOCK_getTime();
 14592  177C  319B  23C3  3197   	fcall	_CLOCK_getTime
 14593  177F  0140               	movlb	0	; select bank0
 14594  1780  0821               	movf	?_CLOCK_getTime+1,w
 14595  1781  0141               	movlb	1	; select bank1
 14596  1782  00D3               	movwf	(_lastIncTime+1)^(0+128)
 14597  1783  0140               	movlb	0	; select bank0
 14598  1784  0820               	movf	?_CLOCK_getTime,w
 14599  1785  0141               	movlb	1	; select bank1
 14600  1786  00D2               	movwf	_lastIncTime^(0+128)
 14601                           
 14602                           ;controller.c: 304:         if(incInterval > 20){
 14603  1787  0869               	movf	(_incInterval+1)^(0+128),w
 14604  1788  3A80               	xorlw	128
 14605  1789  0142               	movlb	2	; select bank2
 14606  178A  00ED               	movwf	??_CONTROL_DMX^(0+256)
 14607  178B  3080               	movlw	128
 14608  178C  026D               	subwf	??_CONTROL_DMX^(0+256),w
 14609  178D  1D03               	skipz
 14610  178E  2F92               	goto	u8845
 14611  178F  3015               	movlw	21
 14612  1790  0141               	movlb	1	; select bank1
 14613  1791  0268               	subwf	_incInterval^(0+128),w
 14614  1792                     u8845:	
 14615  1792  1C03               	skipc
 14616  1793  0008               	return
 14617                           
 14618                           ;controller.c: 305:             incInterval-=1;
 14619  1794  30FF               	movlw	255
 14620  1795  0141               	movlb	1	; select bank1
 14621  1796  07E8               	addwf	_incInterval^(0+128),f
 14622  1797  30FF               	movlw	255
 14623  1798  3DE9               	addwfc	(_incInterval+1)^(0+128),f
 14624  1799  0008               	return
 14625  179A                     l9164:	
 14626  179A  0141               	movlb	1	; select bank1
 14627  179B  085F               	movf	_down^(0+128),w
 14628  179C  319C  2474  3197   	fcall	_BUTTONS_isHeld
 14629  179F  3A00               	xorlw	0
 14630  17A0  1903               	skipnz
 14631  17A1  2FC0               	goto	l9176
 14632  17A2  319B  23C3  3197   	fcall	_CLOCK_getTime
 14633  17A5  0141               	movlb	1	; select bank1
 14634  17A6  0852               	movf	_lastIncTime^(0+128),w
 14635  17A7  0140               	movlb	0	; select bank0
 14636  17A8  0220               	subwf	?_CLOCK_getTime,w
 14637  17A9  0142               	movlb	2	; select bank2
 14638  17AA  00ED               	movwf	??_CONTROL_DMX^(0+256)
 14639  17AB  0141               	movlb	1	; select bank1
 14640  17AC  0853               	movf	(_lastIncTime+1)^(0+128),w
 14641  17AD  0140               	movlb	0	; select bank0
 14642  17AE  3B21               	subwfb	?_CLOCK_getTime+1,w
 14643  17AF  0142               	movlb	2	; select bank2
 14644  17B0  00EE               	movwf	(??_CONTROL_DMX+1)^(0+256)
 14645  17B1  086E               	movf	(??_CONTROL_DMX+1)^(0+256),w
 14646  17B2  0141               	movlb	1	; select bank1
 14647  17B3  0269               	subwf	(_incInterval+1)^(0+128),w
 14648  17B4  1D03               	skipz
 14649  17B5  2FBA               	goto	u8865
 14650  17B6  0142               	movlb	2	; select bank2
 14651  17B7  086D               	movf	??_CONTROL_DMX^(0+256),w
 14652  17B8  0141               	movlb	1	; select bank1
 14653  17B9  0268               	subwf	_incInterval^(0+128),w
 14654  17BA                     u8865:	
 14655  17BA  1803               	skipnc
 14656  17BB  2FC0               	goto	l9176
 14657                           
 14658                           ;controller.c: 308:         address_dec();
 14659  17BC  319E  2682  3197   	fcall	_address_dec
 14660  17BF  2F7C               	goto	L4
 14661  17C0                     l9176:	
 14662                           ;controller.c: 313:     } else if(BUTTONS_isHeld(enter)){
 14663                           
 14664                           ;controller.c: 312:         }
 14665                           
 14666                           ;controller.c: 310:         if(incInterval > 20){
 14667                           
 14668                           ;controller.c: 309:         lastIncTime = CLOCK_getTime();
 14669                           
 14670  17C0  0141               	movlb	1	; select bank1
 14671  17C1  085E               	movf	_enter^(0+128),w
 14672  17C2  319C  2474  3197   	fcall	_BUTTONS_isHeld
 14673  17C5  3A00               	xorlw	0
 14674  17C6  1903               	skipnz
 14675  17C7  2FCE               	goto	l9180
 14676                           
 14677                           ;controller.c: 314:         address = 1;
 14678  17C8  3001               	movlw	1
 14679  17C9  0141               	movlb	1	; select bank1
 14680  17CA  00EA               	movwf	_address^(0+128)
 14681  17CB  3000               	movlw	0
 14682  17CC  00EB               	movwf	(_address^(0+128)+1)
 14683                           
 14684                           ;controller.c: 315:     } else if (upState) {
 14685  17CD  0008               	return
 14686  17CE                     l9180:	
 14687  17CE  0141               	movlb	1	; select bank1
 14688  17CF  085D               	movf	_upState^(0+128),w
 14689  17D0  1903               	btfsc	3,2
 14690  17D1  2FE0               	goto	l9186
 14691                           
 14692                           ;controller.c: 316:         address_inc();
 14693  17D2  319E  26A2  3197   	fcall	_address_inc
 14694                           
 14695                           ;controller.c: 317:         lastActiveTime = CLOCK_getTime();
 14696  17D5  319B  23C3         	fcall	_CLOCK_getTime
 14697  17D7  0140               	movlb	0	; select bank0
 14698  17D8  0821               	movf	?_CLOCK_getTime+1,w
 14699  17D9  0142               	movlb	2	; select bank2
 14700  17DA  00B5               	movwf	(_lastActiveTime+1)^(0+256)
 14701  17DB  0140               	movlb	0	; select bank0
 14702  17DC  0820               	movf	?_CLOCK_getTime,w
 14703  17DD  0142               	movlb	2	; select bank2
 14704  17DE  00B4               	movwf	_lastActiveTime^(0+256)
 14705                           
 14706                           ;controller.c: 318:     } else if (downState) {
 14707  17DF  0008               	return
 14708  17E0                     l9186:	
 14709  17E0  085C               	movf	_downState^(0+128),w
 14710  17E1  1903               	btfsc	3,2
 14711  17E2  2FE6               	goto	l9190
 14712                           
 14713                           ;controller.c: 319:         address_dec();
 14714  17E3  319E  2682         	fcall	_address_dec
 14715                           
 14716                           ;controller.c: 320:     } else if((!upState || !downState) && !(BUTTONS_isHeld(down) || 
      +                          BUTTONS_isHeld(up))){
 14717  17E5  0008               	return
 14718  17E6                     l9190:	
 14719  17E6  085D               	movf	_upState^(0+128),w
 14720  17E7  1D03               	btfss	3,2
 14721  17E8  085C               	movf	_downState^(0+128),w
 14722  17E9  1D03               	btfss	3,2
 14723  17EA  0008               	return
 14724  17EB  085F               	movf	_down^(0+128),w
 14725  17EC  319C  2474  3197   	fcall	_BUTTONS_isHeld
 14726  17EF  3A00               	xorlw	0
 14727  17F0  1D03               	skipz
 14728  17F1  0008               	return
 14729  17F2  0141               	movlb	1	; select bank1
 14730  17F3  0860               	movf	_up^(0+128),w
 14731  17F4  319C  2474  3197   	fcall	_BUTTONS_isHeld
 14732  17F7  3A00               	xorlw	0
 14733  17F8  1D03               	skipz
 14734  17F9  0008               	return
 14735                           
 14736                           ;controller.c: 321:         incInterval = 100;
 14737  17FA  3064               	movlw	100
 14738  17FB  0141               	movlb	1	; select bank1
 14739  17FC  00E8               	movwf	_incInterval^(0+128)
 14740  17FD  3000               	movlw	0
 14741  17FE  00E9               	movwf	(_incInterval^(0+128)+1)
 14742  17FF  0008               	return
 14743  1800                     __end_of_CONTROL_DMX:	
 14744                           
 14745                           	psect	text27
 14746  0CAF                     __ptext27:	
 14747 ;; *************** function _CONTROL_MANUAL *****************
 14748 ;; Defined at:
 14749 ;;		line 384 in file "controller.c"
 14750 ;; Parameters:    Size  Location     Type
 14751 ;;		None
 14752 ;; Auto vars:     Size  Location     Type
 14753 ;;		None
 14754 ;; Return value:  Size  Location     Type
 14755 ;;                  1    wreg      void 
 14756 ;; Registers used:
 14757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14758 ;; Tracked objects:
 14759 ;;		On entry : 0/0
 14760 ;;		On exit  : 0/0
 14761 ;;		Unchanged: 0/0
 14762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14765 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14766 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14767 ;;Total ram usage:        2 bytes
 14768 ;; Hardware stack levels used:    1
 14769 ;; Hardware stack levels required when called:   17
 14770 ;; This function calls:
 14771 ;;		_BUTTONS_isHeld
 14772 ;;		_CLOCK_getTime
 14773 ;;		_LED_task_MANUAL
 14774 ;;		_TM1650_fastPrintNum_3digit
 14775 ;;		_colorDec
 14776 ;;		_colorInc
 14777 ;;		_printf
 14778 ;; This function is called by:
 14779 ;;		_CONTROLLER_init
 14780 ;;		_CONTROLLER_task
 14781 ;; This function uses a non-reentrant model
 14782 ;;
 14783                           
 14784                           
 14785                           ;psect for function _CONTROL_MANUAL
 14786  0CAF                     _CONTROL_MANUAL:	
 14787                           
 14788                           ;controller.c: 386:        LED_task_MANUAL();
 14789                           
 14790                           ;incstack = 0
 14791 ;; hardware stack exceeded
 14792                           ; Regs used in _CONTROL_MANUAL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14793  0CAF  319C  2436  318C   	fcall	_LED_task_MANUAL
 14794                           
 14795                           ;controller.c: 388:        switch(currentMenu->name){
 14796  0CB2  2D0B               	goto	l8328
 14797  0CB3                     l8318:	
 14798                           
 14799                           ;controller.c: 391:             printf("r\r");
 14800  0CB3  3093               	movlw	low ((STR_18+1)| (0+32768))
 14801  0CB4  00A0               	movwf	printf@fmt^(0+128)
 14802  0CB5  30A0               	movlw	high ((STR_18+1)| (0+32768))
 14803  0CB6  00A1               	movwf	(printf@fmt^(0+128)+1)
 14804  0CB7  319D  2506  318C   	fcall	_printf
 14805                           
 14806                           ;controller.c: 392:             TM1650_fastPrintNum_3digit(manualColor.red);
 14807  0CBA  0141               	movlb	1	; select bank1
 14808  0CBB  084D               	movf	(_manualColor^(0+128)+1),w
 14809  0CBC  00BE               	movwf	??_CONTROL_MANUAL^(0+128)
 14810  0CBD  01BF               	clrf	(??_CONTROL_MANUAL^(0+128)+1)
 14811  0CBE  083E               	movf	??_CONTROL_MANUAL^(0+128),w
 14812  0CBF  0140               	movlb	0	; select bank0
 14813  0CC0  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 14814  0CC1  0141               	movlb	1	; select bank1
 14815  0CC2  083F               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 14816  0CC3  0140               	movlb	0	; select bank0
 14817  0CC4  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 14818  0CC5  3188  200B  318C   	fcall	_TM1650_fastPrintNum_3digit
 14819                           
 14820                           ;controller.c: 393:             break;
 14821  0CC8  2D27               	goto	l8330
 14822  0CC9                     l8320:	
 14823                           
 14824                           ;controller.c: 396:             printf("g\r");
 14825  0CC9  309C               	movlw	low (STR_14| (0+32768))
 14826  0CCA  00A0               	movwf	printf@fmt^(0+128)
 14827  0CCB  30A0               	movlw	high (STR_14| (0+32768))
 14828  0CCC  00A1               	movwf	(printf@fmt^(0+128)+1)
 14829  0CCD  319D  2506  318C   	fcall	_printf
 14830                           
 14831                           ;controller.c: 397:             TM1650_fastPrintNum_3digit(manualColor.green);
 14832  0CD0  0141               	movlb	1	; select bank1
 14833  0CD1  084E               	movf	(_manualColor^(0+128)+2),w
 14834  0CD2  00BE               	movwf	??_CONTROL_MANUAL^(0+128)
 14835  0CD3  01BF               	clrf	(??_CONTROL_MANUAL^(0+128)+1)
 14836  0CD4  083E               	movf	??_CONTROL_MANUAL^(0+128),w
 14837  0CD5  0140               	movlb	0	; select bank0
 14838  0CD6  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 14839  0CD7  0141               	movlb	1	; select bank1
 14840  0CD8  083F               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 14841  0CD9  0140               	movlb	0	; select bank0
 14842  0CDA  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 14843  0CDB  3188  200B  318C   	fcall	_TM1650_fastPrintNum_3digit
 14844                           
 14845                           ;controller.c: 398:             break;
 14846  0CDE  2D27               	goto	l8330
 14847  0CDF                     l8322:	
 14848                           
 14849                           ;controller.c: 401:             printf("b\r");
 14850  0CDF  3099               	movlw	low (STR_15| (0+32768))
 14851  0CE0  00A0               	movwf	printf@fmt^(0+128)
 14852  0CE1  30A0               	movlw	high (STR_15| (0+32768))
 14853  0CE2  00A1               	movwf	(printf@fmt^(0+128)+1)
 14854  0CE3  319D  2506  318C   	fcall	_printf
 14855                           
 14856                           ;controller.c: 402:             TM1650_fastPrintNum_3digit(manualColor.blue);
 14857  0CE6  0141               	movlb	1	; select bank1
 14858  0CE7  084F               	movf	(_manualColor^(0+128)+3),w
 14859  0CE8  00BE               	movwf	??_CONTROL_MANUAL^(0+128)
 14860  0CE9  01BF               	clrf	(??_CONTROL_MANUAL^(0+128)+1)
 14861  0CEA  083E               	movf	??_CONTROL_MANUAL^(0+128),w
 14862  0CEB  0140               	movlb	0	; select bank0
 14863  0CEC  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 14864  0CED  0141               	movlb	1	; select bank1
 14865  0CEE  083F               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 14866  0CEF  0140               	movlb	0	; select bank0
 14867  0CF0  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 14868  0CF1  3188  200B  318C   	fcall	_TM1650_fastPrintNum_3digit
 14869                           
 14870                           ;controller.c: 403:             break;
 14871  0CF4  2D27               	goto	l8330
 14872  0CF5                     l8324:	
 14873                           
 14874                           ;controller.c: 406:             printf("h\r");
 14875  0CF5  309F               	movlw	low (STR_16| (0+32768))
 14876  0CF6  00A0               	movwf	printf@fmt^(0+128)
 14877  0CF7  30A0               	movlw	high (STR_16| (0+32768))
 14878  0CF8  00A1               	movwf	(printf@fmt^(0+128)+1)
 14879  0CF9  319D  2506  318C   	fcall	_printf
 14880                           
 14881                           ;controller.c: 407:             TM1650_fastPrintNum_3digit(manualColor.white);
 14882  0CFC  0141               	movlb	1	; select bank1
 14883  0CFD  084C               	movf	_manualColor^(0+128),w
 14884  0CFE  00BE               	movwf	??_CONTROL_MANUAL^(0+128)
 14885  0CFF  01BF               	clrf	(??_CONTROL_MANUAL^(0+128)+1)
 14886  0D00  083E               	movf	??_CONTROL_MANUAL^(0+128),w
 14887  0D01  0140               	movlb	0	; select bank0
 14888  0D02  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 14889  0D03  0141               	movlb	1	; select bank1
 14890  0D04  083F               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 14891  0D05  0140               	movlb	0	; select bank0
 14892  0D06  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 14893  0D07  3188  200B  318C   	fcall	_TM1650_fastPrintNum_3digit
 14894                           
 14895                           ;controller.c: 408:             break;
 14896  0D0A  2D27               	goto	l8330
 14897  0D0B                     l8328:	
 14898  0D0B  0141               	movlb	1	; select bank1
 14899  0D0C  0856               	movf	_currentMenu^(0+128),w
 14900  0D0D  0086               	movwf	6
 14901  0D0E  0857               	movf	(_currentMenu+1)^(0+128),w
 14902  0D0F  0087               	movwf	7
 14903  0D10  3145               	addfsr 1,5
 14904  0D11  0801               	movf	1,w
 14905  0D12  00BE               	movwf	??_CONTROL_MANUAL^(0+128)
 14906  0D13  01BF               	clrf	(??_CONTROL_MANUAL^(0+128)+1)
 14907                           
 14908                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14909                           ; Switch size 1, requested type "simple"
 14910                           ; Number of cases is 1, Range of values is 0 to 0
 14911                           ; switch strategies available:
 14912                           ; Name         Instructions Cycles
 14913                           ; simple_byte            4     3 (average)
 14914                           ; direct_byte            8     6 (fixed)
 14915                           ; jumptable            260     6 (fixed)
 14916                           ;	Chosen strategy is simple_byte
 14917  0D14  083F               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 14918  0D15  3A00               	xorlw	0	; case 0
 14919  0D16  1903               	skipnz
 14920  0D17  2D19               	goto	l9648
 14921  0D18  2D27               	goto	l8330
 14922  0D19                     l9648:	
 14923                           
 14924                           ; Switch size 1, requested type "simple"
 14925                           ; Number of cases is 4, Range of values is 13 to 16
 14926                           ; switch strategies available:
 14927                           ; Name         Instructions Cycles
 14928                           ; simple_byte           13     7 (average)
 14929                           ; direct_byte           17     9 (fixed)
 14930                           ; jumptable            263     9 (fixed)
 14931                           ;	Chosen strategy is simple_byte
 14932  0D19  083E               	movf	??_CONTROL_MANUAL^(0+128),w
 14933  0D1A  3A0D               	xorlw	13	; case 13
 14934  0D1B  1903               	skipnz
 14935  0D1C  2CB3               	goto	l8318
 14936  0D1D  3A03               	xorlw	3	; case 14
 14937  0D1E  1903               	skipnz
 14938  0D1F  2CC9               	goto	l8320
 14939  0D20  3A01               	xorlw	1	; case 15
 14940  0D21  1903               	skipnz
 14941  0D22  2CDF               	goto	l8322
 14942  0D23  3A1F               	xorlw	31	; case 16
 14943  0D24  1903               	skipnz
 14944  0D25  2CF5               	goto	l8324
 14945  0D26  2D27               	goto	l8330
 14946  0D27                     l8330:	
 14947                           
 14948                           ;controller.c: 412:      if(BUTTONS_isHeld(up) && (CLOCK_getTime() - lastIncTime > incIn
      +                          terval)){
 14949  0D27  0141               	movlb	1	; select bank1
 14950  0D28  0860               	movf	_up^(0+128),w
 14951  0D29  319C  2474  318C   	fcall	_BUTTONS_isHeld
 14952  0D2C  3A00               	xorlw	0
 14953  0D2D  1903               	skipnz
 14954  0D2E  2D7E               	goto	l8342
 14955  0D2F  319B  23C3  318C   	fcall	_CLOCK_getTime
 14956  0D32  0141               	movlb	1	; select bank1
 14957  0D33  0852               	movf	_lastIncTime^(0+128),w
 14958  0D34  0140               	movlb	0	; select bank0
 14959  0D35  0220               	subwf	?_CLOCK_getTime,w
 14960  0D36  0141               	movlb	1	; select bank1
 14961  0D37  00BE               	movwf	??_CONTROL_MANUAL^(0+128)
 14962  0D38  0853               	movf	(_lastIncTime+1)^(0+128),w
 14963  0D39  0140               	movlb	0	; select bank0
 14964  0D3A  3B21               	subwfb	?_CLOCK_getTime+1,w
 14965  0D3B  0141               	movlb	1	; select bank1
 14966  0D3C  00BF               	movwf	(??_CONTROL_MANUAL+1)^(0+128)
 14967  0D3D  083F               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 14968  0D3E  0269               	subwf	(_incInterval+1)^(0+128),w
 14969  0D3F  1D03               	skipz
 14970  0D40  2D43               	goto	u8075
 14971  0D41  083E               	movf	??_CONTROL_MANUAL^(0+128),w
 14972  0D42  0268               	subwf	_incInterval^(0+128),w
 14973  0D43                     u8075:	
 14974  0D43  1803               	skipnc
 14975  0D44  2D7E               	goto	l8342
 14976                           
 14977                           ;controller.c: 413:         colorInc();
 14978  0D45  3192  2233  318C   	fcall	_colorInc
 14979  0D48  2D62               	goto	L5
 14980  0D49                     l8344:	
 14981                           ;controller.c: 415:         if(incInterval > 10){
 14982                           
 14983                           ;controller.c: 414:         lastIncTime = CLOCK_getTime();
 14984                           
 14985  0D49  319B  23C3  318C   	fcall	_CLOCK_getTime
 14986  0D4C  0141               	movlb	1	; select bank1
 14987  0D4D  0852               	movf	_lastIncTime^(0+128),w
 14988  0D4E  0140               	movlb	0	; select bank0
 14989  0D4F  0220               	subwf	?_CLOCK_getTime,w
 14990  0D50  0141               	movlb	1	; select bank1
 14991  0D51  00BE               	movwf	??_CONTROL_MANUAL^(0+128)
 14992  0D52  0853               	movf	(_lastIncTime+1)^(0+128),w
 14993  0D53  0140               	movlb	0	; select bank0
 14994  0D54  3B21               	subwfb	?_CLOCK_getTime+1,w
 14995  0D55  0141               	movlb	1	; select bank1
 14996  0D56  00BF               	movwf	(??_CONTROL_MANUAL+1)^(0+128)
 14997  0D57  083F               	movf	(??_CONTROL_MANUAL+1)^(0+128),w
 14998  0D58  0269               	subwf	(_incInterval+1)^(0+128),w
 14999  0D59  1D03               	skipz
 15000  0D5A  2D5D               	goto	u8105
 15001  0D5B  083E               	movf	??_CONTROL_MANUAL^(0+128),w
 15002  0D5C  0268               	subwf	_incInterval^(0+128),w
 15003  0D5D                     u8105:	
 15004  0D5D  1803               	skipnc
 15005  0D5E  2D86               	goto	l8354
 15006                           
 15007                           ;controller.c: 419:         colorDec();
 15008  0D5F  3191  217A  318C   	fcall	_colorDec
 15009  0D62                     L5:	
 15010                           
 15011                           ;controller.c: 420:         lastIncTime = CLOCK_getTime();
 15012  0D62  319B  23C3  318C   	fcall	_CLOCK_getTime
 15013  0D65  0140               	movlb	0	; select bank0
 15014  0D66  0821               	movf	?_CLOCK_getTime+1,w
 15015  0D67  0141               	movlb	1	; select bank1
 15016  0D68  00D3               	movwf	(_lastIncTime+1)^(0+128)
 15017  0D69  0140               	movlb	0	; select bank0
 15018  0D6A  0820               	movf	?_CLOCK_getTime,w
 15019  0D6B  0141               	movlb	1	; select bank1
 15020  0D6C  00D2               	movwf	_lastIncTime^(0+128)
 15021                           
 15022                           ;controller.c: 421:         if(incInterval > 10){
 15023  0D6D  0869               	movf	(_incInterval+1)^(0+128),w
 15024  0D6E  3A80               	xorlw	128
 15025  0D6F  00BE               	movwf	??_CONTROL_MANUAL^(0+128)
 15026  0D70  3080               	movlw	128
 15027  0D71  023E               	subwf	??_CONTROL_MANUAL^(0+128),w
 15028  0D72  1D03               	skipz
 15029  0D73  2D76               	goto	u8115
 15030  0D74  300B               	movlw	11
 15031  0D75  0268               	subwf	_incInterval^(0+128),w
 15032  0D76                     u8115:	
 15033  0D76  1C03               	skipc
 15034  0D77  0008               	return
 15035                           
 15036                           ;controller.c: 416:             incInterval-=1;
 15037  0D78  30FF               	movlw	255
 15038  0D79  0141               	movlb	1	; select bank1
 15039  0D7A  07E8               	addwf	_incInterval^(0+128),f
 15040  0D7B  30FF               	movlw	255
 15041  0D7C  3DE9               	addwfc	(_incInterval+1)^(0+128),f
 15042  0D7D  0008               	return
 15043  0D7E                     l8342:	
 15044  0D7E  0141               	movlb	1	; select bank1
 15045  0D7F  085F               	movf	_down^(0+128),w
 15046  0D80  319C  2474  318C   	fcall	_BUTTONS_isHeld
 15047  0D83  3A00               	xorlw	0
 15048  0D84  1D03               	btfss	3,2
 15049  0D85  2D49               	goto	l8344
 15050  0D86                     l8354:	
 15051  0D86  0141               	movlb	1	; select bank1
 15052  0D87  085D               	movf	_upState^(0+128),w
 15053  0D88  1903               	btfsc	3,2
 15054  0D89  2D8D               	goto	l8358
 15055                           
 15056                           ;controller.c: 425:         colorInc();
 15057  0D8A  3192  2233         	fcall	_colorInc
 15058                           
 15059                           ;controller.c: 426:     } else if (downState) {
 15060  0D8C  0008               	return
 15061  0D8D                     l8358:	
 15062  0D8D  085C               	movf	_downState^(0+128),w
 15063  0D8E  1903               	btfsc	3,2
 15064  0D8F  2D93               	goto	l8362
 15065                           
 15066                           ;controller.c: 427:         colorDec();
 15067  0D90  3191  217A         	fcall	_colorDec
 15068                           
 15069                           ;controller.c: 428:     } else if((!upState || !downState) && !(BUTTONS_isHeld(down) || 
      +                          BUTTONS_isHeld(up))){
 15070  0D92  0008               	return
 15071  0D93                     l8362:	
 15072  0D93  085D               	movf	_upState^(0+128),w
 15073  0D94  1D03               	btfss	3,2
 15074  0D95  085C               	movf	_downState^(0+128),w
 15075  0D96  1D03               	btfss	3,2
 15076  0D97  0008               	return
 15077  0D98  085F               	movf	_down^(0+128),w
 15078  0D99  319C  2474  318C   	fcall	_BUTTONS_isHeld
 15079  0D9C  3A00               	xorlw	0
 15080  0D9D  1D03               	skipz
 15081  0D9E  0008               	return
 15082  0D9F  0141               	movlb	1	; select bank1
 15083  0DA0  0860               	movf	_up^(0+128),w
 15084  0DA1  319C  2474  318C   	fcall	_BUTTONS_isHeld
 15085  0DA4  3A00               	xorlw	0
 15086  0DA5  1D03               	skipz
 15087  0DA6  0008               	return
 15088                           
 15089                           ;controller.c: 429:         incInterval = 100;
 15090  0DA7  3064               	movlw	100
 15091  0DA8  0141               	movlb	1	; select bank1
 15092  0DA9  00E8               	movwf	_incInterval^(0+128)
 15093  0DAA  3000               	movlw	0
 15094  0DAB  00E9               	movwf	(_incInterval^(0+128)+1)
 15095  0DAC  0008               	return
 15096  0DAD                     __end_of_CONTROL_MANUAL:	
 15097                           
 15098                           	psect	text28
 15099  1233                     __ptext28:	
 15100 ;; *************** function _colorInc *****************
 15101 ;; Defined at:
 15102 ;;		line 186 in file "led.c"
 15103 ;; Parameters:    Size  Location     Type
 15104 ;;		None
 15105 ;; Auto vars:     Size  Location     Type
 15106 ;;		None
 15107 ;; Return value:  Size  Location     Type
 15108 ;;                  1    wreg      void 
 15109 ;; Registers used:
 15110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15111 ;; Tracked objects:
 15112 ;;		On entry : 0/0
 15113 ;;		On exit  : 0/0
 15114 ;;		Unchanged: 0/0
 15115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15118 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15119 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15120 ;;Total ram usage:        2 bytes
 15121 ;; Hardware stack levels used:    1
 15122 ;; Hardware stack levels required when called:    5
 15123 ;; This function calls:
 15124 ;;		_getCurrentMenu
 15125 ;; This function is called by:
 15126 ;;		_CONTROL_MANUAL
 15127 ;; This function uses a non-reentrant model
 15128 ;;
 15129                           
 15130                           
 15131                           ;psect for function _colorInc
 15132  1233                     _colorInc:	
 15133                           
 15134                           ;led.c: 188:     switch(getCurrentMenu()){
 15135                           
 15136                           ;incstack = 0
 15137                           ; Regs used in _colorInc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15138  1233  2A60               	goto	l8020
 15139  1234                     l8002:	
 15140                           
 15141                           ;led.c: 191:             if(!(manualColor.red > 254))
 15142  1234  0141               	movlb	1	; select bank1
 15143  1235  0A4D               	incf	(_manualColor^(0+128)+1),w
 15144  1236  1903               	btfsc	3,2
 15145  1237  0008               	return
 15146                           
 15147                           ;led.c: 192:             manualColor.red++;
 15148  1238  3001               	movlw	1
 15149  1239  0140               	movlb	0	; select bank0
 15150  123A  00A0               	movwf	??_colorInc
 15151  123B  0820               	movf	??_colorInc,w
 15152  123C  0141               	movlb	1	; select bank1
 15153  123D  07CD               	addwf	(_manualColor^(0+128)+1),f
 15154  123E  0008               	return
 15155  123F                     l8006:	
 15156                           
 15157                           ;led.c: 196:             if(!(manualColor.green > 254))
 15158  123F  0141               	movlb	1	; select bank1
 15159  1240  0A4E               	incf	(_manualColor^(0+128)+2),w
 15160  1241  1903               	btfsc	3,2
 15161  1242  0008               	return
 15162                           
 15163                           ;led.c: 197:             manualColor.green++;
 15164  1243  3001               	movlw	1
 15165  1244  0140               	movlb	0	; select bank0
 15166  1245  00A0               	movwf	??_colorInc
 15167  1246  0820               	movf	??_colorInc,w
 15168  1247  0141               	movlb	1	; select bank1
 15169  1248  07CE               	addwf	(_manualColor^(0+128)+2),f
 15170  1249  0008               	return
 15171  124A                     l8010:	
 15172                           
 15173                           ;led.c: 201:             if(!(manualColor.blue > 254))
 15174  124A  0141               	movlb	1	; select bank1
 15175  124B  0A4F               	incf	(_manualColor^(0+128)+3),w
 15176  124C  1903               	btfsc	3,2
 15177  124D  0008               	return
 15178                           
 15179                           ;led.c: 202:             manualColor.blue++;
 15180  124E  3001               	movlw	1
 15181  124F  0140               	movlb	0	; select bank0
 15182  1250  00A0               	movwf	??_colorInc
 15183  1251  0820               	movf	??_colorInc,w
 15184  1252  0141               	movlb	1	; select bank1
 15185  1253  07CF               	addwf	(_manualColor^(0+128)+3),f
 15186  1254  0008               	return
 15187  1255                     l8014:	
 15188                           
 15189                           ;led.c: 206:             if(!(manualColor.white > 254))
 15190  1255  0141               	movlb	1	; select bank1
 15191  1256  0A4C               	incf	_manualColor^(0+128),w
 15192  1257  1903               	btfsc	3,2
 15193  1258  0008               	return
 15194                           
 15195                           ;led.c: 207:             manualColor.white++;
 15196  1259  3001               	movlw	1
 15197  125A  0140               	movlb	0	; select bank0
 15198  125B  00A0               	movwf	??_colorInc
 15199  125C  0820               	movf	??_colorInc,w
 15200  125D  0141               	movlb	1	; select bank1
 15201  125E  07CC               	addwf	_manualColor^(0+128),f
 15202  125F  0008               	return
 15203  1260                     l8020:	
 15204  1260  319B  2390  3192   	fcall	_getCurrentMenu
 15205  1263  0140               	movlb	0	; select bank0
 15206  1264  00A0               	movwf	??_colorInc
 15207  1265  01A1               	clrf	??_colorInc+1
 15208                           
 15209                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15210                           ; Switch size 1, requested type "simple"
 15211                           ; Number of cases is 1, Range of values is 0 to 0
 15212                           ; switch strategies available:
 15213                           ; Name         Instructions Cycles
 15214                           ; simple_byte            4     3 (average)
 15215                           ; direct_byte            8     6 (fixed)
 15216                           ; jumptable            260     6 (fixed)
 15217                           ;	Chosen strategy is simple_byte
 15218  1266  0821               	movf	??_colorInc+1,w
 15219  1267  3A00               	xorlw	0	; case 0
 15220  1268  1903               	skipnz
 15221  1269  2A6B               	goto	l9650
 15222  126A  2A79               	goto	l1478
 15223  126B                     l9650:	
 15224                           
 15225                           ; Switch size 1, requested type "simple"
 15226                           ; Number of cases is 4, Range of values is 13 to 16
 15227                           ; switch strategies available:
 15228                           ; Name         Instructions Cycles
 15229                           ; simple_byte           13     7 (average)
 15230                           ; direct_byte           17     9 (fixed)
 15231                           ; jumptable            263     9 (fixed)
 15232                           ;	Chosen strategy is simple_byte
 15233  126B  0820               	movf	??_colorInc,w
 15234  126C  3A0D               	xorlw	13	; case 13
 15235  126D  1903               	skipnz
 15236  126E  2A34               	goto	l8002
 15237  126F  3A03               	xorlw	3	; case 14
 15238  1270  1903               	skipnz
 15239  1271  2A3F               	goto	l8006
 15240  1272  3A01               	xorlw	1	; case 15
 15241  1273  1903               	skipnz
 15242  1274  2A4A               	goto	l8010
 15243  1275  3A1F               	xorlw	31	; case 16
 15244  1276  1903               	skipnz
 15245  1277  2A55               	goto	l8014
 15246  1278  2A79               	goto	l1478
 15247  1279                     l1478:	
 15248  1279  0008               	return
 15249  127A                     __end_of_colorInc:	
 15250                           
 15251                           	psect	text29
 15252  117A                     __ptext29:	
 15253 ;; *************** function _colorDec *****************
 15254 ;; Defined at:
 15255 ;;		line 214 in file "led.c"
 15256 ;; Parameters:    Size  Location     Type
 15257 ;;		None
 15258 ;; Auto vars:     Size  Location     Type
 15259 ;;		None
 15260 ;; Return value:  Size  Location     Type
 15261 ;;                  1    wreg      void 
 15262 ;; Registers used:
 15263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15264 ;; Tracked objects:
 15265 ;;		On entry : 0/0
 15266 ;;		On exit  : 0/0
 15267 ;;		Unchanged: 0/0
 15268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15271 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15272 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15273 ;;Total ram usage:        2 bytes
 15274 ;; Hardware stack levels used:    1
 15275 ;; Hardware stack levels required when called:    5
 15276 ;; This function calls:
 15277 ;;		_getCurrentMenu
 15278 ;; This function is called by:
 15279 ;;		_CONTROL_MANUAL
 15280 ;; This function uses a non-reentrant model
 15281 ;;
 15282                           
 15283                           
 15284                           ;psect for function _colorDec
 15285  117A                     _colorDec:	
 15286                           
 15287                           ;led.c: 216:     switch(getCurrentMenu()){
 15288                           
 15289                           ;incstack = 0
 15290                           ; Regs used in _colorDec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15291  117A  2997               	goto	l8046
 15292  117B                     l8028:	
 15293                           
 15294                           ;led.c: 219:             if(!(manualColor.red < 1))
 15295  117B  0141               	movlb	1	; select bank1
 15296  117C  084D               	movf	(_manualColor^(0+128)+1),w
 15297  117D  1903               	btfsc	3,2
 15298  117E  0008               	return
 15299                           
 15300                           ;led.c: 220:             manualColor.red--;
 15301  117F  3001               	movlw	1
 15302  1180  02CD               	subwf	(_manualColor^(0+128)+1),f
 15303  1181  0008               	return
 15304  1182                     l8032:	
 15305                           
 15306                           ;led.c: 224:             if(!(manualColor.green < 1))
 15307  1182  0141               	movlb	1	; select bank1
 15308  1183  084E               	movf	(_manualColor^(0+128)+2),w
 15309  1184  1903               	btfsc	3,2
 15310  1185  0008               	return
 15311                           
 15312                           ;led.c: 225:             manualColor.green--;
 15313  1186  3001               	movlw	1
 15314  1187  02CE               	subwf	(_manualColor^(0+128)+2),f
 15315  1188  0008               	return
 15316  1189                     l8036:	
 15317                           
 15318                           ;led.c: 229:             if(!(manualColor.blue < 1))
 15319  1189  0141               	movlb	1	; select bank1
 15320  118A  084F               	movf	(_manualColor^(0+128)+3),w
 15321  118B  1903               	btfsc	3,2
 15322  118C  0008               	return
 15323                           
 15324                           ;led.c: 230:             manualColor.blue--;
 15325  118D  3001               	movlw	1
 15326  118E  02CF               	subwf	(_manualColor^(0+128)+3),f
 15327  118F  0008               	return
 15328  1190                     l8040:	
 15329                           
 15330                           ;led.c: 234:             if(!(manualColor.white < 1))
 15331  1190  0141               	movlb	1	; select bank1
 15332  1191  084C               	movf	_manualColor^(0+128),w
 15333  1192  1903               	btfsc	3,2
 15334  1193  0008               	return
 15335                           
 15336                           ;led.c: 235:             manualColor.white--;
 15337  1194  3001               	movlw	1
 15338  1195  02CC               	subwf	_manualColor^(0+128),f
 15339  1196  0008               	return
 15340  1197                     l8046:	
 15341  1197  319B  2390  3191   	fcall	_getCurrentMenu
 15342  119A  0140               	movlb	0	; select bank0
 15343  119B  00A0               	movwf	??_colorDec
 15344  119C  01A1               	clrf	??_colorDec+1
 15345                           
 15346                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15347                           ; Switch size 1, requested type "simple"
 15348                           ; Number of cases is 1, Range of values is 0 to 0
 15349                           ; switch strategies available:
 15350                           ; Name         Instructions Cycles
 15351                           ; simple_byte            4     3 (average)
 15352                           ; direct_byte            8     6 (fixed)
 15353                           ; jumptable            260     6 (fixed)
 15354                           ;	Chosen strategy is simple_byte
 15355  119D  0821               	movf	??_colorDec+1,w
 15356  119E  3A00               	xorlw	0	; case 0
 15357  119F  1903               	skipnz
 15358  11A0  29A2               	goto	l9652
 15359  11A1  29B0               	goto	l1491
 15360  11A2                     l9652:	
 15361                           
 15362                           ; Switch size 1, requested type "simple"
 15363                           ; Number of cases is 4, Range of values is 13 to 16
 15364                           ; switch strategies available:
 15365                           ; Name         Instructions Cycles
 15366                           ; simple_byte           13     7 (average)
 15367                           ; direct_byte           17     9 (fixed)
 15368                           ; jumptable            263     9 (fixed)
 15369                           ;	Chosen strategy is simple_byte
 15370  11A2  0820               	movf	??_colorDec,w
 15371  11A3  3A0D               	xorlw	13	; case 13
 15372  11A4  1903               	skipnz
 15373  11A5  297B               	goto	l8028
 15374  11A6  3A03               	xorlw	3	; case 14
 15375  11A7  1903               	skipnz
 15376  11A8  2982               	goto	l8032
 15377  11A9  3A01               	xorlw	1	; case 15
 15378  11AA  1903               	skipnz
 15379  11AB  2989               	goto	l8036
 15380  11AC  3A1F               	xorlw	31	; case 16
 15381  11AD  1903               	skipnz
 15382  11AE  2990               	goto	l8040
 15383  11AF  29B0               	goto	l1491
 15384  11B0                     l1491:	
 15385  11B0  0008               	return
 15386  11B1                     __end_of_colorDec:	
 15387                           
 15388                           	psect	text30
 15389  1B90                     __ptext30:	
 15390 ;; *************** function _getCurrentMenu *****************
 15391 ;; Defined at:
 15392 ;;		line 478 in file "controller.c"
 15393 ;; Parameters:    Size  Location     Type
 15394 ;;		None
 15395 ;; Auto vars:     Size  Location     Type
 15396 ;;		None
 15397 ;; Return value:  Size  Location     Type
 15398 ;;                  1    wreg      enum E11188
 15399 ;; Registers used:
 15400 ;;		wreg, fsr1l, fsr1h
 15401 ;; Tracked objects:
 15402 ;;		On entry : 0/0
 15403 ;;		On exit  : 0/0
 15404 ;;		Unchanged: 0/0
 15405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15410 ;;Total ram usage:        0 bytes
 15411 ;; Hardware stack levels used:    1
 15412 ;; Hardware stack levels required when called:    4
 15413 ;; This function calls:
 15414 ;;		Nothing
 15415 ;; This function is called by:
 15416 ;;		_colorInc
 15417 ;;		_colorDec
 15418 ;; This function uses a non-reentrant model
 15419 ;;
 15420                           
 15421                           
 15422                           ;psect for function _getCurrentMenu
 15423  1B90                     _getCurrentMenu:	
 15424                           
 15425                           ;controller.c: 479:     return currentMenu->name;
 15426                           
 15427                           ;incstack = 0
 15428                           ; Regs used in _getCurrentMenu: [wregfsr1]
 15429  1B90  0141               	movlb	1	; select bank1
 15430  1B91  0856               	movf	_currentMenu^(0+128),w
 15431  1B92  0086               	movwf	6
 15432  1B93  0857               	movf	(_currentMenu+1)^(0+128),w
 15433  1B94  0087               	movwf	7
 15434  1B95  3145               	addfsr 1,5
 15435  1B96  0801               	movf	1,w
 15436  1B97  0008               	return
 15437  1B98                     __end_of_getCurrentMenu:	
 15438                           
 15439                           	psect	text31
 15440  1C36                     __ptext31:	
 15441 ;; *************** function _LED_task_MANUAL *****************
 15442 ;; Defined at:
 15443 ;;		line 56 in file "led.c"
 15444 ;; Parameters:    Size  Location     Type
 15445 ;;		None
 15446 ;; Auto vars:     Size  Location     Type
 15447 ;;		None
 15448 ;; Return value:  Size  Location     Type
 15449 ;;                  1    wreg      void 
 15450 ;; Registers used:
 15451 ;;		wreg, status,2, status,0, pclath, cstack
 15452 ;; Tracked objects:
 15453 ;;		On entry : 0/0
 15454 ;;		On exit  : 0/0
 15455 ;;		Unchanged: 0/0
 15456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15461 ;;Total ram usage:        0 bytes
 15462 ;; Hardware stack levels used:    1
 15463 ;; Hardware stack levels required when called:    7
 15464 ;; This function calls:
 15465 ;;		_LED_setColor
 15466 ;; This function is called by:
 15467 ;;		_CONTROL_MANUAL
 15468 ;; This function uses a non-reentrant model
 15469 ;;
 15470                           
 15471                           
 15472                           ;psect for function _LED_task_MANUAL
 15473  1C36                     _LED_task_MANUAL:	
 15474                           
 15475                           ;led.c: 58:     LED_setColor(manualColor);
 15476                           
 15477                           ;incstack = 0
 15478                           ; Regs used in _LED_task_MANUAL: [wreg+status,2+status,0+pclath+cstack]
 15479  1C36  0141               	movlb	1	; select bank1
 15480  1C37  084F               	movf	(_manualColor+3)^(0+128),w
 15481  1C38  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 15482  1C39  084E               	movf	(_manualColor+2)^(0+128),w
 15483  1C3A  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 15484  1C3B  084D               	movf	(_manualColor+1)^(0+128),w
 15485  1C3C  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 15486  1C3D  084C               	movf	_manualColor^(0+128),w
 15487  1C3E  00B6               	movwf	LED_setColor@input^(0+128)
 15488  1C3F  3186  2644         	fcall	_LED_setColor
 15489  1C41  0008               	return
 15490  1C42                     __end_of_LED_task_MANUAL:	
 15491                           
 15492                           	psect	text32
 15493  1EA2                     __ptext32:	
 15494 ;; *************** function _address_inc *****************
 15495 ;; Defined at:
 15496 ;;		line 29 in file "dmx.c"
 15497 ;; Parameters:    Size  Location     Type
 15498 ;;		None
 15499 ;; Auto vars:     Size  Location     Type
 15500 ;;		None
 15501 ;; Return value:  Size  Location     Type
 15502 ;;                  1    wreg      void 
 15503 ;; Registers used:
 15504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15505 ;; Tracked objects:
 15506 ;;		On entry : 0/0
 15507 ;;		On exit  : 0/0
 15508 ;;		Unchanged: 0/0
 15509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15514 ;;Total ram usage:        0 bytes
 15515 ;; Hardware stack levels used:    1
 15516 ;; Hardware stack levels required when called:   17
 15517 ;; This function calls:
 15518 ;;		_TM1650_fastPrintNum_3digit
 15519 ;;		_printf
 15520 ;; This function is called by:
 15521 ;;		_CONTROL_DMX
 15522 ;; This function uses a non-reentrant model
 15523 ;;
 15524                           
 15525                           
 15526                           ;psect for function _address_inc
 15527  1EA2                     _address_inc:	
 15528                           
 15529                           ;dmx.c: 31:     if(address == 512)
 15530                           
 15531                           ;incstack = 0
 15532 ;; hardware stack exceeded
 15533                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15534  1EA2  3002               	movlw	2
 15535  1EA3  0141               	movlb	1	; select bank1
 15536  1EA4  066B               	xorwf	(_address+1)^(0+128),w
 15537  1EA5  046A               	iorwf	_address^(0+128),w
 15538  1EA6  1D03               	btfss	3,2
 15539  1EA7  2EAD               	goto	l7874
 15540                           
 15541                           ;dmx.c: 32:         address = 1;
 15542  1EA8  3001               	movlw	1
 15543  1EA9  00EA               	movwf	_address^(0+128)
 15544  1EAA  3000               	movlw	0
 15545  1EAB  00EB               	movwf	(_address^(0+128)+1)
 15546  1EAC  2EB1               	goto	l7876
 15547  1EAD                     l7874:	
 15548                           
 15549                           ;dmx.c: 34:         address++;
 15550  1EAD  3001               	movlw	1
 15551  1EAE  07EA               	addwf	_address^(0+128),f
 15552  1EAF  3000               	movlw	0
 15553  1EB0  3DEB               	addwfc	(_address+1)^(0+128),f
 15554  1EB1                     l7876:	
 15555                           
 15556                           ;dmx.c: 37:     printf("d\r");
 15557  1EB1  3096               	movlw	low (STR_30| (0+32768))
 15558  1EB2  00A0               	movwf	printf@fmt^(0+128)
 15559  1EB3  30A0               	movlw	high (STR_30| (0+32768))
 15560  1EB4  00A1               	movwf	(printf@fmt^(0+128)+1)
 15561  1EB5  319D  2506  319E   	fcall	_printf
 15562                           
 15563                           ;dmx.c: 38:     TM1650_fastPrintNum_3digit(address);
 15564  1EB8  0141               	movlb	1	; select bank1
 15565  1EB9  086B               	movf	(_address+1)^(0+128),w
 15566  1EBA  0140               	movlb	0	; select bank0
 15567  1EBB  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 15568  1EBC  0141               	movlb	1	; select bank1
 15569  1EBD  086A               	movf	_address^(0+128),w
 15570  1EBE  0140               	movlb	0	; select bank0
 15571  1EBF  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 15572  1EC0  3188  200B         	fcall	_TM1650_fastPrintNum_3digit
 15573  1EC2  0008               	return
 15574  1EC3                     __end_of_address_inc:	
 15575                           
 15576                           	psect	text33
 15577  1E82                     __ptext33:	
 15578 ;; *************** function _address_dec *****************
 15579 ;; Defined at:
 15580 ;;		line 44 in file "dmx.c"
 15581 ;; Parameters:    Size  Location     Type
 15582 ;;		None
 15583 ;; Auto vars:     Size  Location     Type
 15584 ;;		None
 15585 ;; Return value:  Size  Location     Type
 15586 ;;                  1    wreg      void 
 15587 ;; Registers used:
 15588 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15589 ;; Tracked objects:
 15590 ;;		On entry : 0/0
 15591 ;;		On exit  : 0/0
 15592 ;;		Unchanged: 0/0
 15593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15598 ;;Total ram usage:        0 bytes
 15599 ;; Hardware stack levels used:    1
 15600 ;; Hardware stack levels required when called:   17
 15601 ;; This function calls:
 15602 ;;		_TM1650_fastPrintNum_3digit
 15603 ;;		_printf
 15604 ;; This function is called by:
 15605 ;;		_CONTROL_DMX
 15606 ;; This function uses a non-reentrant model
 15607 ;;
 15608                           
 15609                           
 15610                           ;psect for function _address_dec
 15611  1E82                     _address_dec:	
 15612                           
 15613                           ;dmx.c: 46:     if(address == 1)
 15614                           
 15615                           ;incstack = 0
 15616 ;; hardware stack exceeded
 15617                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15618  1E82  0141               	movlb	1	; select bank1
 15619  1E83  036A               	decf	_address^(0+128),w
 15620  1E84  046B               	iorwf	(_address+1)^(0+128),w
 15621  1E85  1D03               	btfss	3,2
 15622  1E86  2E8C               	goto	l7884
 15623                           
 15624                           ;dmx.c: 47:         address = 512;
 15625  1E87  3000               	movlw	0
 15626  1E88  00EA               	movwf	_address^(0+128)
 15627  1E89  3002               	movlw	2
 15628  1E8A  00EB               	movwf	(_address^(0+128)+1)
 15629  1E8B  2E90               	goto	l7886
 15630  1E8C                     l7884:	
 15631                           
 15632                           ;dmx.c: 49:         address--;
 15633  1E8C  3001               	movlw	1
 15634  1E8D  02EA               	subwf	_address^(0+128),f
 15635  1E8E  3000               	movlw	0
 15636  1E8F  3BEB               	subwfb	(_address+1)^(0+128),f
 15637  1E90                     l7886:	
 15638                           
 15639                           ;dmx.c: 52:     printf("d\r");
 15640  1E90  3096               	movlw	low (STR_30| (0+32768))
 15641  1E91  00A0               	movwf	printf@fmt^(0+128)
 15642  1E92  30A0               	movlw	high (STR_30| (0+32768))
 15643  1E93  00A1               	movwf	(printf@fmt^(0+128)+1)
 15644  1E94  319D  2506  319E   	fcall	_printf
 15645                           
 15646                           ;dmx.c: 53:     TM1650_fastPrintNum_3digit(address);
 15647  1E97  0141               	movlb	1	; select bank1
 15648  1E98  086B               	movf	(_address+1)^(0+128),w
 15649  1E99  0140               	movlb	0	; select bank0
 15650  1E9A  00B7               	movwf	TM1650_fastPrintNum_3digit@num+1
 15651  1E9B  0141               	movlb	1	; select bank1
 15652  1E9C  086A               	movf	_address^(0+128),w
 15653  1E9D  0140               	movlb	0	; select bank0
 15654  1E9E  00B6               	movwf	TM1650_fastPrintNum_3digit@num
 15655  1E9F  3188  200B         	fcall	_TM1650_fastPrintNum_3digit
 15656  1EA1  0008               	return
 15657  1EA2                     __end_of_address_dec:	
 15658                           
 15659                           	psect	text34
 15660  080B                     __ptext34:	
 15661 ;; *************** function _TM1650_fastPrintNum_3digit *****************
 15662 ;; Defined at:
 15663 ;;		line 120 in file "tm1650.c"
 15664 ;; Parameters:    Size  Location     Type
 15665 ;;  num             2   22[BANK0 ] unsigned short 
 15666 ;; Auto vars:     Size  Location     Type
 15667 ;;		None
 15668 ;; Return value:  Size  Location     Type
 15669 ;;                  1    wreg      void 
 15670 ;; Registers used:
 15671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15672 ;; Tracked objects:
 15673 ;;		On entry : 0/0
 15674 ;;		On exit  : 0/0
 15675 ;;		Unchanged: 0/0
 15676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15677 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15679 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15680 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15681 ;;Total ram usage:        3 bytes
 15682 ;; Hardware stack levels used:    1
 15683 ;; Hardware stack levels required when called:    8
 15684 ;; This function calls:
 15685 ;;		___lwdiv
 15686 ;;		___lwmod
 15687 ;;		_writeData
 15688 ;; This function is called by:
 15689 ;;		_CONTROL_MANUAL
 15690 ;;		_address_inc
 15691 ;;		_address_dec
 15692 ;; This function uses a non-reentrant model
 15693 ;;
 15694                           
 15695                           
 15696                           ;psect for function _TM1650_fastPrintNum_3digit
 15697  080B                     _TM1650_fastPrintNum_3digit:	
 15698                           
 15699                           ;tm1650.c: 122:     if(num > 999){
 15700                           
 15701                           ;incstack = 0
 15702                           ; Regs used in _TM1650_fastPrintNum_3digit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15703  080B  3003               	movlw	3
 15704  080C  0140               	movlb	0	; select bank0
 15705  080D  0237               	subwf	TM1650_fastPrintNum_3digit@num+1,w
 15706  080E  30E8               	movlw	232
 15707  080F  1903               	skipnz
 15708  0810  0236               	subwf	TM1650_fastPrintNum_3digit@num,w
 15709  0811  1C03               	skipc
 15710  0812  2836               	goto	l7700
 15711                           
 15712                           ;tm1650.c: 123:         writeData(0x34, 0x79);
 15713  0813  3079               	movlw	121
 15714  0814  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 15715  0815  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 15716  0816  00B0               	movwf	writeData@data
 15717  0817  3034               	movlw	52
 15718  0818  319D  25AD  3188   	fcall	_writeData
 15719                           
 15720                           ;tm1650.c: 124:         writeData(0x35, 0x79);
 15721  081B  3079               	movlw	121
 15722  081C  0140               	movlb	0	; select bank0
 15723  081D  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 15724  081E  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 15725  081F  00B0               	movwf	writeData@data
 15726  0820  3035               	movlw	53
 15727  0821  319D  25AD  3188   	fcall	_writeData
 15728                           
 15729                           ;tm1650.c: 125:         writeData(0x36, 0x79);
 15730  0824  3079               	movlw	121
 15731  0825  0140               	movlb	0	; select bank0
 15732  0826  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 15733  0827  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 15734  0828  00B0               	movwf	writeData@data
 15735  0829  3036               	movlw	54
 15736  082A  319D  25AD  3188   	fcall	_writeData
 15737                           
 15738                           ;tm1650.c: 126:         writeData(0x37, 0x79);
 15739  082D  3079               	movlw	121
 15740  082E  0140               	movlb	0	; select bank0
 15741  082F  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 15742  0830  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 15743  0831  00B0               	movwf	writeData@data
 15744  0832  3037               	movlw	55
 15745  0833  319D  25AD         	fcall	_writeData
 15746  0835  0008               	return
 15747  0836                     l7700:	
 15748                           
 15749                           ;tm1650.c: 130:     writeData(0x37, charTable[(num % 10) + 16]);
 15750  0836  300A               	movlw	10
 15751  0837  00A8               	movwf	___lwmod@divisor
 15752  0838  3000               	movlw	0
 15753  0839  00A9               	movwf	___lwmod@divisor+1
 15754  083A  0837               	movf	TM1650_fastPrintNum_3digit@num+1,w
 15755  083B  00AB               	movwf	___lwmod@dividend+1
 15756  083C  0836               	movf	TM1650_fastPrintNum_3digit@num,w
 15757  083D  00AA               	movwf	___lwmod@dividend
 15758  083E  319F  27A4  3188   	fcall	___lwmod
 15759  0841  0140               	movlb	0	; select bank0
 15760  0842  0829               	movf	?___lwmod+1,w
 15761  0843  0085               	movwf	5
 15762  0844  0828               	movf	?___lwmod,w
 15763  0845  0084               	movwf	4
 15764  0846  3010               	movlw	low ((_charTable+16)| (0+32768))
 15765  0847  0784               	addwf	4,f
 15766  0848  3098               	movlw	high ((_charTable+16)| (0+32768))
 15767  0849  3D85               	addwfc	5,f
 15768  084A  0800               	movf	0,w	;code access
 15769  084B  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 15770  084C  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 15771  084D  00B0               	movwf	writeData@data
 15772  084E  3037               	movlw	55
 15773  084F  319D  25AD  3188   	fcall	_writeData
 15774                           
 15775                           ;tm1650.c: 131:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 15776  0852  300A               	movlw	10
 15777  0853  0140               	movlb	0	; select bank0
 15778  0854  00A8               	movwf	___lwmod@divisor
 15779  0855  3000               	movlw	0
 15780  0856  00A9               	movwf	___lwmod@divisor+1
 15781  0857  300A               	movlw	10
 15782  0858  00A0               	movwf	___lwdiv@divisor
 15783  0859  3000               	movlw	0
 15784  085A  00A1               	movwf	___lwdiv@divisor+1
 15785  085B  0837               	movf	TM1650_fastPrintNum_3digit@num+1,w
 15786  085C  00A3               	movwf	___lwdiv@dividend+1
 15787  085D  0836               	movf	TM1650_fastPrintNum_3digit@num,w
 15788  085E  00A2               	movwf	___lwdiv@dividend
 15789  085F  3190  20A3  3188   	fcall	___lwdiv
 15790  0862  0140               	movlb	0	; select bank0
 15791  0863  0821               	movf	?___lwdiv+1,w
 15792  0864  00AB               	movwf	___lwmod@dividend+1
 15793  0865  0820               	movf	?___lwdiv,w
 15794  0866  00AA               	movwf	___lwmod@dividend
 15795  0867  319F  27A4  3188   	fcall	___lwmod
 15796  086A  0140               	movlb	0	; select bank0
 15797  086B  0829               	movf	?___lwmod+1,w
 15798  086C  0085               	movwf	5
 15799  086D  0828               	movf	?___lwmod,w
 15800  086E  0084               	movwf	4
 15801  086F  3010               	movlw	low ((_charTable+16)| (0+32768))
 15802  0870  0784               	addwf	4,f
 15803  0871  3098               	movlw	high ((_charTable+16)| (0+32768))
 15804  0872  3D85               	addwfc	5,f
 15805  0873  0800               	movf	0,w	;code access
 15806  0874  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 15807  0875  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 15808  0876  00B0               	movwf	writeData@data
 15809  0877  3036               	movlw	54
 15810  0878  319D  25AD  3188   	fcall	_writeData
 15811                           
 15812                           ;tm1650.c: 132:     writeData(0x35, charTable[( (num/100) % 10) + 16]);
 15813  087B  300A               	movlw	10
 15814  087C  0140               	movlb	0	; select bank0
 15815  087D  00A8               	movwf	___lwmod@divisor
 15816  087E  3000               	movlw	0
 15817  087F  00A9               	movwf	___lwmod@divisor+1
 15818  0880  3064               	movlw	100
 15819  0881  00A0               	movwf	___lwdiv@divisor
 15820  0882  3000               	movlw	0
 15821  0883  00A1               	movwf	___lwdiv@divisor+1
 15822  0884  0837               	movf	TM1650_fastPrintNum_3digit@num+1,w
 15823  0885  00A3               	movwf	___lwdiv@dividend+1
 15824  0886  0836               	movf	TM1650_fastPrintNum_3digit@num,w
 15825  0887  00A2               	movwf	___lwdiv@dividend
 15826  0888  3190  20A3  3188   	fcall	___lwdiv
 15827  088B  0140               	movlb	0	; select bank0
 15828  088C  0821               	movf	?___lwdiv+1,w
 15829  088D  00AB               	movwf	___lwmod@dividend+1
 15830  088E  0820               	movf	?___lwdiv,w
 15831  088F  00AA               	movwf	___lwmod@dividend
 15832  0890  319F  27A4  3188   	fcall	___lwmod
 15833  0893  0140               	movlb	0	; select bank0
 15834  0894  0829               	movf	?___lwmod+1,w
 15835  0895  0085               	movwf	5
 15836  0896  0828               	movf	?___lwmod,w
 15837  0897  0084               	movwf	4
 15838  0898  3010               	movlw	low ((_charTable+16)| (0+32768))
 15839  0899  0784               	addwf	4,f
 15840  089A  3098               	movlw	high ((_charTable+16)| (0+32768))
 15841  089B  3D85               	addwfc	5,f
 15842  089C  0800               	movf	0,w	;code access
 15843  089D  00B8               	movwf	??_TM1650_fastPrintNum_3digit
 15844  089E  0838               	movf	??_TM1650_fastPrintNum_3digit,w
 15845  089F  00B0               	movwf	writeData@data
 15846  08A0  3035               	movlw	53
 15847  08A1  319D  25AD         	fcall	_writeData
 15848  08A3  0008               	return
 15849  08A4                     __end_of_TM1650_fastPrintNum_3digit:	
 15850                           
 15851                           	psect	text35
 15852  1FA4                     __ptext35:	
 15853 ;; *************** function ___lwmod *****************
 15854 ;; Defined at:
 15855 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwmod.c"
 15856 ;; Parameters:    Size  Location     Type
 15857 ;;  divisor         2    8[BANK0 ] unsigned int 
 15858 ;;  dividend        2   10[BANK0 ] unsigned int 
 15859 ;; Auto vars:     Size  Location     Type
 15860 ;;  counter         1   13[BANK0 ] unsigned char 
 15861 ;; Return value:  Size  Location     Type
 15862 ;;                  2    8[BANK0 ] unsigned int 
 15863 ;; Registers used:
 15864 ;;		wreg, status,2, status,0
 15865 ;; Tracked objects:
 15866 ;;		On entry : 0/0
 15867 ;;		On exit  : 0/0
 15868 ;;		Unchanged: 0/0
 15869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15870 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15871 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15872 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15873 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15874 ;;Total ram usage:        6 bytes
 15875 ;; Hardware stack levels used:    1
 15876 ;; Hardware stack levels required when called:    4
 15877 ;; This function calls:
 15878 ;;		Nothing
 15879 ;; This function is called by:
 15880 ;;		_TM1650_fastPrintNum
 15881 ;;		_TM1650_fastPrintNum_3digit
 15882 ;; This function uses a non-reentrant model
 15883 ;;
 15884                           
 15885                           
 15886                           ;psect for function ___lwmod
 15887  1FA4                     ___lwmod:	
 15888                           
 15889                           ;incstack = 0
 15890                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 15891  1FA4  0140               	movlb	0	; select bank0
 15892  1FA5  0828               	movf	___lwmod@divisor,w
 15893  1FA6  0429               	iorwf	___lwmod@divisor+1,w
 15894  1FA7  1903               	btfsc	3,2
 15895  1FA8  2FCC               	goto	l7680
 15896  1FA9  01AD               	clrf	___lwmod@counter
 15897  1FAA  0AAD               	incf	___lwmod@counter,f
 15898  1FAB                     l7670:	
 15899  1FAB  1BA9               	btfsc	___lwmod@divisor+1,7
 15900  1FAC  2FB7               	goto	l7672
 15901  1FAD  3001               	movlw	1
 15902  1FAE                     u7295:	
 15903  1FAE  35A8               	lslf	___lwmod@divisor,f
 15904  1FAF  0DA9               	rlf	___lwmod@divisor+1,f
 15905  1FB0  0B89               	decfsz	9,f
 15906  1FB1  2FAE               	goto	u7295
 15907  1FB2  3001               	movlw	1
 15908  1FB3  00AC               	movwf	??___lwmod
 15909  1FB4  082C               	movf	??___lwmod,w
 15910  1FB5  07AD               	addwf	___lwmod@counter,f
 15911  1FB6  2FAB               	goto	l7670
 15912  1FB7                     l7672:	
 15913  1FB7  0829               	movf	___lwmod@divisor+1,w
 15914  1FB8  022B               	subwf	___lwmod@dividend+1,w
 15915  1FB9  1D03               	skipz
 15916  1FBA  2FBD               	goto	u7315
 15917  1FBB  0828               	movf	___lwmod@divisor,w
 15918  1FBC  022A               	subwf	___lwmod@dividend,w
 15919  1FBD                     u7315:	
 15920  1FBD  1C03               	skipc
 15921  1FBE  2FC3               	goto	l7676
 15922  1FBF  0828               	movf	___lwmod@divisor,w
 15923  1FC0  02AA               	subwf	___lwmod@dividend,f
 15924  1FC1  0829               	movf	___lwmod@divisor+1,w
 15925  1FC2  3BAB               	subwfb	___lwmod@dividend+1,f
 15926  1FC3                     l7676:	
 15927  1FC3  3001               	movlw	1
 15928  1FC4                     u7325:	
 15929  1FC4  36A9               	lsrf	___lwmod@divisor+1,f
 15930  1FC5  0CA8               	rrf	___lwmod@divisor,f
 15931  1FC6  0B89               	decfsz	9,f
 15932  1FC7  2FC4               	goto	u7325
 15933  1FC8  3001               	movlw	1
 15934  1FC9  02AD               	subwf	___lwmod@counter,f
 15935  1FCA  1D03               	btfss	3,2
 15936  1FCB  2FB7               	goto	l7672
 15937  1FCC                     l7680:	
 15938  1FCC  082B               	movf	___lwmod@dividend+1,w
 15939  1FCD  00A9               	movwf	?___lwmod+1
 15940  1FCE  082A               	movf	___lwmod@dividend,w
 15941  1FCF  00A8               	movwf	?___lwmod
 15942  1FD0  0008               	return
 15943  1FD1                     __end_of___lwmod:	
 15944                           
 15945                           	psect	text36
 15946  136D                     __ptext36:	
 15947 ;; *************** function _LED_task_DMX *****************
 15948 ;; Defined at:
 15949 ;;		line 35 in file "led.c"
 15950 ;; Parameters:    Size  Location     Type
 15951 ;;		None
 15952 ;; Auto vars:     Size  Location     Type
 15953 ;;  dmx             4   35[BANK1 ] struct .
 15954 ;; Return value:  Size  Location     Type
 15955 ;;                  1    wreg      void 
 15956 ;; Registers used:
 15957 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15958 ;; Tracked objects:
 15959 ;;		On entry : 0/0
 15960 ;;		On exit  : 0/0
 15961 ;;		Unchanged: 0/0
 15962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15964 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15965 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15966 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15967 ;;Total ram usage:        9 bytes
 15968 ;; Hardware stack levels used:    1
 15969 ;; Hardware stack levels required when called:    7
 15970 ;; This function calls:
 15971 ;;		_DMX_getAddress
 15972 ;;		_LED_setColor
 15973 ;; This function is called by:
 15974 ;;		_CONTROL_DMX
 15975 ;; This function uses a non-reentrant model
 15976 ;;
 15977                           
 15978                           
 15979                           ;psect for function _LED_task_DMX
 15980  136D                     _LED_task_DMX:	
 15981                           
 15982                           ;led.c: 37:     color_t dmx;;led.c: 39:     dmx.red = dmxArray[DMX_getAddress()];
 15983                           
 15984                           ;incstack = 0
 15985                           ; Regs used in _LED_task_DMX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15986  136D  319B  2376  3193   	fcall	_DMX_getAddress
 15987  1370  0141               	movlb	1	; select bank1
 15988  1371  00BE               	movwf	??_LED_task_DMX^(0+128)
 15989  1372  01BF               	clrf	(??_LED_task_DMX^(0+128)+1)
 15990  1373  35BE               	lslf	??_LED_task_DMX^(0+128),f
 15991  1374  0DBF               	rlf	(??_LED_task_DMX^(0+128)+1),f
 15992  1375  30EE               	movlw	238
 15993  1376  00C0               	movwf	(??_LED_task_DMX+2)^(0+128)
 15994  1377  3023               	movlw	35
 15995  1378  00C1               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 15996  1379  083E               	movf	??_LED_task_DMX^(0+128),w
 15997  137A  0740               	addwf	(??_LED_task_DMX+2)^(0+128),w
 15998  137B  0086               	movwf	6
 15999  137C  083F               	movf	(??_LED_task_DMX+1)^(0+128),w
 16000  137D  3D41               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 16001  137E  0087               	movwf	7
 16002  137F  0801               	movf	1,w
 16003  1380  00C2               	movwf	(??_LED_task_DMX+4)^(0+128)
 16004  1381  0842               	movf	(??_LED_task_DMX+4)^(0+128),w
 16005  1382  00C4               	movwf	(LED_task_DMX@dmx^(0+128)+1)
 16006                           
 16007                           ;led.c: 40:     dmx.green = dmxArray[DMX_getAddress() + 1];
 16008  1383  319B  2376  3193   	fcall	_DMX_getAddress
 16009  1386  0141               	movlb	1	; select bank1
 16010  1387  00BE               	movwf	??_LED_task_DMX^(0+128)
 16011  1388  01BF               	clrf	(??_LED_task_DMX^(0+128)+1)
 16012  1389  35BE               	lslf	??_LED_task_DMX^(0+128),f
 16013  138A  0DBF               	rlf	(??_LED_task_DMX^(0+128)+1),f
 16014  138B  30F0               	movlw	240
 16015  138C  00C0               	movwf	(??_LED_task_DMX+2)^(0+128)
 16016  138D  3023               	movlw	35
 16017  138E  00C1               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 16018  138F  083E               	movf	??_LED_task_DMX^(0+128),w
 16019  1390  0740               	addwf	(??_LED_task_DMX+2)^(0+128),w
 16020  1391  0086               	movwf	6
 16021  1392  083F               	movf	(??_LED_task_DMX+1)^(0+128),w
 16022  1393  3D41               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 16023  1394  0087               	movwf	7
 16024  1395  0801               	movf	1,w
 16025  1396  00C2               	movwf	(??_LED_task_DMX+4)^(0+128)
 16026  1397  0842               	movf	(??_LED_task_DMX+4)^(0+128),w
 16027  1398  00C5               	movwf	(LED_task_DMX@dmx^(0+128)+2)
 16028                           
 16029                           ;led.c: 41:     dmx.blue = dmxArray[DMX_getAddress() + 2];
 16030  1399  319B  2376  3193   	fcall	_DMX_getAddress
 16031  139C  0141               	movlb	1	; select bank1
 16032  139D  00BE               	movwf	??_LED_task_DMX^(0+128)
 16033  139E  01BF               	clrf	(??_LED_task_DMX^(0+128)+1)
 16034  139F  35BE               	lslf	??_LED_task_DMX^(0+128),f
 16035  13A0  0DBF               	rlf	(??_LED_task_DMX^(0+128)+1),f
 16036  13A1  30F2               	movlw	242
 16037  13A2  00C0               	movwf	(??_LED_task_DMX+2)^(0+128)
 16038  13A3  3023               	movlw	35
 16039  13A4  00C1               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 16040  13A5  083E               	movf	??_LED_task_DMX^(0+128),w
 16041  13A6  0740               	addwf	(??_LED_task_DMX+2)^(0+128),w
 16042  13A7  0086               	movwf	6
 16043  13A8  083F               	movf	(??_LED_task_DMX+1)^(0+128),w
 16044  13A9  3D41               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 16045  13AA  0087               	movwf	7
 16046  13AB  0801               	movf	1,w
 16047  13AC  00C2               	movwf	(??_LED_task_DMX+4)^(0+128)
 16048  13AD  0842               	movf	(??_LED_task_DMX+4)^(0+128),w
 16049  13AE  00C6               	movwf	(LED_task_DMX@dmx^(0+128)+3)
 16050                           
 16051                           ;led.c: 42:     dmx.white = dmxArray[DMX_getAddress() + 3];
 16052  13AF  319B  2376  3193   	fcall	_DMX_getAddress
 16053  13B2  0141               	movlb	1	; select bank1
 16054  13B3  00BE               	movwf	??_LED_task_DMX^(0+128)
 16055  13B4  01BF               	clrf	(??_LED_task_DMX^(0+128)+1)
 16056  13B5  35BE               	lslf	??_LED_task_DMX^(0+128),f
 16057  13B6  0DBF               	rlf	(??_LED_task_DMX^(0+128)+1),f
 16058  13B7  30F4               	movlw	244
 16059  13B8  00C0               	movwf	(??_LED_task_DMX+2)^(0+128)
 16060  13B9  3023               	movlw	35
 16061  13BA  00C1               	movwf	((??_LED_task_DMX+2)^(0+128)+1)
 16062  13BB  083E               	movf	??_LED_task_DMX^(0+128),w
 16063  13BC  0740               	addwf	(??_LED_task_DMX+2)^(0+128),w
 16064  13BD  0086               	movwf	6
 16065  13BE  083F               	movf	(??_LED_task_DMX+1)^(0+128),w
 16066  13BF  3D41               	addwfc	(??_LED_task_DMX+3)^(0+128),w
 16067  13C0  0087               	movwf	7
 16068  13C1  0801               	movf	1,w
 16069  13C2  00C2               	movwf	(??_LED_task_DMX+4)^(0+128)
 16070  13C3  0842               	movf	(??_LED_task_DMX+4)^(0+128),w
 16071  13C4  00C3               	movwf	LED_task_DMX@dmx^(0+128)
 16072                           
 16073                           ;led.c: 44:     LED_setColor(dmx);
 16074  13C5  0846               	movf	(LED_task_DMX@dmx+3)^(0+128),w
 16075  13C6  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 16076  13C7  0845               	movf	(LED_task_DMX@dmx+2)^(0+128),w
 16077  13C8  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 16078  13C9  0844               	movf	(LED_task_DMX@dmx+1)^(0+128),w
 16079  13CA  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 16080  13CB  0843               	movf	LED_task_DMX@dmx^(0+128),w
 16081  13CC  00B6               	movwf	LED_setColor@input^(0+128)
 16082  13CD  3186  2644         	fcall	_LED_setColor
 16083  13CF  0008               	return
 16084  13D0                     __end_of_LED_task_DMX:	
 16085                           
 16086                           	psect	text37
 16087  1B76                     __ptext37:	
 16088 ;; *************** function _DMX_getAddress *****************
 16089 ;; Defined at:
 16090 ;;		line 75 in file "dmx.c"
 16091 ;; Parameters:    Size  Location     Type
 16092 ;;		None
 16093 ;; Auto vars:     Size  Location     Type
 16094 ;;		None
 16095 ;; Return value:  Size  Location     Type
 16096 ;;                  1    wreg      unsigned char 
 16097 ;; Registers used:
 16098 ;;		wreg
 16099 ;; Tracked objects:
 16100 ;;		On entry : 0/0
 16101 ;;		On exit  : 0/0
 16102 ;;		Unchanged: 0/0
 16103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16108 ;;Total ram usage:        0 bytes
 16109 ;; Hardware stack levels used:    1
 16110 ;; Hardware stack levels required when called:    4
 16111 ;; This function calls:
 16112 ;;		Nothing
 16113 ;; This function is called by:
 16114 ;;		_LED_task_DMX
 16115 ;; This function uses a non-reentrant model
 16116 ;;
 16117                           
 16118                           
 16119                           ;psect for function _DMX_getAddress
 16120  1B76                     _DMX_getAddress:	
 16121                           
 16122                           ;dmx.c: 76:     return address;
 16123                           
 16124                           ;incstack = 0
 16125                           ; Regs used in _DMX_getAddress: [wreg]
 16126  1B76  0141               	movlb	1	; select bank1
 16127  1B77  086A               	movf	_address^(0+128),w
 16128  1B78  0008               	return
 16129  1B79                     __end_of_DMX_getAddress:	
 16130                           
 16131                           	psect	text38
 16132  1C74                     __ptext38:	
 16133 ;; *************** function _BUTTONS_isHeld *****************
 16134 ;; Defined at:
 16135 ;;		line 106 in file "buttons.c"
 16136 ;; Parameters:    Size  Location     Type
 16137 ;;  button          1    wreg     PTR struct .
 16138 ;;		 -> buttons(32), NULL(0), 
 16139 ;; Auto vars:     Size  Location     Type
 16140 ;;  button          1    0[BANK0 ] PTR struct .
 16141 ;;		 -> buttons(32), NULL(0), 
 16142 ;; Return value:  Size  Location     Type
 16143 ;;                  1    wreg      _Bool 
 16144 ;; Registers used:
 16145 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16146 ;; Tracked objects:
 16147 ;;		On entry : 0/0
 16148 ;;		On exit  : 0/0
 16149 ;;		Unchanged: 0/0
 16150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16152 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16154 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16155 ;;Total ram usage:        1 bytes
 16156 ;; Hardware stack levels used:    1
 16157 ;; Hardware stack levels required when called:    4
 16158 ;; This function calls:
 16159 ;;		Nothing
 16160 ;; This function is called by:
 16161 ;;		_CONTROL_DMX
 16162 ;;		_CONTROL_MANUAL
 16163 ;; This function uses a non-reentrant model
 16164 ;;
 16165                           
 16166                           
 16167                           ;psect for function _BUTTONS_isHeld
 16168  1C74                     _BUTTONS_isHeld:	
 16169                           
 16170                           ;incstack = 0
 16171                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
 16172                           ;BUTTONS_isHeld@button stored from wreg
 16173  1C74  0140               	movlb	0	; select bank0
 16174  1C75  00A0               	movwf	BUTTONS_isHeld@button
 16175                           
 16176                           ;buttons.c: 107:     if(button->event == EVENT_HELD){
 16177  1C76  0820               	movf	BUTTONS_isHeld@button,w
 16178  1C77  3E07               	addlw	7
 16179  1C78  0086               	movwf	6
 16180  1C79  3002               	movlw	2	; select bank4/5
 16181  1C7A  0087               	movwf	7
 16182  1C7B  3003               	movlw	3
 16183  1C7C  0601               	xorwf	1,w
 16184  1C7D  1D03               	btfss	3,2
 16185  1C7E  2C81               	goto	l7862
 16186                           
 16187                           ;buttons.c: 108:         return 1;
 16188  1C7F  3001               	movlw	1
 16189  1C80  0008               	return
 16190  1C81                     l7862:	
 16191                           
 16192                           ;buttons.c: 111:     return 0;
 16193  1C81  3000               	movlw	0
 16194  1C82  0008               	return
 16195  1C83                     __end_of_BUTTONS_isHeld:	
 16196                           
 16197                           	psect	text39
 16198  0AE2                     __ptext39:	
 16199 ;; *************** function _LED_task_BEAT_STROBE *****************
 16200 ;; Defined at:
 16201 ;;		line 62 in file "led.c"
 16202 ;; Parameters:    Size  Location     Type
 16203 ;;		None
 16204 ;; Auto vars:     Size  Location     Type
 16205 ;;  beatState       1   79[BANK0 ] _Bool 
 16206 ;; Return value:  Size  Location     Type
 16207 ;;                  1    wreg      void 
 16208 ;; Registers used:
 16209 ;;		wreg, status,2, status,0, pclath, cstack
 16210 ;; Tracked objects:
 16211 ;;		On entry : 0/0
 16212 ;;		On exit  : 0/0
 16213 ;;		Unchanged: 0/0
 16214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16217 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16218 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16219 ;;Total ram usage:        3 bytes
 16220 ;; Hardware stack levels used:    1
 16221 ;; Hardware stack levels required when called:    8
 16222 ;; This function calls:
 16223 ;;		_BEAT_detected
 16224 ;;		_CLOCK_getTime
 16225 ;;		_LED_setColor
 16226 ;;		_beatColorCreator
 16227 ;; This function is called by:
 16228 ;;		_CONTROL_BEAT
 16229 ;; This function uses a non-reentrant model
 16230 ;;
 16231                           
 16232                           
 16233                           ;psect for function _LED_task_BEAT_STROBE
 16234  0AE2                     _LED_task_BEAT_STROBE:	
 16235                           
 16236                           ;led.c: 64:     if(CLOCK_getTime() - lastLedActiveTime < 50){
 16237                           
 16238                           ;incstack = 0
 16239                           ; Regs used in _LED_task_BEAT_STROBE: [wreg+status,2+status,0+pclath+cstack]
 16240  0AE2  319B  23C3  318A   	fcall	_CLOCK_getTime
 16241  0AE5  0142               	movlb	2	; select bank2
 16242  0AE6  0828               	movf	_lastLedActiveTime^(0+256),w
 16243  0AE7  0140               	movlb	0	; select bank0
 16244  0AE8  0220               	subwf	?_CLOCK_getTime,w
 16245  0AE9  0141               	movlb	1	; select bank1
 16246  0AEA  00BE               	movwf	??_LED_task_BEAT_STROBE^(0+128)
 16247  0AEB  0142               	movlb	2	; select bank2
 16248  0AEC  0829               	movf	(_lastLedActiveTime+1)^(0+256),w
 16249  0AED  0140               	movlb	0	; select bank0
 16250  0AEE  3B21               	subwfb	?_CLOCK_getTime+1,w
 16251  0AEF  0141               	movlb	1	; select bank1
 16252  0AF0  00BF               	movwf	(??_LED_task_BEAT_STROBE+1)^(0+128)
 16253  0AF1  3000               	movlw	0
 16254  0AF2  023F               	subwf	(??_LED_task_BEAT_STROBE+1)^(0+128),w
 16255  0AF3  3032               	movlw	50
 16256  0AF4  1903               	skipnz
 16257  0AF5  023E               	subwf	??_LED_task_BEAT_STROBE^(0+128),w
 16258  0AF6  1C03               	btfss	3,0
 16259  0AF7  0008               	return
 16260                           
 16261                           ;led.c: 68:     lastLedActiveTime = CLOCK_getTime();
 16262  0AF8  319B  23C3  318A   	fcall	_CLOCK_getTime
 16263  0AFB  0140               	movlb	0	; select bank0
 16264  0AFC  0821               	movf	?_CLOCK_getTime+1,w
 16265  0AFD  0142               	movlb	2	; select bank2
 16266  0AFE  00A9               	movwf	(_lastLedActiveTime+1)^(0+256)
 16267  0AFF  0140               	movlb	0	; select bank0
 16268  0B00  0820               	movf	?_CLOCK_getTime,w
 16269  0B01  0142               	movlb	2	; select bank2
 16270  0B02  00A8               	movwf	_lastLedActiveTime^(0+256)
 16271                           
 16272                           ;led.c: 70:     LATC5 = 0;
 16273  0B03  0140               	movlb	0	; select bank0
 16274  0B04  129A               	bcf	26,5	;volatile
 16275                           
 16276                           ;led.c: 71:     _Bool beatState = BEAT_detected();
 16277  0B05  319B  23D5  318A   	fcall	_BEAT_detected
 16278  0B08  0141               	movlb	1	; select bank1
 16279  0B09  00BE               	movwf	??_LED_task_BEAT_STROBE^(0+128)
 16280  0B0A  083E               	movf	??_LED_task_BEAT_STROBE^(0+128),w
 16281  0B0B  0140               	movlb	0	; select bank0
 16282  0B0C  00EF               	movwf	LED_task_BEAT_STROBE@beatState
 16283                           
 16284                           ;led.c: 73:     if (beatState) {
 16285  0B0D  086F               	movf	LED_task_BEAT_STROBE@beatState,w
 16286  0B0E  1D03               	btfss	3,2
 16287                           
 16288                           ;led.c: 74:         LATC5 = 1;
 16289  0B0F  169A               	bsf	26,5	;volatile
 16290                           
 16291                           ;led.c: 77:      if(!beatState){
 16292  0B10  086F               	movf	LED_task_BEAT_STROBE@beatState,w
 16293  0B11  1D03               	btfss	3,2
 16294  0B12  2B27               	goto	l7908
 16295                           
 16296                           ;led.c: 78:          LED_setColor(beatColorCreator(0,0,0,0));
 16297  0B13  0141               	movlb	1	; select bank1
 16298  0B14  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 16299  0B15  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 16300  0B16  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 16301  0B17  3000               	movlw	0
 16302  0B18  3188  20A4  318A   	fcall	_beatColorCreator
 16303  0B1B  0141               	movlb	1	; select bank1
 16304  0B1C  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 16305  0B1D  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 16306  0B1E  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 16307  0B1F  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 16308  0B20  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 16309  0B21  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 16310  0B22  0829               	movf	?_beatColorCreator^(0+128),w
 16311  0B23  00B6               	movwf	LED_setColor@input^(0+128)
 16312  0B24  3186  2644         	fcall	_LED_setColor
 16313                           
 16314                           ;led.c: 79:     } else if (currentState == 1){
 16315  0B26  0008               	return
 16316  0B27                     l7908:	
 16317  0B27  0141               	movlb	1	; select bank1
 16318  0B28  0350               	decf	_currentState^(0+128),w
 16319  0B29  0451               	iorwf	(_currentState+1)^(0+128),w
 16320  0B2A  1D03               	btfss	3,2
 16321  0B2B  2B6A               	goto	l7914
 16322                           
 16323                           ;led.c: 80:         LED_setColor(beatColorCreator(0,0,0,1));
 16324  0B2C  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 16325  0B2D  2B52               	goto	L6
 16326  0B2E                     l7928:	
 16327                           ;led.c: 86:          LED_setColor(beatColorCreator(0,1,1,0));
 16328                           
 16329                           ;led.c: 83:          LED_setColor(beatColorCreator(0,1,0,1));
 16330                           
 16331                           
 16332                           ;led.c: 89:          LED_setColor(beatColorCreator(1,0,1,1));
 16333  0B2E  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 16334  0B2F  2B4A               	goto	L18
 16335  0B30                     l7934:	
 16336                           
 16337                           ;led.c: 92:         LED_setColor(beatColorCreator(0,1,1,0));
 16338  0B30  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 16339  0B31  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 16340  0B32  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 16341  0B33  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 16342  0B34  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 16343  0B35  2B55               	goto	L7
 16344  0B36                     l7940:	
 16345                           
 16346                           ;led.c: 95:         LED_setColor(beatColorCreator(1,1,1,0));
 16347  0B36  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 16348  0B37  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 16349  0B38  2B41               	goto	L15
 16350  0B39                     l7946:	
 16351                           
 16352                           ;led.c: 98:         LED_setColor(beatColorCreator(1,1,0,1));
 16353  0B39  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 16354  0B3A  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 16355  0B3B  2B46               	goto	L17
 16356  0B3C                     l7958:	
 16357                           ;led.c: 101:          LED_setColor(beatColorCreator(0,1,0,1));
 16358                           
 16359                           
 16360                           ;led.c: 104:          LED_setColor(beatColorCreator(0,0,1,1));
 16361  0B3C  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 16362  0B3D  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 16363  0B3E  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 16364  0B3F  2B53               	goto	L14
 16365  0B40                     l7964:	
 16366                           
 16367                           ;led.c: 107:          LED_setColor(beatColorCreator(1,0,1,0));
 16368  0B40  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 16369  0B41                     L15:	
 16370  0B41  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 16371  0B42  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 16372  0B43  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 16373  0B44  2B4E               	goto	L13
 16374  0B45                     l7970:	
 16375                           
 16376                           ;led.c: 110:         LED_setColor(beatColorCreator(1,0,0,1));
 16377  0B45  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 16378  0B46                     L17:	
 16379  0B46  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 16380  0B47  2B4C               	goto	L16
 16381  0B48                     l7976:	
 16382                           
 16383                           ;led.c: 113:         LED_setColor(beatColorCreator(1,1,1,1));
 16384  0B48  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 16385  0B49  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 16386  0B4A                     L18:	
 16387  0B4A  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 16388  0B4B  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 16389  0B4C                     L16:	
 16390  0B4C  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 16391  0B4D  0AAB               	incf	beatColorCreator@inWhite^(0+128),f
 16392  0B4E                     L13:	
 16393  0B4E  3001               	movlw	1
 16394  0B4F  2B56               	goto	L8
 16395  0B50                     l7982:	
 16396                           
 16397                           ;led.c: 116:         LED_setColor(beatColorCreator(0,1,0,1));
 16398  0B50  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 16399  0B51  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 16400  0B52                     L6:	
 16401  0B52  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 16402  0B53                     L14:	
 16403  0B53  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 16404  0B54  0AAB               	incf	beatColorCreator@inWhite^(0+128),f
 16405  0B55                     L7:	
 16406  0B55  3000               	movlw	0
 16407  0B56                     L8:	
 16408  0B56  3188  20A4  318A   	fcall	_beatColorCreator
 16409  0B59  0141               	movlb	1	; select bank1
 16410  0B5A  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 16411  0B5B  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 16412  0B5C  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 16413  0B5D  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 16414  0B5E  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 16415  0B5F  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 16416  0B60  0829               	movf	?_beatColorCreator^(0+128),w
 16417  0B61  00B6               	movwf	LED_setColor@input^(0+128)
 16418  0B62  3186  2644         	fcall	_LED_setColor
 16419                           
 16420                           ;led.c: 81:         currentState++;
 16421  0B64  3001               	movlw	1
 16422  0B65  0141               	movlb	1	; select bank1
 16423  0B66  07D0               	addwf	_currentState^(0+128),f
 16424  0B67  3000               	movlw	0
 16425  0B68  3DD1               	addwfc	(_currentState+1)^(0+128),f
 16426                           
 16427                           ;led.c: 82:     } else if(currentState == 2){
 16428  0B69  0008               	return
 16429  0B6A                     l7914:	
 16430  0B6A  3002               	movlw	2
 16431  0B6B  0650               	xorwf	_currentState^(0+128),w
 16432  0B6C  0451               	iorwf	(_currentState+1)^(0+128),w
 16433  0B6D  1903               	btfsc	3,2
 16434  0B6E  2B50               	goto	l7982
 16435  0B6F  3003               	movlw	3
 16436  0B70  0650               	xorwf	_currentState^(0+128),w
 16437  0B71  0451               	iorwf	(_currentState+1)^(0+128),w
 16438  0B72  1903               	btfsc	3,2
 16439  0B73  2B30               	goto	l7934
 16440  0B74  3004               	movlw	4
 16441  0B75  0650               	xorwf	_currentState^(0+128),w
 16442  0B76  0451               	iorwf	(_currentState+1)^(0+128),w
 16443  0B77  1903               	btfsc	3,2
 16444  0B78  2B2E               	goto	l7928
 16445  0B79  3005               	movlw	5
 16446  0B7A  0650               	xorwf	_currentState^(0+128),w
 16447  0B7B  0451               	iorwf	(_currentState+1)^(0+128),w
 16448  0B7C  1903               	btfsc	3,2
 16449  0B7D  2B30               	goto	l7934
 16450  0B7E  3006               	movlw	6
 16451  0B7F  0650               	xorwf	_currentState^(0+128),w
 16452  0B80  0451               	iorwf	(_currentState+1)^(0+128),w
 16453  0B81  1903               	btfsc	3,2
 16454  0B82  2B36               	goto	l7940
 16455  0B83  3008               	movlw	8
 16456  0B84  0650               	xorwf	_currentState^(0+128),w
 16457  0B85  0451               	iorwf	(_currentState+1)^(0+128),w
 16458  0B86  1903               	btfsc	3,2
 16459  0B87  2B39               	goto	l7946
 16460  0B88  3009               	movlw	9
 16461  0B89  0650               	xorwf	_currentState^(0+128),w
 16462  0B8A  0451               	iorwf	(_currentState+1)^(0+128),w
 16463  0B8B  1903               	btfsc	3,2
 16464  0B8C  2B50               	goto	l7982
 16465  0B8D  300A               	movlw	10
 16466  0B8E  0650               	xorwf	_currentState^(0+128),w
 16467  0B8F  0451               	iorwf	(_currentState+1)^(0+128),w
 16468  0B90  1903               	btfsc	3,2
 16469  0B91  2B3C               	goto	l7958
 16470  0B92  300B               	movlw	11
 16471  0B93  0650               	xorwf	_currentState^(0+128),w
 16472  0B94  0451               	iorwf	(_currentState+1)^(0+128),w
 16473  0B95  1903               	btfsc	3,2
 16474  0B96  2B40               	goto	l7964
 16475  0B97  300C               	movlw	12
 16476  0B98  0650               	xorwf	_currentState^(0+128),w
 16477  0B99  0451               	iorwf	(_currentState+1)^(0+128),w
 16478  0B9A  1903               	btfsc	3,2
 16479  0B9B  2B45               	goto	l7970
 16480  0B9C  300D               	movlw	13
 16481  0B9D  0650               	xorwf	_currentState^(0+128),w
 16482  0B9E  0451               	iorwf	(_currentState+1)^(0+128),w
 16483  0B9F  1903               	btfsc	3,2
 16484  0BA0  2B48               	goto	l7976
 16485  0BA1  300E               	movlw	14
 16486  0BA2  0650               	xorwf	_currentState^(0+128),w
 16487  0BA3  0451               	iorwf	(_currentState+1)^(0+128),w
 16488  0BA4  1903               	btfsc	3,2
 16489  0BA5  2B50               	goto	l7982
 16490                           
 16491                           ;led.c: 119:         LED_setColor(beatColorCreator(0,1,1,1));
 16492  0BA6  01A9               	clrf	beatColorCreator@inGreen^(0+128)
 16493  0BA7  0AA9               	incf	beatColorCreator@inGreen^(0+128),f
 16494  0BA8  01AA               	clrf	beatColorCreator@inBlue^(0+128)
 16495  0BA9  0AAA               	incf	beatColorCreator@inBlue^(0+128),f
 16496  0BAA  01AB               	clrf	beatColorCreator@inWhite^(0+128)
 16497  0BAB  0AAB               	incf	beatColorCreator@inWhite^(0+128),f
 16498  0BAC  3000               	movlw	0
 16499  0BAD  3188  20A4  318A   	fcall	_beatColorCreator
 16500  0BB0  0141               	movlb	1	; select bank1
 16501  0BB1  082C               	movf	(?_beatColorCreator+3)^(0+128),w
 16502  0BB2  00B9               	movwf	(LED_setColor@input+3)^(0+128)
 16503  0BB3  082B               	movf	(?_beatColorCreator+2)^(0+128),w
 16504  0BB4  00B8               	movwf	(LED_setColor@input+2)^(0+128)
 16505  0BB5  082A               	movf	(?_beatColorCreator+1)^(0+128),w
 16506  0BB6  00B7               	movwf	(LED_setColor@input+1)^(0+128)
 16507  0BB7  0829               	movf	?_beatColorCreator^(0+128),w
 16508  0BB8  00B6               	movwf	LED_setColor@input^(0+128)
 16509  0BB9  3186  2644         	fcall	_LED_setColor
 16510                           
 16511                           ;led.c: 120:         currentState = 1;
 16512  0BBB  3001               	movlw	1
 16513  0BBC  0141               	movlb	1	; select bank1
 16514  0BBD  00D0               	movwf	_currentState^(0+128)
 16515  0BBE  3000               	movlw	0
 16516  0BBF  00D1               	movwf	(_currentState^(0+128)+1)
 16517  0BC0  0008               	return
 16518  0BC1                     __end_of_LED_task_BEAT_STROBE:	
 16519                           
 16520                           	psect	text40
 16521  08A4                     __ptext40:	
 16522 ;; *************** function _beatColorCreator *****************
 16523 ;; Defined at:
 16524 ;;		line 144 in file "led.c"
 16525 ;; Parameters:    Size  Location     Type
 16526 ;;  inRed           1    wreg     _Bool 
 16527 ;;  inGreen         1    9[BANK1 ] _Bool 
 16528 ;;  inBlue          1   10[BANK1 ] _Bool 
 16529 ;;  inWhite         1   11[BANK1 ] _Bool 
 16530 ;; Auto vars:     Size  Location     Type
 16531 ;;  inRed           1   13[BANK1 ] _Bool 
 16532 ;;  tempColor       4   18[BANK1 ] struct .
 16533 ;; Return value:  Size  Location     Type
 16534 ;;                  4    9[BANK1 ] struct .
 16535 ;; Registers used:
 16536 ;;		wreg, status,2, status,0, pclath, cstack
 16537 ;; Tracked objects:
 16538 ;;		On entry : 0/0
 16539 ;;		On exit  : 0/0
 16540 ;;		Unchanged: 0/0
 16541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16542 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16543 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16544 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16545 ;;      Totals:         0       1      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16546 ;;Total ram usage:       14 bytes
 16547 ;; Hardware stack levels used:    1
 16548 ;; Hardware stack levels required when called:    7
 16549 ;; This function calls:
 16550 ;;		___fltol
 16551 ;;		_beatBrightnessCalculation
 16552 ;; This function is called by:
 16553 ;;		_LED_task_BEAT_STROBE
 16554 ;;		_resetColor
 16555 ;; This function uses a non-reentrant model
 16556 ;;
 16557                           
 16558                           
 16559                           ;psect for function _beatColorCreator
 16560  08A4                     _beatColorCreator:	
 16561                           
 16562                           ;incstack = 0
 16563                           ; Regs used in _beatColorCreator: [wreg+status,2+status,0+pclath+cstack]
 16564                           ;beatColorCreator@inRed stored from wreg
 16565  08A4  0141               	movlb	1	; select bank1
 16566  08A5  00AD               	movwf	beatColorCreator@inRed^(0+128)
 16567                           
 16568                           ;led.c: 145:     color_t tempColor;;led.c: 147:     if(inRed)
 16569  08A6  082D               	movf	beatColorCreator@inRed^(0+128),w
 16570  08A7  1903               	btfsc	3,2
 16571  08A8  28CE               	goto	l7728
 16572                           
 16573                           ;led.c: 148:         tempColor.red = beatBrightnessCalculation();
 16574  08A9  3195  250E  3188   	fcall	_beatBrightnessCalculation
 16575  08AC  0141               	movlb	1	; select bank1
 16576  08AD  0823               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 16577  08AE  00B1               	movwf	(_beatColorCreator$4093+3)^(0+128)
 16578  08AF  0822               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 16579  08B0  00B0               	movwf	(_beatColorCreator$4093+2)^(0+128)
 16580  08B1  0821               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 16581  08B2  00AF               	movwf	(_beatColorCreator$4093+1)^(0+128)
 16582  08B3  0820               	movf	?_beatBrightnessCalculation^(0+128),w
 16583  08B4  00AE               	movwf	_beatColorCreator$4093^(0+128)
 16584                           
 16585                           ;led.c: 148:         tempColor.red = beatBrightnessCalculation();
 16586  08B5  0831               	movf	(_beatColorCreator$4093+3)^(0+128),w
 16587  08B6  0140               	movlb	0	; select bank0
 16588  08B7  00E5               	movwf	___fltol@f1+3
 16589  08B8  0141               	movlb	1	; select bank1
 16590  08B9  0830               	movf	(_beatColorCreator$4093+2)^(0+128),w
 16591  08BA  0140               	movlb	0	; select bank0
 16592  08BB  00E4               	movwf	___fltol@f1+2
 16593  08BC  0141               	movlb	1	; select bank1
 16594  08BD  082F               	movf	(_beatColorCreator$4093+1)^(0+128),w
 16595  08BE  0140               	movlb	0	; select bank0
 16596  08BF  00E3               	movwf	___fltol@f1+1
 16597  08C0  0141               	movlb	1	; select bank1
 16598  08C1  082E               	movf	_beatColorCreator$4093^(0+128),w
 16599  08C2  0140               	movlb	0	; select bank0
 16600  08C3  00E2               	movwf	___fltol@f1
 16601  08C4  3194  2434  3188   	fcall	___fltol
 16602  08C7  0140               	movlb	0	; select bank0
 16603  08C8  0862               	movf	?___fltol,w
 16604  08C9  00EE               	movwf	??_beatColorCreator
 16605  08CA  086E               	movf	??_beatColorCreator,w
 16606  08CB  0141               	movlb	1	; select bank1
 16607  08CC  00B3               	movwf	(beatColorCreator@tempColor^(0+128)+1)
 16608  08CD  28CF               	goto	l7730
 16609  08CE                     l7728:	
 16610                           
 16611                           ;led.c: 150:         tempColor.red = 0;
 16612  08CE  01B3               	clrf	(beatColorCreator@tempColor^(0+128)+1)
 16613  08CF                     l7730:	
 16614                           
 16615                           ;led.c: 152:     if(inBlue)
 16616  08CF  082A               	movf	beatColorCreator@inBlue^(0+128),w
 16617  08D0  1903               	btfsc	3,2
 16618  08D1  28F7               	goto	l7734
 16619                           
 16620                           ;led.c: 153:         tempColor.blue = beatBrightnessCalculation();
 16621  08D2  3195  250E  3188   	fcall	_beatBrightnessCalculation
 16622  08D5  0141               	movlb	1	; select bank1
 16623  08D6  0823               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 16624  08D7  00B1               	movwf	(_beatColorCreator$4093+3)^(0+128)
 16625  08D8  0822               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 16626  08D9  00B0               	movwf	(_beatColorCreator$4093+2)^(0+128)
 16627  08DA  0821               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 16628  08DB  00AF               	movwf	(_beatColorCreator$4093+1)^(0+128)
 16629  08DC  0820               	movf	?_beatBrightnessCalculation^(0+128),w
 16630  08DD  00AE               	movwf	_beatColorCreator$4093^(0+128)
 16631                           
 16632                           ;led.c: 153:         tempColor.blue = beatBrightnessCalculation();
 16633  08DE  0831               	movf	(_beatColorCreator$4093+3)^(0+128),w
 16634  08DF  0140               	movlb	0	; select bank0
 16635  08E0  00E5               	movwf	___fltol@f1+3
 16636  08E1  0141               	movlb	1	; select bank1
 16637  08E2  0830               	movf	(_beatColorCreator$4093+2)^(0+128),w
 16638  08E3  0140               	movlb	0	; select bank0
 16639  08E4  00E4               	movwf	___fltol@f1+2
 16640  08E5  0141               	movlb	1	; select bank1
 16641  08E6  082F               	movf	(_beatColorCreator$4093+1)^(0+128),w
 16642  08E7  0140               	movlb	0	; select bank0
 16643  08E8  00E3               	movwf	___fltol@f1+1
 16644  08E9  0141               	movlb	1	; select bank1
 16645  08EA  082E               	movf	_beatColorCreator$4093^(0+128),w
 16646  08EB  0140               	movlb	0	; select bank0
 16647  08EC  00E2               	movwf	___fltol@f1
 16648  08ED  3194  2434  3188   	fcall	___fltol
 16649  08F0  0140               	movlb	0	; select bank0
 16650  08F1  0862               	movf	?___fltol,w
 16651  08F2  00EE               	movwf	??_beatColorCreator
 16652  08F3  086E               	movf	??_beatColorCreator,w
 16653  08F4  0141               	movlb	1	; select bank1
 16654  08F5  00B5               	movwf	(beatColorCreator@tempColor^(0+128)+3)
 16655  08F6  28F8               	goto	l7736
 16656  08F7                     l7734:	
 16657                           
 16658                           ;led.c: 155:         tempColor.blue = 0;
 16659  08F7  01B5               	clrf	(beatColorCreator@tempColor^(0+128)+3)
 16660  08F8                     l7736:	
 16661                           
 16662                           ;led.c: 157:     if(inGreen)
 16663  08F8  0829               	movf	beatColorCreator@inGreen^(0+128),w
 16664  08F9  1903               	btfsc	3,2
 16665  08FA  2920               	goto	l7740
 16666                           
 16667                           ;led.c: 158:         tempColor.green = beatBrightnessCalculation();
 16668  08FB  3195  250E  3188   	fcall	_beatBrightnessCalculation
 16669  08FE  0141               	movlb	1	; select bank1
 16670  08FF  0823               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 16671  0900  00B1               	movwf	(_beatColorCreator$4093+3)^(0+128)
 16672  0901  0822               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 16673  0902  00B0               	movwf	(_beatColorCreator$4093+2)^(0+128)
 16674  0903  0821               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 16675  0904  00AF               	movwf	(_beatColorCreator$4093+1)^(0+128)
 16676  0905  0820               	movf	?_beatBrightnessCalculation^(0+128),w
 16677  0906  00AE               	movwf	_beatColorCreator$4093^(0+128)
 16678                           
 16679                           ;led.c: 158:         tempColor.green = beatBrightnessCalculation();
 16680  0907  0831               	movf	(_beatColorCreator$4093+3)^(0+128),w
 16681  0908  0140               	movlb	0	; select bank0
 16682  0909  00E5               	movwf	___fltol@f1+3
 16683  090A  0141               	movlb	1	; select bank1
 16684  090B  0830               	movf	(_beatColorCreator$4093+2)^(0+128),w
 16685  090C  0140               	movlb	0	; select bank0
 16686  090D  00E4               	movwf	___fltol@f1+2
 16687  090E  0141               	movlb	1	; select bank1
 16688  090F  082F               	movf	(_beatColorCreator$4093+1)^(0+128),w
 16689  0910  0140               	movlb	0	; select bank0
 16690  0911  00E3               	movwf	___fltol@f1+1
 16691  0912  0141               	movlb	1	; select bank1
 16692  0913  082E               	movf	_beatColorCreator$4093^(0+128),w
 16693  0914  0140               	movlb	0	; select bank0
 16694  0915  00E2               	movwf	___fltol@f1
 16695  0916  3194  2434  3188   	fcall	___fltol
 16696  0919  0140               	movlb	0	; select bank0
 16697  091A  0862               	movf	?___fltol,w
 16698  091B  00EE               	movwf	??_beatColorCreator
 16699  091C  086E               	movf	??_beatColorCreator,w
 16700  091D  0141               	movlb	1	; select bank1
 16701  091E  00B4               	movwf	(beatColorCreator@tempColor^(0+128)+2)
 16702  091F  2921               	goto	l7742
 16703  0920                     l7740:	
 16704                           
 16705                           ;led.c: 160:         tempColor.green = 0;
 16706  0920  01B4               	clrf	(beatColorCreator@tempColor^(0+128)+2)
 16707  0921                     l7742:	
 16708                           
 16709                           ;led.c: 162:     if(inWhite)
 16710  0921  082B               	movf	beatColorCreator@inWhite^(0+128),w
 16711  0922  1903               	btfsc	3,2
 16712  0923  2949               	goto	l7746
 16713                           
 16714                           ;led.c: 163:         tempColor.white = beatBrightnessCalculation();
 16715  0924  3195  250E  3188   	fcall	_beatBrightnessCalculation
 16716  0927  0141               	movlb	1	; select bank1
 16717  0928  0823               	movf	(?_beatBrightnessCalculation+3)^(0+128),w
 16718  0929  00B1               	movwf	(_beatColorCreator$4093+3)^(0+128)
 16719  092A  0822               	movf	(?_beatBrightnessCalculation+2)^(0+128),w
 16720  092B  00B0               	movwf	(_beatColorCreator$4093+2)^(0+128)
 16721  092C  0821               	movf	(?_beatBrightnessCalculation+1)^(0+128),w
 16722  092D  00AF               	movwf	(_beatColorCreator$4093+1)^(0+128)
 16723  092E  0820               	movf	?_beatBrightnessCalculation^(0+128),w
 16724  092F  00AE               	movwf	_beatColorCreator$4093^(0+128)
 16725                           
 16726                           ;led.c: 163:         tempColor.white = beatBrightnessCalculation();
 16727  0930  0831               	movf	(_beatColorCreator$4093+3)^(0+128),w
 16728  0931  0140               	movlb	0	; select bank0
 16729  0932  00E5               	movwf	___fltol@f1+3
 16730  0933  0141               	movlb	1	; select bank1
 16731  0934  0830               	movf	(_beatColorCreator$4093+2)^(0+128),w
 16732  0935  0140               	movlb	0	; select bank0
 16733  0936  00E4               	movwf	___fltol@f1+2
 16734  0937  0141               	movlb	1	; select bank1
 16735  0938  082F               	movf	(_beatColorCreator$4093+1)^(0+128),w
 16736  0939  0140               	movlb	0	; select bank0
 16737  093A  00E3               	movwf	___fltol@f1+1
 16738  093B  0141               	movlb	1	; select bank1
 16739  093C  082E               	movf	_beatColorCreator$4093^(0+128),w
 16740  093D  0140               	movlb	0	; select bank0
 16741  093E  00E2               	movwf	___fltol@f1
 16742  093F  3194  2434  3188   	fcall	___fltol
 16743  0942  0140               	movlb	0	; select bank0
 16744  0943  0862               	movf	?___fltol,w
 16745  0944  00EE               	movwf	??_beatColorCreator
 16746  0945  086E               	movf	??_beatColorCreator,w
 16747  0946  0141               	movlb	1	; select bank1
 16748  0947  00B2               	movwf	beatColorCreator@tempColor^(0+128)
 16749  0948  294A               	goto	l7748
 16750  0949                     l7746:	
 16751                           
 16752                           ;led.c: 165:         tempColor.white = 0;
 16753  0949  01B2               	clrf	beatColorCreator@tempColor^(0+128)
 16754  094A                     l7748:	
 16755                           
 16756                           ;led.c: 167:     return tempColor;
 16757  094A  0835               	movf	(beatColorCreator@tempColor+3)^(0+128),w
 16758  094B  00AC               	movwf	(?_beatColorCreator+3)^(0+128)
 16759  094C  0834               	movf	(beatColorCreator@tempColor+2)^(0+128),w
 16760  094D  00AB               	movwf	(?_beatColorCreator+2)^(0+128)
 16761  094E  0833               	movf	(beatColorCreator@tempColor+1)^(0+128),w
 16762  094F  00AA               	movwf	(?_beatColorCreator+1)^(0+128)
 16763  0950  0832               	movf	beatColorCreator@tempColor^(0+128),w
 16764  0951  00A9               	movwf	?_beatColorCreator^(0+128)
 16765  0952  0008               	return
 16766  0953                     __end_of_beatColorCreator:	
 16767                           
 16768                           	psect	text41
 16769  150E                     __ptext41:	
 16770 ;; *************** function _beatBrightnessCalculation *****************
 16771 ;; Defined at:
 16772 ;;		line 125 in file "led.c"
 16773 ;; Parameters:    Size  Location     Type
 16774 ;;		None
 16775 ;; Auto vars:     Size  Location     Type
 16776 ;;  temp            1   77[BANK0 ] unsigned char 
 16777 ;; Return value:  Size  Location     Type
 16778 ;;                  4    0[BANK1 ] float 
 16779 ;; Registers used:
 16780 ;;		wreg, status,2, status,0, pclath, cstack
 16781 ;; Tracked objects:
 16782 ;;		On entry : 0/0
 16783 ;;		On exit  : 0/0
 16784 ;;		Unchanged: 0/0
 16785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16786 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16787 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16788 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16789 ;;      Totals:         0       1       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16790 ;;Total ram usage:       10 bytes
 16791 ;; Hardware stack levels used:    1
 16792 ;; Hardware stack levels required when called:    6
 16793 ;; This function calls:
 16794 ;;		___fldiv
 16795 ;;		___flmul
 16796 ;;		___fltol
 16797 ;;		___xxtofl
 16798 ;; This function is called by:
 16799 ;;		_beatColorCreator
 16800 ;; This function uses a non-reentrant model
 16801 ;;
 16802                           
 16803                           
 16804                           ;psect for function _beatBrightnessCalculation
 16805  150E                     _beatBrightnessCalculation:	
 16806                           
 16807                           ;led.c: 126:     uint8_t temp = (float)(beatBrightness/9.0) * 255;
 16808                           
 16809                           ;incstack = 0
 16810                           ; Regs used in _beatBrightnessCalculation: [wreg+status,2+status,0+pclath+cstack]
 16811  150E  0141               	movlb	1	; select bank1
 16812  150F  086F               	movf	_beatBrightness^(0+128),w
 16813  1510  00A4               	movwf	??_beatBrightnessCalculation^(0+128)
 16814  1511  01A5               	clrf	(??_beatBrightnessCalculation^(0+128)+1)
 16815  1512  01A6               	clrf	(??_beatBrightnessCalculation^(0+128)+2)
 16816  1513  01A7               	clrf	(??_beatBrightnessCalculation^(0+128)+3)
 16817  1514  0827               	movf	(??_beatBrightnessCalculation+3)^(0+128),w
 16818  1515  0140               	movlb	0	; select bank0
 16819  1516  00A3               	movwf	___xxtofl@val+3
 16820  1517  0141               	movlb	1	; select bank1
 16821  1518  0826               	movf	(??_beatBrightnessCalculation+2)^(0+128),w
 16822  1519  0140               	movlb	0	; select bank0
 16823  151A  00A2               	movwf	___xxtofl@val+2
 16824  151B  0141               	movlb	1	; select bank1
 16825  151C  0825               	movf	(??_beatBrightnessCalculation+1)^(0+128),w
 16826  151D  0140               	movlb	0	; select bank0
 16827  151E  00A1               	movwf	___xxtofl@val+1
 16828  151F  0141               	movlb	1	; select bank1
 16829  1520  0824               	movf	??_beatBrightnessCalculation^(0+128),w
 16830  1521  0140               	movlb	0	; select bank0
 16831  1522  00A0               	movwf	___xxtofl@val
 16832  1523  3001               	movlw	1
 16833  1524  3196  2616  3195   	fcall	___xxtofl
 16834  1527  0140               	movlb	0	; select bank0
 16835  1528  0823               	movf	?___xxtofl+3,w
 16836  1529  00B5               	movwf	___fldiv@b+3
 16837  152A  0822               	movf	?___xxtofl+2,w
 16838  152B  00B4               	movwf	___fldiv@b+2
 16839  152C  0821               	movf	?___xxtofl+1,w
 16840  152D  00B3               	movwf	___fldiv@b+1
 16841  152E  0820               	movf	?___xxtofl,w
 16842  152F  00B2               	movwf	___fldiv@b
 16843  1530  3041               	movlw	65
 16844  1531  00B1               	movwf	___fldiv@a+3
 16845  1532  3010               	movlw	16
 16846  1533  00B0               	movwf	___fldiv@a+2
 16847  1534  3000               	movlw	0
 16848  1535  00AF               	movwf	___fldiv@a+1
 16849  1536  3000               	movlw	0
 16850  1537  00AE               	movwf	___fldiv@a
 16851  1538  3184  24CA  3195   	fcall	___fldiv
 16852  153B  0140               	movlb	0	; select bank0
 16853  153C  0831               	movf	?___fldiv+3,w
 16854  153D  00CF               	movwf	___flmul@a+3
 16855  153E  0830               	movf	?___fldiv+2,w
 16856  153F  00CE               	movwf	___flmul@a+2
 16857  1540  082F               	movf	?___fldiv+1,w
 16858  1541  00CD               	movwf	___flmul@a+1
 16859  1542  082E               	movf	?___fldiv,w
 16860  1543  00CC               	movwf	___flmul@a
 16861  1544  3043               	movlw	67
 16862  1545  00CB               	movwf	___flmul@b+3
 16863  1546  307F               	movlw	127
 16864  1547  00CA               	movwf	___flmul@b+2
 16865  1548  3000               	movlw	0
 16866  1549  00C9               	movwf	___flmul@b+1
 16867  154A  3000               	movlw	0
 16868  154B  00C8               	movwf	___flmul@b
 16869  154C  3180  209A  3195   	fcall	___flmul
 16870  154F  0140               	movlb	0	; select bank0
 16871  1550  084B               	movf	?___flmul+3,w
 16872  1551  00E5               	movwf	___fltol@f1+3
 16873  1552  084A               	movf	?___flmul+2,w
 16874  1553  00E4               	movwf	___fltol@f1+2
 16875  1554  0849               	movf	?___flmul+1,w
 16876  1555  00E3               	movwf	___fltol@f1+1
 16877  1556  0848               	movf	?___flmul,w
 16878  1557  00E2               	movwf	___fltol@f1
 16879  1558  3194  2434  3195   	fcall	___fltol
 16880  155B  0140               	movlb	0	; select bank0
 16881  155C  0862               	movf	?___fltol,w
 16882  155D  0141               	movlb	1	; select bank1
 16883  155E  00A8               	movwf	(??_beatBrightnessCalculation+4)^(0+128)
 16884  155F  0828               	movf	(??_beatBrightnessCalculation+4)^(0+128),w
 16885  1560  0140               	movlb	0	; select bank0
 16886  1561  00ED               	movwf	beatBrightnessCalculation@temp
 16887                           
 16888                           ;led.c: 127:     return temp;
 16889  1562  086D               	movf	beatBrightnessCalculation@temp,w
 16890  1563  0141               	movlb	1	; select bank1
 16891  1564  00A4               	movwf	??_beatBrightnessCalculation^(0+128)
 16892  1565  01A5               	clrf	(??_beatBrightnessCalculation^(0+128)+1)
 16893  1566  01A6               	clrf	(??_beatBrightnessCalculation^(0+128)+2)
 16894  1567  01A7               	clrf	(??_beatBrightnessCalculation^(0+128)+3)
 16895  1568  0827               	movf	(??_beatBrightnessCalculation+3)^(0+128),w
 16896  1569  0140               	movlb	0	; select bank0
 16897  156A  00A3               	movwf	___xxtofl@val+3
 16898  156B  0141               	movlb	1	; select bank1
 16899  156C  0826               	movf	(??_beatBrightnessCalculation+2)^(0+128),w
 16900  156D  0140               	movlb	0	; select bank0
 16901  156E  00A2               	movwf	___xxtofl@val+2
 16902  156F  0141               	movlb	1	; select bank1
 16903  1570  0825               	movf	(??_beatBrightnessCalculation+1)^(0+128),w
 16904  1571  0140               	movlb	0	; select bank0
 16905  1572  00A1               	movwf	___xxtofl@val+1
 16906  1573  0141               	movlb	1	; select bank1
 16907  1574  0824               	movf	??_beatBrightnessCalculation^(0+128),w
 16908  1575  0140               	movlb	0	; select bank0
 16909  1576  00A0               	movwf	___xxtofl@val
 16910  1577  3000               	movlw	0
 16911  1578  3196  2616         	fcall	___xxtofl
 16912  157A  0140               	movlb	0	; select bank0
 16913  157B  0823               	movf	?___xxtofl+3,w
 16914  157C  0141               	movlb	1	; select bank1
 16915  157D  00A3               	movwf	(?_beatBrightnessCalculation+3)^(0+128)
 16916  157E  0140               	movlb	0	; select bank0
 16917  157F  0822               	movf	?___xxtofl+2,w
 16918  1580  0141               	movlb	1	; select bank1
 16919  1581  00A2               	movwf	(?_beatBrightnessCalculation+2)^(0+128)
 16920  1582  0140               	movlb	0	; select bank0
 16921  1583  0821               	movf	?___xxtofl+1,w
 16922  1584  0141               	movlb	1	; select bank1
 16923  1585  00A1               	movwf	(?_beatBrightnessCalculation+1)^(0+128)
 16924  1586  0140               	movlb	0	; select bank0
 16925  1587  0820               	movf	?___xxtofl,w
 16926  1588  0141               	movlb	1	; select bank1
 16927  1589  00A0               	movwf	?_beatBrightnessCalculation^(0+128)
 16928  158A  0008               	return
 16929  158B                     __end_of_beatBrightnessCalculation:	
 16930                           
 16931                           	psect	text42
 16932  0644                     __ptext42:	
 16933 ;; *************** function _LED_setColor *****************
 16934 ;; Defined at:
 16935 ;;		line 26 in file "led.c"
 16936 ;; Parameters:    Size  Location     Type
 16937 ;;  input           4   22[BANK1 ] struct .
 16938 ;; Auto vars:     Size  Location     Type
 16939 ;;		None
 16940 ;; Return value:  Size  Location     Type
 16941 ;;                  1    wreg      void 
 16942 ;; Registers used:
 16943 ;;		wreg, status,2, status,0, pclath, cstack
 16944 ;; Tracked objects:
 16945 ;;		On entry : 0/0
 16946 ;;		On exit  : 0/0
 16947 ;;		Unchanged: 0/0
 16948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16949 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16951 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16952 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16953 ;;Total ram usage:        8 bytes
 16954 ;; Hardware stack levels used:    1
 16955 ;; Hardware stack levels required when called:    6
 16956 ;; This function calls:
 16957 ;;		_PWM1_LoadDutyValue
 16958 ;;		_PWM2_LoadDutyValue
 16959 ;;		_PWM3_LoadDutyValue
 16960 ;;		_PWM4_LoadDutyValue
 16961 ;;		___fldiv
 16962 ;;		___flmul
 16963 ;;		___fltol
 16964 ;;		___xxtofl
 16965 ;; This function is called by:
 16966 ;;		_LED_task_DMX
 16967 ;;		_LED_task_MANUAL
 16968 ;;		_LED_task_BEAT_STROBE
 16969 ;; This function uses a non-reentrant model
 16970 ;;
 16971                           
 16972                           
 16973                           ;psect for function _LED_setColor
 16974  0644                     _LED_setColor:	
 16975                           
 16976                           ;led.c: 28:         PWM1_LoadDutyValue( ( ((int)input.red)/255.0 ) * 127 );
 16977                           
 16978                           ;incstack = 0
 16979                           ; Regs used in _LED_setColor: [wreg+status,2+status,0+pclath+cstack]
 16980  0644  0141               	movlb	1	; select bank1
 16981  0645  0837               	movf	(LED_setColor@input^(0+128)+1),w
 16982  0646  00BA               	movwf	??_LED_setColor^(0+128)
 16983  0647  01BB               	clrf	(??_LED_setColor^(0+128)+1)
 16984  0648  01BC               	clrf	(??_LED_setColor^(0+128)+2)
 16985  0649  01BD               	clrf	(??_LED_setColor^(0+128)+3)
 16986  064A  083D               	movf	(??_LED_setColor+3)^(0+128),w
 16987  064B  0140               	movlb	0	; select bank0
 16988  064C  00A3               	movwf	___xxtofl@val+3
 16989  064D  0141               	movlb	1	; select bank1
 16990  064E  083C               	movf	(??_LED_setColor+2)^(0+128),w
 16991  064F  0140               	movlb	0	; select bank0
 16992  0650  00A2               	movwf	___xxtofl@val+2
 16993  0651  0141               	movlb	1	; select bank1
 16994  0652  083B               	movf	(??_LED_setColor+1)^(0+128),w
 16995  0653  0140               	movlb	0	; select bank0
 16996  0654  00A1               	movwf	___xxtofl@val+1
 16997  0655  0141               	movlb	1	; select bank1
 16998  0656  083A               	movf	??_LED_setColor^(0+128),w
 16999  0657  0140               	movlb	0	; select bank0
 17000  0658  00A0               	movwf	___xxtofl@val
 17001  0659  3001               	movlw	1
 17002  065A  3196  2616  3186   	fcall	___xxtofl
 17003  065D  0140               	movlb	0	; select bank0
 17004  065E  0823               	movf	?___xxtofl+3,w
 17005  065F  00B5               	movwf	___fldiv@b+3
 17006  0660  0822               	movf	?___xxtofl+2,w
 17007  0661  00B4               	movwf	___fldiv@b+2
 17008  0662  0821               	movf	?___xxtofl+1,w
 17009  0663  00B3               	movwf	___fldiv@b+1
 17010  0664  0820               	movf	?___xxtofl,w
 17011  0665  00B2               	movwf	___fldiv@b
 17012  0666  3043               	movlw	67
 17013  0667  00B1               	movwf	___fldiv@a+3
 17014  0668  307F               	movlw	127
 17015  0669  00B0               	movwf	___fldiv@a+2
 17016  066A  3000               	movlw	0
 17017  066B  00AF               	movwf	___fldiv@a+1
 17018  066C  3000               	movlw	0
 17019  066D  00AE               	movwf	___fldiv@a
 17020  066E  3184  24CA  3186   	fcall	___fldiv
 17021  0671  0140               	movlb	0	; select bank0
 17022  0672  0831               	movf	?___fldiv+3,w
 17023  0673  00CF               	movwf	___flmul@a+3
 17024  0674  0830               	movf	?___fldiv+2,w
 17025  0675  00CE               	movwf	___flmul@a+2
 17026  0676  082F               	movf	?___fldiv+1,w
 17027  0677  00CD               	movwf	___flmul@a+1
 17028  0678  082E               	movf	?___fldiv,w
 17029  0679  00CC               	movwf	___flmul@a
 17030  067A  3042               	movlw	66
 17031  067B  00CB               	movwf	___flmul@b+3
 17032  067C  30FE               	movlw	254
 17033  067D  00CA               	movwf	___flmul@b+2
 17034  067E  3000               	movlw	0
 17035  067F  00C9               	movwf	___flmul@b+1
 17036  0680  3000               	movlw	0
 17037  0681  00C8               	movwf	___flmul@b
 17038  0682  3180  209A  3186   	fcall	___flmul
 17039  0685  0140               	movlb	0	; select bank0
 17040  0686  084B               	movf	?___flmul+3,w
 17041  0687  00E5               	movwf	___fltol@f1+3
 17042  0688  084A               	movf	?___flmul+2,w
 17043  0689  00E4               	movwf	___fltol@f1+2
 17044  068A  0849               	movf	?___flmul+1,w
 17045  068B  00E3               	movwf	___fltol@f1+1
 17046  068C  0848               	movf	?___flmul,w
 17047  068D  00E2               	movwf	___fltol@f1
 17048  068E  3194  2434  3186   	fcall	___fltol
 17049  0691  0140               	movlb	0	; select bank0
 17050  0692  0863               	movf	?___fltol+1,w
 17051  0693  0141               	movlb	1	; select bank1
 17052  0694  00A1               	movwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128)
 17053  0695  0140               	movlb	0	; select bank0
 17054  0696  0862               	movf	?___fltol,w
 17055  0697  0141               	movlb	1	; select bank1
 17056  0698  00A0               	movwf	PWM1_LoadDutyValue@dutyValue^(0+128)
 17057  0699  319D  25CA  3186   	fcall	_PWM1_LoadDutyValue
 17058                           
 17059                           ;led.c: 29:         PWM2_LoadDutyValue( ( ((int)input.green)/255.0 ) * 127 );
 17060  069C  0141               	movlb	1	; select bank1
 17061  069D  0838               	movf	(LED_setColor@input^(0+128)+2),w
 17062  069E  00BA               	movwf	??_LED_setColor^(0+128)
 17063  069F  01BB               	clrf	(??_LED_setColor^(0+128)+1)
 17064  06A0  01BC               	clrf	(??_LED_setColor^(0+128)+2)
 17065  06A1  01BD               	clrf	(??_LED_setColor^(0+128)+3)
 17066  06A2  083D               	movf	(??_LED_setColor+3)^(0+128),w
 17067  06A3  0140               	movlb	0	; select bank0
 17068  06A4  00A3               	movwf	___xxtofl@val+3
 17069  06A5  0141               	movlb	1	; select bank1
 17070  06A6  083C               	movf	(??_LED_setColor+2)^(0+128),w
 17071  06A7  0140               	movlb	0	; select bank0
 17072  06A8  00A2               	movwf	___xxtofl@val+2
 17073  06A9  0141               	movlb	1	; select bank1
 17074  06AA  083B               	movf	(??_LED_setColor+1)^(0+128),w
 17075  06AB  0140               	movlb	0	; select bank0
 17076  06AC  00A1               	movwf	___xxtofl@val+1
 17077  06AD  0141               	movlb	1	; select bank1
 17078  06AE  083A               	movf	??_LED_setColor^(0+128),w
 17079  06AF  0140               	movlb	0	; select bank0
 17080  06B0  00A0               	movwf	___xxtofl@val
 17081  06B1  3001               	movlw	1
 17082  06B2  3196  2616  3186   	fcall	___xxtofl
 17083  06B5  0140               	movlb	0	; select bank0
 17084  06B6  0823               	movf	?___xxtofl+3,w
 17085  06B7  00B5               	movwf	___fldiv@b+3
 17086  06B8  0822               	movf	?___xxtofl+2,w
 17087  06B9  00B4               	movwf	___fldiv@b+2
 17088  06BA  0821               	movf	?___xxtofl+1,w
 17089  06BB  00B3               	movwf	___fldiv@b+1
 17090  06BC  0820               	movf	?___xxtofl,w
 17091  06BD  00B2               	movwf	___fldiv@b
 17092  06BE  3043               	movlw	67
 17093  06BF  00B1               	movwf	___fldiv@a+3
 17094  06C0  307F               	movlw	127
 17095  06C1  00B0               	movwf	___fldiv@a+2
 17096  06C2  3000               	movlw	0
 17097  06C3  00AF               	movwf	___fldiv@a+1
 17098  06C4  3000               	movlw	0
 17099  06C5  00AE               	movwf	___fldiv@a
 17100  06C6  3184  24CA  3186   	fcall	___fldiv
 17101  06C9  0140               	movlb	0	; select bank0
 17102  06CA  0831               	movf	?___fldiv+3,w
 17103  06CB  00CF               	movwf	___flmul@a+3
 17104  06CC  0830               	movf	?___fldiv+2,w
 17105  06CD  00CE               	movwf	___flmul@a+2
 17106  06CE  082F               	movf	?___fldiv+1,w
 17107  06CF  00CD               	movwf	___flmul@a+1
 17108  06D0  082E               	movf	?___fldiv,w
 17109  06D1  00CC               	movwf	___flmul@a
 17110  06D2  3042               	movlw	66
 17111  06D3  00CB               	movwf	___flmul@b+3
 17112  06D4  30FE               	movlw	254
 17113  06D5  00CA               	movwf	___flmul@b+2
 17114  06D6  3000               	movlw	0
 17115  06D7  00C9               	movwf	___flmul@b+1
 17116  06D8  3000               	movlw	0
 17117  06D9  00C8               	movwf	___flmul@b
 17118  06DA  3180  209A  3186   	fcall	___flmul
 17119  06DD  0140               	movlb	0	; select bank0
 17120  06DE  084B               	movf	?___flmul+3,w
 17121  06DF  00E5               	movwf	___fltol@f1+3
 17122  06E0  084A               	movf	?___flmul+2,w
 17123  06E1  00E4               	movwf	___fltol@f1+2
 17124  06E2  0849               	movf	?___flmul+1,w
 17125  06E3  00E3               	movwf	___fltol@f1+1
 17126  06E4  0848               	movf	?___flmul,w
 17127  06E5  00E2               	movwf	___fltol@f1
 17128  06E6  3194  2434  3186   	fcall	___fltol
 17129  06E9  0140               	movlb	0	; select bank0
 17130  06EA  0863               	movf	?___fltol+1,w
 17131  06EB  0141               	movlb	1	; select bank1
 17132  06EC  00A1               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128)
 17133  06ED  0140               	movlb	0	; select bank0
 17134  06EE  0862               	movf	?___fltol,w
 17135  06EF  0141               	movlb	1	; select bank1
 17136  06F0  00A0               	movwf	PWM2_LoadDutyValue@dutyValue^(0+128)
 17137  06F1  319D  25E8  3186   	fcall	_PWM2_LoadDutyValue
 17138                           
 17139                           ;led.c: 30:         PWM3_LoadDutyValue( ( ((int)input.blue)/255.0 ) * 127 );
 17140  06F4  0141               	movlb	1	; select bank1
 17141  06F5  0839               	movf	(LED_setColor@input^(0+128)+3),w
 17142  06F6  00BA               	movwf	??_LED_setColor^(0+128)
 17143  06F7  01BB               	clrf	(??_LED_setColor^(0+128)+1)
 17144  06F8  01BC               	clrf	(??_LED_setColor^(0+128)+2)
 17145  06F9  01BD               	clrf	(??_LED_setColor^(0+128)+3)
 17146  06FA  083D               	movf	(??_LED_setColor+3)^(0+128),w
 17147  06FB  0140               	movlb	0	; select bank0
 17148  06FC  00A3               	movwf	___xxtofl@val+3
 17149  06FD  0141               	movlb	1	; select bank1
 17150  06FE  083C               	movf	(??_LED_setColor+2)^(0+128),w
 17151  06FF  0140               	movlb	0	; select bank0
 17152  0700  00A2               	movwf	___xxtofl@val+2
 17153  0701  0141               	movlb	1	; select bank1
 17154  0702  083B               	movf	(??_LED_setColor+1)^(0+128),w
 17155  0703  0140               	movlb	0	; select bank0
 17156  0704  00A1               	movwf	___xxtofl@val+1
 17157  0705  0141               	movlb	1	; select bank1
 17158  0706  083A               	movf	??_LED_setColor^(0+128),w
 17159  0707  0140               	movlb	0	; select bank0
 17160  0708  00A0               	movwf	___xxtofl@val
 17161  0709  3001               	movlw	1
 17162  070A  3196  2616  3186   	fcall	___xxtofl
 17163  070D  0140               	movlb	0	; select bank0
 17164  070E  0823               	movf	?___xxtofl+3,w
 17165  070F  00B5               	movwf	___fldiv@b+3
 17166  0710  0822               	movf	?___xxtofl+2,w
 17167  0711  00B4               	movwf	___fldiv@b+2
 17168  0712  0821               	movf	?___xxtofl+1,w
 17169  0713  00B3               	movwf	___fldiv@b+1
 17170  0714  0820               	movf	?___xxtofl,w
 17171  0715  00B2               	movwf	___fldiv@b
 17172  0716  3043               	movlw	67
 17173  0717  00B1               	movwf	___fldiv@a+3
 17174  0718  307F               	movlw	127
 17175  0719  00B0               	movwf	___fldiv@a+2
 17176  071A  3000               	movlw	0
 17177  071B  00AF               	movwf	___fldiv@a+1
 17178  071C  3000               	movlw	0
 17179  071D  00AE               	movwf	___fldiv@a
 17180  071E  3184  24CA  3186   	fcall	___fldiv
 17181  0721  0140               	movlb	0	; select bank0
 17182  0722  0831               	movf	?___fldiv+3,w
 17183  0723  00CF               	movwf	___flmul@a+3
 17184  0724  0830               	movf	?___fldiv+2,w
 17185  0725  00CE               	movwf	___flmul@a+2
 17186  0726  082F               	movf	?___fldiv+1,w
 17187  0727  00CD               	movwf	___flmul@a+1
 17188  0728  082E               	movf	?___fldiv,w
 17189  0729  00CC               	movwf	___flmul@a
 17190  072A  3042               	movlw	66
 17191  072B  00CB               	movwf	___flmul@b+3
 17192  072C  30FE               	movlw	254
 17193  072D  00CA               	movwf	___flmul@b+2
 17194  072E  3000               	movlw	0
 17195  072F  00C9               	movwf	___flmul@b+1
 17196  0730  3000               	movlw	0
 17197  0731  00C8               	movwf	___flmul@b
 17198  0732  3180  209A  3186   	fcall	___flmul
 17199  0735  0140               	movlb	0	; select bank0
 17200  0736  084B               	movf	?___flmul+3,w
 17201  0737  00E5               	movwf	___fltol@f1+3
 17202  0738  084A               	movf	?___flmul+2,w
 17203  0739  00E4               	movwf	___fltol@f1+2
 17204  073A  0849               	movf	?___flmul+1,w
 17205  073B  00E3               	movwf	___fltol@f1+1
 17206  073C  0848               	movf	?___flmul,w
 17207  073D  00E2               	movwf	___fltol@f1
 17208  073E  3194  2434  3186   	fcall	___fltol
 17209  0741  0140               	movlb	0	; select bank0
 17210  0742  0863               	movf	?___fltol+1,w
 17211  0743  0141               	movlb	1	; select bank1
 17212  0744  00A1               	movwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128)
 17213  0745  0140               	movlb	0	; select bank0
 17214  0746  0862               	movf	?___fltol,w
 17215  0747  0141               	movlb	1	; select bank1
 17216  0748  00A0               	movwf	PWM3_LoadDutyValue@dutyValue^(0+128)
 17217  0749  319E  2606  3186   	fcall	_PWM3_LoadDutyValue
 17218                           
 17219                           ;led.c: 31:         PWM4_LoadDutyValue( ( ((int)input.white)/255.0 ) * 127 );
 17220  074C  0141               	movlb	1	; select bank1
 17221  074D  0836               	movf	LED_setColor@input^(0+128),w
 17222  074E  00BA               	movwf	??_LED_setColor^(0+128)
 17223  074F  01BB               	clrf	(??_LED_setColor^(0+128)+1)
 17224  0750  01BC               	clrf	(??_LED_setColor^(0+128)+2)
 17225  0751  01BD               	clrf	(??_LED_setColor^(0+128)+3)
 17226  0752  083D               	movf	(??_LED_setColor+3)^(0+128),w
 17227  0753  0140               	movlb	0	; select bank0
 17228  0754  00A3               	movwf	___xxtofl@val+3
 17229  0755  0141               	movlb	1	; select bank1
 17230  0756  083C               	movf	(??_LED_setColor+2)^(0+128),w
 17231  0757  0140               	movlb	0	; select bank0
 17232  0758  00A2               	movwf	___xxtofl@val+2
 17233  0759  0141               	movlb	1	; select bank1
 17234  075A  083B               	movf	(??_LED_setColor+1)^(0+128),w
 17235  075B  0140               	movlb	0	; select bank0
 17236  075C  00A1               	movwf	___xxtofl@val+1
 17237  075D  0141               	movlb	1	; select bank1
 17238  075E  083A               	movf	??_LED_setColor^(0+128),w
 17239  075F  0140               	movlb	0	; select bank0
 17240  0760  00A0               	movwf	___xxtofl@val
 17241  0761  3001               	movlw	1
 17242  0762  3196  2616  3186   	fcall	___xxtofl
 17243  0765  0140               	movlb	0	; select bank0
 17244  0766  0823               	movf	?___xxtofl+3,w
 17245  0767  00B5               	movwf	___fldiv@b+3
 17246  0768  0822               	movf	?___xxtofl+2,w
 17247  0769  00B4               	movwf	___fldiv@b+2
 17248  076A  0821               	movf	?___xxtofl+1,w
 17249  076B  00B3               	movwf	___fldiv@b+1
 17250  076C  0820               	movf	?___xxtofl,w
 17251  076D  00B2               	movwf	___fldiv@b
 17252  076E  3043               	movlw	67
 17253  076F  00B1               	movwf	___fldiv@a+3
 17254  0770  307F               	movlw	127
 17255  0771  00B0               	movwf	___fldiv@a+2
 17256  0772  3000               	movlw	0
 17257  0773  00AF               	movwf	___fldiv@a+1
 17258  0774  3000               	movlw	0
 17259  0775  00AE               	movwf	___fldiv@a
 17260  0776  3184  24CA  3186   	fcall	___fldiv
 17261  0779  0140               	movlb	0	; select bank0
 17262  077A  0831               	movf	?___fldiv+3,w
 17263  077B  00CF               	movwf	___flmul@a+3
 17264  077C  0830               	movf	?___fldiv+2,w
 17265  077D  00CE               	movwf	___flmul@a+2
 17266  077E  082F               	movf	?___fldiv+1,w
 17267  077F  00CD               	movwf	___flmul@a+1
 17268  0780  082E               	movf	?___fldiv,w
 17269  0781  00CC               	movwf	___flmul@a
 17270  0782  3042               	movlw	66
 17271  0783  00CB               	movwf	___flmul@b+3
 17272  0784  30FE               	movlw	254
 17273  0785  00CA               	movwf	___flmul@b+2
 17274  0786  3000               	movlw	0
 17275  0787  00C9               	movwf	___flmul@b+1
 17276  0788  3000               	movlw	0
 17277  0789  00C8               	movwf	___flmul@b
 17278  078A  3180  209A  3186   	fcall	___flmul
 17279  078D  0140               	movlb	0	; select bank0
 17280  078E  084B               	movf	?___flmul+3,w
 17281  078F  00E5               	movwf	___fltol@f1+3
 17282  0790  084A               	movf	?___flmul+2,w
 17283  0791  00E4               	movwf	___fltol@f1+2
 17284  0792  0849               	movf	?___flmul+1,w
 17285  0793  00E3               	movwf	___fltol@f1+1
 17286  0794  0848               	movf	?___flmul,w
 17287  0795  00E2               	movwf	___fltol@f1
 17288  0796  3194  2434  3186   	fcall	___fltol
 17289  0799  0140               	movlb	0	; select bank0
 17290  079A  0863               	movf	?___fltol+1,w
 17291  079B  0141               	movlb	1	; select bank1
 17292  079C  00A1               	movwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128)
 17293  079D  0140               	movlb	0	; select bank0
 17294  079E  0862               	movf	?___fltol,w
 17295  079F  0141               	movlb	1	; select bank1
 17296  07A0  00A0               	movwf	PWM4_LoadDutyValue@dutyValue^(0+128)
 17297  07A1  319E  2624         	fcall	_PWM4_LoadDutyValue
 17298  07A3  0008               	return
 17299  07A4                     __end_of_LED_setColor:	
 17300                           
 17301                           	psect	text43
 17302  1616                     __ptext43:	
 17303 ;; *************** function ___xxtofl *****************
 17304 ;; Defined at:
 17305 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
 17306 ;; Parameters:    Size  Location     Type
 17307 ;;  sign            1    wreg     unsigned char 
 17308 ;;  val             4    0[BANK0 ] long 
 17309 ;; Auto vars:     Size  Location     Type
 17310 ;;  sign            1    8[BANK0 ] unsigned char 
 17311 ;;  arg             4   10[BANK0 ] unsigned long 
 17312 ;;  exp             1    9[BANK0 ] unsigned char 
 17313 ;; Return value:  Size  Location     Type
 17314 ;;                  4    0[BANK0 ] unsigned char 
 17315 ;; Registers used:
 17316 ;;		wreg, status,2, status,0
 17317 ;; Tracked objects:
 17318 ;;		On entry : 0/0
 17319 ;;		On exit  : 0/0
 17320 ;;		Unchanged: 0/0
 17321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17322 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17323 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17324 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17325 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17326 ;;Total ram usage:       14 bytes
 17327 ;; Hardware stack levels used:    1
 17328 ;; Hardware stack levels required when called:    4
 17329 ;; This function calls:
 17330 ;;		Nothing
 17331 ;; This function is called by:
 17332 ;;		_LED_setColor
 17333 ;;		_beatBrightnessCalculation
 17334 ;; This function uses a non-reentrant model
 17335 ;;
 17336                           
 17337                           
 17338                           ;psect for function ___xxtofl
 17339  1616                     ___xxtofl:	
 17340                           
 17341                           ;incstack = 0
 17342                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 17343                           ;___xxtofl@sign stored from wreg
 17344  1616  0140               	movlb	0	; select bank0
 17345  1617  00A8               	movwf	___xxtofl@sign
 17346  1618  0828               	movf	___xxtofl@sign,w
 17347  1619  1D03               	btfss	3,2
 17348  161A  1FA3               	btfss	___xxtofl@val+3,7
 17349  161B  2E2C               	goto	l7518
 17350  161C  0920               	comf	___xxtofl@val,w
 17351  161D  00AA               	movwf	___xxtofl@arg
 17352  161E  0921               	comf	___xxtofl@val+1,w
 17353  161F  00AB               	movwf	___xxtofl@arg+1
 17354  1620  0922               	comf	___xxtofl@val+2,w
 17355  1621  00AC               	movwf	___xxtofl@arg+2
 17356  1622  0923               	comf	___xxtofl@val+3,w
 17357  1623  00AD               	movwf	___xxtofl@arg+3
 17358  1624  0AAA               	incf	___xxtofl@arg,f
 17359  1625  1903               	skipnz
 17360  1626  0AAB               	incf	___xxtofl@arg+1,f
 17361  1627  1903               	skipnz
 17362  1628  0AAC               	incf	___xxtofl@arg+2,f
 17363  1629  1903               	skipnz
 17364  162A  0AAD               	incf	___xxtofl@arg+3,f
 17365  162B  2E34               	goto	l2136
 17366  162C                     l7518:	
 17367  162C  0823               	movf	___xxtofl@val+3,w
 17368  162D  00AD               	movwf	___xxtofl@arg+3
 17369  162E  0822               	movf	___xxtofl@val+2,w
 17370  162F  00AC               	movwf	___xxtofl@arg+2
 17371  1630  0821               	movf	___xxtofl@val+1,w
 17372  1631  00AB               	movwf	___xxtofl@arg+1
 17373  1632  0820               	movf	___xxtofl@val,w
 17374  1633  00AA               	movwf	___xxtofl@arg
 17375  1634                     l2136:	
 17376  1634  0823               	movf	___xxtofl@val+3,w
 17377  1635  0422               	iorwf	___xxtofl@val+2,w
 17378  1636  0421               	iorwf	___xxtofl@val+1,w
 17379  1637  0420               	iorwf	___xxtofl@val,w
 17380  1638  1D03               	skipz
 17381  1639  2E43               	goto	l7524
 17382  163A  3000               	movlw	0
 17383  163B  00A3               	movwf	?___xxtofl+3
 17384  163C  3000               	movlw	0
 17385  163D  00A2               	movwf	?___xxtofl+2
 17386  163E  3000               	movlw	0
 17387  163F  00A1               	movwf	?___xxtofl+1
 17388  1640  3000               	movlw	0
 17389  1641  00A0               	movwf	?___xxtofl
 17390  1642  0008               	return
 17391  1643                     l7524:	
 17392  1643  3096               	movlw	150
 17393  1644  00A4               	movwf	??___xxtofl
 17394  1645  0824               	movf	??___xxtofl,w
 17395  1646  00A9               	movwf	___xxtofl@exp
 17396  1647                     l7528:	
 17397  1647  30FE               	movlw	254
 17398  1648  052D               	andwf	___xxtofl@arg+3,w
 17399  1649  1903               	btfsc	3,2
 17400  164A  2E6A               	goto	l2142
 17401  164B  3001               	movlw	1
 17402  164C  00A4               	movwf	??___xxtofl
 17403  164D  0824               	movf	??___xxtofl,w
 17404  164E  07A9               	addwf	___xxtofl@exp,f
 17405  164F  3001               	movlw	1
 17406  1650                     u6975:	
 17407  1650  36AD               	lsrf	___xxtofl@arg+3,f
 17408  1651  0CAC               	rrf	___xxtofl@arg+2,f
 17409  1652  0CAB               	rrf	___xxtofl@arg+1,f
 17410  1653  0CAA               	rrf	___xxtofl@arg,f
 17411  1654  0B89               	decfsz	9,f
 17412  1655  2E50               	goto	u6975
 17413  1656  2E47               	goto	l7528
 17414  1657                     l7530:	
 17415  1657  3001               	movlw	1
 17416  1658  00A4               	movwf	??___xxtofl
 17417  1659  0824               	movf	??___xxtofl,w
 17418  165A  07A9               	addwf	___xxtofl@exp,f
 17419  165B  3001               	movlw	1
 17420  165C  07AA               	addwf	___xxtofl@arg,f
 17421  165D  3000               	movlw	0
 17422  165E  3DAB               	addwfc	___xxtofl@arg+1,f
 17423  165F  3000               	movlw	0
 17424  1660  3DAC               	addwfc	___xxtofl@arg+2,f
 17425  1661  3000               	movlw	0
 17426  1662  3DAD               	addwfc	___xxtofl@arg+3,f
 17427  1663  3001               	movlw	1
 17428  1664                     u6995:	
 17429  1664  36AD               	lsrf	___xxtofl@arg+3,f
 17430  1665  0CAC               	rrf	___xxtofl@arg+2,f
 17431  1666  0CAB               	rrf	___xxtofl@arg+1,f
 17432  1667  0CAA               	rrf	___xxtofl@arg,f
 17433  1668  0B89               	decfsz	9,f
 17434  1669  2E64               	goto	u6995
 17435  166A                     l2142:	
 17436  166A  30FF               	movlw	255
 17437  166B  052D               	andwf	___xxtofl@arg+3,w
 17438  166C  1903               	btfsc	3,2
 17439  166D  2E7C               	goto	l7538
 17440  166E  2E57               	goto	l7530
 17441  166F                     l7540:	
 17442  166F  3002               	movlw	2
 17443  1670  0229               	subwf	___xxtofl@exp,w
 17444  1671  1C03               	btfss	3,0
 17445  1672  2E7E               	goto	l2149
 17446  1673  3001               	movlw	1
 17447  1674  02A9               	subwf	___xxtofl@exp,f
 17448  1675  3001               	movlw	1
 17449  1676                     u7015:	
 17450  1676  35AA               	lslf	___xxtofl@arg,f
 17451  1677  0DAB               	rlf	___xxtofl@arg+1,f
 17452  1678  0DAC               	rlf	___xxtofl@arg+2,f
 17453  1679  0DAD               	rlf	___xxtofl@arg+3,f
 17454  167A  0B89               	decfsz	9,f
 17455  167B  2E76               	goto	u7015
 17456  167C                     l7538:	
 17457  167C  1FAC               	btfss	___xxtofl@arg+2,7
 17458  167D  2E6F               	goto	l7540
 17459  167E                     l2149:	
 17460  167E  1829               	btfsc	___xxtofl@exp,0
 17461  167F  2E88               	goto	l2150
 17462  1680  30FF               	movlw	255
 17463  1681  05AA               	andwf	___xxtofl@arg,f
 17464  1682  30FF               	movlw	255
 17465  1683  05AB               	andwf	___xxtofl@arg+1,f
 17466  1684  307F               	movlw	127
 17467  1685  05AC               	andwf	___xxtofl@arg+2,f
 17468  1686  30FF               	movlw	255
 17469  1687  05AD               	andwf	___xxtofl@arg+3,f
 17470  1688                     l2150:	
 17471  1688  1003               	clrc
 17472  1689  0CA9               	rrf	___xxtofl@exp,f
 17473  168A  0829               	movf	___xxtofl@exp,w
 17474  168B  00A4               	movwf	??___xxtofl
 17475  168C  01A5               	clrf	??___xxtofl+1
 17476  168D  01A6               	clrf	??___xxtofl+2
 17477  168E  01A7               	clrf	??___xxtofl+3
 17478  168F  3018               	movlw	24
 17479  1690                     u7055:	
 17480  1690  35A4               	lslf	??___xxtofl,f
 17481  1691  0DA5               	rlf	??___xxtofl+1,f
 17482  1692  0DA6               	rlf	??___xxtofl+2,f
 17483  1693  0DA7               	rlf	??___xxtofl+3,f
 17484  1694  0B89               	decfsz	9,f
 17485  1695  2E90               	goto	u7055
 17486  1696  0824               	movf	??___xxtofl,w
 17487  1697  04AA               	iorwf	___xxtofl@arg,f
 17488  1698  0825               	movf	??___xxtofl+1,w
 17489  1699  04AB               	iorwf	___xxtofl@arg+1,f
 17490  169A  0826               	movf	??___xxtofl+2,w
 17491  169B  04AC               	iorwf	___xxtofl@arg+2,f
 17492  169C  0827               	movf	??___xxtofl+3,w
 17493  169D  04AD               	iorwf	___xxtofl@arg+3,f
 17494  169E  0828               	movf	___xxtofl@sign,w
 17495  169F  1D03               	btfss	3,2
 17496  16A0  1FA3               	btfss	___xxtofl@val+3,7
 17497  16A1  2EA3               	goto	l7552
 17498  16A2  17AD               	bsf	___xxtofl@arg+3,7
 17499  16A3                     l7552:	
 17500  16A3  082D               	movf	___xxtofl@arg+3,w
 17501  16A4  00A3               	movwf	?___xxtofl+3
 17502  16A5  082C               	movf	___xxtofl@arg+2,w
 17503  16A6  00A2               	movwf	?___xxtofl+2
 17504  16A7  082B               	movf	___xxtofl@arg+1,w
 17505  16A8  00A1               	movwf	?___xxtofl+1
 17506  16A9  082A               	movf	___xxtofl@arg,w
 17507  16AA  00A0               	movwf	?___xxtofl
 17508  16AB  0008               	return
 17509  16AC                     __end_of___xxtofl:	
 17510                           
 17511                           	psect	text44
 17512  1434                     __ptext44:	
 17513 ;; *************** function ___fltol *****************
 17514 ;; Defined at:
 17515 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
 17516 ;; Parameters:    Size  Location     Type
 17517 ;;  f1              4   66[BANK0 ] unsigned char 
 17518 ;; Auto vars:     Size  Location     Type
 17519 ;;  exp1            1   76[BANK0 ] unsigned char 
 17520 ;;  sign1           1   75[BANK0 ] unsigned char 
 17521 ;; Return value:  Size  Location     Type
 17522 ;;                  4   66[BANK0 ] long 
 17523 ;; Registers used:
 17524 ;;		wreg, status,2, status,0
 17525 ;; Tracked objects:
 17526 ;;		On entry : 0/0
 17527 ;;		On exit  : 0/0
 17528 ;;		Unchanged: 0/0
 17529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17530 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17531 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17532 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17533 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17534 ;;Total ram usage:       11 bytes
 17535 ;; Hardware stack levels used:    1
 17536 ;; Hardware stack levels required when called:    4
 17537 ;; This function calls:
 17538 ;;		Nothing
 17539 ;; This function is called by:
 17540 ;;		_LED_setColor
 17541 ;;		_beatColorCreator
 17542 ;;		_beatBrightnessCalculation
 17543 ;; This function uses a non-reentrant model
 17544 ;;
 17545                           
 17546                           
 17547                           ;psect for function ___fltol
 17548  1434                     ___fltol:	
 17549                           
 17550                           ;incstack = 0
 17551                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 17552  1434  1003               	clrc
 17553  1435  0140               	movlb	0	; select bank0
 17554  1436  0D64               	rlf	___fltol@f1+2,w
 17555  1437  0D65               	rlf	___fltol@f1+3,w
 17556  1438  00E6               	movwf	??___fltol
 17557  1439  0866               	movf	??___fltol,w
 17558  143A  00EC               	movwf	___fltol@exp1
 17559  143B  086C               	movf	___fltol@exp1,w
 17560  143C  1D03               	btfss	3,2
 17561  143D  2C47               	goto	l7202
 17562  143E                     l7198:	
 17563  143E  3000               	movlw	0
 17564  143F  00E5               	movwf	?___fltol+3
 17565  1440  3000               	movlw	0
 17566  1441  00E4               	movwf	?___fltol+2
 17567  1442  3000               	movlw	0
 17568  1443  00E3               	movwf	?___fltol+1
 17569  1444  3000               	movlw	0
 17570  1445  00E2               	movwf	?___fltol
 17571  1446  0008               	return
 17572  1447                     l7202:	
 17573  1447  0862               	movf	___fltol@f1,w
 17574  1448  00E6               	movwf	??___fltol
 17575  1449  0863               	movf	___fltol@f1+1,w
 17576  144A  00E7               	movwf	??___fltol+1
 17577  144B  0864               	movf	___fltol@f1+2,w
 17578  144C  00E8               	movwf	??___fltol+2
 17579  144D  0865               	movf	___fltol@f1+3,w
 17580  144E  00E9               	movwf	??___fltol+3
 17581  144F  301F               	movlw	31
 17582  1450                     u6305:	
 17583  1450  36E9               	lsrf	??___fltol+3,f
 17584  1451  0CE8               	rrf	??___fltol+2,f
 17585  1452  0CE7               	rrf	??___fltol+1,f
 17586  1453  0CE6               	rrf	??___fltol,f
 17587  1454  0B89               	decfsz	9,f
 17588  1455  2C50               	goto	u6305
 17589  1456  0866               	movf	??___fltol,w
 17590  1457  00EA               	movwf	??___fltol+4
 17591  1458  086A               	movf	??___fltol+4,w
 17592  1459  00EB               	movwf	___fltol@sign1
 17593  145A  17E4               	bsf	___fltol@f1+2,7
 17594  145B  30FF               	movlw	255
 17595  145C  05E2               	andwf	___fltol@f1,f
 17596  145D  30FF               	movlw	255
 17597  145E  05E3               	andwf	___fltol@f1+1,f
 17598  145F  30FF               	movlw	255
 17599  1460  05E4               	andwf	___fltol@f1+2,f
 17600  1461  3000               	movlw	0
 17601  1462  05E5               	andwf	___fltol@f1+3,f
 17602  1463  3096               	movlw	150
 17603  1464  02EC               	subwf	___fltol@exp1,f
 17604  1465  1FEC               	btfss	___fltol@exp1,7
 17605  1466  2C7A               	goto	l7220
 17606  1467  086C               	movf	___fltol@exp1,w
 17607  1468  3A80               	xorlw	128
 17608  1469  3E97               	addlw	151
 17609  146A  1C03               	btfss	3,0
 17610  146B  2C3E               	goto	l7198
 17611  146C                     l7218:	
 17612  146C  3001               	movlw	1
 17613  146D                     u6335:	
 17614  146D  36E5               	lsrf	___fltol@f1+3,f
 17615  146E  0CE4               	rrf	___fltol@f1+2,f
 17616  146F  0CE3               	rrf	___fltol@f1+1,f
 17617  1470  0CE2               	rrf	___fltol@f1,f
 17618  1471  0B89               	decfsz	9,f
 17619  1472  2C6D               	goto	u6335
 17620  1473  3001               	movlw	1
 17621  1474  00E6               	movwf	??___fltol
 17622  1475  0866               	movf	??___fltol,w
 17623  1476  07EC               	addwf	___fltol@exp1,f
 17624  1477  1903               	btfsc	3,2
 17625  1478  2C8B               	goto	l7228
 17626  1479  2C6C               	goto	l7218
 17627  147A                     l7220:	
 17628  147A  3020               	movlw	32
 17629  147B  026C               	subwf	___fltol@exp1,w
 17630  147C  1803               	btfsc	3,0
 17631  147D  2C3E               	goto	l7198
 17632  147E                     l1902:	
 17633  147E  086C               	movf	___fltol@exp1,w
 17634  147F  1903               	btfsc	3,2
 17635  1480  2C8B               	goto	l7228
 17636  1481  3001               	movlw	1
 17637  1482                     u6365:	
 17638  1482  35E2               	lslf	___fltol@f1,f
 17639  1483  0DE3               	rlf	___fltol@f1+1,f
 17640  1484  0DE4               	rlf	___fltol@f1+2,f
 17641  1485  0DE5               	rlf	___fltol@f1+3,f
 17642  1486  0B89               	decfsz	9,f
 17643  1487  2C82               	goto	u6365
 17644  1488  3001               	movlw	1
 17645  1489  02EC               	subwf	___fltol@exp1,f
 17646  148A  2C7E               	goto	l1902
 17647  148B                     l7228:	
 17648  148B  086B               	movf	___fltol@sign1,w
 17649  148C  1903               	btfsc	3,2
 17650  148D  0008               	return
 17651  148E  09E2               	comf	___fltol@f1,f
 17652  148F  09E3               	comf	___fltol@f1+1,f
 17653  1490  09E4               	comf	___fltol@f1+2,f
 17654  1491  09E5               	comf	___fltol@f1+3,f
 17655  1492  0AE2               	incf	___fltol@f1,f
 17656  1493  1903               	skipnz
 17657  1494  0AE3               	incf	___fltol@f1+1,f
 17658  1495  1903               	skipnz
 17659  1496  0AE4               	incf	___fltol@f1+2,f
 17660  1497  1903               	skipnz
 17661  1498  0AE5               	incf	___fltol@f1+3,f
 17662  1499  0008               	return
 17663  149A                     __end_of___fltol:	
 17664                           
 17665                           	psect	text45
 17666  009A                     __ptext45:	
 17667 ;; *************** function ___flmul *****************
 17668 ;; Defined at:
 17669 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
 17670 ;; Parameters:    Size  Location     Type
 17671 ;;  b               4   40[BANK0 ] long 
 17672 ;;  a               4   44[BANK0 ] long 
 17673 ;; Auto vars:     Size  Location     Type
 17674 ;;  prod            4   60[BANK0 ] struct .
 17675 ;;  grs             4   55[BANK0 ] unsigned long 
 17676 ;;  temp            2   64[BANK0 ] struct .
 17677 ;;  bexp            1   59[BANK0 ] unsigned char 
 17678 ;;  aexp            1   54[BANK0 ] unsigned char 
 17679 ;;  sign            1   53[BANK0 ] unsigned char 
 17680 ;; Return value:  Size  Location     Type
 17681 ;;                  4   40[BANK0 ] unsigned char 
 17682 ;; Registers used:
 17683 ;;		wreg, status,2, status,0, pclath, cstack
 17684 ;; Tracked objects:
 17685 ;;		On entry : 0/0
 17686 ;;		On exit  : 0/0
 17687 ;;		Unchanged: 0/0
 17688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17689 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17690 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17691 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17692 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17693 ;;Total ram usage:       26 bytes
 17694 ;; Hardware stack levels used:    1
 17695 ;; Hardware stack levels required when called:    5
 17696 ;; This function calls:
 17697 ;;		__Umul8_16
 17698 ;; This function is called by:
 17699 ;;		_LED_setColor
 17700 ;;		_beatBrightnessCalculation
 17701 ;; This function uses a non-reentrant model
 17702 ;;
 17703                           
 17704                           
 17705                           ;psect for function ___flmul
 17706  009A                     ___flmul:	
 17707                           
 17708                           ;incstack = 0
 17709                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 17710  009A  0140               	movlb	0	; select bank0
 17711  009B  084B               	movf	___flmul@b+3,w
 17712  009C  3980               	andlw	128
 17713  009D  00D0               	movwf	??___flmul
 17714  009E  0850               	movf	??___flmul,w
 17715  009F  00D5               	movwf	___flmul@sign
 17716  00A0  354B               	lslf	___flmul@b+3,w
 17717  00A1  00D0               	movwf	??___flmul
 17718  00A2  0850               	movf	??___flmul,w
 17719  00A3  00DB               	movwf	___flmul@bexp
 17720  00A4  1BCA               	btfsc	___flmul@b+2,7
 17721  00A5  145B               	bsf	___flmul@bexp,0
 17722  00A6  085B               	movf	___flmul@bexp,w
 17723  00A7  1903               	btfsc	3,2
 17724  00A8  28B6               	goto	l7388
 17725  00A9  0A5B               	incf	___flmul@bexp,w
 17726  00AA  1D03               	btfss	3,2
 17727  00AB  28B4               	goto	l7386
 17728  00AC  3000               	movlw	0
 17729  00AD  00CB               	movwf	___flmul@b+3
 17730  00AE  3000               	movlw	0
 17731  00AF  00CA               	movwf	___flmul@b+2
 17732  00B0  3000               	movlw	0
 17733  00B1  00C9               	movwf	___flmul@b+1
 17734  00B2  3000               	movlw	0
 17735  00B3  00C8               	movwf	___flmul@b
 17736  00B4                     l7386:	
 17737  00B4  17CA               	bsf	___flmul@b+2,7
 17738  00B5  28BE               	goto	l7390
 17739  00B6                     l7388:	
 17740  00B6  3000               	movlw	0
 17741  00B7  00CB               	movwf	___flmul@b+3
 17742  00B8  3000               	movlw	0
 17743  00B9  00CA               	movwf	___flmul@b+2
 17744  00BA  3000               	movlw	0
 17745  00BB  00C9               	movwf	___flmul@b+1
 17746  00BC  3000               	movlw	0
 17747  00BD  00C8               	movwf	___flmul@b
 17748  00BE                     l7390:	
 17749  00BE  084F               	movf	___flmul@a+3,w
 17750  00BF  3980               	andlw	128
 17751  00C0  00D0               	movwf	??___flmul
 17752  00C1  0850               	movf	??___flmul,w
 17753  00C2  06D5               	xorwf	___flmul@sign,f
 17754  00C3  354F               	lslf	___flmul@a+3,w
 17755  00C4  00D0               	movwf	??___flmul
 17756  00C5  0850               	movf	??___flmul,w
 17757  00C6  00D6               	movwf	___flmul@aexp
 17758  00C7  1BCE               	btfsc	___flmul@a+2,7
 17759  00C8  1456               	bsf	___flmul@aexp,0
 17760  00C9  0856               	movf	___flmul@aexp,w
 17761  00CA  1903               	btfsc	3,2
 17762  00CB  28D9               	goto	l7406
 17763  00CC  0A56               	incf	___flmul@aexp,w
 17764  00CD  1D03               	btfss	3,2
 17765  00CE  28D7               	goto	l7404
 17766  00CF  3000               	movlw	0
 17767  00D0  00CF               	movwf	___flmul@a+3
 17768  00D1  3000               	movlw	0
 17769  00D2  00CE               	movwf	___flmul@a+2
 17770  00D3  3000               	movlw	0
 17771  00D4  00CD               	movwf	___flmul@a+1
 17772  00D5  3000               	movlw	0
 17773  00D6  00CC               	movwf	___flmul@a
 17774  00D7                     l7404:	
 17775  00D7  17CE               	bsf	___flmul@a+2,7
 17776  00D8  28E1               	goto	l7408
 17777  00D9                     l7406:	
 17778  00D9  3000               	movlw	0
 17779  00DA  00CF               	movwf	___flmul@a+3
 17780  00DB  3000               	movlw	0
 17781  00DC  00CE               	movwf	___flmul@a+2
 17782  00DD  3000               	movlw	0
 17783  00DE  00CD               	movwf	___flmul@a+1
 17784  00DF  3000               	movlw	0
 17785  00E0  00CC               	movwf	___flmul@a
 17786  00E1                     l7408:	
 17787  00E1  0856               	movf	___flmul@aexp,w
 17788  00E2  1D03               	btfss	3,2
 17789  00E3  085B               	movf	___flmul@bexp,w
 17790  00E4  1D03               	btfss	3,2
 17791  00E5  28EF               	goto	l7416
 17792  00E6  3000               	movlw	0
 17793  00E7  00CB               	movwf	?___flmul+3
 17794  00E8  3000               	movlw	0
 17795  00E9  00CA               	movwf	?___flmul+2
 17796  00EA  3000               	movlw	0
 17797  00EB  00C9               	movwf	?___flmul+1
 17798  00EC  3000               	movlw	0
 17799  00ED  00C8               	movwf	?___flmul
 17800  00EE  0008               	return
 17801  00EF                     l7416:	
 17802  00EF  0848               	movf	___flmul@b,w
 17803  00F0  00D0               	movwf	??___flmul
 17804  00F1  0850               	movf	??___flmul,w
 17805  00F2  00A0               	movwf	__Umul8_16@multiplicand
 17806  00F3  084E               	movf	___flmul@a+2,w
 17807  00F4  319E  2662  3180   	fcall	__Umul8_16
 17808  00F7  0140               	movlb	0	; select bank0
 17809  00F8  0821               	movf	?__Umul8_16+1,w
 17810  00F9  00E1               	movwf	___flmul@temp+1
 17811  00FA  0820               	movf	?__Umul8_16,w
 17812  00FB  00E0               	movwf	___flmul@temp
 17813  00FC  0860               	movf	___flmul@temp,w
 17814  00FD  00D0               	movwf	??___flmul
 17815  00FE  01D1               	clrf	??___flmul+1
 17816  00FF  01D2               	clrf	??___flmul+2
 17817  0100  01D3               	clrf	??___flmul+3
 17818  0101  0853               	movf	??___flmul+3,w
 17819  0102  00DA               	movwf	___flmul@grs+3
 17820  0103  0852               	movf	??___flmul+2,w
 17821  0104  00D9               	movwf	___flmul@grs+2
 17822  0105  0851               	movf	??___flmul+1,w
 17823  0106  00D8               	movwf	___flmul@grs+1
 17824  0107  0850               	movf	??___flmul,w
 17825  0108  00D7               	movwf	___flmul@grs
 17826  0109  0861               	movf	___flmul@temp+1,w
 17827  010A  00D0               	movwf	??___flmul
 17828  010B  01D1               	clrf	??___flmul+1
 17829  010C  01D2               	clrf	??___flmul+2
 17830  010D  01D3               	clrf	??___flmul+3
 17831  010E  0853               	movf	??___flmul+3,w
 17832  010F  00DF               	movwf	___flmul@prod+3
 17833  0110  0852               	movf	??___flmul+2,w
 17834  0111  00DE               	movwf	___flmul@prod+2
 17835  0112  0851               	movf	??___flmul+1,w
 17836  0113  00DD               	movwf	___flmul@prod+1
 17837  0114  0850               	movf	??___flmul,w
 17838  0115  00DC               	movwf	___flmul@prod
 17839  0116  0849               	movf	___flmul@b+1,w
 17840  0117  00D0               	movwf	??___flmul
 17841  0118  0850               	movf	??___flmul,w
 17842  0119  00A0               	movwf	__Umul8_16@multiplicand
 17843  011A  084D               	movf	___flmul@a+1,w
 17844  011B  319E  2662  3180   	fcall	__Umul8_16
 17845  011E  0140               	movlb	0	; select bank0
 17846  011F  0821               	movf	?__Umul8_16+1,w
 17847  0120  00E1               	movwf	___flmul@temp+1
 17848  0121  0820               	movf	?__Umul8_16,w
 17849  0122  00E0               	movwf	___flmul@temp
 17850  0123  0860               	movf	___flmul@temp,w
 17851  0124  00D0               	movwf	??___flmul
 17852  0125  01D1               	clrf	??___flmul+1
 17853  0126  01D2               	clrf	??___flmul+2
 17854  0127  01D3               	clrf	??___flmul+3
 17855  0128  0850               	movf	??___flmul,w
 17856  0129  07D7               	addwf	___flmul@grs,f
 17857  012A  0851               	movf	??___flmul+1,w
 17858  012B  3DD8               	addwfc	___flmul@grs+1,f
 17859  012C  0852               	movf	??___flmul+2,w
 17860  012D  3DD9               	addwfc	___flmul@grs+2,f
 17861  012E  0853               	movf	??___flmul+3,w
 17862  012F  3DDA               	addwfc	___flmul@grs+3,f
 17863  0130  0861               	movf	___flmul@temp+1,w
 17864  0131  00D0               	movwf	??___flmul
 17865  0132  01D1               	clrf	??___flmul+1
 17866  0133  01D2               	clrf	??___flmul+2
 17867  0134  01D3               	clrf	??___flmul+3
 17868  0135  0850               	movf	??___flmul,w
 17869  0136  07DC               	addwf	___flmul@prod,f
 17870  0137  0851               	movf	??___flmul+1,w
 17871  0138  3DDD               	addwfc	___flmul@prod+1,f
 17872  0139  0852               	movf	??___flmul+2,w
 17873  013A  3DDE               	addwfc	___flmul@prod+2,f
 17874  013B  0853               	movf	??___flmul+3,w
 17875  013C  3DDF               	addwfc	___flmul@prod+3,f
 17876  013D  084A               	movf	___flmul@b+2,w
 17877  013E  00D0               	movwf	??___flmul
 17878  013F  0850               	movf	??___flmul,w
 17879  0140  00A0               	movwf	__Umul8_16@multiplicand
 17880  0141  084C               	movf	___flmul@a,w
 17881  0142  319E  2662  3180   	fcall	__Umul8_16
 17882  0145  0140               	movlb	0	; select bank0
 17883  0146  0821               	movf	?__Umul8_16+1,w
 17884  0147  00E1               	movwf	___flmul@temp+1
 17885  0148  0820               	movf	?__Umul8_16,w
 17886  0149  00E0               	movwf	___flmul@temp
 17887  014A  0860               	movf	___flmul@temp,w
 17888  014B  00D0               	movwf	??___flmul
 17889  014C  01D1               	clrf	??___flmul+1
 17890  014D  01D2               	clrf	??___flmul+2
 17891  014E  01D3               	clrf	??___flmul+3
 17892  014F  0850               	movf	??___flmul,w
 17893  0150  07D7               	addwf	___flmul@grs,f
 17894  0151  0851               	movf	??___flmul+1,w
 17895  0152  3DD8               	addwfc	___flmul@grs+1,f
 17896  0153  0852               	movf	??___flmul+2,w
 17897  0154  3DD9               	addwfc	___flmul@grs+2,f
 17898  0155  0853               	movf	??___flmul+3,w
 17899  0156  3DDA               	addwfc	___flmul@grs+3,f
 17900  0157  0861               	movf	___flmul@temp+1,w
 17901  0158  00D0               	movwf	??___flmul
 17902  0159  01D1               	clrf	??___flmul+1
 17903  015A  01D2               	clrf	??___flmul+2
 17904  015B  01D3               	clrf	??___flmul+3
 17905  015C  0850               	movf	??___flmul,w
 17906  015D  07DC               	addwf	___flmul@prod,f
 17907  015E  0851               	movf	??___flmul+1,w
 17908  015F  3DDD               	addwfc	___flmul@prod+1,f
 17909  0160  0852               	movf	??___flmul+2,w
 17910  0161  3DDE               	addwfc	___flmul@prod+2,f
 17911  0162  0853               	movf	??___flmul+3,w
 17912  0163  3DDF               	addwfc	___flmul@prod+3,f
 17913  0164  3008               	movlw	8
 17914  0165                     u6765:	
 17915  0165  35D7               	lslf	___flmul@grs,f
 17916  0166  0DD8               	rlf	___flmul@grs+1,f
 17917  0167  0DD9               	rlf	___flmul@grs+2,f
 17918  0168  0DDA               	rlf	___flmul@grs+3,f
 17919  0169  0B89               	decfsz	9,f
 17920  016A  2965               	goto	u6765
 17921  016B  0849               	movf	___flmul@b+1,w
 17922  016C  00D0               	movwf	??___flmul
 17923  016D  0850               	movf	??___flmul,w
 17924  016E  00A0               	movwf	__Umul8_16@multiplicand
 17925  016F  084C               	movf	___flmul@a,w
 17926  0170  319E  2662  3180   	fcall	__Umul8_16
 17927  0173  0140               	movlb	0	; select bank0
 17928  0174  0821               	movf	?__Umul8_16+1,w
 17929  0175  00E1               	movwf	___flmul@temp+1
 17930  0176  0820               	movf	?__Umul8_16,w
 17931  0177  00E0               	movwf	___flmul@temp
 17932  0178  0860               	movf	___flmul@temp,w
 17933  0179  07D7               	addwf	___flmul@grs,f
 17934  017A  0861               	movf	___flmul@temp+1,w
 17935  017B  3DD8               	addwfc	___flmul@grs+1,f
 17936  017C  3000               	movlw	0
 17937  017D  3DD9               	addwfc	___flmul@grs+2,f
 17938  017E  3DDA               	addwfc	___flmul@grs+3,f
 17939  017F  0848               	movf	___flmul@b,w
 17940  0180  00D0               	movwf	??___flmul
 17941  0181  0850               	movf	??___flmul,w
 17942  0182  00A0               	movwf	__Umul8_16@multiplicand
 17943  0183  084D               	movf	___flmul@a+1,w
 17944  0184  319E  2662  3180   	fcall	__Umul8_16
 17945  0187  0140               	movlb	0	; select bank0
 17946  0188  0821               	movf	?__Umul8_16+1,w
 17947  0189  00E1               	movwf	___flmul@temp+1
 17948  018A  0820               	movf	?__Umul8_16,w
 17949  018B  00E0               	movwf	___flmul@temp
 17950  018C  0860               	movf	___flmul@temp,w
 17951  018D  07D7               	addwf	___flmul@grs,f
 17952  018E  0861               	movf	___flmul@temp+1,w
 17953  018F  3DD8               	addwfc	___flmul@grs+1,f
 17954  0190  3000               	movlw	0
 17955  0191  3DD9               	addwfc	___flmul@grs+2,f
 17956  0192  3DDA               	addwfc	___flmul@grs+3,f
 17957  0193  3008               	movlw	8
 17958  0194                     u6775:	
 17959  0194  35D7               	lslf	___flmul@grs,f
 17960  0195  0DD8               	rlf	___flmul@grs+1,f
 17961  0196  0DD9               	rlf	___flmul@grs+2,f
 17962  0197  0DDA               	rlf	___flmul@grs+3,f
 17963  0198  0B89               	decfsz	9,f
 17964  0199  2994               	goto	u6775
 17965  019A  0848               	movf	___flmul@b,w
 17966  019B  00D0               	movwf	??___flmul
 17967  019C  0850               	movf	??___flmul,w
 17968  019D  00A0               	movwf	__Umul8_16@multiplicand
 17969  019E  084C               	movf	___flmul@a,w
 17970  019F  319E  2662  3180   	fcall	__Umul8_16
 17971  01A2  0140               	movlb	0	; select bank0
 17972  01A3  0821               	movf	?__Umul8_16+1,w
 17973  01A4  00E1               	movwf	___flmul@temp+1
 17974  01A5  0820               	movf	?__Umul8_16,w
 17975  01A6  00E0               	movwf	___flmul@temp
 17976  01A7  0860               	movf	___flmul@temp,w
 17977  01A8  07D7               	addwf	___flmul@grs,f
 17978  01A9  0861               	movf	___flmul@temp+1,w
 17979  01AA  3DD8               	addwfc	___flmul@grs+1,f
 17980  01AB  3000               	movlw	0
 17981  01AC  3DD9               	addwfc	___flmul@grs+2,f
 17982  01AD  3DDA               	addwfc	___flmul@grs+3,f
 17983  01AE  0849               	movf	___flmul@b+1,w
 17984  01AF  00D0               	movwf	??___flmul
 17985  01B0  0850               	movf	??___flmul,w
 17986  01B1  00A0               	movwf	__Umul8_16@multiplicand
 17987  01B2  084E               	movf	___flmul@a+2,w
 17988  01B3  319E  2662  3180   	fcall	__Umul8_16
 17989  01B6  0140               	movlb	0	; select bank0
 17990  01B7  0821               	movf	?__Umul8_16+1,w
 17991  01B8  00E1               	movwf	___flmul@temp+1
 17992  01B9  0820               	movf	?__Umul8_16,w
 17993  01BA  00E0               	movwf	___flmul@temp
 17994  01BB  0860               	movf	___flmul@temp,w
 17995  01BC  07DC               	addwf	___flmul@prod,f
 17996  01BD  0861               	movf	___flmul@temp+1,w
 17997  01BE  3DDD               	addwfc	___flmul@prod+1,f
 17998  01BF  3000               	movlw	0
 17999  01C0  3DDE               	addwfc	___flmul@prod+2,f
 18000  01C1  3DDF               	addwfc	___flmul@prod+3,f
 18001  01C2  084A               	movf	___flmul@b+2,w
 18002  01C3  00D0               	movwf	??___flmul
 18003  01C4  0850               	movf	??___flmul,w
 18004  01C5  00A0               	movwf	__Umul8_16@multiplicand
 18005  01C6  084D               	movf	___flmul@a+1,w
 18006  01C7  319E  2662  3180   	fcall	__Umul8_16
 18007  01CA  0140               	movlb	0	; select bank0
 18008  01CB  0821               	movf	?__Umul8_16+1,w
 18009  01CC  00E1               	movwf	___flmul@temp+1
 18010  01CD  0820               	movf	?__Umul8_16,w
 18011  01CE  00E0               	movwf	___flmul@temp
 18012  01CF  0860               	movf	___flmul@temp,w
 18013  01D0  07DC               	addwf	___flmul@prod,f
 18014  01D1  0861               	movf	___flmul@temp+1,w
 18015  01D2  3DDD               	addwfc	___flmul@prod+1,f
 18016  01D3  3000               	movlw	0
 18017  01D4  3DDE               	addwfc	___flmul@prod+2,f
 18018  01D5  3DDF               	addwfc	___flmul@prod+3,f
 18019  01D6  084A               	movf	___flmul@b+2,w
 18020  01D7  00D0               	movwf	??___flmul
 18021  01D8  0850               	movf	??___flmul,w
 18022  01D9  00A0               	movwf	__Umul8_16@multiplicand
 18023  01DA  084E               	movf	___flmul@a+2,w
 18024  01DB  319E  2662  3180   	fcall	__Umul8_16
 18025  01DE  0140               	movlb	0	; select bank0
 18026  01DF  0821               	movf	?__Umul8_16+1,w
 18027  01E0  00E1               	movwf	___flmul@temp+1
 18028  01E1  0820               	movf	?__Umul8_16,w
 18029  01E2  00E0               	movwf	___flmul@temp
 18030  01E3  0860               	movf	___flmul@temp,w
 18031  01E4  00D0               	movwf	??___flmul
 18032  01E5  0861               	movf	___flmul@temp+1,w
 18033  01E6  00D1               	movwf	??___flmul+1
 18034  01E7  01D2               	clrf	??___flmul+2
 18035  01E8  01D3               	clrf	??___flmul+3
 18036  01E9  3008               	movlw	8
 18037  01EA                     u6785:	
 18038  01EA  35D0               	lslf	??___flmul,f
 18039  01EB  0DD1               	rlf	??___flmul+1,f
 18040  01EC  0DD2               	rlf	??___flmul+2,f
 18041  01ED  0DD3               	rlf	??___flmul+3,f
 18042  01EE  0B89               	decfsz	9,f
 18043  01EF  29EA               	goto	u6785
 18044  01F0  0850               	movf	??___flmul,w
 18045  01F1  07DC               	addwf	___flmul@prod,f
 18046  01F2  0851               	movf	??___flmul+1,w
 18047  01F3  3DDD               	addwfc	___flmul@prod+1,f
 18048  01F4  0852               	movf	??___flmul+2,w
 18049  01F5  3DDE               	addwfc	___flmul@prod+2,f
 18050  01F6  0853               	movf	??___flmul+3,w
 18051  01F7  3DDF               	addwfc	___flmul@prod+3,f
 18052  01F8  0857               	movf	___flmul@grs,w
 18053  01F9  00D0               	movwf	??___flmul
 18054  01FA  0858               	movf	___flmul@grs+1,w
 18055  01FB  00D1               	movwf	??___flmul+1
 18056  01FC  0859               	movf	___flmul@grs+2,w
 18057  01FD  00D2               	movwf	??___flmul+2
 18058  01FE  085A               	movf	___flmul@grs+3,w
 18059  01FF  00D3               	movwf	??___flmul+3
 18060  0200  3018               	movlw	24
 18061  0201                     u6795:	
 18062  0201  36D3               	lsrf	??___flmul+3,f
 18063  0202  0CD2               	rrf	??___flmul+2,f
 18064  0203  0CD1               	rrf	??___flmul+1,f
 18065  0204  0CD0               	rrf	??___flmul,f
 18066  0205  0B89               	decfsz	9,f
 18067  0206  2A01               	goto	u6795
 18068  0207  0850               	movf	??___flmul,w
 18069  0208  07DC               	addwf	___flmul@prod,f
 18070  0209  0851               	movf	??___flmul+1,w
 18071  020A  3DDD               	addwfc	___flmul@prod+1,f
 18072  020B  0852               	movf	??___flmul+2,w
 18073  020C  3DDE               	addwfc	___flmul@prod+2,f
 18074  020D  0853               	movf	??___flmul+3,w
 18075  020E  3DDF               	addwfc	___flmul@prod+3,f
 18076  020F  3008               	movlw	8
 18077  0210                     u6805:	
 18078  0210  35D7               	lslf	___flmul@grs,f
 18079  0211  0DD8               	rlf	___flmul@grs+1,f
 18080  0212  0DD9               	rlf	___flmul@grs+2,f
 18081  0213  0DDA               	rlf	___flmul@grs+3,f
 18082  0214  0B89               	decfsz	9,f
 18083  0215  2A10               	goto	u6805
 18084  0216  085B               	movf	___flmul@bexp,w
 18085  0217  0756               	addwf	___flmul@aexp,w
 18086  0218  00D0               	movwf	??___flmul
 18087  0219  01D1               	clrf	??___flmul+1
 18088  021A  0DD1               	rlf	??___flmul+1,f
 18089  021B  0850               	movf	??___flmul,w
 18090  021C  3E82               	addlw	130
 18091  021D  00E0               	movwf	___flmul@temp
 18092  021E  30FF               	movlw	255
 18093  021F  3D51               	addwfc	??___flmul+1,w
 18094  0220  00E1               	movwf	___flmul@temp+1
 18095  0221                     l7468:	
 18096  0221  1BDE               	btfsc	___flmul@prod+2,7
 18097  0222  2A38               	goto	l7470
 18098  0223  3001               	movlw	1
 18099  0224                     u6815:	
 18100  0224  35DC               	lslf	___flmul@prod,f
 18101  0225  0DDD               	rlf	___flmul@prod+1,f
 18102  0226  0DDE               	rlf	___flmul@prod+2,f
 18103  0227  0DDF               	rlf	___flmul@prod+3,f
 18104  0228  0B89               	decfsz	9,f
 18105  0229  2A24               	goto	u6815
 18106  022A  1BDA               	btfsc	___flmul@grs+3,7
 18107  022B  145C               	bsf	___flmul@prod,0
 18108  022C  3001               	movlw	1
 18109  022D                     u6835:	
 18110  022D  35D7               	lslf	___flmul@grs,f
 18111  022E  0DD8               	rlf	___flmul@grs+1,f
 18112  022F  0DD9               	rlf	___flmul@grs+2,f
 18113  0230  0DDA               	rlf	___flmul@grs+3,f
 18114  0231  0B89               	decfsz	9,f
 18115  0232  2A2D               	goto	u6835
 18116  0233  30FF               	movlw	255
 18117  0234  07E0               	addwf	___flmul@temp,f
 18118  0235  30FF               	movlw	255
 18119  0236  3DE1               	addwfc	___flmul@temp+1,f
 18120  0237  2A21               	goto	l7468
 18121  0238                     l7470:	
 18122  0238  01D6               	clrf	___flmul@aexp
 18123  0239  1FDA               	btfss	___flmul@grs+3,7
 18124  023A  2A51               	goto	l7480
 18125  023B  30FF               	movlw	255
 18126  023C  0557               	andwf	___flmul@grs,w
 18127  023D  00D0               	movwf	??___flmul
 18128  023E  30FF               	movlw	255
 18129  023F  0558               	andwf	___flmul@grs+1,w
 18130  0240  00D1               	movwf	??___flmul+1
 18131  0241  30FF               	movlw	255
 18132  0242  0559               	andwf	___flmul@grs+2,w
 18133  0243  00D2               	movwf	??___flmul+2
 18134  0244  307F               	movlw	127
 18135  0245  055A               	andwf	___flmul@grs+3,w
 18136  0246  00D3               	movwf	??___flmul+3
 18137  0247  0853               	movf	??___flmul+3,w
 18138  0248  0452               	iorwf	??___flmul+2,w
 18139  0249  0451               	iorwf	??___flmul+1,w
 18140  024A  0450               	iorwf	??___flmul,w
 18141  024B  1903               	skipnz
 18142  024C  185C               	btfsc	___flmul@prod,0
 18143  024D  2A4F               	goto	l7476
 18144  024E  2A51               	goto	l7480
 18145  024F                     l7476:	
 18146  024F  01D6               	clrf	___flmul@aexp
 18147  0250  0AD6               	incf	___flmul@aexp,f
 18148  0251                     l7480:	
 18149  0251  0856               	movf	___flmul@aexp,w
 18150  0252  1903               	btfsc	3,2
 18151  0253  2A7A               	goto	l7490
 18152  0254  3001               	movlw	1
 18153  0255  07DC               	addwf	___flmul@prod,f
 18154  0256  3000               	movlw	0
 18155  0257  3DDD               	addwfc	___flmul@prod+1,f
 18156  0258  3000               	movlw	0
 18157  0259  3DDE               	addwfc	___flmul@prod+2,f
 18158  025A  3000               	movlw	0
 18159  025B  3DDF               	addwfc	___flmul@prod+3,f
 18160  025C  1C5F               	btfss	___flmul@prod+3,0
 18161  025D  2A7A               	goto	l7490
 18162  025E  085C               	movf	___flmul@prod,w
 18163  025F  00D0               	movwf	??___flmul
 18164  0260  085D               	movf	___flmul@prod+1,w
 18165  0261  00D1               	movwf	??___flmul+1
 18166  0262  085E               	movf	___flmul@prod+2,w
 18167  0263  00D2               	movwf	??___flmul+2
 18168  0264  085F               	movf	___flmul@prod+3,w
 18169  0265  00D3               	movwf	??___flmul+3
 18170  0266  3001               	movlw	1
 18171  0267  00D4               	movwf	??___flmul+4
 18172  0268                     u6905:	
 18173  0268  37D3               	asrf	??___flmul+3,f
 18174  0269  0CD2               	rrf	??___flmul+2,f
 18175  026A  0CD1               	rrf	??___flmul+1,f
 18176  026B  0CD0               	rrf	??___flmul,f
 18177  026C  0BD4               	decfsz	??___flmul+4,f
 18178  026D  2A68               	goto	u6905
 18179  026E  0853               	movf	??___flmul+3,w
 18180  026F  00DF               	movwf	___flmul@prod+3
 18181  0270  0852               	movf	??___flmul+2,w
 18182  0271  00DE               	movwf	___flmul@prod+2
 18183  0272  0851               	movf	??___flmul+1,w
 18184  0273  00DD               	movwf	___flmul@prod+1
 18185  0274  0850               	movf	??___flmul,w
 18186  0275  00DC               	movwf	___flmul@prod
 18187  0276  3001               	movlw	1
 18188  0277  07E0               	addwf	___flmul@temp,f
 18189  0278  3000               	movlw	0
 18190  0279  3DE1               	addwfc	___flmul@temp+1,f
 18191  027A                     l7490:	
 18192  027A  0861               	movf	___flmul@temp+1,w
 18193  027B  3A80               	xorlw	128
 18194  027C  00D0               	movwf	??___flmul
 18195  027D  3080               	movlw	128
 18196  027E  0250               	subwf	??___flmul,w
 18197  027F  1D03               	skipz
 18198  0280  2A83               	goto	u6915
 18199  0281  30FF               	movlw	255
 18200  0282  0260               	subwf	___flmul@temp,w
 18201  0283                     u6915:	
 18202  0283  1C03               	skipc
 18203  0284  2A8F               	goto	l7494
 18204  0285  307F               	movlw	127
 18205  0286  0140               	movlb	0	; select bank0
 18206  0287  00DF               	movwf	___flmul@prod+3
 18207  0288  3080               	movlw	128
 18208  0289  00DE               	movwf	___flmul@prod+2
 18209  028A  3000               	movlw	0
 18210  028B  00DD               	movwf	___flmul@prod+1
 18211  028C  3000               	movlw	0
 18212  028D  00DC               	movwf	___flmul@prod
 18213  028E  2AB9               	goto	l2110
 18214  028F                     l7494:	
 18215  028F  0140               	movlb	0	; select bank0
 18216  0290  0861               	movf	___flmul@temp+1,w
 18217  0291  3A80               	xorlw	128
 18218  0292  00D0               	movwf	??___flmul
 18219  0293  3080               	movlw	128
 18220  0294  0250               	subwf	??___flmul,w
 18221  0295  1D03               	skipz
 18222  0296  2A99               	goto	u6925
 18223  0297  3001               	movlw	1
 18224  0298  0260               	subwf	___flmul@temp,w
 18225  0299                     u6925:	
 18226  0299  1803               	skipnc
 18227  029A  2AA6               	goto	l7500
 18228  029B  3000               	movlw	0
 18229  029C  0140               	movlb	0	; select bank0
 18230  029D  00DF               	movwf	___flmul@prod+3
 18231  029E  3000               	movlw	0
 18232  029F  00DE               	movwf	___flmul@prod+2
 18233  02A0  3000               	movlw	0
 18234  02A1  00DD               	movwf	___flmul@prod+1
 18235  02A2  3000               	movlw	0
 18236  02A3  00DC               	movwf	___flmul@prod
 18237  02A4  01D5               	clrf	___flmul@sign
 18238  02A5  2AB9               	goto	l2110
 18239  02A6                     l7500:	
 18240  02A6  0140               	movlb	0	; select bank0
 18241  02A7  0860               	movf	___flmul@temp,w
 18242  02A8  00D0               	movwf	??___flmul
 18243  02A9  0850               	movf	??___flmul,w
 18244  02AA  00DB               	movwf	___flmul@bexp
 18245  02AB  30FF               	movlw	255
 18246  02AC  05DC               	andwf	___flmul@prod,f
 18247  02AD  30FF               	movlw	255
 18248  02AE  05DD               	andwf	___flmul@prod+1,f
 18249  02AF  307F               	movlw	127
 18250  02B0  05DE               	andwf	___flmul@prod+2,f
 18251  02B1  3000               	movlw	0
 18252  02B2  05DF               	andwf	___flmul@prod+3,f
 18253  02B3  185B               	btfsc	___flmul@bexp,0
 18254  02B4  17DE               	bsf	___flmul@prod+2,7
 18255  02B5  365B               	lsrf	___flmul@bexp,w
 18256  02B6  00D0               	movwf	??___flmul
 18257  02B7  0850               	movf	??___flmul,w
 18258  02B8  00DF               	movwf	___flmul@prod+3
 18259  02B9                     l2110:	
 18260  02B9  0855               	movf	___flmul@sign,w
 18261  02BA  00D0               	movwf	??___flmul
 18262  02BB  0850               	movf	??___flmul,w
 18263  02BC  04DF               	iorwf	___flmul@prod+3,f
 18264  02BD  085F               	movf	___flmul@prod+3,w
 18265  02BE  00CB               	movwf	?___flmul+3
 18266  02BF  085E               	movf	___flmul@prod+2,w
 18267  02C0  00CA               	movwf	?___flmul+2
 18268  02C1  085D               	movf	___flmul@prod+1,w
 18269  02C2  00C9               	movwf	?___flmul+1
 18270  02C3  085C               	movf	___flmul@prod,w
 18271  02C4  00C8               	movwf	?___flmul
 18272  02C5  0008               	return
 18273  02C6                     __end_of___flmul:	
 18274                           
 18275                           	psect	text46
 18276  1E62                     __ptext46:	
 18277 ;; *************** function __Umul8_16 *****************
 18278 ;; Defined at:
 18279 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul8_16.c"
 18280 ;; Parameters:    Size  Location     Type
 18281 ;;  multiplier      1    wreg     unsigned char 
 18282 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 18283 ;; Auto vars:     Size  Location     Type
 18284 ;;  multiplier      1    8[BANK0 ] unsigned char 
 18285 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 18286 ;;  product         2    4[BANK0 ] unsigned int 
 18287 ;; Return value:  Size  Location     Type
 18288 ;;                  2    0[BANK0 ] unsigned int 
 18289 ;; Registers used:
 18290 ;;		wreg, status,2, status,0
 18291 ;; Tracked objects:
 18292 ;;		On entry : 0/0
 18293 ;;		On exit  : 0/0
 18294 ;;		Unchanged: 0/0
 18295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18296 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18297 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18298 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18299 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18300 ;;Total ram usage:        9 bytes
 18301 ;; Hardware stack levels used:    1
 18302 ;; Hardware stack levels required when called:    4
 18303 ;; This function calls:
 18304 ;;		Nothing
 18305 ;; This function is called by:
 18306 ;;		___flmul
 18307 ;; This function uses a non-reentrant model
 18308 ;;
 18309                           
 18310                           
 18311                           ;psect for function __Umul8_16
 18312  1E62                     __Umul8_16:	
 18313                           
 18314                           ;incstack = 0
 18315                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 18316                           ;__Umul8_16@multiplier stored from wreg
 18317  1E62  0140               	movlb	0	; select bank0
 18318  1E63  00A8               	movwf	__Umul8_16@multiplier
 18319  1E64  01A4               	clrf	__Umul8_16@product
 18320  1E65  01A5               	clrf	__Umul8_16@product+1
 18321  1E66  0820               	movf	__Umul8_16@multiplicand,w
 18322  1E67  00A2               	movwf	??__Umul8_16
 18323  1E68  01A3               	clrf	??__Umul8_16+1
 18324  1E69  0822               	movf	??__Umul8_16,w
 18325  1E6A  00A6               	movwf	__Umul8_16@word_mpld
 18326  1E6B  0823               	movf	??__Umul8_16+1,w
 18327  1E6C  00A7               	movwf	__Umul8_16@word_mpld+1
 18328  1E6D                     l7144:	
 18329  1E6D  1C28               	btfss	__Umul8_16@multiplier,0
 18330  1E6E  2E73               	goto	l2188
 18331  1E6F  0826               	movf	__Umul8_16@word_mpld,w
 18332  1E70  07A4               	addwf	__Umul8_16@product,f
 18333  1E71  0827               	movf	__Umul8_16@word_mpld+1,w
 18334  1E72  3DA5               	addwfc	__Umul8_16@product+1,f
 18335  1E73                     l2188:	
 18336  1E73  3001               	movlw	1
 18337  1E74                     u6245:	
 18338  1E74  35A6               	lslf	__Umul8_16@word_mpld,f
 18339  1E75  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 18340  1E76  0B89               	decfsz	9,f
 18341  1E77  2E74               	goto	u6245
 18342  1E78  1003               	clrc
 18343  1E79  0CA8               	rrf	__Umul8_16@multiplier,f
 18344  1E7A  0828               	movf	__Umul8_16@multiplier,w
 18345  1E7B  1D03               	btfss	3,2
 18346  1E7C  2E6D               	goto	l7144
 18347  1E7D  0825               	movf	__Umul8_16@product+1,w
 18348  1E7E  00A1               	movwf	?__Umul8_16+1
 18349  1E7F  0824               	movf	__Umul8_16@product,w
 18350  1E80  00A0               	movwf	?__Umul8_16
 18351  1E81  0008               	return
 18352  1E82                     __end_of__Umul8_16:	
 18353                           
 18354                           	psect	text47
 18355  04CA                     __ptext47:	
 18356 ;; *************** function ___fldiv *****************
 18357 ;; Defined at:
 18358 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
 18359 ;; Parameters:    Size  Location     Type
 18360 ;;  a               4   14[BANK0 ] unsigned int 
 18361 ;;  b               4   18[BANK0 ] unsigned int 
 18362 ;; Auto vars:     Size  Location     Type
 18363 ;;  grs             4   34[BANK0 ] unsigned long 
 18364 ;;  rem             4   27[BANK0 ] unsigned long 
 18365 ;;  new_exp         2   32[BANK0 ] int 
 18366 ;;  aexp            1   39[BANK0 ] unsigned char 
 18367 ;;  bexp            1   38[BANK0 ] unsigned char 
 18368 ;;  sign            1   31[BANK0 ] unsigned char 
 18369 ;; Return value:  Size  Location     Type
 18370 ;;                  4   14[BANK0 ] unsigned char 
 18371 ;; Registers used:
 18372 ;;		wreg, status,2, status,0
 18373 ;; Tracked objects:
 18374 ;;		On entry : 0/0
 18375 ;;		On exit  : 0/0
 18376 ;;		Unchanged: 0/0
 18377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18378 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18379 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18380 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18381 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18382 ;;Total ram usage:       26 bytes
 18383 ;; Hardware stack levels used:    1
 18384 ;; Hardware stack levels required when called:    4
 18385 ;; This function calls:
 18386 ;;		Nothing
 18387 ;; This function is called by:
 18388 ;;		_LED_setColor
 18389 ;;		_beatBrightnessCalculation
 18390 ;; This function uses a non-reentrant model
 18391 ;;
 18392                           
 18393                           
 18394                           ;psect for function ___fldiv
 18395  04CA                     ___fldiv:	
 18396                           
 18397                           ;incstack = 0
 18398                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 18399  04CA  0140               	movlb	0	; select bank0
 18400  04CB  0835               	movf	___fldiv@b+3,w
 18401  04CC  3980               	andlw	128
 18402  04CD  00B6               	movwf	??___fldiv
 18403  04CE  0836               	movf	??___fldiv,w
 18404  04CF  00BF               	movwf	___fldiv@sign
 18405  04D0  3535               	lslf	___fldiv@b+3,w
 18406  04D1  00B6               	movwf	??___fldiv
 18407  04D2  0836               	movf	??___fldiv,w
 18408  04D3  00C6               	movwf	___fldiv@bexp
 18409  04D4  1BB4               	btfsc	___fldiv@b+2,7
 18410  04D5  1446               	bsf	___fldiv@bexp,0
 18411  04D6  0846               	movf	___fldiv@bexp,w
 18412  04D7  1903               	btfsc	3,2
 18413  04D8  2CE7               	goto	l7250
 18414  04D9  0A46               	incf	___fldiv@bexp,w
 18415  04DA  1D03               	btfss	3,2
 18416  04DB  2CE4               	goto	l7246
 18417  04DC  3000               	movlw	0
 18418  04DD  00B5               	movwf	___fldiv@b+3
 18419  04DE  3000               	movlw	0
 18420  04DF  00B4               	movwf	___fldiv@b+2
 18421  04E0  3000               	movlw	0
 18422  04E1  00B3               	movwf	___fldiv@b+1
 18423  04E2  3000               	movlw	0
 18424  04E3  00B2               	movwf	___fldiv@b
 18425  04E4                     l7246:	
 18426  04E4  17B4               	bsf	___fldiv@b+2,7
 18427  04E5  01B5               	clrf	___fldiv@b+3
 18428  04E6  2CEF               	goto	l7252
 18429  04E7                     l7250:	
 18430  04E7  3000               	movlw	0
 18431  04E8  00B5               	movwf	___fldiv@b+3
 18432  04E9  3000               	movlw	0
 18433  04EA  00B4               	movwf	___fldiv@b+2
 18434  04EB  3000               	movlw	0
 18435  04EC  00B3               	movwf	___fldiv@b+1
 18436  04ED  3000               	movlw	0
 18437  04EE  00B2               	movwf	___fldiv@b
 18438  04EF                     l7252:	
 18439  04EF  0831               	movf	___fldiv@a+3,w
 18440  04F0  3980               	andlw	128
 18441  04F1  00B6               	movwf	??___fldiv
 18442  04F2  0836               	movf	??___fldiv,w
 18443  04F3  06BF               	xorwf	___fldiv@sign,f
 18444  04F4  3531               	lslf	___fldiv@a+3,w
 18445  04F5  00B6               	movwf	??___fldiv
 18446  04F6  0836               	movf	??___fldiv,w
 18447  04F7  00C7               	movwf	___fldiv@aexp
 18448  04F8  1BB0               	btfsc	___fldiv@a+2,7
 18449  04F9  1447               	bsf	___fldiv@aexp,0
 18450  04FA  0847               	movf	___fldiv@aexp,w
 18451  04FB  1903               	btfsc	3,2
 18452  04FC  2D0B               	goto	l7270
 18453  04FD  0A47               	incf	___fldiv@aexp,w
 18454  04FE  1D03               	btfss	3,2
 18455  04FF  2D08               	goto	l7266
 18456  0500  3000               	movlw	0
 18457  0501  00B1               	movwf	___fldiv@a+3
 18458  0502  3000               	movlw	0
 18459  0503  00B0               	movwf	___fldiv@a+2
 18460  0504  3000               	movlw	0
 18461  0505  00AF               	movwf	___fldiv@a+1
 18462  0506  3000               	movlw	0
 18463  0507  00AE               	movwf	___fldiv@a
 18464  0508                     l7266:	
 18465  0508  17B0               	bsf	___fldiv@a+2,7
 18466  0509  01B1               	clrf	___fldiv@a+3
 18467  050A  2D13               	goto	l2058
 18468  050B                     l7270:	
 18469  050B  3000               	movlw	0
 18470  050C  00B1               	movwf	___fldiv@a+3
 18471  050D  3000               	movlw	0
 18472  050E  00B0               	movwf	___fldiv@a+2
 18473  050F  3000               	movlw	0
 18474  0510  00AF               	movwf	___fldiv@a+1
 18475  0511  3000               	movlw	0
 18476  0512  00AE               	movwf	___fldiv@a
 18477  0513                     l2058:	
 18478  0513  0831               	movf	___fldiv@a+3,w
 18479  0514  0430               	iorwf	___fldiv@a+2,w
 18480  0515  042F               	iorwf	___fldiv@a+1,w
 18481  0516  042E               	iorwf	___fldiv@a,w
 18482  0517  1D03               	skipz
 18483  0518  2D32               	goto	l7280
 18484  0519  3000               	movlw	0
 18485  051A  00B5               	movwf	___fldiv@b+3
 18486  051B  3000               	movlw	0
 18487  051C  00B4               	movwf	___fldiv@b+2
 18488  051D  3000               	movlw	0
 18489  051E  00B3               	movwf	___fldiv@b+1
 18490  051F  3000               	movlw	0
 18491  0520  00B2               	movwf	___fldiv@b
 18492  0521  3080               	movlw	128
 18493  0522  04B4               	iorwf	___fldiv@b+2,f
 18494  0523  307F               	movlw	127
 18495  0524  04B5               	iorwf	___fldiv@b+3,f
 18496  0525                     L19:	
 18497  0525  083F               	movf	___fldiv@sign,w
 18498  0526  00B6               	movwf	??___fldiv
 18499  0527  0836               	movf	??___fldiv,w
 18500  0528  04B5               	iorwf	___fldiv@b+3,f
 18501  0529  0835               	movf	___fldiv@b+3,w
 18502  052A  00B1               	movwf	?___fldiv+3
 18503  052B  0834               	movf	___fldiv@b+2,w
 18504  052C  00B0               	movwf	?___fldiv+2
 18505  052D  0833               	movf	___fldiv@b+1,w
 18506  052E  00AF               	movwf	?___fldiv+1
 18507  052F  0832               	movf	___fldiv@b,w
 18508  0530  00AE               	movwf	?___fldiv
 18509  0531  0008               	return
 18510  0532                     l7280:	
 18511  0532  0846               	movf	___fldiv@bexp,w
 18512  0533  1D03               	btfss	3,2
 18513  0534  2D3E               	goto	l7286
 18514  0535  3000               	movlw	0
 18515  0536  00B1               	movwf	?___fldiv+3
 18516  0537  3000               	movlw	0
 18517  0538  00B0               	movwf	?___fldiv+2
 18518  0539  3000               	movlw	0
 18519  053A  00AF               	movwf	?___fldiv+1
 18520  053B  3000               	movlw	0
 18521  053C  00AE               	movwf	?___fldiv
 18522  053D  0008               	return
 18523  053E                     l7286:	
 18524  053E  0846               	movf	___fldiv@bexp,w
 18525  053F  00B6               	movwf	??___fldiv
 18526  0540  01B7               	clrf	??___fldiv+1
 18527  0541  0837               	movf	??___fldiv+1,w
 18528  0542  00B9               	movwf	??___fldiv+3
 18529  0543  0847               	movf	___fldiv@aexp,w
 18530  0544  0236               	subwf	??___fldiv,w
 18531  0545  00B8               	movwf	??___fldiv+2
 18532  0546  1C03               	skipc
 18533  0547  03B9               	decf	??___fldiv+3,f
 18534  0548  0838               	movf	??___fldiv+2,w
 18535  0549  3E7F               	addlw	127
 18536  054A  00C0               	movwf	___fldiv@new_exp
 18537  054B  3000               	movlw	0
 18538  054C  3D39               	addwfc	??___fldiv+3,w
 18539  054D  00C1               	movwf	___fldiv@new_exp+1
 18540  054E  0835               	movf	___fldiv@b+3,w
 18541  054F  00BE               	movwf	___fldiv@rem+3
 18542  0550  0834               	movf	___fldiv@b+2,w
 18543  0551  00BD               	movwf	___fldiv@rem+2
 18544  0552  0833               	movf	___fldiv@b+1,w
 18545  0553  00BC               	movwf	___fldiv@rem+1
 18546  0554  0832               	movf	___fldiv@b,w
 18547  0555  00BB               	movwf	___fldiv@rem
 18548  0556  3000               	movlw	0
 18549  0557  00B5               	movwf	___fldiv@b+3
 18550  0558  3000               	movlw	0
 18551  0559  00B4               	movwf	___fldiv@b+2
 18552  055A  3000               	movlw	0
 18553  055B  00B3               	movwf	___fldiv@b+1
 18554  055C  3000               	movlw	0
 18555  055D  00B2               	movwf	___fldiv@b
 18556  055E  3000               	movlw	0
 18557  055F  00C5               	movwf	___fldiv@grs+3
 18558  0560  3000               	movlw	0
 18559  0561  00C4               	movwf	___fldiv@grs+2
 18560  0562  3000               	movlw	0
 18561  0563  00C3               	movwf	___fldiv@grs+1
 18562  0564  3000               	movlw	0
 18563  0565  00C2               	movwf	___fldiv@grs
 18564  0566  01C7               	clrf	___fldiv@aexp
 18565  0567                     l7314:	
 18566  0567  301A               	movlw	26
 18567  0568  0247               	subwf	___fldiv@aexp,w
 18568  0569  1803               	btfsc	3,0
 18569  056A  2DA3               	goto	l7316
 18570  056B  0847               	movf	___fldiv@aexp,w
 18571  056C  1903               	btfsc	3,2
 18572  056D  2D85               	goto	l7306
 18573  056E  3001               	movlw	1
 18574  056F                     u6485:	
 18575  056F  35BB               	lslf	___fldiv@rem,f
 18576  0570  0DBC               	rlf	___fldiv@rem+1,f
 18577  0571  0DBD               	rlf	___fldiv@rem+2,f
 18578  0572  0DBE               	rlf	___fldiv@rem+3,f
 18579  0573  0B89               	decfsz	9,f
 18580  0574  2D6F               	goto	u6485
 18581  0575  3001               	movlw	1
 18582  0576                     u6495:	
 18583  0576  35B2               	lslf	___fldiv@b,f
 18584  0577  0DB3               	rlf	___fldiv@b+1,f
 18585  0578  0DB4               	rlf	___fldiv@b+2,f
 18586  0579  0DB5               	rlf	___fldiv@b+3,f
 18587  057A  0B89               	decfsz	9,f
 18588  057B  2D76               	goto	u6495
 18589  057C  1BC5               	btfsc	___fldiv@grs+3,7
 18590  057D  1432               	bsf	___fldiv@b,0
 18591  057E  3001               	movlw	1
 18592  057F                     u6515:	
 18593  057F  35C2               	lslf	___fldiv@grs,f
 18594  0580  0DC3               	rlf	___fldiv@grs+1,f
 18595  0581  0DC4               	rlf	___fldiv@grs+2,f
 18596  0582  0DC5               	rlf	___fldiv@grs+3,f
 18597  0583  0B89               	decfsz	9,f
 18598  0584  2D7F               	goto	u6515
 18599  0585                     l7306:	
 18600  0585  0831               	movf	___fldiv@a+3,w
 18601  0586  023E               	subwf	___fldiv@rem+3,w
 18602  0587  1D03               	skipz
 18603  0588  2D93               	goto	u6525
 18604  0589  0830               	movf	___fldiv@a+2,w
 18605  058A  023D               	subwf	___fldiv@rem+2,w
 18606  058B  1D03               	skipz
 18607  058C  2D93               	goto	u6525
 18608  058D  082F               	movf	___fldiv@a+1,w
 18609  058E  023C               	subwf	___fldiv@rem+1,w
 18610  058F  1D03               	skipz
 18611  0590  2D93               	goto	u6525
 18612  0591  082E               	movf	___fldiv@a,w
 18613  0592  023B               	subwf	___fldiv@rem,w
 18614  0593                     u6525:	
 18615  0593  1C03               	skipc
 18616  0594  2D9E               	goto	l7312
 18617  0595  1745               	bsf	___fldiv@grs+3,6
 18618  0596  082E               	movf	___fldiv@a,w
 18619  0597  02BB               	subwf	___fldiv@rem,f
 18620  0598  082F               	movf	___fldiv@a+1,w
 18621  0599  3BBC               	subwfb	___fldiv@rem+1,f
 18622  059A  0830               	movf	___fldiv@a+2,w
 18623  059B  3BBD               	subwfb	___fldiv@rem+2,f
 18624  059C  0831               	movf	___fldiv@a+3,w
 18625  059D  3BBE               	subwfb	___fldiv@rem+3,f
 18626  059E                     l7312:	
 18627  059E  3001               	movlw	1
 18628  059F  00B6               	movwf	??___fldiv
 18629  05A0  0836               	movf	??___fldiv,w
 18630  05A1  07C7               	addwf	___fldiv@aexp,f
 18631  05A2  2D67               	goto	l7314
 18632  05A3                     l7316:	
 18633  05A3  083E               	movf	___fldiv@rem+3,w
 18634  05A4  043D               	iorwf	___fldiv@rem+2,w
 18635  05A5  043C               	iorwf	___fldiv@rem+1,w
 18636  05A6  043B               	iorwf	___fldiv@rem,w
 18637  05A7  1D03               	btfss	3,2
 18638  05A8  1442               	bsf	___fldiv@grs,0
 18639  05A9                     l7330:	
 18640  05A9  1BB4               	btfsc	___fldiv@b+2,7
 18641  05AA  2DC0               	goto	l7332
 18642  05AB  3001               	movlw	1
 18643  05AC                     u6555:	
 18644  05AC  35B2               	lslf	___fldiv@b,f
 18645  05AD  0DB3               	rlf	___fldiv@b+1,f
 18646  05AE  0DB4               	rlf	___fldiv@b+2,f
 18647  05AF  0DB5               	rlf	___fldiv@b+3,f
 18648  05B0  0B89               	decfsz	9,f
 18649  05B1  2DAC               	goto	u6555
 18650  05B2  1BC5               	btfsc	___fldiv@grs+3,7
 18651  05B3  1432               	bsf	___fldiv@b,0
 18652  05B4  3001               	movlw	1
 18653  05B5                     u6575:	
 18654  05B5  35C2               	lslf	___fldiv@grs,f
 18655  05B6  0DC3               	rlf	___fldiv@grs+1,f
 18656  05B7  0DC4               	rlf	___fldiv@grs+2,f
 18657  05B8  0DC5               	rlf	___fldiv@grs+3,f
 18658  05B9  0B89               	decfsz	9,f
 18659  05BA  2DB5               	goto	u6575
 18660  05BB  30FF               	movlw	255
 18661  05BC  07C0               	addwf	___fldiv@new_exp,f
 18662  05BD  30FF               	movlw	255
 18663  05BE  3DC1               	addwfc	___fldiv@new_exp+1,f
 18664  05BF  2DA9               	goto	l7330
 18665  05C0                     l7332:	
 18666  05C0  01C7               	clrf	___fldiv@aexp
 18667  05C1  1FC5               	btfss	___fldiv@grs+3,7
 18668  05C2  2DD9               	goto	l7342
 18669  05C3  30FF               	movlw	255
 18670  05C4  0542               	andwf	___fldiv@grs,w
 18671  05C5  00B6               	movwf	??___fldiv
 18672  05C6  30FF               	movlw	255
 18673  05C7  0543               	andwf	___fldiv@grs+1,w
 18674  05C8  00B7               	movwf	??___fldiv+1
 18675  05C9  30FF               	movlw	255
 18676  05CA  0544               	andwf	___fldiv@grs+2,w
 18677  05CB  00B8               	movwf	??___fldiv+2
 18678  05CC  307F               	movlw	127
 18679  05CD  0545               	andwf	___fldiv@grs+3,w
 18680  05CE  00B9               	movwf	??___fldiv+3
 18681  05CF  0839               	movf	??___fldiv+3,w
 18682  05D0  0438               	iorwf	??___fldiv+2,w
 18683  05D1  0437               	iorwf	??___fldiv+1,w
 18684  05D2  0436               	iorwf	??___fldiv,w
 18685  05D3  1903               	skipnz
 18686  05D4  1832               	btfsc	___fldiv@b,0
 18687  05D5  2DD7               	goto	l7338
 18688  05D6  2DD9               	goto	l7342
 18689  05D7                     l7338:	
 18690  05D7  01C7               	clrf	___fldiv@aexp
 18691  05D8  0AC7               	incf	___fldiv@aexp,f
 18692  05D9                     l7342:	
 18693  05D9  0847               	movf	___fldiv@aexp,w
 18694  05DA  1903               	btfsc	3,2
 18695  05DB  2E02               	goto	l7352
 18696  05DC  3001               	movlw	1
 18697  05DD  07B2               	addwf	___fldiv@b,f
 18698  05DE  3000               	movlw	0
 18699  05DF  3DB3               	addwfc	___fldiv@b+1,f
 18700  05E0  3000               	movlw	0
 18701  05E1  3DB4               	addwfc	___fldiv@b+2,f
 18702  05E2  3000               	movlw	0
 18703  05E3  3DB5               	addwfc	___fldiv@b+3,f
 18704  05E4  1C35               	btfss	___fldiv@b+3,0
 18705  05E5  2E02               	goto	l7352
 18706  05E6  0832               	movf	___fldiv@b,w
 18707  05E7  00B6               	movwf	??___fldiv
 18708  05E8  0833               	movf	___fldiv@b+1,w
 18709  05E9  00B7               	movwf	??___fldiv+1
 18710  05EA  0834               	movf	___fldiv@b+2,w
 18711  05EB  00B8               	movwf	??___fldiv+2
 18712  05EC  0835               	movf	___fldiv@b+3,w
 18713  05ED  00B9               	movwf	??___fldiv+3
 18714  05EE  3001               	movlw	1
 18715  05EF  00BA               	movwf	??___fldiv+4
 18716  05F0                     u6645:	
 18717  05F0  37B9               	asrf	??___fldiv+3,f
 18718  05F1  0CB8               	rrf	??___fldiv+2,f
 18719  05F2  0CB7               	rrf	??___fldiv+1,f
 18720  05F3  0CB6               	rrf	??___fldiv,f
 18721  05F4  0BBA               	decfsz	??___fldiv+4,f
 18722  05F5  2DF0               	goto	u6645
 18723  05F6  0839               	movf	??___fldiv+3,w
 18724  05F7  00B5               	movwf	___fldiv@b+3
 18725  05F8  0838               	movf	??___fldiv+2,w
 18726  05F9  00B4               	movwf	___fldiv@b+2
 18727  05FA  0837               	movf	??___fldiv+1,w
 18728  05FB  00B3               	movwf	___fldiv@b+1
 18729  05FC  0836               	movf	??___fldiv,w
 18730  05FD  00B2               	movwf	___fldiv@b
 18731  05FE  3001               	movlw	1
 18732  05FF  07C0               	addwf	___fldiv@new_exp,f
 18733  0600  3000               	movlw	0
 18734  0601  3DC1               	addwfc	___fldiv@new_exp+1,f
 18735  0602                     l7352:	
 18736  0602  0841               	movf	___fldiv@new_exp+1,w
 18737  0603  3A80               	xorlw	128
 18738  0604  00B6               	movwf	??___fldiv
 18739  0605  3080               	movlw	128
 18740  0606  0236               	subwf	??___fldiv,w
 18741  0607  1D03               	skipz
 18742  0608  2E0B               	goto	u6655
 18743  0609  30FF               	movlw	255
 18744  060A  0240               	subwf	___fldiv@new_exp,w
 18745  060B                     u6655:	
 18746  060B  1C03               	skipc
 18747  060C  2E1A               	goto	l2079
 18748  060D  30FF               	movlw	255
 18749  060E  0140               	movlb	0	; select bank0
 18750  060F  00C0               	movwf	___fldiv@new_exp
 18751  0610  3000               	movlw	0
 18752  0611  00C1               	movwf	___fldiv@new_exp+1
 18753  0612  3000               	movlw	0
 18754  0613  00B5               	movwf	___fldiv@b+3
 18755  0614  3000               	movlw	0
 18756  0615  00B4               	movwf	___fldiv@b+2
 18757  0616  3000               	movlw	0
 18758  0617  00B3               	movwf	___fldiv@b+1
 18759  0618  3000               	movlw	0
 18760  0619  00B2               	movwf	___fldiv@b
 18761  061A                     l2079:	
 18762  061A  0140               	movlb	0	; select bank0
 18763  061B  0841               	movf	___fldiv@new_exp+1,w
 18764  061C  3A80               	xorlw	128
 18765  061D  00B6               	movwf	??___fldiv
 18766  061E  3080               	movlw	128
 18767  061F  0236               	subwf	??___fldiv,w
 18768  0620  1D03               	skipz
 18769  0621  2E24               	goto	u6665
 18770  0622  3001               	movlw	1
 18771  0623  0240               	subwf	___fldiv@new_exp,w
 18772  0624                     u6665:	
 18773  0624  1803               	skipnc
 18774  0625  2E32               	goto	l2080
 18775  0626  0140               	movlb	0	; select bank0
 18776  0627  01C0               	clrf	___fldiv@new_exp
 18777  0628  01C1               	clrf	___fldiv@new_exp+1
 18778  0629  3000               	movlw	0
 18779  062A  00B5               	movwf	___fldiv@b+3
 18780  062B  3000               	movlw	0
 18781  062C  00B4               	movwf	___fldiv@b+2
 18782  062D  3000               	movlw	0
 18783  062E  00B3               	movwf	___fldiv@b+1
 18784  062F  3000               	movlw	0
 18785  0630  00B2               	movwf	___fldiv@b
 18786  0631  01BF               	clrf	___fldiv@sign
 18787  0632                     l2080:	
 18788  0632  0140               	movlb	0	; select bank0
 18789  0633  0840               	movf	___fldiv@new_exp,w
 18790  0634  00B6               	movwf	??___fldiv
 18791  0635  0836               	movf	??___fldiv,w
 18792  0636  00C6               	movwf	___fldiv@bexp
 18793  0637  1C46               	btfss	___fldiv@bexp,0
 18794  0638  2E3B               	goto	l7366
 18795  0639  17B4               	bsf	___fldiv@b+2,7
 18796  063A  2E3F               	goto	l2082
 18797  063B                     l7366:	
 18798  063B  307F               	movlw	127
 18799  063C  00B6               	movwf	??___fldiv
 18800  063D  0836               	movf	??___fldiv,w
 18801  063E  05B4               	andwf	___fldiv@b+2,f
 18802  063F                     l2082:	
 18803  063F  3646               	lsrf	___fldiv@bexp,w
 18804  0640  00B6               	movwf	??___fldiv
 18805  0641  0836               	movf	??___fldiv,w
 18806  0642  00B5               	movwf	___fldiv@b+3
 18807  0643  2D25               	goto	L19
 18808  0644                     __end_of___fldiv:	
 18809                           
 18810                           	psect	text48
 18811  1E24                     __ptext48:	
 18812 ;; *************** function _PWM4_LoadDutyValue *****************
 18813 ;; Defined at:
 18814 ;;		line 82 in file "mcc_generated_files/pwm4.c"
 18815 ;; Parameters:    Size  Location     Type
 18816 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 18817 ;; Auto vars:     Size  Location     Type
 18818 ;;		None
 18819 ;; Return value:  Size  Location     Type
 18820 ;;                  1    wreg      void 
 18821 ;; Registers used:
 18822 ;;		wreg, status,2
 18823 ;; Tracked objects:
 18824 ;;		On entry : 0/0
 18825 ;;		On exit  : 0/0
 18826 ;;		Unchanged: 0/0
 18827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18828 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18831 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18832 ;;Total ram usage:        2 bytes
 18833 ;; Hardware stack levels used:    1
 18834 ;; Hardware stack levels required when called:    4
 18835 ;; This function calls:
 18836 ;;		Nothing
 18837 ;; This function is called by:
 18838 ;;		_LED_setColor
 18839 ;; This function uses a non-reentrant model
 18840 ;;
 18841                           
 18842                           
 18843                           ;psect for function _PWM4_LoadDutyValue
 18844  1E24                     _PWM4_LoadDutyValue:	
 18845                           
 18846                           ;mcc_generated_files/pwm4.c: 82: void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm4.c: 83: {;mcc_generated_files/pwm4.c: 84:     if(dutyValue <= 127){
 18847                           
 18848                           ;incstack = 0
 18849                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2]
 18850  1E24  3000               	movlw	0
 18851  1E25  0141               	movlb	1	; select bank1
 18852  1E26  0221               	subwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),w
 18853  1E27  3080               	movlw	128
 18854  1E28  1903               	skipnz
 18855  1E29  0220               	subwf	PWM4_LoadDutyValue@dutyValue^(0+128),w
 18856  1E2A  1803               	skipnc
 18857  1E2B  0008               	return
 18858                           
 18859                           ;mcc_generated_files/pwm4.c: 85:         dutyValue &= 0x03FF;
 18860  1E2C  30FF               	movlw	255
 18861  1E2D  05A0               	andwf	PWM4_LoadDutyValue@dutyValue^(0+128),f
 18862  1E2E  3003               	movlw	3
 18863  1E2F  05A1               	andwf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),f
 18864                           
 18865                           ;mcc_generated_files/pwm4.c: 88:         if(CCP4CONbits.FMT)
 18866  1E30  0146               	movlb	6	; select bank6
 18867  1E31  1E1A               	btfss	26,4	;volatile
 18868  1E32  2E39               	goto	l7580
 18869                           
 18870                           ;mcc_generated_files/pwm4.c: 89:         {;mcc_generated_files/pwm4.c: 90:             d
      +                          utyValue <<= 6;
 18871  1E33  3006               	movlw	6
 18872  1E34  0141               	movlb	1	; select bank1
 18873  1E35                     u7135:	
 18874  1E35  35A0               	lslf	PWM4_LoadDutyValue@dutyValue^(0+128),f
 18875  1E36  0DA1               	rlf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),f
 18876  1E37  0B89               	decfsz	9,f
 18877  1E38  2E35               	goto	u7135
 18878  1E39                     l7580:	
 18879                           
 18880                           ;mcc_generated_files/pwm4.c: 91:             CCPR4H = dutyValue >> 8;
 18881  1E39  0141               	movlb	1	; select bank1
 18882  1E3A  0821               	movf	(PWM4_LoadDutyValue@dutyValue+1)^(0+128),w
 18883  1E3B  0146               	movlb	6	; select bank6
 18884  1E3C  0099               	movwf	25	;volatile
 18885                           
 18886                           ;mcc_generated_files/pwm4.c: 92:             CCPR4L = dutyValue;
 18887  1E3D  0141               	movlb	1	; select bank1
 18888  1E3E  0820               	movf	PWM4_LoadDutyValue@dutyValue^(0+128),w
 18889  1E3F  0146               	movlb	6	; select bank6
 18890  1E40  0098               	movwf	24	;volatile
 18891                           
 18892                           ;mcc_generated_files/pwm4.c: 93:         }
 18893  1E41  0008               	return
 18894  1E42                     __end_of_PWM4_LoadDutyValue:	
 18895                           
 18896                           	psect	text49
 18897  1E06                     __ptext49:	
 18898 ;; *************** function _PWM3_LoadDutyValue *****************
 18899 ;; Defined at:
 18900 ;;		line 82 in file "mcc_generated_files/pwm3.c"
 18901 ;; Parameters:    Size  Location     Type
 18902 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 18903 ;; Auto vars:     Size  Location     Type
 18904 ;;		None
 18905 ;; Return value:  Size  Location     Type
 18906 ;;                  1    wreg      void 
 18907 ;; Registers used:
 18908 ;;		wreg, status,2
 18909 ;; Tracked objects:
 18910 ;;		On entry : 0/0
 18911 ;;		On exit  : 0/0
 18912 ;;		Unchanged: 0/0
 18913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18914 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18917 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18918 ;;Total ram usage:        2 bytes
 18919 ;; Hardware stack levels used:    1
 18920 ;; Hardware stack levels required when called:    4
 18921 ;; This function calls:
 18922 ;;		Nothing
 18923 ;; This function is called by:
 18924 ;;		_LED_setColor
 18925 ;; This function uses a non-reentrant model
 18926 ;;
 18927                           
 18928                           
 18929                           ;psect for function _PWM3_LoadDutyValue
 18930  1E06                     _PWM3_LoadDutyValue:	
 18931                           
 18932                           ;mcc_generated_files/pwm3.c: 82: void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm3.c: 83: {;mcc_generated_files/pwm3.c: 84:     if(dutyValue <= 127){
 18933                           
 18934                           ;incstack = 0
 18935                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2]
 18936  1E06  3000               	movlw	0
 18937  1E07  0141               	movlb	1	; select bank1
 18938  1E08  0221               	subwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
 18939  1E09  3080               	movlw	128
 18940  1E0A  1903               	skipnz
 18941  1E0B  0220               	subwf	PWM3_LoadDutyValue@dutyValue^(0+128),w
 18942  1E0C  1803               	skipnc
 18943  1E0D  0008               	return
 18944                           
 18945                           ;mcc_generated_files/pwm3.c: 85:         dutyValue &= 0x03FF;
 18946  1E0E  30FF               	movlw	255
 18947  1E0F  05A0               	andwf	PWM3_LoadDutyValue@dutyValue^(0+128),f
 18948  1E10  3003               	movlw	3
 18949  1E11  05A1               	andwf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),f
 18950                           
 18951                           ;mcc_generated_files/pwm3.c: 88:         if(CCP3CONbits.FMT)
 18952  1E12  0146               	movlb	6	; select bank6
 18953  1E13  1E16               	btfss	22,4	;volatile
 18954  1E14  2E1B               	goto	l7564
 18955                           
 18956                           ;mcc_generated_files/pwm3.c: 89:         {;mcc_generated_files/pwm3.c: 90:             d
      +                          utyValue <<= 6;
 18957  1E15  3006               	movlw	6
 18958  1E16  0141               	movlb	1	; select bank1
 18959  1E17                     u7105:	
 18960  1E17  35A0               	lslf	PWM3_LoadDutyValue@dutyValue^(0+128),f
 18961  1E18  0DA1               	rlf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),f
 18962  1E19  0B89               	decfsz	9,f
 18963  1E1A  2E17               	goto	u7105
 18964  1E1B                     l7564:	
 18965                           
 18966                           ;mcc_generated_files/pwm3.c: 91:             CCPR3H = dutyValue >> 8;
 18967  1E1B  0141               	movlb	1	; select bank1
 18968  1E1C  0821               	movf	(PWM3_LoadDutyValue@dutyValue+1)^(0+128),w
 18969  1E1D  0146               	movlb	6	; select bank6
 18970  1E1E  0095               	movwf	21	;volatile
 18971                           
 18972                           ;mcc_generated_files/pwm3.c: 92:             CCPR3L = dutyValue;
 18973  1E1F  0141               	movlb	1	; select bank1
 18974  1E20  0820               	movf	PWM3_LoadDutyValue@dutyValue^(0+128),w
 18975  1E21  0146               	movlb	6	; select bank6
 18976  1E22  0094               	movwf	20	;volatile
 18977                           
 18978                           ;mcc_generated_files/pwm3.c: 93:         }
 18979  1E23  0008               	return
 18980  1E24                     __end_of_PWM3_LoadDutyValue:	
 18981                           
 18982                           	psect	text50
 18983  1DE8                     __ptext50:	
 18984 ;; *************** function _PWM2_LoadDutyValue *****************
 18985 ;; Defined at:
 18986 ;;		line 82 in file "mcc_generated_files/pwm2.c"
 18987 ;; Parameters:    Size  Location     Type
 18988 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 18989 ;; Auto vars:     Size  Location     Type
 18990 ;;		None
 18991 ;; Return value:  Size  Location     Type
 18992 ;;                  1    wreg      void 
 18993 ;; Registers used:
 18994 ;;		wreg, status,2
 18995 ;; Tracked objects:
 18996 ;;		On entry : 0/0
 18997 ;;		On exit  : 0/0
 18998 ;;		Unchanged: 0/0
 18999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19000 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19003 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19004 ;;Total ram usage:        2 bytes
 19005 ;; Hardware stack levels used:    1
 19006 ;; Hardware stack levels required when called:    4
 19007 ;; This function calls:
 19008 ;;		Nothing
 19009 ;; This function is called by:
 19010 ;;		_LED_setColor
 19011 ;; This function uses a non-reentrant model
 19012 ;;
 19013                           
 19014                           
 19015                           ;psect for function _PWM2_LoadDutyValue
 19016  1DE8                     _PWM2_LoadDutyValue:	
 19017                           
 19018                           ;mcc_generated_files/pwm2.c: 82: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 83: {;mcc_generated_files/pwm2.c: 84:     if(dutyValue <= 127){
 19019                           
 19020                           ;incstack = 0
 19021                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 19022  1DE8  3000               	movlw	0
 19023  1DE9  0141               	movlb	1	; select bank1
 19024  1DEA  0221               	subwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),w
 19025  1DEB  3080               	movlw	128
 19026  1DEC  1903               	skipnz
 19027  1DED  0220               	subwf	PWM2_LoadDutyValue@dutyValue^(0+128),w
 19028  1DEE  1803               	skipnc
 19029  1DEF  0008               	return
 19030                           
 19031                           ;mcc_generated_files/pwm2.c: 85:         dutyValue &= 0x03FF;
 19032  1DF0  30FF               	movlw	255
 19033  1DF1  05A0               	andwf	PWM2_LoadDutyValue@dutyValue^(0+128),f
 19034  1DF2  3003               	movlw	3
 19035  1DF3  05A1               	andwf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),f
 19036                           
 19037                           ;mcc_generated_files/pwm2.c: 88:         if(CCP2CONbits.FMT)
 19038  1DF4  0146               	movlb	6	; select bank6
 19039  1DF5  1E12               	btfss	18,4	;volatile
 19040  1DF6  2DFD               	goto	l7612
 19041                           
 19042                           ;mcc_generated_files/pwm2.c: 89:         {;mcc_generated_files/pwm2.c: 90:             d
      +                          utyValue <<= 6;
 19043  1DF7  3006               	movlw	6
 19044  1DF8  0141               	movlb	1	; select bank1
 19045  1DF9                     u7195:	
 19046  1DF9  35A0               	lslf	PWM2_LoadDutyValue@dutyValue^(0+128),f
 19047  1DFA  0DA1               	rlf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),f
 19048  1DFB  0B89               	decfsz	9,f
 19049  1DFC  2DF9               	goto	u7195
 19050  1DFD                     l7612:	
 19051                           
 19052                           ;mcc_generated_files/pwm2.c: 91:             CCPR2H = dutyValue >> 8;
 19053  1DFD  0141               	movlb	1	; select bank1
 19054  1DFE  0821               	movf	(PWM2_LoadDutyValue@dutyValue+1)^(0+128),w
 19055  1DFF  0146               	movlb	6	; select bank6
 19056  1E00  0091               	movwf	17	;volatile
 19057                           
 19058                           ;mcc_generated_files/pwm2.c: 92:             CCPR2L = dutyValue;
 19059  1E01  0141               	movlb	1	; select bank1
 19060  1E02  0820               	movf	PWM2_LoadDutyValue@dutyValue^(0+128),w
 19061  1E03  0146               	movlb	6	; select bank6
 19062  1E04  0090               	movwf	16	;volatile
 19063                           
 19064                           ;mcc_generated_files/pwm2.c: 93:         }
 19065  1E05  0008               	return
 19066  1E06                     __end_of_PWM2_LoadDutyValue:	
 19067                           
 19068                           	psect	text51
 19069  1DCA                     __ptext51:	
 19070 ;; *************** function _PWM1_LoadDutyValue *****************
 19071 ;; Defined at:
 19072 ;;		line 82 in file "mcc_generated_files/pwm1.c"
 19073 ;; Parameters:    Size  Location     Type
 19074 ;;  dutyValue       2    0[BANK1 ] unsigned short 
 19075 ;; Auto vars:     Size  Location     Type
 19076 ;;		None
 19077 ;; Return value:  Size  Location     Type
 19078 ;;                  1    wreg      void 
 19079 ;; Registers used:
 19080 ;;		wreg, status,2
 19081 ;; Tracked objects:
 19082 ;;		On entry : 0/0
 19083 ;;		On exit  : 0/0
 19084 ;;		Unchanged: 0/0
 19085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19086 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19089 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19090 ;;Total ram usage:        2 bytes
 19091 ;; Hardware stack levels used:    1
 19092 ;; Hardware stack levels required when called:    4
 19093 ;; This function calls:
 19094 ;;		Nothing
 19095 ;; This function is called by:
 19096 ;;		_LED_setColor
 19097 ;; This function uses a non-reentrant model
 19098 ;;
 19099                           
 19100                           
 19101                           ;psect for function _PWM1_LoadDutyValue
 19102  1DCA                     _PWM1_LoadDutyValue:	
 19103                           
 19104                           ;mcc_generated_files/pwm1.c: 82: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 83: {;mcc_generated_files/pwm1.c: 84:     if(dutyValue <= 127){
 19105                           
 19106                           ;incstack = 0
 19107                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 19108  1DCA  3000               	movlw	0
 19109  1DCB  0141               	movlb	1	; select bank1
 19110  1DCC  0221               	subwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),w
 19111  1DCD  3080               	movlw	128
 19112  1DCE  1903               	skipnz
 19113  1DCF  0220               	subwf	PWM1_LoadDutyValue@dutyValue^(0+128),w
 19114  1DD0  1803               	skipnc
 19115  1DD1  0008               	return
 19116                           
 19117                           ;mcc_generated_files/pwm1.c: 85:         dutyValue &= 0x03FF;
 19118  1DD2  30FF               	movlw	255
 19119  1DD3  05A0               	andwf	PWM1_LoadDutyValue@dutyValue^(0+128),f
 19120  1DD4  3003               	movlw	3
 19121  1DD5  05A1               	andwf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),f
 19122                           
 19123                           ;mcc_generated_files/pwm1.c: 88:         if(CCP1CONbits.FMT)
 19124  1DD6  0146               	movlb	6	; select bank6
 19125  1DD7  1E0E               	btfss	14,4	;volatile
 19126  1DD8  2DDF               	goto	l7596
 19127                           
 19128                           ;mcc_generated_files/pwm1.c: 89:         {;mcc_generated_files/pwm1.c: 90:             d
      +                          utyValue <<= 6;
 19129  1DD9  3006               	movlw	6
 19130  1DDA  0141               	movlb	1	; select bank1
 19131  1DDB                     u7165:	
 19132  1DDB  35A0               	lslf	PWM1_LoadDutyValue@dutyValue^(0+128),f
 19133  1DDC  0DA1               	rlf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),f
 19134  1DDD  0B89               	decfsz	9,f
 19135  1DDE  2DDB               	goto	u7165
 19136  1DDF                     l7596:	
 19137                           
 19138                           ;mcc_generated_files/pwm1.c: 91:             CCPR1H = dutyValue >> 8;
 19139  1DDF  0141               	movlb	1	; select bank1
 19140  1DE0  0821               	movf	(PWM1_LoadDutyValue@dutyValue+1)^(0+128),w
 19141  1DE1  0146               	movlb	6	; select bank6
 19142  1DE2  008D               	movwf	13	;volatile
 19143                           
 19144                           ;mcc_generated_files/pwm1.c: 92:             CCPR1L = dutyValue;
 19145  1DE3  0141               	movlb	1	; select bank1
 19146  1DE4  0820               	movf	PWM1_LoadDutyValue@dutyValue^(0+128),w
 19147  1DE5  0146               	movlb	6	; select bank6
 19148  1DE6  008C               	movwf	12	;volatile
 19149                           
 19150                           ;mcc_generated_files/pwm1.c: 93:         }
 19151  1DE7  0008               	return
 19152  1DE8                     __end_of_PWM1_LoadDutyValue:	
 19153                           
 19154                           	psect	text52
 19155  1BD5                     __ptext52:	
 19156 ;; *************** function _BEAT_detected *****************
 19157 ;; Defined at:
 19158 ;;		line 49 in file "beat.c"
 19159 ;; Parameters:    Size  Location     Type
 19160 ;;		None
 19161 ;; Auto vars:     Size  Location     Type
 19162 ;;		None
 19163 ;; Return value:  Size  Location     Type
 19164 ;;                  1    wreg      _Bool 
 19165 ;; Registers used:
 19166 ;;		wreg, status,2, status,0
 19167 ;; Tracked objects:
 19168 ;;		On entry : 0/0
 19169 ;;		On exit  : 0/0
 19170 ;;		Unchanged: 0/0
 19171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19176 ;;Total ram usage:        0 bytes
 19177 ;; Hardware stack levels used:    1
 19178 ;; Hardware stack levels required when called:    4
 19179 ;; This function calls:
 19180 ;;		Nothing
 19181 ;; This function is called by:
 19182 ;;		_LED_task_BEAT_STROBE
 19183 ;; This function uses a non-reentrant model
 19184 ;;
 19185                           
 19186                           
 19187                           ;psect for function _BEAT_detected
 19188  1BD5                     _BEAT_detected:	
 19189                           
 19190                           ;beat.c: 50:     if (detected) {
 19191                           
 19192                           ;incstack = 0
 19193                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 19194  1BD5  0141               	movlb	1	; select bank1
 19195  1BD6  0858               	movf	_detected^(0+128),w
 19196  1BD7  1903               	btfsc	3,2
 19197  1BD8  2BDC               	goto	l7714
 19198                           
 19199                           ;beat.c: 51:         detected = 0;
 19200  1BD9  01D8               	clrf	_detected^(0+128)
 19201                           
 19202                           ;beat.c: 52:         return 1;
 19203  1BDA  3001               	movlw	1
 19204  1BDB  0008               	return
 19205  1BDC                     l7714:	
 19206                           
 19207                           ;beat.c: 55:     return 0;
 19208  1BDC  3000               	movlw	0
 19209  1BDD  0008               	return
 19210  1BDE                     __end_of_BEAT_detected:	
 19211                           
 19212                           	psect	text53
 19213  07FF                     __ptext53:	
 19214 ;; *************** function _LED_task_BEAT_MIXED *****************
 19215 ;; Defined at:
 19216 ;;		line 182 in file "led.c"
 19217 ;; Parameters:    Size  Location     Type
 19218 ;;		None
 19219 ;; Auto vars:     Size  Location     Type
 19220 ;;		None
 19221 ;; Return value:  Size  Location     Type
 19222 ;;                  1    wreg      void 
 19223 ;; Registers used:
 19224 ;;		None
 19225 ;; Tracked objects:
 19226 ;;		On entry : 0/0
 19227 ;;		On exit  : 0/0
 19228 ;;		Unchanged: 0/0
 19229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19234 ;;Total ram usage:        0 bytes
 19235 ;; Hardware stack levels used:    1
 19236 ;; Hardware stack levels required when called:    4
 19237 ;; This function calls:
 19238 ;;		Nothing
 19239 ;; This function is called by:
 19240 ;;		_CONTROL_BEAT
 19241 ;; This function uses a non-reentrant model
 19242 ;;
 19243                           
 19244                           
 19245                           ;psect for function _LED_task_BEAT_MIXED
 19246  07FF                     _LED_task_BEAT_MIXED:	
 19247                           
 19248                           ;incstack = 0
 19249                           ; Regs used in _LED_task_BEAT_MIXED: []
 19250  07FF  0008               	return
 19251  0800                     __end_of_LED_task_BEAT_MIXED:	
 19252                           
 19253                           	psect	text54
 19254  0003                     __ptext54:	
 19255 ;; *************** function _LED_task_BEAT_FADE *****************
 19256 ;; Defined at:
 19257 ;;		line 170 in file "led.c"
 19258 ;; Parameters:    Size  Location     Type
 19259 ;;		None
 19260 ;; Auto vars:     Size  Location     Type
 19261 ;;		None
 19262 ;; Return value:  Size  Location     Type
 19263 ;;                  1    wreg      void 
 19264 ;; Registers used:
 19265 ;;		None
 19266 ;; Tracked objects:
 19267 ;;		On entry : 0/0
 19268 ;;		On exit  : 0/0
 19269 ;;		Unchanged: 0/0
 19270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19275 ;;Total ram usage:        0 bytes
 19276 ;; Hardware stack levels used:    1
 19277 ;; Hardware stack levels required when called:    4
 19278 ;; This function calls:
 19279 ;;		Nothing
 19280 ;; This function is called by:
 19281 ;;		_CONTROL_BEAT
 19282 ;; This function uses a non-reentrant model
 19283 ;;
 19284                           
 19285                           
 19286                           ;psect for function _LED_task_BEAT_FADE
 19287  0003                     _LED_task_BEAT_FADE:	
 19288                           
 19289                           ;incstack = 0
 19290                           ; Regs used in _LED_task_BEAT_FADE: []
 19291  0003  0008               	return
 19292  0004                     __end_of_LED_task_BEAT_FADE:	
 19293                           
 19294                           	psect	text55
 19295  1D06                     __ptext55:	
 19296 ;; *************** function _printf *****************
 19297 ;; Defined at:
 19298 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
 19299 ;; Parameters:    Size  Location     Type
 19300 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
 19301 ;;		 -> STR_31(3), STR_30(3), STR_29(6), STR_28(7), 
 19302 ;;		 -> STR_27(8), STR_26(9), STR_25(10), STR_24(9), 
 19303 ;;		 -> STR_23(8), STR_22(7), STR_20(2), STR_19(5), 
 19304 ;;		 -> STR_18(4), STR_17(4), STR_16(3), STR_15(3), 
 19305 ;;		 -> STR_14(3), STR_13(3), STR_12(4), STR_11(4), 
 19306 ;;		 -> STR_10(4), STR_9(4), STR_8(6), STR_7(6), 
 19307 ;;		 -> STR_6(6), STR_5(6), STR_4(6), STR_3(6), 
 19308 ;;		 -> STR_2(6), STR_1(6), 
 19309 ;; Auto vars:     Size  Location     Type
 19310 ;;  ret             2    0        int 
 19311 ;;  ap              1   78[BANK0 ] PTR void [1]
 19312 ;;		 -> ?_printf(2), 
 19313 ;; Return value:  Size  Location     Type
 19314 ;;                  2    0[BANK1 ] int 
 19315 ;; Registers used:
 19316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19317 ;; Tracked objects:
 19318 ;;		On entry : 0/0
 19319 ;;		On exit  : 0/0
 19320 ;;		Unchanged: 0/0
 19321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19322 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19323 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19324 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19325 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19326 ;;Total ram usage:       14 bytes
 19327 ;; Hardware stack levels used:    1
 19328 ;; Hardware stack levels required when called:   16
 19329 ;; This function calls:
 19330 ;;		_vfprintf
 19331 ;; This function is called by:
 19332 ;;		_CONTROLLER_task
 19333 ;;		_CONTROL_BEAT
 19334 ;;		_CONTROL_MANUAL
 19335 ;;		_CONTROL_ANIMATION
 19336 ;;		_TM1650_init
 19337 ;;		_address_inc
 19338 ;;		_address_dec
 19339 ;;		_TM1650_scrollPrint
 19340 ;; This function uses a non-reentrant model
 19341 ;;
 19342                           
 19343                           
 19344                           ;psect for function _printf
 19345  1D06                     _printf:	
 19346                           
 19347                           ;incstack = 0
 19348 ;; hardware stack exceeded
 19349                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19350  1D06  30A2               	movlw	(low ((?_printf| 0+2)))& (0+255)
 19351  1D07  0140               	movlb	0	; select bank0
 19352  1D08  00EB               	movwf	??_printf
 19353  1D09  086B               	movf	??_printf,w
 19354  1D0A  00EE               	movwf	printf@ap
 19355  1D0B  0141               	movlb	1	; select bank1
 19356  1D0C  0821               	movf	(printf@fmt+1)^(0+128),w
 19357  1D0D  0140               	movlb	0	; select bank0
 19358  1D0E  00E4               	movwf	vfprintf@fmt+1
 19359  1D0F  0141               	movlb	1	; select bank1
 19360  1D10  0820               	movf	printf@fmt^(0+128),w
 19361  1D11  0140               	movlb	0	; select bank0
 19362  1D12  00E3               	movwf	vfprintf@fmt
 19363  1D13  306E               	movlw	(low (printf@ap| 0))& (0+255)
 19364  1D14  00EB               	movwf	??_printf
 19365  1D15  086B               	movf	??_printf,w
 19366  1D16  00E5               	movwf	vfprintf@ap
 19367  1D17  3000               	movlw	0
 19368  1D18  319F  27D1         	fcall	_vfprintf
 19369  1D1A  0008               	return
 19370  1D1B                     __end_of_printf:	
 19371                           
 19372                           	psect	text56
 19373  1FD1                     __ptext56:	
 19374 ;; *************** function _vfprintf *****************
 19375 ;; Defined at:
 19376 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 19377 ;; Parameters:    Size  Location     Type
 19378 ;;  fp              1    wreg     PTR struct _IO_FILE
 19379 ;;		 -> NULL(0), 
 19380 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
 19381 ;;		 -> STR_31(3), STR_30(3), STR_29(6), STR_28(7), 
 19382 ;;		 -> STR_27(8), STR_26(9), STR_25(10), STR_24(9), 
 19383 ;;		 -> STR_23(8), STR_22(7), STR_20(2), STR_19(5), 
 19384 ;;		 -> STR_18(4), STR_17(4), STR_16(3), STR_15(3), 
 19385 ;;		 -> STR_14(3), STR_13(3), STR_12(4), STR_11(4), 
 19386 ;;		 -> STR_10(4), STR_9(4), STR_8(6), STR_7(6), 
 19387 ;;		 -> STR_6(6), STR_5(6), STR_4(6), STR_3(6), 
 19388 ;;		 -> STR_2(6), STR_1(6), 
 19389 ;;  ap              1   69[BANK0 ] PTR PTR void 
 19390 ;;		 -> printf@ap(1), 
 19391 ;; Auto vars:     Size  Location     Type
 19392 ;;  fp              1   72[BANK0 ] PTR struct _IO_FILE
 19393 ;;		 -> NULL(0), 
 19394 ;;  cfmt            2   73[BANK0 ] PTR unsigned char 
 19395 ;;		 -> STR_31(3), STR_30(3), STR_29(6), STR_28(7), 
 19396 ;;		 -> STR_27(8), STR_26(9), STR_25(10), STR_24(9), 
 19397 ;;		 -> STR_23(8), STR_22(7), STR_20(2), STR_19(5), 
 19398 ;;		 -> STR_18(4), STR_17(4), STR_16(3), STR_15(3), 
 19399 ;;		 -> STR_14(3), STR_13(3), STR_12(4), STR_11(4), 
 19400 ;;		 -> STR_10(4), STR_9(4), STR_8(6), STR_7(6), 
 19401 ;;		 -> STR_6(6), STR_5(6), STR_4(6), STR_3(6), 
 19402 ;;		 -> STR_2(6), STR_1(6), 
 19403 ;; Return value:  Size  Location     Type
 19404 ;;                  2   67[BANK0 ] int 
 19405 ;; Registers used:
 19406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19407 ;; Tracked objects:
 19408 ;;		On entry : 0/0
 19409 ;;		On exit  : 0/0
 19410 ;;		Unchanged: 0/0
 19411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19412 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19413 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19414 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19415 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19416 ;;Total ram usage:        8 bytes
 19417 ;; Hardware stack levels used:    1
 19418 ;; Hardware stack levels required when called:   15
 19419 ;; This function calls:
 19420 ;;		_vfpfcnvrt
 19421 ;; This function is called by:
 19422 ;;		_printf
 19423 ;; This function uses a non-reentrant model
 19424 ;;
 19425                           
 19426                           
 19427                           ;psect for function _vfprintf
 19428  1FD1                     _vfprintf:	
 19429                           
 19430                           ;incstack = 0
 19431 ;; hardware stack exceeded
 19432                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19433                           ;vfprintf@fp stored from wreg
 19434  1FD1  0140               	movlb	0	; select bank0
 19435  1FD2  00E8               	movwf	vfprintf@fp
 19436                           
 19437                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 19438  1FD3  0864               	movf	vfprintf@fmt+1,w
 19439  1FD4  00EA               	movwf	vfprintf@cfmt+1
 19440  1FD5  0863               	movf	vfprintf@fmt,w
 19441  1FD6  00E9               	movwf	vfprintf@cfmt
 19442                           
 19443                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 19444  1FD7  0142               	movlb	2	; select bank2
 19445  1FD8  01A0               	clrf	_nout^(0+256)
 19446  1FD9  01A1               	clrf	(_nout+1)^(0+256)
 19447  1FDA                     l7630:	
 19448                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 19449                           
 19450                           
 19451                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 19452  1FDA  0140               	movlb	0	; select bank0
 19453  1FDB  0869               	movf	vfprintf@cfmt,w
 19454  1FDC  0084               	movwf	4
 19455  1FDD  086A               	movf	vfprintf@cfmt+1,w
 19456  1FDE  0085               	movwf	5
 19457  1FDF  0012               	moviw fsr0++
 19458  1FE0  1903               	btfsc	3,2
 19459  1FE1  2FF7               	goto	l7632
 19460                           
 19461                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 19462  1FE2  3069               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 19463  1FE3  00E6               	movwf	??_vfprintf
 19464  1FE4  0866               	movf	??_vfprintf,w
 19465  1FE5  00DA               	movwf	vfpfcnvrt@fmt
 19466  1FE6  0865               	movf	vfprintf@ap,w
 19467  1FE7  00E7               	movwf	??_vfprintf+1
 19468  1FE8  0867               	movf	??_vfprintf+1,w
 19469  1FE9  00DB               	movwf	vfpfcnvrt@ap
 19470  1FEA  0868               	movf	vfprintf@fp,w
 19471  1FEB  3196  26AC  319F   	fcall	_vfpfcnvrt
 19472  1FEE  0140               	movlb	0	; select bank0
 19473  1FEF  085A               	movf	?_vfpfcnvrt,w
 19474  1FF0  0142               	movlb	2	; select bank2
 19475  1FF1  07A0               	addwf	_nout^(0+256),f
 19476  1FF2  0140               	movlb	0	; select bank0
 19477  1FF3  085B               	movf	?_vfpfcnvrt+1,w
 19478  1FF4  0142               	movlb	2	; select bank2
 19479  1FF5  3DA1               	addwfc	(_nout+1)^(0+256),f
 19480  1FF6  2FDA               	goto	l7630
 19481  1FF7                     l7632:	
 19482                           
 19483                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 19484  1FF7  0142               	movlb	2	; select bank2
 19485  1FF8  0821               	movf	(_nout+1)^(0+256),w
 19486  1FF9  0140               	movlb	0	; select bank0
 19487  1FFA  00E4               	movwf	?_vfprintf+1
 19488  1FFB  0142               	movlb	2	; select bank2
 19489  1FFC  0820               	movf	_nout^(0+256),w
 19490  1FFD  0140               	movlb	0	; select bank0
 19491  1FFE  00E3               	movwf	?_vfprintf
 19492  1FFF  0008               	return
 19493  2000                     __end_of_vfprintf:	
 19494                           
 19495                           	psect	text57
 19496  16AC                     __ptext57:	
 19497 ;; *************** function _vfpfcnvrt *****************
 19498 ;; Defined at:
 19499 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 19500 ;; Parameters:    Size  Location     Type
 19501 ;;  fp              1    wreg     PTR struct _IO_FILE
 19502 ;;		 -> NULL(0), 
 19503 ;;  fmt             1   58[BANK0 ] PTR PTR unsigned char 
 19504 ;;		 -> vfprintf@cfmt(2), 
 19505 ;;  ap              1   59[BANK0 ] PTR PTR void 
 19506 ;;		 -> printf@ap(1), 
 19507 ;; Auto vars:     Size  Location     Type
 19508 ;;  fp              1   66[BANK0 ] PTR struct _IO_FILE
 19509 ;;		 -> NULL(0), 
 19510 ;;  llu             8    0        unsigned long long 
 19511 ;;  ll              8    0        long long 
 19512 ;;  f               4    0        long long 
 19513 ;;  ct              3    0        unsigned char [3]
 19514 ;;  vp              2    0        PTR void 
 19515 ;;  i               2    0        int 
 19516 ;;  done            2    0        int 
 19517 ;;  cp              2    0        PTR unsigned char 
 19518 ;;  c               1   65[BANK0 ] unsigned char 
 19519 ;; Return value:  Size  Location     Type
 19520 ;;                  2   58[BANK0 ] int 
 19521 ;; Registers used:
 19522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19523 ;; Tracked objects:
 19524 ;;		On entry : 0/0
 19525 ;;		On exit  : 0/0
 19526 ;;		Unchanged: 0/0
 19527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19528 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19529 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19530 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19531 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19532 ;;Total ram usage:        9 bytes
 19533 ;; Hardware stack levels used:    1
 19534 ;; Hardware stack levels required when called:   14
 19535 ;; This function calls:
 19536 ;;		_ctoa
 19537 ;;		_fputc
 19538 ;; This function is called by:
 19539 ;;		_vfprintf
 19540 ;; This function uses a non-reentrant model
 19541 ;;
 19542                           
 19543                           
 19544                           ;psect for function _vfpfcnvrt
 19545  16AC                     _vfpfcnvrt:	
 19546                           
 19547                           ;incstack = 0
 19548 ;; hardware stack exceeded
 19549                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19550                           ;vfpfcnvrt@fp stored from wreg
 19551  16AC  0140               	movlb	0	; select bank0
 19552  16AD  00E2               	movwf	vfpfcnvrt@fp
 19553                           
 19554                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 19555  16AE  085A               	movf	vfpfcnvrt@fmt,w
 19556  16AF  0086               	movwf	6
 19557  16B0  0187               	clrf	7
 19558  16B1  3F40               	moviw [0]fsr1
 19559  16B2  00DC               	movwf	??_vfpfcnvrt
 19560  16B3  3F41               	moviw [1]fsr1
 19561  16B4  00DD               	movwf	??_vfpfcnvrt+1
 19562  16B5  085C               	movf	??_vfpfcnvrt,w
 19563  16B6  0084               	movwf	4
 19564  16B7  085D               	movf	??_vfpfcnvrt+1,w
 19565  16B8  0085               	movwf	5
 19566  16B9  0012               	moviw fsr0++
 19567  16BA  3A25               	xorlw	37
 19568  16BB  1D03               	btfss	3,2
 19569  16BC  2F31               	goto	l7188
 19570                           
 19571                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 19572  16BD  085A               	movf	vfpfcnvrt@fmt,w
 19573  16BE  0086               	movwf	6
 19574  16BF  0187               	clrf	7
 19575  16C0  3001               	movlw	1
 19576  16C1  0781               	addwf	1,f
 19577  16C2  3141               	addfsr 1,1
 19578  16C3  1803               	skipnc
 19579  16C4  0A81               	incf	1,f
 19580                           
 19581                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 19582  16C5  0142               	movlb	2	; select bank2
 19583  16C6  01A2               	clrf	_width^(0+256)
 19584  16C7  01A3               	clrf	(_width+1)^(0+256)
 19585  16C8  01A6               	clrf	_flags^(0+256)
 19586  16C9  01A7               	clrf	(_flags+1)^(0+256)
 19587                           
 19588                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 19589  16CA  30FF               	movlw	255
 19590  16CB  00A4               	movwf	_prec^(0+256)
 19591  16CC  30FF               	movlw	255
 19592  16CD  00A5               	movwf	(_prec^(0+256)+1)
 19593                           
 19594                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 19595  16CE  0140               	movlb	0	; select bank0
 19596  16CF  085A               	movf	vfpfcnvrt@fmt,w
 19597  16D0  0086               	movwf	6
 19598  16D1  0187               	clrf	7
 19599  16D2  3F40               	moviw [0]fsr1
 19600  16D3  00DC               	movwf	??_vfpfcnvrt
 19601  16D4  3F41               	moviw [1]fsr1
 19602  16D5  00DD               	movwf	??_vfpfcnvrt+1
 19603  16D6  085C               	movf	??_vfpfcnvrt,w
 19604  16D7  0084               	movwf	4
 19605  16D8  085D               	movf	??_vfpfcnvrt+1,w
 19606  16D9  0085               	movwf	5
 19607  16DA  0012               	moviw fsr0++
 19608  16DB  3A63               	xorlw	99
 19609  16DC  1D03               	btfss	3,2
 19610  16DD  2EFF               	goto	l7172
 19611                           
 19612                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 19613  16DE  085A               	movf	vfpfcnvrt@fmt,w
 19614  16DF  0086               	movwf	6
 19615  16E0  0187               	clrf	7
 19616  16E1  3001               	movlw	1
 19617  16E2  0781               	addwf	1,f
 19618  16E3  3141               	addfsr 1,1
 19619  16E4  1803               	skipnc
 19620  16E5  0A81               	incf	1,f
 19621                           
 19622                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 19623  16E6  085B               	movf	vfpfcnvrt@ap,w
 19624  16E7  0086               	movwf	6
 19625  16E8  0187               	clrf	7
 19626  16E9  0801               	movf	1,w
 19627  16EA  0084               	movwf	4
 19628  16EB  0185               	clrf	5
 19629  16EC  3002               	movlw	2
 19630  16ED  0781               	addwf	1,f
 19631  16EE  0800               	movf	0,w
 19632  16EF  00DC               	movwf	??_vfpfcnvrt
 19633  16F0  085C               	movf	??_vfpfcnvrt,w
 19634  16F1  00E1               	movwf	vfpfcnvrt@c
 19635                           
 19636                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 19637  16F2  0861               	movf	vfpfcnvrt@c,w
 19638  16F3  00DC               	movwf	??_vfpfcnvrt
 19639  16F4  085C               	movf	??_vfpfcnvrt,w
 19640  16F5  00D4               	movwf	ctoa@c
 19641  16F6  0862               	movf	vfpfcnvrt@fp,w
 19642  16F7  3190  200E         	fcall	_ctoa
 19643  16F9  0140               	movlb	0	; select bank0
 19644  16FA  0855               	movf	?_ctoa+1,w
 19645  16FB  00DB               	movwf	?_vfpfcnvrt+1
 19646  16FC  0854               	movf	?_ctoa,w
 19647  16FD  00DA               	movwf	?_vfpfcnvrt
 19648  16FE  0008               	return
 19649  16FF                     l7172:	
 19650                           
 19651                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 19652  16FF  085A               	movf	vfpfcnvrt@fmt,w
 19653  1700  0086               	movwf	6
 19654  1701  0187               	clrf	7
 19655  1702  3F40               	moviw [0]fsr1
 19656  1703  00DC               	movwf	??_vfpfcnvrt
 19657  1704  3F41               	moviw [1]fsr1
 19658  1705  00DD               	movwf	??_vfpfcnvrt+1
 19659  1706  085C               	movf	??_vfpfcnvrt,w
 19660  1707  0084               	movwf	4
 19661  1708  085D               	movf	??_vfpfcnvrt+1,w
 19662  1709  0085               	movwf	5
 19663  170A  0012               	moviw fsr0++
 19664  170B  3A25               	xorlw	37
 19665  170C  1D03               	btfss	3,2
 19666  170D  2F26               	goto	l7182
 19667                           
 19668                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 19669  170E  085A               	movf	vfpfcnvrt@fmt,w
 19670  170F  0086               	movwf	6
 19671  1710  0187               	clrf	7
 19672  1711  3001               	movlw	1
 19673  1712  0781               	addwf	1,f
 19674  1713  3141               	addfsr 1,1
 19675  1714  1803               	skipnc
 19676  1715  0A81               	incf	1,f
 19677                           
 19678                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 19679  1716  3025               	movlw	37
 19680  1717  00BB               	movwf	fputc@c
 19681  1718  3000               	movlw	0
 19682  1719  00BC               	movwf	fputc@c+1
 19683  171A  0862               	movf	vfpfcnvrt@fp,w
 19684  171B  00DC               	movwf	??_vfpfcnvrt
 19685  171C  085C               	movf	??_vfpfcnvrt,w
 19686  171D  00BD               	movwf	fputc@fp
 19687  171E  3191  2143         	fcall	_fputc
 19688  1720                     l7178:	
 19689                           
 19690                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 19691  1720  3001               	movlw	1
 19692  1721  0140               	movlb	0	; select bank0
 19693  1722  00DA               	movwf	?_vfpfcnvrt
 19694  1723  3000               	movlw	0
 19695  1724  00DB               	movwf	?_vfpfcnvrt+1
 19696  1725  0008               	return
 19697  1726                     l7182:	
 19698                           
 19699                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 19700  1726  085A               	movf	vfpfcnvrt@fmt,w
 19701  1727  0086               	movwf	6
 19702  1728  0187               	clrf	7
 19703  1729  3001               	movlw	1
 19704  172A  0781               	addwf	1,f
 19705  172B  3141               	addfsr 1,1
 19706  172C  1803               	skipnc
 19707  172D  0A81               	incf	1,f
 19708                           
 19709                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 19710  172E  01DA               	clrf	?_vfpfcnvrt
 19711  172F  01DB               	clrf	?_vfpfcnvrt+1
 19712  1730  0008               	return
 19713  1731                     l7188:	
 19714                           
 19715                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 19716  1731  085A               	movf	vfpfcnvrt@fmt,w
 19717  1732  0086               	movwf	6
 19718  1733  0187               	clrf	7
 19719  1734  3F40               	moviw [0]fsr1
 19720  1735  00DC               	movwf	??_vfpfcnvrt
 19721  1736  3F41               	moviw [1]fsr1
 19722  1737  00DD               	movwf	??_vfpfcnvrt+1
 19723  1738  085C               	movf	??_vfpfcnvrt,w
 19724  1739  0084               	movwf	4
 19725  173A  085D               	movf	??_vfpfcnvrt+1,w
 19726  173B  0085               	movwf	5
 19727  173C  0800               	movf	0,w	;code access
 19728  173D  00DE               	movwf	??_vfpfcnvrt+2
 19729  173E  01DF               	clrf	??_vfpfcnvrt+3
 19730  173F  085E               	movf	??_vfpfcnvrt+2,w
 19731  1740  00BB               	movwf	fputc@c
 19732  1741  085F               	movf	??_vfpfcnvrt+3,w
 19733  1742  00BC               	movwf	fputc@c+1
 19734  1743  0862               	movf	vfpfcnvrt@fp,w
 19735  1744  00E0               	movwf	??_vfpfcnvrt+4
 19736  1745  0860               	movf	??_vfpfcnvrt+4,w
 19737  1746  00BD               	movwf	fputc@fp
 19738  1747  3191  2143  3196   	fcall	_fputc
 19739                           
 19740                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 19741  174A  0140               	movlb	0	; select bank0
 19742  174B  085A               	movf	vfpfcnvrt@fmt,w
 19743  174C  0086               	movwf	6
 19744  174D  0187               	clrf	7
 19745  174E  3001               	movlw	1
 19746  174F  0781               	addwf	1,f
 19747  1750  3141               	addfsr 1,1
 19748  1751  1803               	skipnc
 19749  1752  0A81               	incf	1,f
 19750  1753  2F20               	goto	l7178
 19751  1754                     __end_of_vfpfcnvrt:	
 19752                           
 19753                           	psect	text58
 19754  100E                     __ptext58:	
 19755 ;; *************** function _ctoa *****************
 19756 ;; Defined at:
 19757 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 19758 ;; Parameters:    Size  Location     Type
 19759 ;;  fp              1    wreg     PTR struct _IO_FILE
 19760 ;;		 -> NULL(0), 
 19761 ;;  c               1   52[BANK0 ] unsigned char 
 19762 ;; Auto vars:     Size  Location     Type
 19763 ;;  fp              1   57[BANK0 ] PTR struct _IO_FILE
 19764 ;;		 -> NULL(0), 
 19765 ;;  w               2   55[BANK0 ] int 
 19766 ;;  l               2    0        int 
 19767 ;; Return value:  Size  Location     Type
 19768 ;;                  2   52[BANK0 ] int 
 19769 ;; Registers used:
 19770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19771 ;; Tracked objects:
 19772 ;;		On entry : 0/0
 19773 ;;		On exit  : 0/0
 19774 ;;		Unchanged: 0/0
 19775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19776 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19777 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19778 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19779 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19780 ;;Total ram usage:        6 bytes
 19781 ;; Hardware stack levels used:    1
 19782 ;; Hardware stack levels required when called:   13
 19783 ;; This function calls:
 19784 ;;		_pad
 19785 ;; This function is called by:
 19786 ;;		_vfpfcnvrt
 19787 ;; This function uses a non-reentrant model
 19788 ;;
 19789                           
 19790                           
 19791                           ;psect for function _ctoa
 19792  100E                     _ctoa:	
 19793                           
 19794                           ;incstack = 0
 19795 ;; hardware stack exceeded
 19796                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19797                           ;ctoa@fp stored from wreg
 19798  100E  0140               	movlb	0	; select bank0
 19799  100F  00D9               	movwf	ctoa@fp
 19800                           
 19801                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 19802  1010  0142               	movlb	2	; select bank2
 19803  1011  0822               	movf	_width^(0+256),w
 19804  1012  0423               	iorwf	(_width+1)^(0+256),w
 19805  1013  1D03               	btfss	3,2
 19806  1014  281D               	goto	l7130
 19807  1015  0823               	movf	(_width+1)^(0+256),w
 19808  1016  0140               	movlb	0	; select bank0
 19809  1017  00D8               	movwf	ctoa@w+1
 19810  1018  0142               	movlb	2	; select bank2
 19811  1019  0822               	movf	_width^(0+256),w
 19812  101A  0140               	movlb	0	; select bank0
 19813  101B  00D7               	movwf	ctoa@w
 19814  101C  2826               	goto	l7132
 19815  101D                     l7130:	
 19816  101D  0822               	movf	_width^(0+256),w
 19817  101E  3EFF               	addlw	255
 19818  101F  0140               	movlb	0	; select bank0
 19819  1020  00D7               	movwf	ctoa@w
 19820  1021  30FF               	movlw	255
 19821  1022  0142               	movlb	2	; select bank2
 19822  1023  3D23               	addwfc	(_width+1)^(0+256),w
 19823  1024  0140               	movlb	0	; select bank0
 19824  1025  00D8               	movwf	ctoa@w+1
 19825  1026                     l7132:	
 19826                           
 19827                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 19828  1026  0854               	movf	ctoa@c,w
 19829  1027  00D6               	movwf	??_ctoa
 19830  1028  0856               	movf	??_ctoa,w
 19831  1029  0145               	movlb	5	; select bank5
 19832  102A  00A0               	movwf	_dbuf^(0+640)
 19833                           
 19834                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 19835  102B  01A1               	clrf	(_dbuf^(0+640)+1)
 19836                           
 19837                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 19838  102C  30A0               	movlw	(low (_dbuf| (0+512)))& (0+255)
 19839  102D  0140               	movlb	0	; select bank0
 19840  102E  00D6               	movwf	??_ctoa
 19841  102F  0856               	movf	??_ctoa,w
 19842  1030  00CB               	movwf	pad@buf
 19843  1031  0858               	movf	ctoa@w+1,w
 19844  1032  00CD               	movwf	pad@p+1
 19845  1033  0857               	movf	ctoa@w,w
 19846  1034  00CC               	movwf	pad@p
 19847  1035  0859               	movf	ctoa@fp,w
 19848  1036  3193  231A         	fcall	_pad
 19849  1038  0140               	movlb	0	; select bank0
 19850  1039  084C               	movf	?_pad+1,w
 19851  103A  00D5               	movwf	?_ctoa+1
 19852  103B  084B               	movf	?_pad,w
 19853  103C  00D4               	movwf	?_ctoa
 19854  103D  0008               	return
 19855  103E                     __end_of_ctoa:	
 19856                           
 19857                           	psect	text59
 19858  131A                     __ptext59:	
 19859 ;; *************** function _pad *****************
 19860 ;; Defined at:
 19861 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 19862 ;; Parameters:    Size  Location     Type
 19863 ;;  fp              1    wreg     PTR struct _IO_FILE
 19864 ;;		 -> NULL(0), 
 19865 ;;  buf             1   43[BANK0 ] PTR unsigned char 
 19866 ;;		 -> dbuf(32), 
 19867 ;;  p               2   44[BANK0 ] int 
 19868 ;; Auto vars:     Size  Location     Type
 19869 ;;  fp              1   51[BANK0 ] PTR struct _IO_FILE
 19870 ;;		 -> NULL(0), 
 19871 ;;  w               2   49[BANK0 ] int 
 19872 ;;  i               2   47[BANK0 ] int 
 19873 ;; Return value:  Size  Location     Type
 19874 ;;                  2   43[BANK0 ] int 
 19875 ;; Registers used:
 19876 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19877 ;; Tracked objects:
 19878 ;;		On entry : 0/0
 19879 ;;		On exit  : 0/0
 19880 ;;		Unchanged: 0/0
 19881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19882 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19883 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19884 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19885 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19886 ;;Total ram usage:        9 bytes
 19887 ;; Hardware stack levels used:    1
 19888 ;; Hardware stack levels required when called:   12
 19889 ;; This function calls:
 19890 ;;		_fputc
 19891 ;;		_fputs
 19892 ;;		_strlen
 19893 ;; This function is called by:
 19894 ;;		_ctoa
 19895 ;; This function uses a non-reentrant model
 19896 ;;
 19897                           
 19898                           
 19899                           ;psect for function _pad
 19900  131A                     _pad:	
 19901                           
 19902                           ;incstack = 0
 19903 ;; hardware stack exceeded
 19904                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19905                           ;pad@fp stored from wreg
 19906  131A  0140               	movlb	0	; select bank0
 19907  131B  00D3               	movwf	pad@fp
 19908                           
 19909                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 19910  131C  0142               	movlb	2	; select bank2
 19911  131D  1C26               	btfss	_flags^(0+256),0
 19912  131E  2B28               	goto	l7108
 19913                           
 19914                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 19915  131F  0140               	movlb	0	; select bank0
 19916  1320  0853               	movf	pad@fp,w
 19917  1321  00CE               	movwf	??_pad
 19918  1322  084E               	movf	??_pad,w
 19919  1323  00C3               	movwf	fputs@fp
 19920  1324  084B               	movf	pad@buf,w
 19921  1325  319F  272E  3193   	fcall	_fputs
 19922  1328                     l7108:	
 19923                           
 19924                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 19925  1328  0140               	movlb	0	; select bank0
 19926  1329  1BCD               	btfsc	pad@p+1,7
 19927  132A  2B30               	goto	l7112
 19928  132B  084D               	movf	pad@p+1,w
 19929  132C  00D2               	movwf	pad@w+1
 19930  132D  084C               	movf	pad@p,w
 19931  132E  00D1               	movwf	pad@w
 19932  132F  2B32               	goto	l1673
 19933  1330                     l7112:	
 19934  1330  01D1               	clrf	pad@w
 19935  1331  01D2               	clrf	pad@w+1
 19936  1332                     l1673:	
 19937                           
 19938                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 19939  1332  01CF               	clrf	pad@i
 19940  1333  01D0               	clrf	pad@i+1
 19941  1334                     l7118:	
 19942                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19943                           
 19944                           
 19945                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19946  1334  0850               	movf	pad@i+1,w
 19947  1335  3A80               	xorlw	128
 19948  1336  00CE               	movwf	??_pad
 19949  1337  0852               	movf	pad@w+1,w
 19950  1338  3A80               	xorlw	128
 19951  1339  024E               	subwf	??_pad,w
 19952  133A  1D03               	skipz
 19953  133B  2B3E               	goto	u6205
 19954  133C  0851               	movf	pad@w,w
 19955  133D  024F               	subwf	pad@i,w
 19956  133E                     u6205:	
 19957  133E  1803               	btfsc	3,0
 19958  133F  2B52               	goto	l1676
 19959                           
 19960                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 19961  1340  3020               	movlw	32
 19962  1341  0140               	movlb	0	; select bank0
 19963  1342  00BB               	movwf	fputc@c
 19964  1343  3000               	movlw	0
 19965  1344  00BC               	movwf	fputc@c+1
 19966  1345  0853               	movf	pad@fp,w
 19967  1346  00CE               	movwf	??_pad
 19968  1347  084E               	movf	??_pad,w
 19969  1348  00BD               	movwf	fputc@fp
 19970  1349  3191  2143  3193   	fcall	_fputc
 19971                           
 19972                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 19973  134C  3001               	movlw	1
 19974  134D  0140               	movlb	0	; select bank0
 19975  134E  07CF               	addwf	pad@i,f
 19976  134F  3000               	movlw	0
 19977  1350  3DD0               	addwfc	pad@i+1,f
 19978  1351  2B34               	goto	l7118
 19979  1352                     l1676:	
 19980                           
 19981                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 19982  1352  0142               	movlb	2	; select bank2
 19983  1353  1826               	btfsc	_flags^(0+256),0
 19984  1354  2B5E               	goto	l7122
 19985                           
 19986                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 19987  1355  0140               	movlb	0	; select bank0
 19988  1356  0853               	movf	pad@fp,w
 19989  1357  00CE               	movwf	??_pad
 19990  1358  084E               	movf	??_pad,w
 19991  1359  00C3               	movwf	fputs@fp
 19992  135A  084B               	movf	pad@buf,w
 19993  135B  319F  272E  3193   	fcall	_fputs
 19994  135E                     l7122:	
 19995                           
 19996                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 19997  135E  0140               	movlb	0	; select bank0
 19998  135F  084B               	movf	pad@buf,w
 19999  1360  00A0               	movwf	strlen@s
 20000  1361  3002               	movlw	2
 20001  1362  00A1               	movwf	strlen@s+1
 20002  1363  319D  255F         	fcall	_strlen
 20003  1365  0140               	movlb	0	; select bank0
 20004  1366  0851               	movf	pad@w,w
 20005  1367  0720               	addwf	?_strlen,w
 20006  1368  00CB               	movwf	?_pad
 20007  1369  0852               	movf	pad@w+1,w
 20008  136A  3D21               	addwfc	?_strlen+1,w
 20009  136B  00CC               	movwf	?_pad+1
 20010  136C  0008               	return
 20011  136D                     __end_of_pad:	
 20012                           
 20013                           	psect	text60
 20014  1D5F                     __ptext60:	
 20015 ;; *************** function _strlen *****************
 20016 ;; Defined at:
 20017 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 20018 ;; Parameters:    Size  Location     Type
 20019 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 20020 ;;		 -> dbuf(32), STR_21(9), 
 20021 ;; Auto vars:     Size  Location     Type
 20022 ;;  a               2    3[BANK0 ] PTR const unsigned char 
 20023 ;;		 -> dbuf(32), STR_21(9), 
 20024 ;; Return value:  Size  Location     Type
 20025 ;;                  2    0[BANK0 ] unsigned int 
 20026 ;; Registers used:
 20027 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 20028 ;; Tracked objects:
 20029 ;;		On entry : 0/0
 20030 ;;		On exit  : 0/0
 20031 ;;		Unchanged: 0/0
 20032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20033 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20034 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20035 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20036 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20037 ;;Total ram usage:        5 bytes
 20038 ;; Hardware stack levels used:    1
 20039 ;; Hardware stack levels required when called:    4
 20040 ;; This function calls:
 20041 ;;		Nothing
 20042 ;; This function is called by:
 20043 ;;		_pad
 20044 ;;		_TM1650_scrollPrint
 20045 ;; This function uses a non-reentrant model
 20046 ;;
 20047                           
 20048                           
 20049                           ;psect for function _strlen
 20050  1D5F                     _strlen:	
 20051                           
 20052                           ;incstack = 0
 20053                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 20054  1D5F  0140               	movlb	0	; select bank0
 20055  1D60  0821               	movf	strlen@s+1,w
 20056  1D61  00A4               	movwf	strlen@a+1
 20057  1D62  0820               	movf	strlen@s,w
 20058  1D63  00A3               	movwf	strlen@a
 20059  1D64                     l7090:	
 20060  1D64  0820               	movf	strlen@s,w
 20061  1D65  0084               	movwf	4
 20062  1D66  0821               	movf	strlen@s+1,w
 20063  1D67  0085               	movwf	5
 20064  1D68  0012               	moviw fsr0++
 20065  1D69  1903               	btfsc	3,2
 20066  1D6A  2D70               	goto	l7092
 20067  1D6B  3001               	movlw	1
 20068  1D6C  07A0               	addwf	strlen@s,f
 20069  1D6D  3000               	movlw	0
 20070  1D6E  3DA1               	addwfc	strlen@s+1,f
 20071  1D6F  2D64               	goto	l7090
 20072  1D70                     l7092:	
 20073  1D70  0823               	movf	strlen@a,w
 20074  1D71  0220               	subwf	strlen@s,w
 20075  1D72  00A0               	movwf	?_strlen
 20076  1D73  0824               	movf	strlen@a+1,w
 20077  1D74  3B21               	subwfb	strlen@s+1,w
 20078  1D75  00A1               	movwf	?_strlen+1
 20079  1D76  0008               	return
 20080  1D77                     __end_of_strlen:	
 20081                           
 20082                           	psect	text61
 20083  1F2E                     __ptext61:	
 20084 ;; *************** function _fputs *****************
 20085 ;; Defined at:
 20086 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 20087 ;; Parameters:    Size  Location     Type
 20088 ;;  s               1    wreg     PTR const unsigned char 
 20089 ;;		 -> dbuf(32), 
 20090 ;;  fp              1   35[BANK0 ] PTR struct _IO_FILE
 20091 ;;		 -> NULL(0), 
 20092 ;; Auto vars:     Size  Location     Type
 20093 ;;  s               1   42[BANK0 ] PTR const unsigned char 
 20094 ;;		 -> dbuf(32), 
 20095 ;;  i               2   40[BANK0 ] int 
 20096 ;;  c               1   39[BANK0 ] unsigned char 
 20097 ;; Return value:  Size  Location     Type
 20098 ;;                  2   35[BANK0 ] int 
 20099 ;; Registers used:
 20100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20101 ;; Tracked objects:
 20102 ;;		On entry : 0/0
 20103 ;;		On exit  : 0/0
 20104 ;;		Unchanged: 0/0
 20105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20106 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20107 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20108 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20109 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20110 ;;Total ram usage:        8 bytes
 20111 ;; Hardware stack levels used:    1
 20112 ;; Hardware stack levels required when called:   11
 20113 ;; This function calls:
 20114 ;;		_fputc
 20115 ;; This function is called by:
 20116 ;;		_pad
 20117 ;; This function uses a non-reentrant model
 20118 ;;
 20119                           
 20120                           
 20121                           ;psect for function _fputs
 20122  1F2E                     _fputs:	
 20123                           
 20124                           ;incstack = 0
 20125 ;; hardware stack exceeded
 20126                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20127                           ;fputs@s stored from wreg
 20128  1F2E  0140               	movlb	0	; select bank0
 20129  1F2F  00CA               	movwf	fputs@s
 20130  1F30  01C8               	clrf	fputs@i
 20131  1F31  01C9               	clrf	fputs@i+1
 20132  1F32                     l7102:	
 20133  1F32  0848               	movf	fputs@i,w
 20134  1F33  074A               	addwf	fputs@s,w
 20135  1F34  00C4               	movwf	??_fputs
 20136  1F35  0844               	movf	??_fputs,w
 20137  1F36  0086               	movwf	6
 20138  1F37  3002               	movlw	2	; select bank4/5
 20139  1F38  0087               	movwf	7
 20140  1F39  0801               	movf	1,w
 20141  1F3A  00C5               	movwf	??_fputs+1
 20142  1F3B  0845               	movf	??_fputs+1,w
 20143  1F3C  00C7               	movwf	fputs@c
 20144  1F3D  0847               	movf	fputs@c,w
 20145  1F3E  1903               	btfsc	3,2
 20146  1F3F  0008               	return
 20147  1F40  0847               	movf	fputs@c,w
 20148  1F41  00C4               	movwf	??_fputs
 20149  1F42  01C5               	clrf	??_fputs+1
 20150  1F43  0844               	movf	??_fputs,w
 20151  1F44  00BB               	movwf	fputc@c
 20152  1F45  0845               	movf	??_fputs+1,w
 20153  1F46  00BC               	movwf	fputc@c+1
 20154  1F47  0843               	movf	fputs@fp,w
 20155  1F48  00C6               	movwf	??_fputs+2
 20156  1F49  0846               	movf	??_fputs+2,w
 20157  1F4A  00BD               	movwf	fputc@fp
 20158  1F4B  3191  2143  319F   	fcall	_fputc
 20159  1F4E  3001               	movlw	1
 20160  1F4F  0140               	movlb	0	; select bank0
 20161  1F50  07C8               	addwf	fputs@i,f
 20162  1F51  3000               	movlw	0
 20163  1F52  3DC9               	addwfc	fputs@i+1,f
 20164  1F53  2F32               	goto	l7102
 20165  1F54                     __end_of_fputs:	
 20166                           
 20167                           	psect	text62
 20168  1143                     __ptext62:	
 20169 ;; *************** function _fputc *****************
 20170 ;; Defined at:
 20171 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 20172 ;; Parameters:    Size  Location     Type
 20173 ;;  c               2   27[BANK0 ] int 
 20174 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
 20175 ;;		 -> NULL(0), 
 20176 ;; Auto vars:     Size  Location     Type
 20177 ;;		None
 20178 ;; Return value:  Size  Location     Type
 20179 ;;                  2   27[BANK0 ] int 
 20180 ;; Registers used:
 20181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20182 ;; Tracked objects:
 20183 ;;		On entry : 0/0
 20184 ;;		On exit  : 0/0
 20185 ;;		Unchanged: 0/0
 20186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20187 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20189 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20190 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20191 ;;Total ram usage:        8 bytes
 20192 ;; Hardware stack levels used:    1
 20193 ;; Hardware stack levels required when called:   10
 20194 ;; This function calls:
 20195 ;;		_putch
 20196 ;; This function is called by:
 20197 ;;		_pad
 20198 ;;		_vfpfcnvrt
 20199 ;;		_fputs
 20200 ;; This function uses a non-reentrant model
 20201 ;;
 20202                           
 20203                           
 20204                           ;psect for function _fputc
 20205  1143                     _fputc:	
 20206                           
 20207                           ;incstack = 0
 20208                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20209  1143  0140               	movlb	0	; select bank0
 20210  1144  083D               	movf	fputc@fp,w
 20211  1145  1D03               	btfss	3,2
 20212  1146  083D               	movf	fputc@fp,w
 20213  1147  1D03               	btfss	3,2
 20214  1148  294D               	goto	l7078
 20215  1149  083B               	movf	fputc@c,w
 20216  114A  319E  26E6         	fcall	_putch
 20217  114C  0008               	return
 20218  114D                     l7078:	
 20219  114D  083D               	movf	fputc@fp,w
 20220  114E  3E03               	addlw	3
 20221  114F  0086               	movwf	6
 20222  1150  0187               	clrf	7
 20223  1151  0016               	moviw fsr1++
 20224  1152  0401               	iorwf	1,w
 20225  1153  1903               	btfsc	3,2
 20226  1154  2970               	goto	l7082
 20227  1155  083D               	movf	fputc@fp,w
 20228  1156  3E03               	addlw	3
 20229  1157  0086               	movwf	6
 20230  1158  0187               	clrf	7
 20231  1159  3F40               	moviw [0]fsr1
 20232  115A  00BE               	movwf	??_fputc
 20233  115B  3F41               	moviw [1]fsr1
 20234  115C  00BF               	movwf	??_fputc+1
 20235  115D  0A3D               	incf	fputc@fp,w
 20236  115E  0086               	movwf	6
 20237  115F  0187               	clrf	7
 20238  1160  3F40               	moviw [0]fsr1
 20239  1161  00C0               	movwf	??_fputc+2
 20240  1162  3F41               	moviw [1]fsr1
 20241  1163  00C1               	movwf	??_fputc+3
 20242  1164  0841               	movf	??_fputc+3,w
 20243  1165  3A80               	xorlw	128
 20244  1166  00C2               	movwf	??_fputc+4
 20245  1167  083F               	movf	??_fputc+1,w
 20246  1168  3A80               	xorlw	128
 20247  1169  0242               	subwf	??_fputc+4,w
 20248  116A  1D03               	skipz
 20249  116B  296E               	goto	u6155
 20250  116C  083E               	movf	??_fputc,w
 20251  116D  0240               	subwf	??_fputc+2,w
 20252  116E                     u6155:	
 20253  116E  1803               	skipnc
 20254  116F  0008               	return
 20255  1170                     l7082:	
 20256  1170  0140               	movlb	0	; select bank0
 20257  1171  0A3D               	incf	fputc@fp,w
 20258  1172  0086               	movwf	6
 20259  1173  0187               	clrf	7
 20260  1174  3001               	movlw	1
 20261  1175  0781               	addwf	1,f
 20262  1176  3141               	addfsr 1,1
 20263  1177  1803               	skipnc
 20264  1178  0A81               	incf	1,f
 20265  1179  0008               	return
 20266  117A                     __end_of_fputc:	
 20267                           
 20268                           	psect	text63
 20269  1EE6                     __ptext63:	
 20270 ;; *************** function _putch *****************
 20271 ;; Defined at:
 20272 ;;		line 166 in file "tm1650.c"
 20273 ;; Parameters:    Size  Location     Type
 20274 ;;  n               1    wreg     unsigned char 
 20275 ;; Auto vars:     Size  Location     Type
 20276 ;;  n               1   26[BANK0 ] unsigned char 
 20277 ;; Return value:  Size  Location     Type
 20278 ;;                  1    wreg      void 
 20279 ;; Registers used:
 20280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20281 ;; Tracked objects:
 20282 ;;		On entry : 0/0
 20283 ;;		On exit  : 0/0
 20284 ;;		Unchanged: 0/0
 20285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20287 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20288 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20289 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20290 ;;Total ram usage:        2 bytes
 20291 ;; Hardware stack levels used:    1
 20292 ;; Hardware stack levels required when called:    9
 20293 ;; This function calls:
 20294 ;;		_TM1650_setDigit
 20295 ;; This function is called by:
 20296 ;;		_fputc
 20297 ;; This function uses a non-reentrant model
 20298 ;;
 20299                           
 20300                           
 20301                           ;psect for function _putch
 20302  1EE6                     _putch:	
 20303                           
 20304                           ;incstack = 0
 20305                           ; Regs used in _putch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20306                           ;putch@n stored from wreg
 20307  1EE6  0140               	movlb	0	; select bank0
 20308  1EE7  00BA               	movwf	putch@n
 20309                           
 20310                           ;tm1650.c: 168:     if(position > 3 || n == '\r' || n == '\0')
 20311  1EE8  3004               	movlw	4
 20312  1EE9  0141               	movlb	1	; select bank1
 20313  1EEA  0259               	subwf	_position^(0+128),w
 20314  1EEB  1803               	skipnc
 20315  1EEC  2EF4               	goto	l7064
 20316  1EED  300D               	movlw	13
 20317  1EEE  0140               	movlb	0	; select bank0
 20318  1EEF  063A               	xorwf	putch@n,w
 20319  1EF0  1D03               	btfss	3,2
 20320  1EF1  083A               	movf	putch@n,w
 20321  1EF2  1D03               	btfss	3,2
 20322  1EF3  2EF6               	goto	l7066
 20323  1EF4                     l7064:	
 20324                           
 20325                           ;tm1650.c: 169:         position = 0;
 20326  1EF4  0141               	movlb	1	; select bank1
 20327  1EF5  01D9               	clrf	_position^(0+128)
 20328  1EF6                     l7066:	
 20329                           
 20330                           ;tm1650.c: 171:     if(n != '\r'){
 20331  1EF6  300D               	movlw	13
 20332  1EF7  0140               	movlb	0	; select bank0
 20333  1EF8  063A               	xorwf	putch@n,w
 20334  1EF9  1903               	btfsc	3,2
 20335  1EFA  0008               	return
 20336                           
 20337                           ;tm1650.c: 172:         TM1650_setDigit(position, n);
 20338  1EFB  083A               	movf	putch@n,w
 20339  1EFC  00B9               	movwf	??_putch
 20340  1EFD  0839               	movf	??_putch,w
 20341  1EFE  00B6               	movwf	TM1650_setDigit@data
 20342  1EFF  0141               	movlb	1	; select bank1
 20343  1F00  0859               	movf	_position^(0+128),w
 20344  1F01  319C  24A5         	fcall	_TM1650_setDigit
 20345                           
 20346                           ;tm1650.c: 173:         position++;
 20347  1F03  3001               	movlw	1
 20348  1F04  0140               	movlb	0	; select bank0
 20349  1F05  00B9               	movwf	??_putch
 20350  1F06  0839               	movf	??_putch,w
 20351  1F07  0141               	movlb	1	; select bank1
 20352  1F08  07D9               	addwf	_position^(0+128),f
 20353  1F09  0008               	return
 20354  1F0A                     __end_of_putch:	
 20355                           
 20356                           	psect	text64
 20357  1CA5                     __ptext64:	
 20358 ;; *************** function _TM1650_setDigit *****************
 20359 ;; Defined at:
 20360 ;;		line 95 in file "tm1650.c"
 20361 ;; Parameters:    Size  Location     Type
 20362 ;;  digit           1    wreg     unsigned char 
 20363 ;;  data            1   22[BANK0 ] unsigned char 
 20364 ;; Auto vars:     Size  Location     Type
 20365 ;;  digit           1   24[BANK0 ] unsigned char 
 20366 ;; Return value:  Size  Location     Type
 20367 ;;                  1    wreg      void 
 20368 ;; Registers used:
 20369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20370 ;; Tracked objects:
 20371 ;;		On entry : 0/0
 20372 ;;		On exit  : 0/0
 20373 ;;		Unchanged: 0/0
 20374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20375 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20376 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20377 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20378 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20379 ;;Total ram usage:        3 bytes
 20380 ;; Hardware stack levels used:    1
 20381 ;; Hardware stack levels required when called:    8
 20382 ;; This function calls:
 20383 ;;		_writeData
 20384 ;; This function is called by:
 20385 ;;		_putch
 20386 ;; This function uses a non-reentrant model
 20387 ;;
 20388                           
 20389                           
 20390                           ;psect for function _TM1650_setDigit
 20391  1CA5                     _TM1650_setDigit:	
 20392                           
 20393                           ;incstack = 0
 20394                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20395                           ;TM1650_setDigit@digit stored from wreg
 20396  1CA5  0140               	movlb	0	; select bank0
 20397  1CA6  00B8               	movwf	TM1650_setDigit@digit
 20398                           
 20399                           ;tm1650.c: 97:     writeData(digit + 0x34, charTable[data - 32]);
 20400  1CA7  0836               	movf	TM1650_setDigit@data,w
 20401  1CA8  3EE0               	addlw	low ((_charTable+65504)| (0+32768))
 20402  1CA9  0084               	movwf	4
 20403  1CAA  3097               	movlw	high ((_charTable+65504)| (0+32768))
 20404  1CAB  1803               	skipnc
 20405  1CAC  3E01               	addlw	1
 20406  1CAD  0085               	movwf	5
 20407  1CAE  0800               	movf	0,w	;code access
 20408  1CAF  00B7               	movwf	??_TM1650_setDigit
 20409  1CB0  0837               	movf	??_TM1650_setDigit,w
 20410  1CB1  00B0               	movwf	writeData@data
 20411  1CB2  0838               	movf	TM1650_setDigit@digit,w
 20412  1CB3  3E34               	addlw	52
 20413  1CB4  319D  25AD         	fcall	_writeData
 20414  1CB6  0008               	return
 20415  1CB7                     __end_of_TM1650_setDigit:	
 20416                           
 20417                           	psect	text65
 20418  149A                     __ptext65:	
 20419 ;; *************** function _TM1650_fastPrintNum_2digit *****************
 20420 ;; Defined at:
 20421 ;;		line 136 in file "tm1650.c"
 20422 ;; Parameters:    Size  Location     Type
 20423 ;;  num             1    wreg     unsigned char 
 20424 ;; Auto vars:     Size  Location     Type
 20425 ;;  num             1   25[BANK0 ] unsigned char 
 20426 ;; Return value:  Size  Location     Type
 20427 ;;                  1    wreg      void 
 20428 ;; Registers used:
 20429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20430 ;; Tracked objects:
 20431 ;;		On entry : 0/0
 20432 ;;		On exit  : 0/0
 20433 ;;		Unchanged: 0/0
 20434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20436 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20437 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20438 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20439 ;;Total ram usage:        4 bytes
 20440 ;; Hardware stack levels used:    1
 20441 ;; Hardware stack levels required when called:    8
 20442 ;; This function calls:
 20443 ;;		___awdiv
 20444 ;;		___awmod
 20445 ;;		_writeData
 20446 ;; This function is called by:
 20447 ;;		_CONTROL_BEAT
 20448 ;;		_CONTROL_ANIMATION
 20449 ;; This function uses a non-reentrant model
 20450 ;;
 20451                           
 20452                           
 20453                           ;psect for function _TM1650_fastPrintNum_2digit
 20454  149A                     _TM1650_fastPrintNum_2digit:	
 20455                           
 20456                           ;incstack = 0
 20457                           ; Regs used in _TM1650_fastPrintNum_2digit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20458                           ;TM1650_fastPrintNum_2digit@num stored from wreg
 20459  149A  0140               	movlb	0	; select bank0
 20460  149B  00B9               	movwf	TM1650_fastPrintNum_2digit@num
 20461                           
 20462                           ;tm1650.c: 138:     if(num > 99){
 20463  149C  3064               	movlw	100
 20464  149D  0239               	subwf	TM1650_fastPrintNum_2digit@num,w
 20465  149E  1C03               	skipc
 20466  149F  2CC3               	goto	l7996
 20467                           
 20468                           ;tm1650.c: 139:         writeData(0x34, 0x79);
 20469  14A0  3079               	movlw	121
 20470  14A1  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 20471  14A2  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 20472  14A3  00B0               	movwf	writeData@data
 20473  14A4  3034               	movlw	52
 20474  14A5  319D  25AD  3194   	fcall	_writeData
 20475                           
 20476                           ;tm1650.c: 140:         writeData(0x35, 0x79);
 20477  14A8  3079               	movlw	121
 20478  14A9  0140               	movlb	0	; select bank0
 20479  14AA  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 20480  14AB  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 20481  14AC  00B0               	movwf	writeData@data
 20482  14AD  3035               	movlw	53
 20483  14AE  319D  25AD  3194   	fcall	_writeData
 20484                           
 20485                           ;tm1650.c: 141:         writeData(0x36, 0x79);
 20486  14B1  3079               	movlw	121
 20487  14B2  0140               	movlb	0	; select bank0
 20488  14B3  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 20489  14B4  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 20490  14B5  00B0               	movwf	writeData@data
 20491  14B6  3036               	movlw	54
 20492  14B7  319D  25AD  3194   	fcall	_writeData
 20493                           
 20494                           ;tm1650.c: 142:         writeData(0x37, 0x79);
 20495  14BA  3079               	movlw	121
 20496  14BB  0140               	movlb	0	; select bank0
 20497  14BC  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 20498  14BD  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 20499  14BE  00B0               	movwf	writeData@data
 20500  14BF  3037               	movlw	55
 20501  14C0  319D  25AD         	fcall	_writeData
 20502  14C2  0008               	return
 20503  14C3                     l7996:	
 20504                           
 20505                           ;tm1650.c: 146:     writeData(0x37, charTable[(num % 10) + 16]);
 20506  14C3  300A               	movlw	10
 20507  14C4  00A9               	movwf	___awmod@divisor
 20508  14C5  3000               	movlw	0
 20509  14C6  00AA               	movwf	___awmod@divisor+1
 20510  14C7  0839               	movf	TM1650_fastPrintNum_2digit@num,w
 20511  14C8  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 20512  14C9  01B7               	clrf	??_TM1650_fastPrintNum_2digit+1
 20513  14CA  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 20514  14CB  00AB               	movwf	___awmod@dividend
 20515  14CC  0837               	movf	??_TM1650_fastPrintNum_2digit+1,w
 20516  14CD  00AC               	movwf	___awmod@dividend+1
 20517  14CE  3191  21ED  3194   	fcall	___awmod
 20518  14D1  0140               	movlb	0	; select bank0
 20519  14D2  082A               	movf	?___awmod+1,w
 20520  14D3  0085               	movwf	5
 20521  14D4  0829               	movf	?___awmod,w
 20522  14D5  0084               	movwf	4
 20523  14D6  3010               	movlw	low ((_charTable+16)| (0+32768))
 20524  14D7  0784               	addwf	4,f
 20525  14D8  3098               	movlw	high ((_charTable+16)| (0+32768))
 20526  14D9  3D85               	addwfc	5,f
 20527  14DA  0800               	movf	0,w	;code access
 20528  14DB  00B8               	movwf	??_TM1650_fastPrintNum_2digit+2
 20529  14DC  0838               	movf	??_TM1650_fastPrintNum_2digit+2,w
 20530  14DD  00B0               	movwf	writeData@data
 20531  14DE  3037               	movlw	55
 20532  14DF  319D  25AD  3194   	fcall	_writeData
 20533                           
 20534                           ;tm1650.c: 147:     writeData(0x36, charTable[( (num/10) % 10) + 16]);
 20535  14E2  300A               	movlw	10
 20536  14E3  0140               	movlb	0	; select bank0
 20537  14E4  00A9               	movwf	___awmod@divisor
 20538  14E5  3000               	movlw	0
 20539  14E6  00AA               	movwf	___awmod@divisor+1
 20540  14E7  300A               	movlw	10
 20541  14E8  00A0               	movwf	___awdiv@divisor
 20542  14E9  3000               	movlw	0
 20543  14EA  00A1               	movwf	___awdiv@divisor+1
 20544  14EB  0839               	movf	TM1650_fastPrintNum_2digit@num,w
 20545  14EC  00B6               	movwf	??_TM1650_fastPrintNum_2digit
 20546  14ED  01B7               	clrf	??_TM1650_fastPrintNum_2digit+1
 20547  14EE  0836               	movf	??_TM1650_fastPrintNum_2digit,w
 20548  14EF  00A2               	movwf	___awdiv@dividend
 20549  14F0  0837               	movf	??_TM1650_fastPrintNum_2digit+1,w
 20550  14F1  00A3               	movwf	___awdiv@dividend+1
 20551  14F2  3192  22C8  3194   	fcall	___awdiv
 20552  14F5  0140               	movlb	0	; select bank0
 20553  14F6  0821               	movf	?___awdiv+1,w
 20554  14F7  00AC               	movwf	___awmod@dividend+1
 20555  14F8  0820               	movf	?___awdiv,w
 20556  14F9  00AB               	movwf	___awmod@dividend
 20557  14FA  3191  21ED  3194   	fcall	___awmod
 20558  14FD  0140               	movlb	0	; select bank0
 20559  14FE  082A               	movf	?___awmod+1,w
 20560  14FF  0085               	movwf	5
 20561  1500  0829               	movf	?___awmod,w
 20562  1501  0084               	movwf	4
 20563  1502  3010               	movlw	low ((_charTable+16)| (0+32768))
 20564  1503  0784               	addwf	4,f
 20565  1504  3098               	movlw	high ((_charTable+16)| (0+32768))
 20566  1505  3D85               	addwfc	5,f
 20567  1506  0800               	movf	0,w	;code access
 20568  1507  00B8               	movwf	??_TM1650_fastPrintNum_2digit+2
 20569  1508  0838               	movf	??_TM1650_fastPrintNum_2digit+2,w
 20570  1509  00B0               	movwf	writeData@data
 20571  150A  3036               	movlw	54
 20572  150B  319D  25AD         	fcall	_writeData
 20573  150D  0008               	return
 20574  150E                     __end_of_TM1650_fastPrintNum_2digit:	
 20575                           
 20576                           	psect	text66
 20577  1DAD                     __ptext66:	
 20578 ;; *************** function _writeData *****************
 20579 ;; Defined at:
 20580 ;;		line 31 in file "tm1650.c"
 20581 ;; Parameters:    Size  Location     Type
 20582 ;;  address         1    wreg     unsigned char 
 20583 ;;  data            1   16[BANK0 ] unsigned char 
 20584 ;; Auto vars:     Size  Location     Type
 20585 ;;  address         1   20[BANK0 ] unsigned char 
 20586 ;;  status          1   21[BANK0 ] enum E11376
 20587 ;; Return value:  Size  Location     Type
 20588 ;;                  1    wreg      void 
 20589 ;; Registers used:
 20590 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20591 ;; Tracked objects:
 20592 ;;		On entry : 0/0
 20593 ;;		On exit  : 0/0
 20594 ;;		Unchanged: 0/0
 20595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20596 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20597 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20598 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20599 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20600 ;;Total ram usage:        6 bytes
 20601 ;; Hardware stack levels used:    1
 20602 ;; Hardware stack levels required when called:    7
 20603 ;; This function calls:
 20604 ;;		_I2C1_MasterWrite
 20605 ;; This function is called by:
 20606 ;;		_TM1650_enable
 20607 ;;		_TM1650_setDigit
 20608 ;;		_TM1650_fastPrintNum
 20609 ;;		_TM1650_fastPrintNum_3digit
 20610 ;;		_TM1650_fastPrintNum_2digit
 20611 ;;		_TM1650_brightness
 20612 ;;		_TM1650_fastPrintNum_1digit
 20613 ;; This function uses a non-reentrant model
 20614 ;;
 20615                           
 20616                           
 20617                           ;psect for function _writeData
 20618  1DAD                     _writeData:	
 20619                           
 20620                           ;incstack = 0
 20621                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20622                           ;writeData@address stored from wreg
 20623  1DAD  0140               	movlb	0	; select bank0
 20624  1DAE  00B4               	movwf	writeData@address
 20625                           
 20626                           ;tm1650.c: 33:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 20627  1DAF  3002               	movlw	2
 20628  1DB0  00B1               	movwf	??_writeData
 20629  1DB1  0831               	movf	??_writeData,w
 20630  1DB2  00B5               	movwf	writeData@status
 20631                           
 20632                           ;tm1650.c: 34:     I2C1_MasterWrite(&data, 1, address, &status);
 20633  1DB3  01A7               	clrf	I2C1_MasterWrite@length
 20634  1DB4  0AA7               	incf	I2C1_MasterWrite@length,f
 20635  1DB5  0834               	movf	writeData@address,w
 20636  1DB6  00B1               	movwf	??_writeData
 20637  1DB7  01B2               	clrf	??_writeData+1
 20638  1DB8  0831               	movf	??_writeData,w
 20639  1DB9  00A8               	movwf	I2C1_MasterWrite@address
 20640  1DBA  0832               	movf	??_writeData+1,w
 20641  1DBB  00A9               	movwf	I2C1_MasterWrite@address+1
 20642  1DBC  3035               	movlw	(low (writeData@status| 0))& (0+255)
 20643  1DBD  00B3               	movwf	??_writeData+2
 20644  1DBE  0833               	movf	??_writeData+2,w
 20645  1DBF  00AA               	movwf	I2C1_MasterWrite@pflag
 20646  1DC0  3030               	movlw	(low (writeData@data| 0))& (0+255)
 20647  1DC1  319F  277A  319D   	fcall	_I2C1_MasterWrite
 20648  1DC4                     l7054:	
 20649                           ;tm1650.c: 36:     while( status == I2C1_MESSAGE_PENDING );
 20650                           
 20651  1DC4  3002               	movlw	2
 20652  1DC5  0140               	movlb	0	; select bank0
 20653  1DC6  0635               	xorwf	writeData@status,w
 20654  1DC7  1D03               	btfss	3,2
 20655  1DC8  0008               	return
 20656  1DC9  2DC4               	goto	l7054
 20657  1DCA                     __end_of_writeData:	
 20658                           
 20659                           	psect	text67
 20660  1F7A                     __ptext67:	
 20661 ;; *************** function _I2C1_MasterWrite *****************
 20662 ;; Defined at:
 20663 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 20664 ;; Parameters:    Size  Location     Type
 20665 ;;  pdata           1    wreg     PTR unsigned char 
 20666 ;;		 -> writeData@data(1), 
 20667 ;;  length          1    7[BANK0 ] unsigned char 
 20668 ;;  address         2    8[BANK0 ] unsigned short 
 20669 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 20670 ;;		 -> writeData@status(1), 
 20671 ;; Auto vars:     Size  Location     Type
 20672 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 20673 ;;		 -> writeData@data(1), 
 20674 ;; Return value:  Size  Location     Type
 20675 ;;                  1    wreg      void 
 20676 ;; Registers used:
 20677 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20678 ;; Tracked objects:
 20679 ;;		On entry : 0/0
 20680 ;;		On exit  : 0/0
 20681 ;;		Unchanged: 0/0
 20682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20683 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20684 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20685 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20686 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20687 ;;Total ram usage:        7 bytes
 20688 ;; Hardware stack levels used:    1
 20689 ;; Hardware stack levels required when called:    6
 20690 ;; This function calls:
 20691 ;;		_I2C1_MasterTRBInsert
 20692 ;;		_I2C1_MasterWriteTRBBuild
 20693 ;; This function is called by:
 20694 ;;		_writeData
 20695 ;; This function uses a non-reentrant model
 20696 ;;
 20697                           
 20698                           
 20699                           ;psect for function _I2C1_MasterWrite
 20700  1F7A                     _I2C1_MasterWrite:	
 20701                           
 20702                           ;incstack = 0
 20703                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20704                           ;I2C1_MasterWrite@pdata stored from wreg
 20705  1F7A  0140               	movlb	0	; select bank0
 20706  1F7B  00AD               	movwf	I2C1_MasterWrite@pdata
 20707                           
 20708                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 20709  1F7C  0141               	movlb	1	; select bank1
 20710  1F7D  1849               	btfsc	(_i2c1_object^(0+128)+2),0
 20711  1F7E  2F9D               	goto	l7048
 20712                           
 20713                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 20714  1F7F  0140               	movlb	0	; select bank0
 20715  1F80  082D               	movf	I2C1_MasterWrite@pdata,w
 20716  1F81  00AB               	movwf	??_I2C1_MasterWrite
 20717  1F82  082B               	movf	??_I2C1_MasterWrite,w
 20718  1F83  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 20719  1F84  0827               	movf	I2C1_MasterWrite@length,w
 20720  1F85  00AC               	movwf	??_I2C1_MasterWrite+1
 20721  1F86  082C               	movf	??_I2C1_MasterWrite+1,w
 20722  1F87  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 20723  1F88  0829               	movf	I2C1_MasterWrite@address+1,w
 20724  1F89  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 20725  1F8A  0828               	movf	I2C1_MasterWrite@address,w
 20726  1F8B  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 20727  1F8C  30EC               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 20728  1F8D  319E  26C3  319F   	fcall	_I2C1_MasterWriteTRBBuild
 20729                           
 20730                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 20731  1F90  30EC               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 20732  1F91  0140               	movlb	0	; select bank0
 20733  1F92  00AB               	movwf	??_I2C1_MasterWrite
 20734  1F93  082B               	movf	??_I2C1_MasterWrite,w
 20735  1F94  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 20736  1F95  082A               	movf	I2C1_MasterWrite@pflag,w
 20737  1F96  00AC               	movwf	??_I2C1_MasterWrite+1
 20738  1F97  082C               	movf	??_I2C1_MasterWrite+1,w
 20739  1F98  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 20740  1F99  3001               	movlw	1
 20741  1F9A  3187  27A4         	fcall	_I2C1_MasterTRBInsert
 20742                           
 20743                           ;mcc_generated_files/i2c1.c: 613:     }
 20744  1F9C  0008               	return
 20745  1F9D                     l7048:	
 20746                           
 20747                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 20748  1F9D  0140               	movlb	0	; select bank0
 20749  1F9E  082A               	movf	I2C1_MasterWrite@pflag,w
 20750  1F9F  0086               	movwf	6
 20751  1FA0  0187               	clrf	7
 20752  1FA1  0181               	clrf	1
 20753  1FA2  0A81               	incf	1,f
 20754  1FA3  0008               	return
 20755  1FA4                     __end_of_I2C1_MasterWrite:	
 20756                           
 20757                           	psect	text68
 20758  1EC3                     __ptext68:	
 20759 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 20760 ;; Defined at:
 20761 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 20762 ;; Parameters:    Size  Location     Type
 20763 ;;  ptrb            1    wreg     PTR struct .
 20764 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 20765 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 20766 ;;		 -> writeData@data(1), 
 20767 ;;  length          1    1[BANK0 ] unsigned char 
 20768 ;;  address         2    2[BANK0 ] unsigned short 
 20769 ;; Auto vars:     Size  Location     Type
 20770 ;;  ptrb            1    6[BANK0 ] PTR struct .
 20771 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 20772 ;; Return value:  Size  Location     Type
 20773 ;;                  1    wreg      void 
 20774 ;; Registers used:
 20775 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20776 ;; Tracked objects:
 20777 ;;		On entry : 0/0
 20778 ;;		On exit  : 0/0
 20779 ;;		Unchanged: 0/0
 20780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20781 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20782 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20783 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20784 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20785 ;;Total ram usage:        7 bytes
 20786 ;; Hardware stack levels used:    1
 20787 ;; Hardware stack levels required when called:    4
 20788 ;; This function calls:
 20789 ;;		Nothing
 20790 ;; This function is called by:
 20791 ;;		_I2C1_MasterWrite
 20792 ;; This function uses a non-reentrant model
 20793 ;;
 20794                           
 20795                           
 20796                           ;psect for function _I2C1_MasterWriteTRBBuild
 20797  1EC3                     _I2C1_MasterWriteTRBBuild:	
 20798                           
 20799                           ;incstack = 0
 20800                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 20801                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 20802  1EC3  0140               	movlb	0	; select bank0
 20803  1EC4  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 20804                           
 20805                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 20806  1EC5  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 20807  1EC6  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 20808  1EC7  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 20809  1EC8  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 20810  1EC9  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 20811  1ECA  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 20812  1ECB  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 20813  1ECC  0086               	movwf	6
 20814  1ECD  3001               	movlw	1	; select bank2/3
 20815  1ECE  0087               	movwf	7
 20816  1ECF  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 20817  1ED0  3FC0               	movwi [0]fsr1
 20818  1ED1  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 20819  1ED2  3FC1               	movwi [1]fsr1
 20820                           
 20821                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 20822  1ED3  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 20823  1ED4  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 20824  1ED5  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 20825  1ED6  3E02               	addlw	2
 20826  1ED7  0086               	movwf	6
 20827  1ED8  3001               	movlw	1	; select bank2/3
 20828  1ED9  0087               	movwf	7
 20829  1EDA  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 20830  1EDB  0081               	movwf	1
 20831                           
 20832                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 20833  1EDC  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 20834  1EDD  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 20835  1EDE  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 20836  1EDF  3E03               	addlw	3
 20837  1EE0  0086               	movwf	6
 20838  1EE1  3001               	movlw	1	; select bank2/3
 20839  1EE2  0087               	movwf	7
 20840  1EE3  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 20841  1EE4  0081               	movwf	1
 20842  1EE5  0008               	return
 20843  1EE6                     __end_of_I2C1_MasterWriteTRBBuild:	
 20844                           
 20845                           	psect	text69
 20846  07A4                     __ptext69:	
 20847 ;; *************** function _I2C1_MasterTRBInsert *****************
 20848 ;; Defined at:
 20849 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 20850 ;; Parameters:    Size  Location     Type
 20851 ;;  count           1    wreg     unsigned char 
 20852 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 20853 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 20854 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 20855 ;;		 -> writeData@status(1), 
 20856 ;; Auto vars:     Size  Location     Type
 20857 ;;  count           1    3[BANK0 ] unsigned char 
 20858 ;; Return value:  Size  Location     Type
 20859 ;;                  1    wreg      void 
 20860 ;; Registers used:
 20861 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20862 ;; Tracked objects:
 20863 ;;		On entry : 0/0
 20864 ;;		On exit  : 0/0
 20865 ;;		Unchanged: 0/0
 20866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20867 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20868 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20869 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20870 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20871 ;;Total ram usage:        4 bytes
 20872 ;; Hardware stack levels used:    1
 20873 ;; Hardware stack levels required when called:    5
 20874 ;; This function calls:
 20875 ;;		_I2C1_WaitForLastPacketToComplete
 20876 ;; This function is called by:
 20877 ;;		_I2C1_MasterWrite
 20878 ;;		_I2C1_MasterRead
 20879 ;; This function uses a non-reentrant model
 20880 ;;
 20881                           
 20882                           
 20883                           ;psect for function _I2C1_MasterTRBInsert
 20884  07A4                     _I2C1_MasterTRBInsert:	
 20885                           
 20886                           ;incstack = 0
 20887                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20888                           ;I2C1_MasterTRBInsert@count stored from wreg
 20889  07A4  0140               	movlb	0	; select bank0
 20890  07A5  00A3               	movwf	I2C1_MasterTRBInsert@count
 20891                           
 20892                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 20893  07A6  0141               	movlb	1	; select bank1
 20894  07A7  1849               	btfsc	(_i2c1_object^(0+128)+2),0
 20895  07A8  2FE6               	goto	l7036
 20896                           
 20897                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 20898  07A9  3002               	movlw	2
 20899  07AA  0140               	movlb	0	; select bank0
 20900  07AB  00A2               	movwf	??_I2C1_MasterTRBInsert
 20901  07AC  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 20902  07AD  0086               	movwf	6
 20903  07AE  0187               	clrf	7
 20904  07AF  0822               	movf	??_I2C1_MasterTRBInsert,w
 20905  07B0  0081               	movwf	1
 20906                           
 20907                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 20908  07B1  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 20909  07B2  00A2               	movwf	??_I2C1_MasterTRBInsert
 20910  07B3  0141               	movlb	1	; select bank1
 20911  07B4  0A47               	incf	_i2c1_object^(0+128),w
 20912  07B5  0086               	movwf	6
 20913  07B6  3001               	movlw	1	; select bank2/3
 20914  07B7  0087               	movwf	7
 20915  07B8  0140               	movlb	0	; select bank0
 20916  07B9  0822               	movf	??_I2C1_MasterTRBInsert,w
 20917  07BA  0081               	movwf	1
 20918                           
 20919                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 20920  07BB  0823               	movf	I2C1_MasterTRBInsert@count,w
 20921  07BC  00A2               	movwf	??_I2C1_MasterTRBInsert
 20922  07BD  0141               	movlb	1	; select bank1
 20923  07BE  0847               	movf	_i2c1_object^(0+128),w
 20924  07BF  0086               	movwf	6
 20925  07C0  3001               	movlw	1	; select bank2/3
 20926  07C1  0087               	movwf	7
 20927  07C2  0140               	movlb	0	; select bank0
 20928  07C3  0822               	movf	??_I2C1_MasterTRBInsert,w
 20929  07C4  0081               	movwf	1
 20930                           
 20931                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 20932  07C5  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 20933  07C6  00A2               	movwf	??_I2C1_MasterTRBInsert
 20934  07C7  0141               	movlb	1	; select bank1
 20935  07C8  0847               	movf	_i2c1_object^(0+128),w
 20936  07C9  3E02               	addlw	2
 20937  07CA  0086               	movwf	6
 20938  07CB  3001               	movlw	1	; select bank2/3
 20939  07CC  0087               	movwf	7
 20940  07CD  0140               	movlb	0	; select bank0
 20941  07CE  0822               	movf	??_I2C1_MasterTRBInsert,w
 20942  07CF  0081               	movwf	1
 20943                           
 20944                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 20945  07D0  3003               	movlw	3
 20946  07D1  00A2               	movwf	??_I2C1_MasterTRBInsert
 20947  07D2  0822               	movf	??_I2C1_MasterTRBInsert,w
 20948  07D3  0141               	movlb	1	; select bank1
 20949  07D4  07C7               	addwf	_i2c1_object^(0+128),f
 20950                           
 20951                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 20952  07D5  0847               	movf	_i2c1_object^(0+128),w
 20953  07D6  3A61               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 20954  07D7  1D03               	skipz
 20955  07D8  2FDF               	goto	l7032
 20956                           
 20957                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 20958  07D9  305E               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 20959  07DA  0140               	movlb	0	; select bank0
 20960  07DB  00A2               	movwf	??_I2C1_MasterTRBInsert
 20961  07DC  0822               	movf	??_I2C1_MasterTRBInsert,w
 20962  07DD  0141               	movlb	1	; select bank1
 20963  07DE  00C7               	movwf	_i2c1_object^(0+128)
 20964  07DF                     l7032:	
 20965                           
 20966                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 20967  07DF  10C9               	bcf	(_i2c1_object^(0+128)+2),1
 20968                           
 20969                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 20970  07E0  0848               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 20971  07E1  0647               	xorwf	_i2c1_object^(0+128),w
 20972  07E2  1D03               	skipz
 20973  07E3  2FEC               	goto	l7038
 20974                           
 20975                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 20976  07E4  1449               	bsf	(_i2c1_object^(0+128)+2),0
 20977  07E5  2FEC               	goto	l7038
 20978  07E6                     l7036:	
 20979                           
 20980                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 20981  07E6  0140               	movlb	0	; select bank0
 20982  07E7  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 20983  07E8  0086               	movwf	6
 20984  07E9  0187               	clrf	7
 20985  07EA  0181               	clrf	1
 20986  07EB  0A81               	incf	1,f
 20987  07EC                     l7038:	
 20988                           
 20989                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 20990  07EC  0140               	movlb	0	; select bank0
 20991  07ED  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 20992  07EE  0086               	movwf	6
 20993  07EF  0187               	clrf	7
 20994  07F0  3002               	movlw	2
 20995  07F1  0601               	xorwf	1,w
 20996  07F2  1D03               	btfss	3,2
 20997  07F3  0008               	return
 20998                           
 20999                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 21000  07F4  319B  237D         	fcall	_I2C1_WaitForLastPacketToComplete
 21001                           
 21002                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 21003  07F6  014E               	movlb	14	; select bank14
 21004  07F7  140F               	bsf	15,0	;volatile
 21005  07F8  0008               	return
 21006  07F9                     __end_of_I2C1_MasterTRBInsert:	
 21007                           
 21008                           	psect	text70
 21009  1B7D                     __ptext70:	
 21010 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 21011 ;; Defined at:
 21012 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 21013 ;; Parameters:    Size  Location     Type
 21014 ;;		None
 21015 ;; Auto vars:     Size  Location     Type
 21016 ;;		None
 21017 ;; Return value:  Size  Location     Type
 21018 ;;                  1    wreg      void 
 21019 ;; Registers used:
 21020 ;;		wreg, status,2, status,0
 21021 ;; Tracked objects:
 21022 ;;		On entry : 0/0
 21023 ;;		On exit  : 0/0
 21024 ;;		Unchanged: 0/0
 21025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21030 ;;Total ram usage:        0 bytes
 21031 ;; Hardware stack levels used:    1
 21032 ;; Hardware stack levels required when called:    4
 21033 ;; This function calls:
 21034 ;;		Nothing
 21035 ;; This function is called by:
 21036 ;;		_I2C1_MasterTRBInsert
 21037 ;; This function uses a non-reentrant model
 21038 ;;
 21039                           
 21040                           
 21041                           ;psect for function _I2C1_WaitForLastPacketToComplete
 21042  1B7D                     _I2C1_WaitForLastPacketToComplete:	
 21043  1B7D                     l7018:	
 21044                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 21045                           
 21046                           ;incstack = 0
 21047                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 21048                           
 21049                           
 21050                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 21051  1B7D  0141               	movlb	1	; select bank1
 21052  1B7E  0866               	movf	_i2c1_state^(0+128),w
 21053  1B7F  1903               	btfsc	3,2
 21054  1B80  0008               	return
 21055  1B81  2B7D               	goto	l7018
 21056  1B82                     __end_of_I2C1_WaitForLastPacketToComplete:	
 21057                           
 21058                           	psect	text71
 21059  11ED                     __ptext71:	
 21060 ;; *************** function ___awmod *****************
 21061 ;; Defined at:
 21062 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
 21063 ;; Parameters:    Size  Location     Type
 21064 ;;  divisor         2    9[BANK0 ] int 
 21065 ;;  dividend        2   11[BANK0 ] int 
 21066 ;; Auto vars:     Size  Location     Type
 21067 ;;  sign            1   15[BANK0 ] unsigned char 
 21068 ;;  counter         1   14[BANK0 ] unsigned char 
 21069 ;; Return value:  Size  Location     Type
 21070 ;;                  2    9[BANK0 ] int 
 21071 ;; Registers used:
 21072 ;;		wreg, status,2, status,0
 21073 ;; Tracked objects:
 21074 ;;		On entry : 0/0
 21075 ;;		On exit  : 0/0
 21076 ;;		Unchanged: 0/0
 21077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21078 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21079 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21080 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21081 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21082 ;;Total ram usage:        7 bytes
 21083 ;; Hardware stack levels used:    1
 21084 ;; Hardware stack levels required when called:    4
 21085 ;; This function calls:
 21086 ;;		Nothing
 21087 ;; This function is called by:
 21088 ;;		_TM1650_fastPrintNum_2digit
 21089 ;; This function uses a non-reentrant model
 21090 ;;
 21091                           
 21092                           
 21093                           ;psect for function ___awmod
 21094  11ED                     ___awmod:	
 21095                           
 21096                           ;incstack = 0
 21097                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 21098  11ED  0140               	movlb	0	; select bank0
 21099  11EE  01AF               	clrf	___awmod@sign
 21100  11EF  1FAC               	btfss	___awmod@dividend+1,7
 21101  11F0  29F8               	goto	l7804
 21102  11F1  09AB               	comf	___awmod@dividend,f
 21103  11F2  09AC               	comf	___awmod@dividend+1,f
 21104  11F3  0AAB               	incf	___awmod@dividend,f
 21105  11F4  1903               	skipnz
 21106  11F5  0AAC               	incf	___awmod@dividend+1,f
 21107  11F6  01AF               	clrf	___awmod@sign
 21108  11F7  0AAF               	incf	___awmod@sign,f
 21109  11F8                     l7804:	
 21110  11F8  1FAA               	btfss	___awmod@divisor+1,7
 21111  11F9  29FF               	goto	l7808
 21112  11FA  09A9               	comf	___awmod@divisor,f
 21113  11FB  09AA               	comf	___awmod@divisor+1,f
 21114  11FC  0AA9               	incf	___awmod@divisor,f
 21115  11FD  1903               	skipnz
 21116  11FE  0AAA               	incf	___awmod@divisor+1,f
 21117  11FF                     l7808:	
 21118  11FF  0829               	movf	___awmod@divisor,w
 21119  1200  042A               	iorwf	___awmod@divisor+1,w
 21120  1201  1903               	btfsc	3,2
 21121  1202  2A26               	goto	l7826
 21122  1203  01AE               	clrf	___awmod@counter
 21123  1204  0AAE               	incf	___awmod@counter,f
 21124  1205                     l7816:	
 21125  1205  1BAA               	btfsc	___awmod@divisor+1,7
 21126  1206  2A11               	goto	l7818
 21127  1207  3001               	movlw	1
 21128  1208                     u7535:	
 21129  1208  35A9               	lslf	___awmod@divisor,f
 21130  1209  0DAA               	rlf	___awmod@divisor+1,f
 21131  120A  0B89               	decfsz	9,f
 21132  120B  2A08               	goto	u7535
 21133  120C  3001               	movlw	1
 21134  120D  00AD               	movwf	??___awmod
 21135  120E  082D               	movf	??___awmod,w
 21136  120F  07AE               	addwf	___awmod@counter,f
 21137  1210  2A05               	goto	l7816
 21138  1211                     l7818:	
 21139  1211  082A               	movf	___awmod@divisor+1,w
 21140  1212  022C               	subwf	___awmod@dividend+1,w
 21141  1213  1D03               	skipz
 21142  1214  2A17               	goto	u7555
 21143  1215  0829               	movf	___awmod@divisor,w
 21144  1216  022B               	subwf	___awmod@dividend,w
 21145  1217                     u7555:	
 21146  1217  1C03               	skipc
 21147  1218  2A1D               	goto	l7822
 21148  1219  0829               	movf	___awmod@divisor,w
 21149  121A  02AB               	subwf	___awmod@dividend,f
 21150  121B  082A               	movf	___awmod@divisor+1,w
 21151  121C  3BAC               	subwfb	___awmod@dividend+1,f
 21152  121D                     l7822:	
 21153  121D  3001               	movlw	1
 21154  121E                     u7565:	
 21155  121E  36AA               	lsrf	___awmod@divisor+1,f
 21156  121F  0CA9               	rrf	___awmod@divisor,f
 21157  1220  0B89               	decfsz	9,f
 21158  1221  2A1E               	goto	u7565
 21159  1222  3001               	movlw	1
 21160  1223  02AE               	subwf	___awmod@counter,f
 21161  1224  1D03               	btfss	3,2
 21162  1225  2A11               	goto	l7818
 21163  1226                     l7826:	
 21164  1226  082F               	movf	___awmod@sign,w
 21165  1227  1903               	btfsc	3,2
 21166  1228  2A2E               	goto	l7830
 21167  1229  09AB               	comf	___awmod@dividend,f
 21168  122A  09AC               	comf	___awmod@dividend+1,f
 21169  122B  0AAB               	incf	___awmod@dividend,f
 21170  122C  1903               	skipnz
 21171  122D  0AAC               	incf	___awmod@dividend+1,f
 21172  122E                     l7830:	
 21173  122E  082C               	movf	___awmod@dividend+1,w
 21174  122F  00AA               	movwf	?___awmod+1
 21175  1230  082B               	movf	___awmod@dividend,w
 21176  1231  00A9               	movwf	?___awmod
 21177  1232  0008               	return
 21178  1233                     __end_of___awmod:	
 21179                           
 21180                           	psect	text72
 21181  12C8                     __ptext72:	
 21182 ;; *************** function ___awdiv *****************
 21183 ;; Defined at:
 21184 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
 21185 ;; Parameters:    Size  Location     Type
 21186 ;;  divisor         2    0[BANK0 ] int 
 21187 ;;  dividend        2    2[BANK0 ] int 
 21188 ;; Auto vars:     Size  Location     Type
 21189 ;;  quotient        2    7[BANK0 ] int 
 21190 ;;  sign            1    6[BANK0 ] unsigned char 
 21191 ;;  counter         1    5[BANK0 ] unsigned char 
 21192 ;; Return value:  Size  Location     Type
 21193 ;;                  2    0[BANK0 ] int 
 21194 ;; Registers used:
 21195 ;;		wreg, status,2, status,0
 21196 ;; Tracked objects:
 21197 ;;		On entry : 0/0
 21198 ;;		On exit  : 0/0
 21199 ;;		Unchanged: 0/0
 21200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21201 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21202 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21203 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21204 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21205 ;;Total ram usage:        9 bytes
 21206 ;; Hardware stack levels used:    1
 21207 ;; Hardware stack levels required when called:    4
 21208 ;; This function calls:
 21209 ;;		Nothing
 21210 ;; This function is called by:
 21211 ;;		_TM1650_fastPrintNum_2digit
 21212 ;; This function uses a non-reentrant model
 21213 ;;
 21214                           
 21215                           
 21216                           ;psect for function ___awdiv
 21217  12C8                     ___awdiv:	
 21218                           
 21219                           ;incstack = 0
 21220                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 21221  12C8  0140               	movlb	0	; select bank0
 21222  12C9  01A6               	clrf	___awdiv@sign
 21223  12CA  1FA1               	btfss	___awdiv@divisor+1,7
 21224  12CB  2AD3               	goto	l7760
 21225  12CC  09A0               	comf	___awdiv@divisor,f
 21226  12CD  09A1               	comf	___awdiv@divisor+1,f
 21227  12CE  0AA0               	incf	___awdiv@divisor,f
 21228  12CF  1903               	skipnz
 21229  12D0  0AA1               	incf	___awdiv@divisor+1,f
 21230  12D1  01A6               	clrf	___awdiv@sign
 21231  12D2  0AA6               	incf	___awdiv@sign,f
 21232  12D3                     l7760:	
 21233  12D3  1FA3               	btfss	___awdiv@dividend+1,7
 21234  12D4  2ADE               	goto	l7766
 21235  12D5  09A2               	comf	___awdiv@dividend,f
 21236  12D6  09A3               	comf	___awdiv@dividend+1,f
 21237  12D7  0AA2               	incf	___awdiv@dividend,f
 21238  12D8  1903               	skipnz
 21239  12D9  0AA3               	incf	___awdiv@dividend+1,f
 21240  12DA  3001               	movlw	1
 21241  12DB  00A4               	movwf	??___awdiv
 21242  12DC  0824               	movf	??___awdiv,w
 21243  12DD  06A6               	xorwf	___awdiv@sign,f
 21244  12DE                     l7766:	
 21245  12DE  01A7               	clrf	___awdiv@quotient
 21246  12DF  01A8               	clrf	___awdiv@quotient+1
 21247  12E0  0820               	movf	___awdiv@divisor,w
 21248  12E1  0421               	iorwf	___awdiv@divisor+1,w
 21249  12E2  1903               	btfsc	3,2
 21250  12E3  2B0D               	goto	l7788
 21251  12E4  01A5               	clrf	___awdiv@counter
 21252  12E5  0AA5               	incf	___awdiv@counter,f
 21253  12E6                     l7776:	
 21254  12E6  1BA1               	btfsc	___awdiv@divisor+1,7
 21255  12E7  2AF2               	goto	l7778
 21256  12E8  3001               	movlw	1
 21257  12E9                     u7435:	
 21258  12E9  35A0               	lslf	___awdiv@divisor,f
 21259  12EA  0DA1               	rlf	___awdiv@divisor+1,f
 21260  12EB  0B89               	decfsz	9,f
 21261  12EC  2AE9               	goto	u7435
 21262  12ED  3001               	movlw	1
 21263  12EE  00A4               	movwf	??___awdiv
 21264  12EF  0824               	movf	??___awdiv,w
 21265  12F0  07A5               	addwf	___awdiv@counter,f
 21266  12F1  2AE6               	goto	l7776
 21267  12F2                     l7778:	
 21268  12F2  3001               	movlw	1
 21269  12F3                     u7455:	
 21270  12F3  35A7               	lslf	___awdiv@quotient,f
 21271  12F4  0DA8               	rlf	___awdiv@quotient+1,f
 21272  12F5  0B89               	decfsz	9,f
 21273  12F6  2AF3               	goto	u7455
 21274  12F7  0821               	movf	___awdiv@divisor+1,w
 21275  12F8  0223               	subwf	___awdiv@dividend+1,w
 21276  12F9  1D03               	skipz
 21277  12FA  2AFD               	goto	u7465
 21278  12FB  0820               	movf	___awdiv@divisor,w
 21279  12FC  0222               	subwf	___awdiv@dividend,w
 21280  12FD                     u7465:	
 21281  12FD  1C03               	skipc
 21282  12FE  2B04               	goto	l7784
 21283  12FF  0820               	movf	___awdiv@divisor,w
 21284  1300  02A2               	subwf	___awdiv@dividend,f
 21285  1301  0821               	movf	___awdiv@divisor+1,w
 21286  1302  3BA3               	subwfb	___awdiv@dividend+1,f
 21287  1303  1427               	bsf	___awdiv@quotient,0
 21288  1304                     l7784:	
 21289  1304  3001               	movlw	1
 21290  1305                     u7475:	
 21291  1305  36A1               	lsrf	___awdiv@divisor+1,f
 21292  1306  0CA0               	rrf	___awdiv@divisor,f
 21293  1307  0B89               	decfsz	9,f
 21294  1308  2B05               	goto	u7475
 21295  1309  3001               	movlw	1
 21296  130A  02A5               	subwf	___awdiv@counter,f
 21297  130B  1D03               	btfss	3,2
 21298  130C  2AF2               	goto	l7778
 21299  130D                     l7788:	
 21300  130D  0826               	movf	___awdiv@sign,w
 21301  130E  1903               	btfsc	3,2
 21302  130F  2B15               	goto	l7792
 21303  1310  09A7               	comf	___awdiv@quotient,f
 21304  1311  09A8               	comf	___awdiv@quotient+1,f
 21305  1312  0AA7               	incf	___awdiv@quotient,f
 21306  1313  1903               	skipnz
 21307  1314  0AA8               	incf	___awdiv@quotient+1,f
 21308  1315                     l7792:	
 21309  1315  0828               	movf	___awdiv@quotient+1,w
 21310  1316  00A1               	movwf	?___awdiv+1
 21311  1317  0827               	movf	___awdiv@quotient,w
 21312  1318  00A0               	movwf	?___awdiv
 21313  1319  0008               	return
 21314  131A                     __end_of___awdiv:	
 21315                           
 21316                           	psect	text73
 21317  0002                     __ptext73:	
 21318 ;; *************** function _LED_task_ANIMATION *****************
 21319 ;; Defined at:
 21320 ;;		line 174 in file "led.c"
 21321 ;; Parameters:    Size  Location     Type
 21322 ;;		None
 21323 ;; Auto vars:     Size  Location     Type
 21324 ;;		None
 21325 ;; Return value:  Size  Location     Type
 21326 ;;                  1    wreg      void 
 21327 ;; Registers used:
 21328 ;;		None
 21329 ;; Tracked objects:
 21330 ;;		On entry : 0/0
 21331 ;;		On exit  : 0/0
 21332 ;;		Unchanged: 0/0
 21333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21338 ;;Total ram usage:        0 bytes
 21339 ;; Hardware stack levels used:    1
 21340 ;; Hardware stack levels required when called:    4
 21341 ;; This function calls:
 21342 ;;		Nothing
 21343 ;; This function is called by:
 21344 ;;		_CONTROL_ANIMATION
 21345 ;; This function uses a non-reentrant model
 21346 ;;
 21347                           
 21348                           
 21349                           ;psect for function _LED_task_ANIMATION
 21350  0002                     _LED_task_ANIMATION:	
 21351                           
 21352                           ;incstack = 0
 21353                           ; Regs used in _LED_task_ANIMATION: []
 21354  0002  0008               	return
 21355  0003                     __end_of_LED_task_ANIMATION:	
 21356                           
 21357                           	psect	text74
 21358  1CCA                     __ptext74:	
 21359 ;; *************** function _BUTTONS_isClicked *****************
 21360 ;; Defined at:
 21361 ;;		line 97 in file "buttons.c"
 21362 ;; Parameters:    Size  Location     Type
 21363 ;;  button          1    wreg     PTR struct .
 21364 ;;		 -> buttons(32), NULL(0), 
 21365 ;; Auto vars:     Size  Location     Type
 21366 ;;  button          1    0[BANK0 ] PTR struct .
 21367 ;;		 -> buttons(32), NULL(0), 
 21368 ;; Return value:  Size  Location     Type
 21369 ;;                  1    wreg      _Bool 
 21370 ;; Registers used:
 21371 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21372 ;; Tracked objects:
 21373 ;;		On entry : 0/0
 21374 ;;		On exit  : 0/0
 21375 ;;		Unchanged: 0/0
 21376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21378 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21380 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21381 ;;Total ram usage:        1 bytes
 21382 ;; Hardware stack levels used:    1
 21383 ;; Hardware stack levels required when called:    4
 21384 ;; This function calls:
 21385 ;;		Nothing
 21386 ;; This function is called by:
 21387 ;;		_CONTROLLER_task
 21388 ;; This function uses a non-reentrant model
 21389 ;;
 21390                           
 21391                           
 21392                           ;psect for function _BUTTONS_isClicked
 21393  1CCA                     _BUTTONS_isClicked:	
 21394                           
 21395                           ;incstack = 0
 21396                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 21397                           ;BUTTONS_isClicked@button stored from wreg
 21398  1CCA  0140               	movlb	0	; select bank0
 21399  1CCB  00A0               	movwf	BUTTONS_isClicked@button
 21400                           
 21401                           ;buttons.c: 98:     if (button->event == EVENT_PRESSED) {
 21402  1CCC  0820               	movf	BUTTONS_isClicked@button,w
 21403  1CCD  3E07               	addlw	7
 21404  1CCE  0086               	movwf	6
 21405  1CCF  3002               	movlw	2	; select bank4/5
 21406  1CD0  0087               	movwf	7
 21407  1CD1  0301               	decf	1,w
 21408  1CD2  1D03               	btfss	3,2
 21409  1CD3  2CDC               	goto	l8218
 21410                           
 21411                           ;buttons.c: 99:         button->event = EVENT_IDLE;
 21412  1CD4  0820               	movf	BUTTONS_isClicked@button,w
 21413  1CD5  3E07               	addlw	7
 21414  1CD6  0086               	movwf	6
 21415  1CD7  3002               	movlw	2	; select bank4/5
 21416  1CD8  0087               	movwf	7
 21417  1CD9  0181               	clrf	1
 21418                           
 21419                           ;buttons.c: 100:         return 1;
 21420  1CDA  3001               	movlw	1
 21421  1CDB  0008               	return
 21422  1CDC                     l8218:	
 21423                           
 21424                           ;buttons.c: 103:     return 0;
 21425  1CDC  3000               	movlw	0
 21426  1CDD  0008               	return
 21427  1CDE                     __end_of_BUTTONS_isClicked:	
 21428                           
 21429                           	psect	text75
 21430  02C6                     __ptext75:	
 21431 ;; *************** function _CONTROLLER_init *****************
 21432 ;; Defined at:
 21433 ;;		line 81 in file "controller.c"
 21434 ;; Parameters:    Size  Location     Type
 21435 ;;		None
 21436 ;; Auto vars:     Size  Location     Type
 21437 ;;		None
 21438 ;; Return value:  Size  Location     Type
 21439 ;;                  1    wreg      void 
 21440 ;; Registers used:
 21441 ;;		wreg, status,2, status,0
 21442 ;; Tracked objects:
 21443 ;;		On entry : 0/0
 21444 ;;		On exit  : 0/0
 21445 ;;		Unchanged: 0/0
 21446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21449 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21450 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21451 ;;Total ram usage:        1 bytes
 21452 ;; Hardware stack levels used:    1
 21453 ;; Hardware stack levels required when called:    4
 21454 ;; This function calls:
 21455 ;;		Nothing
 21456 ;; This function is called by:
 21457 ;;		_main
 21458 ;; This function uses a non-reentrant model
 21459 ;;
 21460                           
 21461                           
 21462                           ;psect for function _CONTROLLER_init
 21463  02C6                     _CONTROLLER_init:	
 21464                           
 21465                           ;controller.c: 84:     dmx.nextItem = &beat;
 21466                           
 21467                           ;incstack = 0
 21468                           ; Regs used in _CONTROLLER_init: [wreg+status,2+status,0]
 21469  02C6  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 21470  02C7  0140               	movlb	0	; select bank0
 21471  02C8  00A0               	movwf	??_CONTROLLER_init
 21472  02C9  0820               	movf	??_CONTROLLER_init,w
 21473  02CA  0142               	movlb	2	; select bank2
 21474  02CB  00D6               	movwf	_dmx^(0+256)
 21475                           
 21476                           ;controller.c: 85:     dmx.prevItem = &manual;
 21477  02CC  3046               	movlw	(low (_manual| (0+256)))& (0+255)
 21478  02CD  0140               	movlb	0	; select bank0
 21479  02CE  00A0               	movwf	??_CONTROLLER_init
 21480  02CF  0820               	movf	??_CONTROLLER_init,w
 21481  02D0  0142               	movlb	2	; select bank2
 21482  02D1  00D7               	movwf	(low ((_dmx| (0+256)+1)))^0
 21483                           
 21484                           ;controller.c: 86:     dmx.config = &dmx_task;
 21485  02D2  30D8               	movlw	low _dmx_task
 21486  02D3  00D8               	movwf	(low ((_dmx| (0+256)+2)))^0
 21487  02D4  3001               	movlw	high _dmx_task
 21488  02D5  00D9               	movwf	((low ((_dmx| (0+256)+2))+1))^0
 21489                           
 21490                           ;controller.c: 87:     dmx.task = previousTask;
 21491  02D6  0141               	movlb	1	; select bank1
 21492  02D7  0855               	movf	(_previousTask+1)^(0+128),w
 21493  02D8  0142               	movlb	2	; select bank2
 21494  02D9  00DD               	movwf	((low ((_dmx| (0+256)+6))+1))^0
 21495  02DA  0141               	movlb	1	; select bank1
 21496  02DB  0854               	movf	_previousTask^(0+128),w
 21497  02DC  0142               	movlb	2	; select bank2
 21498  02DD  00DC               	movwf	(low ((_dmx| (0+256)+6)))^0
 21499                           
 21500                           ;controller.c: 88:     dmx.name = DMX;
 21501  02DE  01DB               	clrf	(_dmx^(0+256)+5)
 21502                           
 21503                           ;controller.c: 89:     dmx.parent = &dmx;
 21504  02DF  3056               	movlw	(low (_dmx| (0+256)))& (0+255)
 21505  02E0  0140               	movlb	0	; select bank0
 21506  02E1  00A0               	movwf	??_CONTROLLER_init
 21507  02E2  0820               	movf	??_CONTROLLER_init,w
 21508  02E3  0142               	movlb	2	; select bank2
 21509  02E4  00DA               	movwf	(low ((_dmx| (0+256)+4)))^0
 21510                           
 21511                           ;controller.c: 91:     beat.nextItem = &animation;
 21512  02E5  30E0               	movlw	(low (_animation| (0+256)))& (0+255)
 21513  02E6  0140               	movlb	0	; select bank0
 21514  02E7  00A0               	movwf	??_CONTROLLER_init
 21515  02E8  0820               	movf	??_CONTROLLER_init,w
 21516  02E9  0142               	movlb	2	; select bank2
 21517  02EA  00CE               	movwf	_beat^(0+256)
 21518                           
 21519                           ;controller.c: 92:     beat.prevItem = &dmx;
 21520  02EB  3056               	movlw	(low (_dmx| (0+256)))& (0+255)
 21521  02EC  0140               	movlb	0	; select bank0
 21522  02ED  00A0               	movwf	??_CONTROLLER_init
 21523  02EE  0820               	movf	??_CONTROLLER_init,w
 21524  02EF  0142               	movlb	2	; select bank2
 21525  02F0  00CF               	movwf	(low ((_beat| (0+256)+1)))^0
 21526                           
 21527                           ;controller.c: 93:     beat.config = &beatStrobe;
 21528  02F1  30D0               	movlw	low _beatStrobe
 21529  02F2  00D0               	movwf	(low ((_beat| (0+256)+2)))^0
 21530  02F3  3001               	movlw	high _beatStrobe
 21531  02F4  00D1               	movwf	((low ((_beat| (0+256)+2))+1))^0
 21532                           
 21533                           ;controller.c: 94:     beat.task = previousTask;
 21534  02F5  0141               	movlb	1	; select bank1
 21535  02F6  0855               	movf	(_previousTask+1)^(0+128),w
 21536  02F7  0142               	movlb	2	; select bank2
 21537  02F8  00D5               	movwf	((low ((_beat| (0+256)+6))+1))^0
 21538  02F9  0141               	movlb	1	; select bank1
 21539  02FA  0854               	movf	_previousTask^(0+128),w
 21540  02FB  0142               	movlb	2	; select bank2
 21541  02FC  00D4               	movwf	(low ((_beat| (0+256)+6)))^0
 21542                           
 21543                           ;controller.c: 95:     beat.name = BEAT;
 21544  02FD  01D3               	clrf	(_beat^(0+256)+5)
 21545  02FE  0AD3               	incf	(_beat^(0+256)+5),f
 21546                           
 21547                           ;controller.c: 96:     beat.parent = &beat;
 21548  02FF  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 21549  0300  0140               	movlb	0	; select bank0
 21550  0301  00A0               	movwf	??_CONTROLLER_init
 21551  0302  0820               	movf	??_CONTROLLER_init,w
 21552  0303  0142               	movlb	2	; select bank2
 21553  0304  00D2               	movwf	(low ((_beat| (0+256)+4)))^0
 21554                           
 21555                           ;controller.c: 98:     animation.nextItem = &manual;
 21556  0305  3046               	movlw	(low (_manual| (0+256)))& (0+255)
 21557  0306  0140               	movlb	0	; select bank0
 21558  0307  00A0               	movwf	??_CONTROLLER_init
 21559  0308  0820               	movf	??_CONTROLLER_init,w
 21560  0309  0143               	movlb	3	; select bank3
 21561  030A  00E0               	movwf	_animation^(0+384)
 21562                           
 21563                           ;controller.c: 99:     animation.prevItem = &beat;
 21564  030B  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 21565  030C  0140               	movlb	0	; select bank0
 21566  030D  00A0               	movwf	??_CONTROLLER_init
 21567  030E  0820               	movf	??_CONTROLLER_init,w
 21568  030F  0143               	movlb	3	; select bank3
 21569  0310  00E1               	movwf	(low ((_animation| (0+256)+1)))^(0+128)
 21570                           
 21571                           ;controller.c: 100:     animation.config = &animationBrightnessCtrl;
 21572  0311  30B0               	movlw	low _animationBrightnessCtrl
 21573  0312  00E2               	movwf	(low ((_animation| (0+256)+2)))^(0+128)
 21574  0313  3001               	movlw	high _animationBrightnessCtrl
 21575  0314  00E3               	movwf	((low ((_animation| (0+256)+2))+1))^(0+128)
 21576                           
 21577                           ;controller.c: 101:     animation.task = previousTask;
 21578  0315  0141               	movlb	1	; select bank1
 21579  0316  0855               	movf	(_previousTask+1)^(0+128),w
 21580  0317  0143               	movlb	3	; select bank3
 21581  0318  00E7               	movwf	((low ((_animation| (0+256)+6))+1))^(0+128)
 21582  0319  0141               	movlb	1	; select bank1
 21583  031A  0854               	movf	_previousTask^(0+128),w
 21584  031B  0143               	movlb	3	; select bank3
 21585  031C  00E6               	movwf	(low ((_animation| (0+256)+6)))^(0+128)
 21586                           
 21587                           ;controller.c: 102:     animation.name = ANIMATION;
 21588  031D  3002               	movlw	2
 21589  031E  0140               	movlb	0	; select bank0
 21590  031F  00A0               	movwf	??_CONTROLLER_init
 21591  0320  0820               	movf	??_CONTROLLER_init,w
 21592  0321  0143               	movlb	3	; select bank3
 21593  0322  00E5               	movwf	(_animation^(0+384)+5)
 21594                           
 21595                           ;controller.c: 103:     animation.parent = &animation;
 21596  0323  30E0               	movlw	(low (_animation| (0+256)))& (0+255)
 21597  0324  0140               	movlb	0	; select bank0
 21598  0325  00A0               	movwf	??_CONTROLLER_init
 21599  0326  0820               	movf	??_CONTROLLER_init,w
 21600  0327  0143               	movlb	3	; select bank3
 21601  0328  00E4               	movwf	(low ((_animation| (0+256)+4)))^(0+128)
 21602                           
 21603                           ;controller.c: 105:     manual.nextItem = &dmx;
 21604  0329  3056               	movlw	(low (_dmx| (0+256)))& (0+255)
 21605  032A  0140               	movlb	0	; select bank0
 21606  032B  00A0               	movwf	??_CONTROLLER_init
 21607  032C  0820               	movf	??_CONTROLLER_init,w
 21608  032D  0142               	movlb	2	; select bank2
 21609  032E  00C6               	movwf	_manual^(0+256)
 21610                           
 21611                           ;controller.c: 106:     manual.prevItem = &animation;
 21612  032F  30E0               	movlw	(low (_animation| (0+256)))& (0+255)
 21613  0330  0140               	movlb	0	; select bank0
 21614  0331  00A0               	movwf	??_CONTROLLER_init
 21615  0332  0820               	movf	??_CONTROLLER_init,w
 21616  0333  0142               	movlb	2	; select bank2
 21617  0334  00C7               	movwf	(low ((_manual| (0+256)+1)))^0
 21618                           
 21619                           ;controller.c: 107:     manual.config = &manualRed;
 21620  0335  30A8               	movlw	low _manualRed
 21621  0336  00C8               	movwf	(low ((_manual| (0+256)+2)))^0
 21622  0337  3001               	movlw	high _manualRed
 21623  0338  00C9               	movwf	((low ((_manual| (0+256)+2))+1))^0
 21624                           
 21625                           ;controller.c: 108:     manual.task = previousTask;
 21626  0339  0141               	movlb	1	; select bank1
 21627  033A  0855               	movf	(_previousTask+1)^(0+128),w
 21628  033B  0142               	movlb	2	; select bank2
 21629  033C  00CD               	movwf	((low ((_manual| (0+256)+6))+1))^0
 21630  033D  0141               	movlb	1	; select bank1
 21631  033E  0854               	movf	_previousTask^(0+128),w
 21632  033F  0142               	movlb	2	; select bank2
 21633  0340  00CC               	movwf	(low ((_manual| (0+256)+6)))^0
 21634                           
 21635                           ;controller.c: 109:     manual.name = MANUAL;
 21636  0341  3003               	movlw	3
 21637  0342  0140               	movlb	0	; select bank0
 21638  0343  00A0               	movwf	??_CONTROLLER_init
 21639  0344  0820               	movf	??_CONTROLLER_init,w
 21640  0345  0142               	movlb	2	; select bank2
 21641  0346  00CB               	movwf	(_manual^(0+256)+5)
 21642                           
 21643                           ;controller.c: 110:     manual.parent = &manual;
 21644  0347  3046               	movlw	(low (_manual| (0+256)))& (0+255)
 21645  0348  0140               	movlb	0	; select bank0
 21646  0349  00A0               	movwf	??_CONTROLLER_init
 21647  034A  0820               	movf	??_CONTROLLER_init,w
 21648  034B  0142               	movlb	2	; select bank2
 21649  034C  00CA               	movwf	(low ((_manual| (0+256)+4)))^0
 21650                           
 21651                           ;controller.c: 115:     dmx_task.nextItem = ((void*)0);
 21652  034D  0143               	movlb	3	; select bank3
 21653  034E  01D8               	clrf	_dmx_task^(0+384)
 21654                           
 21655                           ;controller.c: 116:     dmx_task.prevItem = ((void*)0);
 21656  034F  01D9               	clrf	(low ((_dmx_task| (0+256)+1)))^(0+128)
 21657                           
 21658                           ;controller.c: 117:     dmx_task.config = ((void*)0);
 21659  0350  01DA               	clrf	(low ((_dmx_task| (0+256)+2)))^(0+128)
 21660  0351  01DB               	clrf	((low ((_dmx_task| (0+256)+2))+1))^(0+128)
 21661                           
 21662                           ;controller.c: 118:     dmx_task.task = CONTROL_DMX;
 21663  0352  3054               	movlw	low _CONTROL_DMX
 21664  0353  00DE               	movwf	(low ((_dmx_task| (0+256)+6)))^(0+128)
 21665  0354  3017               	movlw	high _CONTROL_DMX
 21666  0355  00DF               	movwf	((low ((_dmx_task| (0+256)+6)))^(0+128)+1)
 21667                           
 21668                           ;controller.c: 119:     dmx_task.name = DMX_TASK;
 21669  0356  3004               	movlw	4
 21670  0357  0140               	movlb	0	; select bank0
 21671  0358  00A0               	movwf	??_CONTROLLER_init
 21672  0359  0820               	movf	??_CONTROLLER_init,w
 21673  035A  0143               	movlb	3	; select bank3
 21674  035B  00DD               	movwf	(_dmx_task^(0+384)+5)
 21675                           
 21676                           ;controller.c: 120:     dmx_task.parent = &dmx;
 21677  035C  3056               	movlw	(low (_dmx| (0+256)))& (0+255)
 21678  035D  0140               	movlb	0	; select bank0
 21679  035E  00A0               	movwf	??_CONTROLLER_init
 21680  035F  0820               	movf	??_CONTROLLER_init,w
 21681  0360  0143               	movlb	3	; select bank3
 21682  0361  00DC               	movwf	(low ((_dmx_task| (0+256)+4)))^(0+128)
 21683                           
 21684                           ;controller.c: 123:     beatStrobe.nextItem = &beatFade;
 21685  0362  30C8               	movlw	(low (_beatFade| (0+256)))& (0+255)
 21686  0363  0140               	movlb	0	; select bank0
 21687  0364  00A0               	movwf	??_CONTROLLER_init
 21688  0365  0820               	movf	??_CONTROLLER_init,w
 21689  0366  0143               	movlb	3	; select bank3
 21690  0367  00D0               	movwf	_beatStrobe^(0+384)
 21691                           
 21692                           ;controller.c: 124:     beatStrobe.prevItem = &beatMixed;
 21693  0368  30B8               	movlw	(low (_beatMixed| (0+256)))& (0+255)
 21694  0369  0140               	movlb	0	; select bank0
 21695  036A  00A0               	movwf	??_CONTROLLER_init
 21696  036B  0820               	movf	??_CONTROLLER_init,w
 21697  036C  0143               	movlb	3	; select bank3
 21698  036D  00D1               	movwf	(low ((_beatStrobe| (0+256)+1)))^(0+128)
 21699                           
 21700                           ;controller.c: 125:     beatStrobe.config = &beatStrobeTask;
 21701  036E  3060               	movlw	low _beatStrobeTask
 21702  036F  00D2               	movwf	(low ((_beatStrobe| (0+256)+2)))^(0+128)
 21703  0370  3002               	movlw	high _beatStrobeTask
 21704  0371  00D3               	movwf	((low ((_beatStrobe| (0+256)+2))+1))^(0+128)
 21705                           
 21706                           ;controller.c: 126:     beatStrobe.task = previousTask;
 21707  0372  0141               	movlb	1	; select bank1
 21708  0373  0855               	movf	(_previousTask+1)^(0+128),w
 21709  0374  0143               	movlb	3	; select bank3
 21710  0375  00D7               	movwf	((low ((_beatStrobe| (0+256)+6))+1))^(0+128)
 21711  0376  0141               	movlb	1	; select bank1
 21712  0377  0854               	movf	_previousTask^(0+128),w
 21713  0378  0143               	movlb	3	; select bank3
 21714  0379  00D6               	movwf	(low ((_beatStrobe| (0+256)+6)))^(0+128)
 21715                           
 21716                           ;controller.c: 127:     beatStrobe.name = B_STROBE;
 21717  037A  3005               	movlw	5
 21718  037B  0140               	movlb	0	; select bank0
 21719  037C  00A0               	movwf	??_CONTROLLER_init
 21720  037D  0820               	movf	??_CONTROLLER_init,w
 21721  037E  0143               	movlb	3	; select bank3
 21722  037F  00D5               	movwf	(_beatStrobe^(0+384)+5)
 21723                           
 21724                           ;controller.c: 128:     beatStrobe.parent = &beat;
 21725  0380  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 21726  0381  0140               	movlb	0	; select bank0
 21727  0382  00A0               	movwf	??_CONTROLLER_init
 21728  0383  0820               	movf	??_CONTROLLER_init,w
 21729  0384  0143               	movlb	3	; select bank3
 21730  0385  00D4               	movwf	(low ((_beatStrobe| (0+256)+4)))^(0+128)
 21731                           
 21732                           ;controller.c: 130:     beatFade.nextItem = &beatCont;
 21733  0386  30C0               	movlw	(low (_beatCont| (0+256)))& (0+255)
 21734  0387  0140               	movlb	0	; select bank0
 21735  0388  00A0               	movwf	??_CONTROLLER_init
 21736  0389  0820               	movf	??_CONTROLLER_init,w
 21737  038A  0143               	movlb	3	; select bank3
 21738  038B  00C8               	movwf	_beatFade^(0+384)
 21739                           
 21740                           ;controller.c: 131:     beatFade.prevItem = &beatStrobe;
 21741  038C  30D0               	movlw	(low (_beatStrobe| (0+256)))& (0+255)
 21742  038D  0140               	movlb	0	; select bank0
 21743  038E  00A0               	movwf	??_CONTROLLER_init
 21744  038F  0820               	movf	??_CONTROLLER_init,w
 21745  0390  0143               	movlb	3	; select bank3
 21746  0391  00C9               	movwf	(low ((_beatFade| (0+256)+1)))^(0+128)
 21747                           
 21748                           ;controller.c: 132:     beatFade.config = &beatFadeTask;
 21749  0392  3058               	movlw	low _beatFadeTask
 21750  0393  00CA               	movwf	(low ((_beatFade| (0+256)+2)))^(0+128)
 21751  0394  3002               	movlw	high _beatFadeTask
 21752  0395  00CB               	movwf	((low ((_beatFade| (0+256)+2))+1))^(0+128)
 21753                           
 21754                           ;controller.c: 133:     beatFade.task = previousTask;
 21755  0396  0141               	movlb	1	; select bank1
 21756  0397  0855               	movf	(_previousTask+1)^(0+128),w
 21757  0398  0143               	movlb	3	; select bank3
 21758  0399  00CF               	movwf	((low ((_beatFade| (0+256)+6))+1))^(0+128)
 21759  039A  0141               	movlb	1	; select bank1
 21760  039B  0854               	movf	_previousTask^(0+128),w
 21761  039C  0143               	movlb	3	; select bank3
 21762  039D  00CE               	movwf	(low ((_beatFade| (0+256)+6)))^(0+128)
 21763                           
 21764                           ;controller.c: 134:     beatFade.name = B_FADE;
 21765  039E  3006               	movlw	6
 21766  039F  0140               	movlb	0	; select bank0
 21767  03A0  00A0               	movwf	??_CONTROLLER_init
 21768  03A1  0820               	movf	??_CONTROLLER_init,w
 21769  03A2  0143               	movlb	3	; select bank3
 21770  03A3  00CD               	movwf	(_beatFade^(0+384)+5)
 21771                           
 21772                           ;controller.c: 135:     beatFade.parent = &beat;
 21773  03A4  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 21774  03A5  0140               	movlb	0	; select bank0
 21775  03A6  00A0               	movwf	??_CONTROLLER_init
 21776  03A7  0820               	movf	??_CONTROLLER_init,w
 21777  03A8  0143               	movlb	3	; select bank3
 21778  03A9  00CC               	movwf	(low ((_beatFade| (0+256)+4)))^(0+128)
 21779                           
 21780                           ;controller.c: 137:     beatCont.nextItem = &beatMixed;
 21781  03AA  30B8               	movlw	(low (_beatMixed| (0+256)))& (0+255)
 21782  03AB  0140               	movlb	0	; select bank0
 21783  03AC  00A0               	movwf	??_CONTROLLER_init
 21784  03AD  0820               	movf	??_CONTROLLER_init,w
 21785  03AE  0143               	movlb	3	; select bank3
 21786  03AF  00C0               	movwf	_beatCont^(0+384)
 21787                           
 21788                           ;controller.c: 138:     beatCont.prevItem = &beatFade;
 21789  03B0  30C8               	movlw	(low (_beatFade| (0+256)))& (0+255)
 21790  03B1  0140               	movlb	0	; select bank0
 21791  03B2  00A0               	movwf	??_CONTROLLER_init
 21792  03B3  0820               	movf	??_CONTROLLER_init,w
 21793  03B4  0143               	movlb	3	; select bank3
 21794  03B5  00C1               	movwf	(low ((_beatCont| (0+256)+1)))^(0+128)
 21795                           
 21796                           ;controller.c: 139:     beatCont.config = &beatContTask;
 21797  03B6  3050               	movlw	low _beatContTask
 21798  03B7  00C2               	movwf	(low ((_beatCont| (0+256)+2)))^(0+128)
 21799  03B8  3002               	movlw	high _beatContTask
 21800  03B9  00C3               	movwf	((low ((_beatCont| (0+256)+2))+1))^(0+128)
 21801                           
 21802                           ;controller.c: 140:     beatCont.task = previousTask;
 21803  03BA  0141               	movlb	1	; select bank1
 21804  03BB  0855               	movf	(_previousTask+1)^(0+128),w
 21805  03BC  0143               	movlb	3	; select bank3
 21806  03BD  00C7               	movwf	((low ((_beatCont| (0+256)+6))+1))^(0+128)
 21807  03BE  0141               	movlb	1	; select bank1
 21808  03BF  0854               	movf	_previousTask^(0+128),w
 21809  03C0  0143               	movlb	3	; select bank3
 21810  03C1  00C6               	movwf	(low ((_beatCont| (0+256)+6)))^(0+128)
 21811                           
 21812                           ;controller.c: 141:     beatCont.name = B_CONT;
 21813  03C2  3007               	movlw	7
 21814  03C3  0140               	movlb	0	; select bank0
 21815  03C4  00A0               	movwf	??_CONTROLLER_init
 21816  03C5  0820               	movf	??_CONTROLLER_init,w
 21817  03C6  0143               	movlb	3	; select bank3
 21818  03C7  00C5               	movwf	(_beatCont^(0+384)+5)
 21819                           
 21820                           ;controller.c: 142:     beatCont.parent = &beat;
 21821  03C8  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 21822  03C9  0140               	movlb	0	; select bank0
 21823  03CA  00A0               	movwf	??_CONTROLLER_init
 21824  03CB  0820               	movf	??_CONTROLLER_init,w
 21825  03CC  0143               	movlb	3	; select bank3
 21826  03CD  00C4               	movwf	(low ((_beatCont| (0+256)+4)))^(0+128)
 21827                           
 21828                           ;controller.c: 144:     beatMixed.nextItem = &beatStrobe;
 21829  03CE  30D0               	movlw	(low (_beatStrobe| (0+256)))& (0+255)
 21830  03CF  0140               	movlb	0	; select bank0
 21831  03D0  00A0               	movwf	??_CONTROLLER_init
 21832  03D1  0820               	movf	??_CONTROLLER_init,w
 21833  03D2  0143               	movlb	3	; select bank3
 21834  03D3  00B8               	movwf	_beatMixed^(0+384)
 21835                           
 21836                           ;controller.c: 145:     beatMixed.prevItem = &beatCont;
 21837  03D4  30C0               	movlw	(low (_beatCont| (0+256)))& (0+255)
 21838  03D5  0140               	movlb	0	; select bank0
 21839  03D6  00A0               	movwf	??_CONTROLLER_init
 21840  03D7  0820               	movf	??_CONTROLLER_init,w
 21841  03D8  0143               	movlb	3	; select bank3
 21842  03D9  00B9               	movwf	(low ((_beatMixed| (0+256)+1)))^(0+128)
 21843                           
 21844                           ;controller.c: 146:     beatMixed.config = &beatMixedTask;
 21845  03DA  3048               	movlw	low _beatMixedTask
 21846  03DB  00BA               	movwf	(low ((_beatMixed| (0+256)+2)))^(0+128)
 21847  03DC  3002               	movlw	high _beatMixedTask
 21848  03DD  00BB               	movwf	((low ((_beatMixed| (0+256)+2))+1))^(0+128)
 21849                           
 21850                           ;controller.c: 147:     beatMixed.task = previousTask;
 21851  03DE  0141               	movlb	1	; select bank1
 21852  03DF  0855               	movf	(_previousTask+1)^(0+128),w
 21853  03E0  0143               	movlb	3	; select bank3
 21854  03E1  00BF               	movwf	((low ((_beatMixed| (0+256)+6))+1))^(0+128)
 21855  03E2  0141               	movlb	1	; select bank1
 21856  03E3  0854               	movf	_previousTask^(0+128),w
 21857  03E4  0143               	movlb	3	; select bank3
 21858  03E5  00BE               	movwf	(low ((_beatMixed| (0+256)+6)))^(0+128)
 21859                           
 21860                           ;controller.c: 148:     beatMixed.name = B_MIXED;
 21861  03E6  3008               	movlw	8
 21862  03E7  0140               	movlb	0	; select bank0
 21863  03E8  00A0               	movwf	??_CONTROLLER_init
 21864  03E9  0820               	movf	??_CONTROLLER_init,w
 21865  03EA  0143               	movlb	3	; select bank3
 21866  03EB  00BD               	movwf	(_beatMixed^(0+384)+5)
 21867                           
 21868                           ;controller.c: 149:     beatMixed.parent = &beat;
 21869  03EC  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 21870  03ED  0140               	movlb	0	; select bank0
 21871  03EE  00A0               	movwf	??_CONTROLLER_init
 21872  03EF  0820               	movf	??_CONTROLLER_init,w
 21873  03F0  0143               	movlb	3	; select bank3
 21874  03F1  00BC               	movwf	(low ((_beatMixed| (0+256)+4)))^(0+128)
 21875                           
 21876                           ;controller.c: 153:     animationType.nextItem = ((void*)0);
 21877  03F2  0144               	movlb	4	; select bank4
 21878  03F3  01C0               	clrf	_animationType^(0+512)
 21879                           
 21880                           ;controller.c: 154:     animationType.prevItem = ((void*)0);
 21881  03F4  01C1               	clrf	(low ((_animationType| (0+512)+1)))^0
 21882                           
 21883                           ;controller.c: 155:     animationType.config = &animationBrightnessCtrl;
 21884  03F5  30B0               	movlw	low _animationBrightnessCtrl
 21885  03F6  00C2               	movwf	(low ((_animationType| (0+512)+2)))^0
 21886  03F7  3001               	movlw	high _animationBrightnessCtrl
 21887  03F8  00C3               	movwf	((low ((_animationType| (0+512)+2))+1))^0
 21888                           
 21889                           ;controller.c: 156:     animationType.task = CONTROL_ANIMATION;
 21890  03F9  308B               	movlw	low _CONTROL_ANIMATION
 21891  03FA  00C6               	movwf	(low ((_animationType| (0+512)+6)))^0
 21892  03FB  3015               	movlw	high _CONTROL_ANIMATION
 21893  03FC  00C7               	movwf	((low ((_animationType| (0+512)+6)))^0+1)
 21894                           
 21895                           ;controller.c: 157:     animationType.name = A_SELECTION;
 21896  03FD  3012               	movlw	18
 21897  03FE  0140               	movlb	0	; select bank0
 21898  03FF  00A0               	movwf	??_CONTROLLER_init
 21899  0400  0820               	movf	??_CONTROLLER_init,w
 21900  0401  0144               	movlb	4	; select bank4
 21901  0402  00C5               	movwf	(_animationType^(0+512)+5)
 21902                           
 21903                           ;controller.c: 158:     animationType.parent = &animation;
 21904  0403  30E0               	movlw	(low (_animation| (0+256)))& (0+255)
 21905  0404  0140               	movlb	0	; select bank0
 21906  0405  00A0               	movwf	??_CONTROLLER_init
 21907  0406  0820               	movf	??_CONTROLLER_init,w
 21908  0407  0144               	movlb	4	; select bank4
 21909  0408  00C4               	movwf	(low ((_animationType| (0+512)+4)))^0
 21910                           
 21911                           ;controller.c: 160:     animationBrightnessCtrl.nextItem = ((void*)0);
 21912  0409  0143               	movlb	3	; select bank3
 21913  040A  01B0               	clrf	_animationBrightnessCtrl^(0+384)
 21914                           
 21915                           ;controller.c: 161:     animationBrightnessCtrl.prevItem = ((void*)0);
 21916  040B  01B1               	clrf	(low ((_animationBrightnessCtrl| (0+256)+1)))^(0+128)
 21917                           
 21918                           ;controller.c: 162:     animationBrightnessCtrl.config = &animationType;
 21919  040C  3040               	movlw	low _animationType
 21920  040D  00B2               	movwf	(low ((_animationBrightnessCtrl| (0+256)+2)))^(0+128)
 21921  040E  3002               	movlw	high _animationType
 21922  040F  00B3               	movwf	((low ((_animationBrightnessCtrl| (0+256)+2))+1))^(0+128)
 21923                           
 21924                           ;controller.c: 163:     animationBrightnessCtrl.task = CONTROL_ANIMATION;
 21925  0410  308B               	movlw	low _CONTROL_ANIMATION
 21926  0411  00B6               	movwf	(low ((_animationBrightnessCtrl| (0+256)+6)))^(0+128)
 21927  0412  3015               	movlw	high _CONTROL_ANIMATION
 21928  0413  00B7               	movwf	((low ((_animationBrightnessCtrl| (0+256)+6)))^(0+128)+1)
 21929                           
 21930                           ;controller.c: 164:     animationBrightnessCtrl.name = A_BRIGHTNESS;
 21931  0414  3011               	movlw	17
 21932  0415  0140               	movlb	0	; select bank0
 21933  0416  00A0               	movwf	??_CONTROLLER_init
 21934  0417  0820               	movf	??_CONTROLLER_init,w
 21935  0418  0143               	movlb	3	; select bank3
 21936  0419  00B5               	movwf	(_animationBrightnessCtrl^(0+384)+5)
 21937                           
 21938                           ;controller.c: 165:     animationBrightnessCtrl.parent = &animation;
 21939  041A  30E0               	movlw	(low (_animation| (0+256)))& (0+255)
 21940  041B  0140               	movlb	0	; select bank0
 21941  041C  00A0               	movwf	??_CONTROLLER_init
 21942  041D  0820               	movf	??_CONTROLLER_init,w
 21943  041E  0143               	movlb	3	; select bank3
 21944  041F  00B4               	movwf	(low ((_animationBrightnessCtrl| (0+256)+4)))^(0+128)
 21945                           
 21946                           ;controller.c: 169:     manualRed.nextItem = ((void*)0);
 21947  0420  01A8               	clrf	_manualRed^(0+384)
 21948                           
 21949                           ;controller.c: 170:     manualRed.prevItem = ((void*)0);
 21950  0421  01A9               	clrf	(low ((_manualRed| (0+256)+1)))^(0+128)
 21951                           
 21952                           ;controller.c: 171:     manualRed.config = &manualGreen;
 21953  0422  3038               	movlw	low _manualGreen
 21954  0423  00AA               	movwf	(low ((_manualRed| (0+256)+2)))^(0+128)
 21955  0424  3002               	movlw	high _manualGreen
 21956  0425  00AB               	movwf	((low ((_manualRed| (0+256)+2))+1))^(0+128)
 21957                           
 21958                           ;controller.c: 172:     manualRed.task = CONTROL_MANUAL;
 21959  0426  30AF               	movlw	low _CONTROL_MANUAL
 21960  0427  00AE               	movwf	(low ((_manualRed| (0+256)+6)))^(0+128)
 21961  0428  300C               	movlw	high _CONTROL_MANUAL
 21962  0429  00AF               	movwf	((low ((_manualRed| (0+256)+6)))^(0+128)+1)
 21963                           
 21964                           ;controller.c: 173:     manualRed.name = MANUAL_RED;
 21965  042A  300D               	movlw	13
 21966  042B  0140               	movlb	0	; select bank0
 21967  042C  00A0               	movwf	??_CONTROLLER_init
 21968  042D  0820               	movf	??_CONTROLLER_init,w
 21969  042E  0143               	movlb	3	; select bank3
 21970  042F  00AD               	movwf	(_manualRed^(0+384)+5)
 21971                           
 21972                           ;controller.c: 174:     manualRed.parent = &manual;
 21973  0430  3046               	movlw	(low (_manual| (0+256)))& (0+255)
 21974  0431  0140               	movlb	0	; select bank0
 21975  0432  00A0               	movwf	??_CONTROLLER_init
 21976  0433  0820               	movf	??_CONTROLLER_init,w
 21977  0434  0143               	movlb	3	; select bank3
 21978  0435  00AC               	movwf	(low ((_manualRed| (0+256)+4)))^(0+128)
 21979                           
 21980                           ;controller.c: 176:     manualGreen.nextItem = ((void*)0);
 21981  0436  0144               	movlb	4	; select bank4
 21982  0437  01B8               	clrf	_manualGreen^(0+512)
 21983                           
 21984                           ;controller.c: 177:     manualGreen.prevItem = ((void*)0);
 21985  0438  01B9               	clrf	(low ((_manualGreen| (0+512)+1)))^0
 21986                           
 21987                           ;controller.c: 178:     manualGreen.config = &manualBlue;
 21988  0439  3030               	movlw	low _manualBlue
 21989  043A  00BA               	movwf	(low ((_manualGreen| (0+512)+2)))^0
 21990  043B  3002               	movlw	high _manualBlue
 21991  043C  00BB               	movwf	((low ((_manualGreen| (0+512)+2))+1))^0
 21992                           
 21993                           ;controller.c: 179:     manualGreen.task = CONTROL_MANUAL;
 21994  043D  30AF               	movlw	low _CONTROL_MANUAL
 21995  043E  00BE               	movwf	(low ((_manualGreen| (0+512)+6)))^0
 21996  043F  300C               	movlw	high _CONTROL_MANUAL
 21997  0440  00BF               	movwf	((low ((_manualGreen| (0+512)+6)))^0+1)
 21998                           
 21999                           ;controller.c: 180:     manualGreen.name = MANUAL_GREEN;
 22000  0441  300E               	movlw	14
 22001  0442  0140               	movlb	0	; select bank0
 22002  0443  00A0               	movwf	??_CONTROLLER_init
 22003  0444  0820               	movf	??_CONTROLLER_init,w
 22004  0445  0144               	movlb	4	; select bank4
 22005  0446  00BD               	movwf	(_manualGreen^(0+512)+5)
 22006                           
 22007                           ;controller.c: 181:     manualGreen.parent = &manual;
 22008  0447  3046               	movlw	(low (_manual| (0+256)))& (0+255)
 22009  0448  0140               	movlb	0	; select bank0
 22010  0449  00A0               	movwf	??_CONTROLLER_init
 22011  044A  0820               	movf	??_CONTROLLER_init,w
 22012  044B  0144               	movlb	4	; select bank4
 22013  044C  00BC               	movwf	(low ((_manualGreen| (0+512)+4)))^0
 22014                           
 22015                           ;controller.c: 183:     manualBlue.nextItem = ((void*)0);
 22016  044D  01B0               	clrf	_manualBlue^(0+512)
 22017                           
 22018                           ;controller.c: 184:     manualBlue.prevItem = ((void*)0);
 22019  044E  01B1               	clrf	(low ((_manualBlue| (0+512)+1)))^0
 22020                           
 22021                           ;controller.c: 185:     manualBlue.config = &manualWhite;
 22022  044F  3028               	movlw	low _manualWhite
 22023  0450  00B2               	movwf	(low ((_manualBlue| (0+512)+2)))^0
 22024  0451  3002               	movlw	high _manualWhite
 22025  0452  00B3               	movwf	((low ((_manualBlue| (0+512)+2))+1))^0
 22026                           
 22027                           ;controller.c: 186:     manualBlue.task = CONTROL_MANUAL;
 22028  0453  30AF               	movlw	low _CONTROL_MANUAL
 22029  0454  00B6               	movwf	(low ((_manualBlue| (0+512)+6)))^0
 22030  0455  300C               	movlw	high _CONTROL_MANUAL
 22031  0456  00B7               	movwf	((low ((_manualBlue| (0+512)+6)))^0+1)
 22032                           
 22033                           ;controller.c: 187:     manualBlue.name = MANUAL_BLUE;
 22034  0457  300F               	movlw	15
 22035  0458  0140               	movlb	0	; select bank0
 22036  0459  00A0               	movwf	??_CONTROLLER_init
 22037  045A  0820               	movf	??_CONTROLLER_init,w
 22038  045B  0144               	movlb	4	; select bank4
 22039  045C  00B5               	movwf	(_manualBlue^(0+512)+5)
 22040                           
 22041                           ;controller.c: 188:     manualBlue.parent = &manual;
 22042  045D  3046               	movlw	(low (_manual| (0+256)))& (0+255)
 22043  045E  0140               	movlb	0	; select bank0
 22044  045F  00A0               	movwf	??_CONTROLLER_init
 22045  0460  0820               	movf	??_CONTROLLER_init,w
 22046  0461  0144               	movlb	4	; select bank4
 22047  0462  00B4               	movwf	(low ((_manualBlue| (0+512)+4)))^0
 22048                           
 22049                           ;controller.c: 190:     manualWhite.nextItem = ((void*)0);
 22050  0463  01A8               	clrf	_manualWhite^(0+512)
 22051                           
 22052                           ;controller.c: 191:     manualWhite.prevItem = ((void*)0);
 22053  0464  01A9               	clrf	(low ((_manualWhite| (0+512)+1)))^0
 22054                           
 22055                           ;controller.c: 192:     manualWhite.config = &manualRed;
 22056  0465  30A8               	movlw	low _manualRed
 22057  0466  00AA               	movwf	(low ((_manualWhite| (0+512)+2)))^0
 22058  0467  3001               	movlw	high _manualRed
 22059  0468  00AB               	movwf	((low ((_manualWhite| (0+512)+2))+1))^0
 22060                           
 22061                           ;controller.c: 193:     manualWhite.task = CONTROL_MANUAL;
 22062  0469  30AF               	movlw	low _CONTROL_MANUAL
 22063  046A  00AE               	movwf	(low ((_manualWhite| (0+512)+6)))^0
 22064  046B  300C               	movlw	high _CONTROL_MANUAL
 22065  046C  00AF               	movwf	((low ((_manualWhite| (0+512)+6)))^0+1)
 22066                           
 22067                           ;controller.c: 194:     manualWhite.name = MANUAL_WHITE;
 22068  046D  3010               	movlw	16
 22069  046E  0140               	movlb	0	; select bank0
 22070  046F  00A0               	movwf	??_CONTROLLER_init
 22071  0470  0820               	movf	??_CONTROLLER_init,w
 22072  0471  0144               	movlb	4	; select bank4
 22073  0472  00AD               	movwf	(_manualWhite^(0+512)+5)
 22074                           
 22075                           ;controller.c: 195:     manualWhite.parent = &manual;
 22076  0473  3046               	movlw	(low (_manual| (0+256)))& (0+255)
 22077  0474  0140               	movlb	0	; select bank0
 22078  0475  00A0               	movwf	??_CONTROLLER_init
 22079  0476  0820               	movf	??_CONTROLLER_init,w
 22080  0477  0144               	movlb	4	; select bank4
 22081  0478  00AC               	movwf	(low ((_manualWhite| (0+512)+4)))^0
 22082                           
 22083                           ;controller.c: 198:     beatStrobeTask.nextItem = ((void*)0);
 22084  0479  01E0               	clrf	_beatStrobeTask^(0+512)
 22085                           
 22086                           ;controller.c: 199:     beatStrobeTask.prevItem = ((void*)0);
 22087  047A  01E1               	clrf	(low ((_beatStrobeTask| (0+512)+1)))^0
 22088                           
 22089                           ;controller.c: 200:     beatStrobeTask.config = ((void*)0);
 22090  047B  01E2               	clrf	(low ((_beatStrobeTask| (0+512)+2)))^0
 22091  047C  01E3               	clrf	((low ((_beatStrobeTask| (0+512)+2))+1))^0
 22092                           
 22093                           ;controller.c: 201:     beatStrobeTask.task = CONTROL_BEAT;
 22094  047D  30D0               	movlw	low _CONTROL_BEAT
 22095  047E  00E6               	movwf	(low ((_beatStrobeTask| (0+512)+6)))^0
 22096  047F  3013               	movlw	high _CONTROL_BEAT
 22097  0480  00E7               	movwf	((low ((_beatStrobeTask| (0+512)+6)))^0+1)
 22098                           
 22099                           ;controller.c: 202:     beatStrobeTask.name = B_STROBE_TASK;
 22100  0481  3009               	movlw	9
 22101  0482  0140               	movlb	0	; select bank0
 22102  0483  00A0               	movwf	??_CONTROLLER_init
 22103  0484  0820               	movf	??_CONTROLLER_init,w
 22104  0485  0144               	movlb	4	; select bank4
 22105  0486  00E5               	movwf	(_beatStrobeTask^(0+512)+5)
 22106                           
 22107                           ;controller.c: 203:     beatStrobeTask.parent = &beat;
 22108  0487  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 22109  0488  0140               	movlb	0	; select bank0
 22110  0489  00A0               	movwf	??_CONTROLLER_init
 22111  048A  0820               	movf	??_CONTROLLER_init,w
 22112  048B  0144               	movlb	4	; select bank4
 22113  048C  00E4               	movwf	(low ((_beatStrobeTask| (0+512)+4)))^0
 22114                           
 22115                           ;controller.c: 205:     beatFadeTask.nextItem = ((void*)0);
 22116  048D  01D8               	clrf	_beatFadeTask^(0+512)
 22117                           
 22118                           ;controller.c: 206:     beatFadeTask.prevItem = ((void*)0);
 22119  048E  01D9               	clrf	(low ((_beatFadeTask| (0+512)+1)))^0
 22120                           
 22121                           ;controller.c: 207:     beatFadeTask.config = ((void*)0);
 22122  048F  01DA               	clrf	(low ((_beatFadeTask| (0+512)+2)))^0
 22123  0490  01DB               	clrf	((low ((_beatFadeTask| (0+512)+2))+1))^0
 22124                           
 22125                           ;controller.c: 208:     beatFadeTask.task = CONTROL_BEAT;
 22126  0491  30D0               	movlw	low _CONTROL_BEAT
 22127  0492  00DE               	movwf	(low ((_beatFadeTask| (0+512)+6)))^0
 22128  0493  3013               	movlw	high _CONTROL_BEAT
 22129  0494  00DF               	movwf	((low ((_beatFadeTask| (0+512)+6)))^0+1)
 22130                           
 22131                           ;controller.c: 209:     beatFadeTask.name = B_FADE_TASK;
 22132  0495  300A               	movlw	10
 22133  0496  0140               	movlb	0	; select bank0
 22134  0497  00A0               	movwf	??_CONTROLLER_init
 22135  0498  0820               	movf	??_CONTROLLER_init,w
 22136  0499  0144               	movlb	4	; select bank4
 22137  049A  00DD               	movwf	(_beatFadeTask^(0+512)+5)
 22138                           
 22139                           ;controller.c: 210:     beatFadeTask.parent = &beat;
 22140  049B  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 22141  049C  0140               	movlb	0	; select bank0
 22142  049D  00A0               	movwf	??_CONTROLLER_init
 22143  049E  0820               	movf	??_CONTROLLER_init,w
 22144  049F  0144               	movlb	4	; select bank4
 22145  04A0  00DC               	movwf	(low ((_beatFadeTask| (0+512)+4)))^0
 22146                           
 22147                           ;controller.c: 212:     beatContTask.nextItem = ((void*)0);
 22148  04A1  01D0               	clrf	_beatContTask^(0+512)
 22149                           
 22150                           ;controller.c: 213:     beatContTask.prevItem = ((void*)0);
 22151  04A2  01D1               	clrf	(low ((_beatContTask| (0+512)+1)))^0
 22152                           
 22153                           ;controller.c: 214:     beatContTask.config = ((void*)0);
 22154  04A3  01D2               	clrf	(low ((_beatContTask| (0+512)+2)))^0
 22155  04A4  01D3               	clrf	((low ((_beatContTask| (0+512)+2))+1))^0
 22156                           
 22157                           ;controller.c: 215:     beatContTask.task = CONTROL_BEAT;
 22158  04A5  30D0               	movlw	low _CONTROL_BEAT
 22159  04A6  00D6               	movwf	(low ((_beatContTask| (0+512)+6)))^0
 22160  04A7  3013               	movlw	high _CONTROL_BEAT
 22161  04A8  00D7               	movwf	((low ((_beatContTask| (0+512)+6)))^0+1)
 22162                           
 22163                           ;controller.c: 216:     beatContTask.name = B_CONT_TASK;
 22164  04A9  300B               	movlw	11
 22165  04AA  0140               	movlb	0	; select bank0
 22166  04AB  00A0               	movwf	??_CONTROLLER_init
 22167  04AC  0820               	movf	??_CONTROLLER_init,w
 22168  04AD  0144               	movlb	4	; select bank4
 22169  04AE  00D5               	movwf	(_beatContTask^(0+512)+5)
 22170                           
 22171                           ;controller.c: 217:     beatContTask.parent = &beat;
 22172  04AF  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 22173  04B0  0140               	movlb	0	; select bank0
 22174  04B1  00A0               	movwf	??_CONTROLLER_init
 22175  04B2  0820               	movf	??_CONTROLLER_init,w
 22176  04B3  0144               	movlb	4	; select bank4
 22177  04B4  00D4               	movwf	(low ((_beatContTask| (0+512)+4)))^0
 22178                           
 22179                           ;controller.c: 219:     beatMixedTask.nextItem = ((void*)0);
 22180  04B5  01C8               	clrf	_beatMixedTask^(0+512)
 22181                           
 22182                           ;controller.c: 220:     beatMixedTask.prevItem = ((void*)0);
 22183  04B6  01C9               	clrf	(low ((_beatMixedTask| (0+512)+1)))^0
 22184                           
 22185                           ;controller.c: 221:     beatMixedTask.config = ((void*)0);
 22186  04B7  01CA               	clrf	(low ((_beatMixedTask| (0+512)+2)))^0
 22187  04B8  01CB               	clrf	((low ((_beatMixedTask| (0+512)+2))+1))^0
 22188                           
 22189                           ;controller.c: 222:     beatMixedTask.task = CONTROL_BEAT;
 22190  04B9  30D0               	movlw	low _CONTROL_BEAT
 22191  04BA  00CE               	movwf	(low ((_beatMixedTask| (0+512)+6)))^0
 22192  04BB  3013               	movlw	high _CONTROL_BEAT
 22193  04BC  00CF               	movwf	((low ((_beatMixedTask| (0+512)+6)))^0+1)
 22194                           
 22195                           ;controller.c: 223:     beatMixedTask.name = B_MIXED_TASK;
 22196  04BD  300C               	movlw	12
 22197  04BE  0140               	movlb	0	; select bank0
 22198  04BF  00A0               	movwf	??_CONTROLLER_init
 22199  04C0  0820               	movf	??_CONTROLLER_init,w
 22200  04C1  0144               	movlb	4	; select bank4
 22201  04C2  00CD               	movwf	(_beatMixedTask^(0+512)+5)
 22202                           
 22203                           ;controller.c: 224:     beatMixedTask.parent = &beat;
 22204  04C3  304E               	movlw	(low (_beat| (0+256)))& (0+255)
 22205  04C4  0140               	movlb	0	; select bank0
 22206  04C5  00A0               	movwf	??_CONTROLLER_init
 22207  04C6  0820               	movf	??_CONTROLLER_init,w
 22208  04C7  0144               	movlb	4	; select bank4
 22209  04C8  00CC               	movwf	(low ((_beatMixedTask| (0+512)+4)))^0
 22210  04C9  0008               	return
 22211  04CA                     __end_of_CONTROLLER_init:	
 22212                           
 22213                           	psect	text76
 22214  1B88                     __ptext76:	
 22215 ;; *************** function _CLOCK_init *****************
 22216 ;; Defined at:
 22217 ;;		line 8 in file "clock.c"
 22218 ;; Parameters:    Size  Location     Type
 22219 ;;		None
 22220 ;; Auto vars:     Size  Location     Type
 22221 ;;		None
 22222 ;; Return value:  Size  Location     Type
 22223 ;;                  1    wreg      void 
 22224 ;; Registers used:
 22225 ;;		wreg, status,2, status,0, pclath, cstack
 22226 ;; Tracked objects:
 22227 ;;		On entry : 0/0
 22228 ;;		On exit  : 0/0
 22229 ;;		Unchanged: 0/0
 22230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22235 ;;Total ram usage:        0 bytes
 22236 ;; Hardware stack levels used:    1
 22237 ;; Hardware stack levels required when called:    5
 22238 ;; This function calls:
 22239 ;;		_TMR0_SetInterruptHandler
 22240 ;; This function is called by:
 22241 ;;		_main
 22242 ;; This function uses a non-reentrant model
 22243 ;;
 22244                           
 22245                           
 22246                           ;psect for function _CLOCK_init
 22247  1B88                     _CLOCK_init:	
 22248                           
 22249                           ;clock.c: 11:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 22250                           
 22251                           ;incstack = 0
 22252                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 22253  1B88  3082               	movlw	low _CLOCK_timerCallback
 22254  1B89  0140               	movlb	0	; select bank0
 22255  1B8A  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 22256  1B8B  301B               	movlw	high _CLOCK_timerCallback
 22257  1B8C  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 22258  1B8D  319B  23CC         	fcall	_TMR0_SetInterruptHandler
 22259  1B8F  0008               	return
 22260  1B90                     __end_of_CLOCK_init:	
 22261                           
 22262                           	psect	text77
 22263  1BCC                     __ptext77:	
 22264 ;; *************** function _TMR0_SetInterruptHandler *****************
 22265 ;; Defined at:
 22266 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 22267 ;; Parameters:    Size  Location     Type
 22268 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 22269 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 22270 ;; Auto vars:     Size  Location     Type
 22271 ;;		None
 22272 ;; Return value:  Size  Location     Type
 22273 ;;                  1    wreg      void 
 22274 ;; Registers used:
 22275 ;;		wreg
 22276 ;; Tracked objects:
 22277 ;;		On entry : 0/0
 22278 ;;		On exit  : 0/0
 22279 ;;		Unchanged: 0/0
 22280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22281 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22284 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22285 ;;Total ram usage:        2 bytes
 22286 ;; Hardware stack levels used:    1
 22287 ;; Hardware stack levels required when called:    4
 22288 ;; This function calls:
 22289 ;;		Nothing
 22290 ;; This function is called by:
 22291 ;;		_TMR0_Initialize
 22292 ;;		_CLOCK_init
 22293 ;; This function uses a non-reentrant model
 22294 ;;
 22295                           
 22296                           
 22297                           ;psect for function _TMR0_SetInterruptHandler
 22298  1BCC                     _TMR0_SetInterruptHandler:	
 22299                           
 22300                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 22301                           
 22302                           ;incstack = 0
 22303                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 22304  1BCC  0140               	movlb	0	; select bank0
 22305  1BCD  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 22306  1BCE  0142               	movlb	2	; select bank2
 22307  1BCF  00E4               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 22308  1BD0  0140               	movlb	0	; select bank0
 22309  1BD1  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 22310  1BD2  0142               	movlb	2	; select bank2
 22311  1BD3  00E3               	movwf	_TMR0_InterruptHandler^(0+256)
 22312  1BD4  0008               	return
 22313  1BD5                     __end_of_TMR0_SetInterruptHandler:	
 22314                           
 22315                           	psect	text78
 22316  0BC1                     __ptext78:	
 22317 ;; *************** function _BUTTONS_task *****************
 22318 ;; Defined at:
 22319 ;;		line 56 in file "buttons.c"
 22320 ;; Parameters:    Size  Location     Type
 22321 ;;		None
 22322 ;; Auto vars:     Size  Location     Type
 22323 ;;  btn             1    8[BANK0 ] PTR struct .
 22324 ;;		 -> buttons(32), 
 22325 ;;  i               1    5[BANK0 ] unsigned char 
 22326 ;;  time            2    6[BANK0 ] unsigned short 
 22327 ;; Return value:  Size  Location     Type
 22328 ;;                  1    wreg      void 
 22329 ;; Registers used:
 22330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22331 ;; Tracked objects:
 22332 ;;		On entry : 0/0
 22333 ;;		On exit  : 0/0
 22334 ;;		Unchanged: 0/0
 22335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22337 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22338 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22339 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22340 ;;Total ram usage:        7 bytes
 22341 ;; Hardware stack levels used:    1
 22342 ;; Hardware stack levels required when called:    5
 22343 ;; This function calls:
 22344 ;;		_CLOCK_getTime
 22345 ;; This function is called by:
 22346 ;;		_main
 22347 ;; This function uses a non-reentrant model
 22348 ;;
 22349                           
 22350                           
 22351                           ;psect for function _BUTTONS_task
 22352  0BC1                     _BUTTONS_task:	
 22353                           
 22354                           ;buttons.c: 58:     time_t time = CLOCK_getTime();
 22355                           
 22356                           ;incstack = 0
 22357                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22358  0BC1  319B  23C3  318B   	fcall	_CLOCK_getTime
 22359  0BC4  0140               	movlb	0	; select bank0
 22360  0BC5  0821               	movf	?_CLOCK_getTime+1,w
 22361  0BC6  00A7               	movwf	BUTTONS_task@time+1
 22362  0BC7  0820               	movf	?_CLOCK_getTime,w
 22363  0BC8  00A6               	movwf	BUTTONS_task@time
 22364                           
 22365                           ;buttons.c: 61:     if (time - lastTime < 10)
 22366  0BC9  0142               	movlb	2	; select bank2
 22367  0BCA  0838               	movf	_lastTime^(0+256),w
 22368  0BCB  0140               	movlb	0	; select bank0
 22369  0BCC  0226               	subwf	BUTTONS_task@time,w
 22370  0BCD  00A2               	movwf	??_BUTTONS_task
 22371  0BCE  0142               	movlb	2	; select bank2
 22372  0BCF  0839               	movf	(_lastTime+1)^(0+256),w
 22373  0BD0  0140               	movlb	0	; select bank0
 22374  0BD1  3B27               	subwfb	BUTTONS_task@time+1,w
 22375  0BD2  00A3               	movwf	??_BUTTONS_task+1
 22376  0BD3  3000               	movlw	0
 22377  0BD4  0223               	subwf	??_BUTTONS_task+1,w
 22378  0BD5  300A               	movlw	10
 22379  0BD6  1903               	skipnz
 22380  0BD7  0222               	subwf	??_BUTTONS_task,w
 22381  0BD8  1C03               	btfss	3,0
 22382  0BD9  0008               	return
 22383                           
 22384                           ;buttons.c: 64:     lastTime = time;
 22385  0BDA  0827               	movf	BUTTONS_task@time+1,w
 22386  0BDB  0142               	movlb	2	; select bank2
 22387  0BDC  00B9               	movwf	(_lastTime+1)^(0+256)
 22388  0BDD  0140               	movlb	0	; select bank0
 22389  0BDE  0826               	movf	BUTTONS_task@time,w
 22390  0BDF  0142               	movlb	2	; select bank2
 22391  0BE0  00B8               	movwf	_lastTime^(0+256)
 22392                           
 22393                           ;buttons.c: 67:     for (uint8_t i = 0; i < 4; i++) {
 22394  0BE1  0140               	movlb	0	; select bank0
 22395  0BE2  01A5               	clrf	BUTTONS_task@i
 22396  0BE3                     l8720:	
 22397                           
 22398                           ;buttons.c: 68:         button_t* btn = buttons + i;
 22399  0BE3  0825               	movf	BUTTONS_task@i,w
 22400  0BE4  00A2               	movwf	??_BUTTONS_task
 22401  0BE5  3002               	movlw	2
 22402  0BE6                     u8375:	
 22403  0BE6  35A2               	lslf	??_BUTTONS_task,f
 22404  0BE7  3EFF               	addlw	-1
 22405  0BE8  1D03               	skipz
 22406  0BE9  2BE6               	goto	u8375
 22407  0BEA  3522               	lslf	??_BUTTONS_task,w
 22408  0BEB  3EC0               	addlw	(low (_buttons| (0+512)))& (0+255)
 22409  0BEC  00A3               	movwf	??_BUTTONS_task+1
 22410  0BED  0823               	movf	??_BUTTONS_task+1,w
 22411  0BEE  00A8               	movwf	BUTTONS_task@btn
 22412                           
 22413                           ;buttons.c: 71:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 22414  0BEF  0828               	movf	BUTTONS_task@btn,w
 22415  0BF0  0086               	movwf	6
 22416  0BF1  3002               	movlw	2	; select bank4/5
 22417  0BF2  0087               	movwf	7
 22418  0BF3  3F40               	moviw [0]fsr1
 22419  0BF4  00A2               	movwf	??_BUTTONS_task
 22420  0BF5  3F41               	moviw [1]fsr1
 22421  0BF6  00A3               	movwf	??_BUTTONS_task+1
 22422  0BF7  0822               	movf	??_BUTTONS_task,w
 22423  0BF8  0086               	movwf	6
 22424  0BF9  0823               	movf	??_BUTTONS_task+1,w
 22425  0BFA  0087               	movwf	7
 22426  0BFB  3001               	movlw	1
 22427  0BFC  00A4               	movwf	??_BUTTONS_task+2
 22428  0BFD  0828               	movf	BUTTONS_task@btn,w
 22429  0BFE  3E02               	addlw	2
 22430  0BFF  0084               	movwf	4
 22431  0C00  3002               	movlw	2	; select bank4/5
 22432  0C01  0085               	movwf	5
 22433  0C02  0A00               	incf	0,w
 22434  0C03  2C05               	goto	u8384
 22435  0C04                     u8385:	
 22436  0C04  35A4               	lslf	??_BUTTONS_task+2,f
 22437  0C05                     u8384:	
 22438  0C05  0B89               	decfsz	9,f
 22439  0C06  2C04               	goto	u8385
 22440  0C07  0824               	movf	??_BUTTONS_task+2,w
 22441  0C08  0501               	andwf	1,w
 22442  0C09  1D03               	btfss	3,2
 22443  0C0A  2C24               	goto	l8728
 22444                           
 22445                           ;buttons.c: 72:             btn->state = STATE_PRESSED;
 22446  0C0B  0828               	movf	BUTTONS_task@btn,w
 22447  0C0C  3E03               	addlw	3
 22448  0C0D  0086               	movwf	6
 22449  0C0E  3002               	movlw	2	; select bank4/5
 22450  0C0F  0087               	movwf	7
 22451  0C10  0181               	clrf	1
 22452  0C11  0A81               	incf	1,f
 22453                           
 22454                           ;buttons.c: 73:             if(btn->event == EVENT_IDLE){
 22455  0C12  0828               	movf	BUTTONS_task@btn,w
 22456  0C13  3E07               	addlw	7
 22457  0C14  0086               	movwf	6
 22458  0C15  3002               	movlw	2	; select bank4/5
 22459  0C16  0087               	movwf	7
 22460  0C17  0801               	movf	1,w
 22461  0C18  1D03               	btfss	3,2
 22462  0C19  2C2A               	goto	l911
 22463                           
 22464                           ;buttons.c: 74:                 btn->lastHoldTime = time;
 22465  0C1A  0828               	movf	BUTTONS_task@btn,w
 22466  0C1B  3E05               	addlw	5
 22467  0C1C  0086               	movwf	6
 22468  0C1D  3002               	movlw	2	; select bank4/5
 22469  0C1E  0087               	movwf	7
 22470  0C1F  0826               	movf	BUTTONS_task@time,w
 22471  0C20  3FC0               	movwi [0]fsr1
 22472  0C21  0827               	movf	BUTTONS_task@time+1,w
 22473  0C22  3FC1               	movwi [1]fsr1
 22474  0C23  2C2A               	goto	l911
 22475  0C24                     l8728:	
 22476                           
 22477                           ;buttons.c: 77:             btn->state = STATE_UNPRESSED;
 22478  0C24  0828               	movf	BUTTONS_task@btn,w
 22479  0C25  3E03               	addlw	3
 22480  0C26  0086               	movwf	6
 22481  0C27  3002               	movlw	2	; select bank4/5
 22482  0C28  0087               	movwf	7
 22483  0C29  0181               	clrf	1
 22484  0C2A                     l911:	
 22485                           ;buttons.c: 78:         }
 22486                           
 22487                           
 22488                           ;buttons.c: 80:         if (btn->state == STATE_UNPRESSED && btn->lastState == STATE_PRE
      +                          SSED) {
 22489  0C2A  0828               	movf	BUTTONS_task@btn,w
 22490  0C2B  3E03               	addlw	3
 22491  0C2C  0086               	movwf	6
 22492  0C2D  3002               	movlw	2	; select bank4/5
 22493  0C2E  0087               	movwf	7
 22494  0C2F  0801               	movf	1,w
 22495  0C30  1D03               	btfss	3,2
 22496  0C31  2C42               	goto	l8734
 22497  0C32  0828               	movf	BUTTONS_task@btn,w
 22498  0C33  3E04               	addlw	4
 22499  0C34  0086               	movwf	6
 22500  0C35  3002               	movlw	2	; select bank4/5
 22501  0C36  0087               	movwf	7
 22502  0C37  0301               	decf	1,w
 22503  0C38  1D03               	btfss	3,2
 22504  0C39  2C42               	goto	l8734
 22505                           
 22506                           ;buttons.c: 82:             btn->event = EVENT_PRESSED;
 22507  0C3A  0828               	movf	BUTTONS_task@btn,w
 22508  0C3B  3E07               	addlw	7
 22509  0C3C  0086               	movwf	6
 22510  0C3D  3002               	movlw	2	; select bank4/5
 22511  0C3E  0087               	movwf	7
 22512  0C3F  0181               	clrf	1
 22513  0C40  0A81               	incf	1,f
 22514                           
 22515                           ;buttons.c: 83:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 22516  0C41  2C98               	goto	l913
 22517  0C42                     l8734:	
 22518  0C42  0828               	movf	BUTTONS_task@btn,w
 22519  0C43  3E03               	addlw	3
 22520  0C44  0086               	movwf	6
 22521  0C45  3002               	movlw	2	; select bank4/5
 22522  0C46  0087               	movwf	7
 22523  0C47  0301               	decf	1,w
 22524  0C48  1D03               	btfss	3,2
 22525  0C49  2C79               	goto	l8746
 22526  0C4A  0828               	movf	BUTTONS_task@btn,w
 22527  0C4B  3E04               	addlw	4
 22528  0C4C  0086               	movwf	6
 22529  0C4D  3002               	movlw	2	; select bank4/5
 22530  0C4E  0087               	movwf	7
 22531  0C4F  0301               	decf	1,w
 22532  0C50  1D03               	btfss	3,2
 22533  0C51  2C79               	goto	l8746
 22534                           
 22535                           ;buttons.c: 84:             if(time - btn->lastHoldTime > 200){
 22536  0C52  0828               	movf	BUTTONS_task@btn,w
 22537  0C53  3E05               	addlw	5
 22538  0C54  0086               	movwf	6
 22539  0C55  3002               	movlw	2	; select bank4/5
 22540  0C56  0087               	movwf	7
 22541  0C57  3F40               	moviw [0]fsr1
 22542  0C58  0226               	subwf	BUTTONS_task@time,w
 22543  0C59  00A2               	movwf	??_BUTTONS_task
 22544  0C5A  3F41               	moviw [1]fsr1
 22545  0C5B  3B27               	subwfb	BUTTONS_task@time+1,w
 22546  0C5C  00A3               	movwf	??_BUTTONS_task+1
 22547  0C5D  3000               	movlw	0
 22548  0C5E  0223               	subwf	??_BUTTONS_task+1,w
 22549  0C5F  30C9               	movlw	201
 22550  0C60  1903               	skipnz
 22551  0C61  0222               	subwf	??_BUTTONS_task,w
 22552  0C62  1C03               	skipc
 22553  0C63  2C66               	goto	l8742
 22554                           
 22555                           ;buttons.c: 85:                 btn->event = EVENT_HELD;
 22556  0C64  3003               	movlw	3
 22557  0C65  2C70               	goto	L20
 22558  0C66                     l8742:	
 22559                           ;buttons.c: 86:             } else if(btn->event != EVENT_HELD) {
 22560                           
 22561  0C66  0828               	movf	BUTTONS_task@btn,w
 22562  0C67  3E07               	addlw	7
 22563  0C68  0086               	movwf	6
 22564  0C69  3002               	movlw	2	; select bank4/5
 22565  0C6A  0087               	movwf	7
 22566  0C6B  3003               	movlw	3
 22567  0C6C  0601               	xorwf	1,w
 22568  0C6D  1903               	btfsc	3,2
 22569  0C6E  2C98               	goto	l913
 22570                           
 22571                           ;buttons.c: 87:                 btn->event = EVENT_INTER_HOLD;
 22572  0C6F  3002               	movlw	2
 22573  0C70                     L20:	
 22574  0C70  00A2               	movwf	??_BUTTONS_task
 22575  0C71  0828               	movf	BUTTONS_task@btn,w
 22576  0C72  3E07               	addlw	7
 22577  0C73  0086               	movwf	6
 22578  0C74  3002               	movlw	2	; select bank4/5
 22579  0C75  0087               	movwf	7
 22580  0C76  0822               	movf	??_BUTTONS_task,w
 22581  0C77  0081               	movwf	1
 22582  0C78  2C98               	goto	l913
 22583  0C79                     l8746:	
 22584  0C79  0828               	movf	BUTTONS_task@btn,w
 22585  0C7A  3E03               	addlw	3
 22586  0C7B  0086               	movwf	6
 22587  0C7C  3002               	movlw	2	; select bank4/5
 22588  0C7D  0087               	movwf	7
 22589  0C7E  0801               	movf	1,w
 22590  0C7F  1D03               	btfss	3,2
 22591  0C80  2C98               	goto	l913
 22592  0C81  0828               	movf	BUTTONS_task@btn,w
 22593  0C82  3E04               	addlw	4
 22594  0C83  0086               	movwf	6
 22595  0C84  3002               	movlw	2	; select bank4/5
 22596  0C85  0087               	movwf	7
 22597  0C86  0301               	decf	1,w
 22598  0C87  1D03               	btfss	3,2
 22599  0C88  2C98               	goto	l913
 22600  0C89  0828               	movf	BUTTONS_task@btn,w
 22601  0C8A  3E07               	addlw	7
 22602  0C8B  0086               	movwf	6
 22603  0C8C  3002               	movlw	2	; select bank4/5
 22604  0C8D  0087               	movwf	7
 22605  0C8E  3003               	movlw	3
 22606  0C8F  0601               	xorwf	1,w
 22607  0C90  1D03               	btfss	3,2
 22608  0C91  2C98               	goto	l913
 22609                           
 22610                           ;buttons.c: 90:             btn->event = EVENT_IDLE;
 22611  0C92  0828               	movf	BUTTONS_task@btn,w
 22612  0C93  3E07               	addlw	7
 22613  0C94  0086               	movwf	6
 22614  0C95  3002               	movlw	2	; select bank4/5
 22615  0C96  0087               	movwf	7
 22616  0C97  0181               	clrf	1
 22617  0C98                     l913:	
 22618                           
 22619                           ;buttons.c: 93:         btn->lastState = btn->state;
 22620  0C98  0828               	movf	BUTTONS_task@btn,w
 22621  0C99  3E03               	addlw	3
 22622  0C9A  0086               	movwf	6
 22623  0C9B  3002               	movlw	2	; select bank4/5
 22624  0C9C  0087               	movwf	7
 22625  0C9D  0801               	movf	1,w
 22626  0C9E  00A2               	movwf	??_BUTTONS_task
 22627  0C9F  0828               	movf	BUTTONS_task@btn,w
 22628  0CA0  3E04               	addlw	4
 22629  0CA1  0086               	movwf	6
 22630  0CA2  3002               	movlw	2	; select bank4/5
 22631  0CA3  0087               	movwf	7
 22632  0CA4  0822               	movf	??_BUTTONS_task,w
 22633  0CA5  0081               	movwf	1
 22634                           
 22635                           ;buttons.c: 94:     }
 22636  0CA6  3001               	movlw	1
 22637  0CA7  00A2               	movwf	??_BUTTONS_task
 22638  0CA8  0822               	movf	??_BUTTONS_task,w
 22639  0CA9  07A5               	addwf	BUTTONS_task@i,f
 22640  0CAA  3004               	movlw	4
 22641  0CAB  0225               	subwf	BUTTONS_task@i,w
 22642  0CAC  1803               	btfsc	3,0
 22643  0CAD  0008               	return
 22644  0CAE  2BE3               	goto	l8720
 22645  0CAF                     __end_of_BUTTONS_task:	
 22646                           
 22647                           	psect	text79
 22648  127A                     __ptext79:	
 22649 ;; *************** function _BUTTONS_init *****************
 22650 ;; Defined at:
 22651 ;;		line 23 in file "buttons.c"
 22652 ;; Parameters:    Size  Location     Type
 22653 ;;		None
 22654 ;; Auto vars:     Size  Location     Type
 22655 ;;		None
 22656 ;; Return value:  Size  Location     Type
 22657 ;;                  1    wreg      void 
 22658 ;; Registers used:
 22659 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22660 ;; Tracked objects:
 22661 ;;		On entry : 0/0
 22662 ;;		On exit  : 0/0
 22663 ;;		Unchanged: 0/0
 22664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22667 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22668 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22669 ;;Total ram usage:        1 bytes
 22670 ;; Hardware stack levels used:    1
 22671 ;; Hardware stack levels required when called:    5
 22672 ;; This function calls:
 22673 ;;		_GPIO_init
 22674 ;;		_init
 22675 ;; This function is called by:
 22676 ;;		_main
 22677 ;; This function uses a non-reentrant model
 22678 ;;
 22679                           
 22680                           
 22681                           ;psect for function _BUTTONS_init
 22682  127A                     _BUTTONS_init:	
 22683                           
 22684                           ;buttons.c: 24:     menu = &buttons[0];
 22685                           
 22686                           ;incstack = 0
 22687                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22688  127A  30C0               	movlw	(low (_buttons| (0+512)))& (0+255)
 22689  127B  0140               	movlb	0	; select bank0
 22690  127C  00A5               	movwf	??_BUTTONS_init
 22691  127D  0825               	movf	??_BUTTONS_init,w
 22692  127E  0141               	movlb	1	; select bank1
 22693  127F  00E1               	movwf	_menu^(0+128)
 22694                           
 22695                           ;buttons.c: 25:     up = &buttons[1];
 22696  1280  30C8               	movlw	(low ((_buttons| (0+512)+8)))& (0+255)
 22697  1281  0140               	movlb	0	; select bank0
 22698  1282  00A5               	movwf	??_BUTTONS_init
 22699  1283  0825               	movf	??_BUTTONS_init,w
 22700  1284  0141               	movlb	1	; select bank1
 22701  1285  00E0               	movwf	_up^(0+128)
 22702                           
 22703                           ;buttons.c: 26:     down = &buttons[2];
 22704  1286  30D0               	movlw	(low ((_buttons| (0+512)+16)))& (0+255)
 22705  1287  0140               	movlb	0	; select bank0
 22706  1288  00A5               	movwf	??_BUTTONS_init
 22707  1289  0825               	movf	??_BUTTONS_init,w
 22708  128A  0141               	movlb	1	; select bank1
 22709  128B  00DF               	movwf	_down^(0+128)
 22710                           
 22711                           ;buttons.c: 27:     enter = &buttons[3];
 22712  128C  30D8               	movlw	(low ((_buttons| (0+512)+24)))& (0+255)
 22713  128D  0140               	movlb	0	; select bank0
 22714  128E  00A5               	movwf	??_BUTTONS_init
 22715  128F  0825               	movf	??_BUTTONS_init,w
 22716  1290  0141               	movlb	1	; select bank1
 22717  1291  00DE               	movwf	_enter^(0+128)
 22718                           
 22719                           ;buttons.c: 29:     init(menu, &PORTC, 2);
 22720  1292  300E               	movlw	14
 22721  1293  0140               	movlb	0	; select bank0
 22722  1294  00A0               	movwf	init@port
 22723  1295  3000               	movlw	0
 22724  1296  00A1               	movwf	init@port+1
 22725  1297  3002               	movlw	2
 22726  1298  00A5               	movwf	??_BUTTONS_init
 22727  1299  0825               	movf	??_BUTTONS_init,w
 22728  129A  00A2               	movwf	init@pin
 22729  129B  0141               	movlb	1	; select bank1
 22730  129C  0861               	movf	_menu^(0+128),w
 22731  129D  319E  2642  3192   	fcall	_init
 22732                           
 22733                           ;buttons.c: 30:     init(enter, &PORTA, 2);
 22734  12A0  300C               	movlw	12
 22735  12A1  0140               	movlb	0	; select bank0
 22736  12A2  00A0               	movwf	init@port
 22737  12A3  3000               	movlw	0
 22738  12A4  00A1               	movwf	init@port+1
 22739  12A5  3002               	movlw	2
 22740  12A6  00A5               	movwf	??_BUTTONS_init
 22741  12A7  0825               	movf	??_BUTTONS_init,w
 22742  12A8  00A2               	movwf	init@pin
 22743  12A9  0141               	movlb	1	; select bank1
 22744  12AA  085E               	movf	_enter^(0+128),w
 22745  12AB  319E  2642  3192   	fcall	_init
 22746                           
 22747                           ;buttons.c: 31:     init(down, &PORTC, 0);
 22748  12AE  300E               	movlw	14
 22749  12AF  0140               	movlb	0	; select bank0
 22750  12B0  00A0               	movwf	init@port
 22751  12B1  3000               	movlw	0
 22752  12B2  00A1               	movwf	init@port+1
 22753  12B3  01A2               	clrf	init@pin
 22754  12B4  0141               	movlb	1	; select bank1
 22755  12B5  085F               	movf	_down^(0+128),w
 22756  12B6  319E  2642  3192   	fcall	_init
 22757                           
 22758                           ;buttons.c: 32:     init(up, &PORTC, 1);
 22759  12B9  300E               	movlw	14
 22760  12BA  0140               	movlb	0	; select bank0
 22761  12BB  00A0               	movwf	init@port
 22762  12BC  3000               	movlw	0
 22763  12BD  00A1               	movwf	init@port+1
 22764  12BE  01A2               	clrf	init@pin
 22765  12BF  0AA2               	incf	init@pin,f
 22766  12C0  0141               	movlb	1	; select bank1
 22767  12C1  0860               	movf	_up^(0+128),w
 22768  12C2  319E  2642  3192   	fcall	_init
 22769                           
 22770                           ;buttons.c: 34:     GPIO_init();
 22771  12C5  319C  2494         	fcall	_GPIO_init
 22772  12C7  0008               	return
 22773  12C8                     __end_of_BUTTONS_init:	
 22774                           
 22775                           	psect	text80
 22776  1E42                     __ptext80:	
 22777 ;; *************** function _init *****************
 22778 ;; Defined at:
 22779 ;;		line 16 in file "buttons.c"
 22780 ;; Parameters:    Size  Location     Type
 22781 ;;  btn             1    wreg     PTR struct .
 22782 ;;		 -> buttons(32), NULL(0), 
 22783 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 22784 ;;		 -> PORTA(1), PORTC(1), 
 22785 ;;  pin             1    2[BANK0 ] unsigned char 
 22786 ;; Auto vars:     Size  Location     Type
 22787 ;;  btn             1    4[BANK0 ] PTR struct .
 22788 ;;		 -> buttons(32), NULL(0), 
 22789 ;; Return value:  Size  Location     Type
 22790 ;;                  1    wreg      void 
 22791 ;; Registers used:
 22792 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22793 ;; Tracked objects:
 22794 ;;		On entry : 0/0
 22795 ;;		On exit  : 0/0
 22796 ;;		Unchanged: 0/0
 22797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22798 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22799 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22800 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22801 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22802 ;;Total ram usage:        5 bytes
 22803 ;; Hardware stack levels used:    1
 22804 ;; Hardware stack levels required when called:    4
 22805 ;; This function calls:
 22806 ;;		Nothing
 22807 ;; This function is called by:
 22808 ;;		_BUTTONS_init
 22809 ;; This function uses a non-reentrant model
 22810 ;;
 22811                           
 22812                           
 22813                           ;psect for function _init
 22814  1E42                     _init:	
 22815                           
 22816                           ;incstack = 0
 22817                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 22818                           ;init@btn stored from wreg
 22819  1E42  0140               	movlb	0	; select bank0
 22820  1E43  00A4               	movwf	init@btn
 22821                           
 22822                           ;buttons.c: 17:     btn->port = port;
 22823  1E44  0824               	movf	init@btn,w
 22824  1E45  0086               	movwf	6
 22825  1E46  3002               	movlw	2	; select bank4/5
 22826  1E47  0087               	movwf	7
 22827  1E48  0820               	movf	init@port,w
 22828  1E49  3FC0               	movwi [0]fsr1
 22829  1E4A  0821               	movf	init@port+1,w
 22830  1E4B  3FC1               	movwi [1]fsr1
 22831                           
 22832                           ;buttons.c: 18:     btn->pin = pin;
 22833  1E4C  0822               	movf	init@pin,w
 22834  1E4D  00A3               	movwf	??_init
 22835  1E4E  0824               	movf	init@btn,w
 22836  1E4F  3E02               	addlw	2
 22837  1E50  0086               	movwf	6
 22838  1E51  3002               	movlw	2	; select bank4/5
 22839  1E52  0087               	movwf	7
 22840  1E53  0823               	movf	??_init,w
 22841  1E54  0081               	movwf	1
 22842                           
 22843                           ;buttons.c: 19:     btn->state = STATE_UNPRESSED;
 22844  1E55  0824               	movf	init@btn,w
 22845  1E56  3E03               	addlw	3
 22846  1E57  0086               	movwf	6
 22847  1E58  3002               	movlw	2	; select bank4/5
 22848  1E59  0087               	movwf	7
 22849  1E5A  0181               	clrf	1
 22850                           
 22851                           ;buttons.c: 20:     btn->event = EVENT_IDLE;
 22852  1E5B  0824               	movf	init@btn,w
 22853  1E5C  3E07               	addlw	7
 22854  1E5D  0086               	movwf	6
 22855  1E5E  3002               	movlw	2	; select bank4/5
 22856  1E5F  0087               	movwf	7
 22857  1E60  0181               	clrf	1
 22858  1E61  0008               	return
 22859  1E62                     __end_of_init:	
 22860                           
 22861                           	psect	text81
 22862  1C94                     __ptext81:	
 22863 ;; *************** function _GPIO_init *****************
 22864 ;; Defined at:
 22865 ;;		line 38 in file "buttons.c"
 22866 ;; Parameters:    Size  Location     Type
 22867 ;;		None
 22868 ;; Auto vars:     Size  Location     Type
 22869 ;;		None
 22870 ;; Return value:  Size  Location     Type
 22871 ;;                  1    wreg      void 
 22872 ;; Registers used:
 22873 ;;		None
 22874 ;; Tracked objects:
 22875 ;;		On entry : 0/0
 22876 ;;		On exit  : 0/0
 22877 ;;		Unchanged: 0/0
 22878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22883 ;;Total ram usage:        0 bytes
 22884 ;; Hardware stack levels used:    1
 22885 ;; Hardware stack levels required when called:    4
 22886 ;; This function calls:
 22887 ;;		Nothing
 22888 ;; This function is called by:
 22889 ;;		_BUTTONS_init
 22890 ;; This function uses a non-reentrant model
 22891 ;;
 22892                           
 22893                           
 22894                           ;psect for function _GPIO_init
 22895  1C94                     _GPIO_init:	
 22896                           
 22897                           ;buttons.c: 40:     TRISAbits.TRISA2 = 1;
 22898                           
 22899                           ;incstack = 0
 22900                           ; Regs used in _GPIO_init: []
 22901  1C94  0140               	movlb	0	; select bank0
 22902  1C95  1512               	bsf	18,2	;volatile
 22903                           
 22904                           ;buttons.c: 41:     ANSELAbits.ANSA2 = 0;
 22905  1C96  017E               	movlb	62	; select bank62
 22906  1C97  1138               	bcf	56,2	;volatile
 22907                           
 22908                           ;buttons.c: 42:     WPUAbits.WPUA2 = 1;
 22909  1C98  1539               	bsf	57,2	;volatile
 22910                           
 22911                           ;buttons.c: 44:     TRISCbits.TRISC0 = 1;
 22912  1C99  0140               	movlb	0	; select bank0
 22913  1C9A  1414               	bsf	20,0	;volatile
 22914                           
 22915                           ;buttons.c: 45:     TRISCbits.TRISC1 = 1;
 22916  1C9B  1494               	bsf	20,1	;volatile
 22917                           
 22918                           ;buttons.c: 46:     TRISCbits.TRISC2 = 1;
 22919  1C9C  1514               	bsf	20,2	;volatile
 22920                           
 22921                           ;buttons.c: 47:     ANSELCbits.ANSC0 = 0;
 22922  1C9D  017E               	movlb	62	; select bank62
 22923  1C9E  104E               	bcf	78,0	;volatile
 22924                           
 22925                           ;buttons.c: 48:     ANSELCbits.ANSC1 = 0;
 22926  1C9F  10CE               	bcf	78,1	;volatile
 22927                           
 22928                           ;buttons.c: 49:     ANSELCbits.ANSC2 = 0;
 22929  1CA0  114E               	bcf	78,2	;volatile
 22930                           
 22931                           ;buttons.c: 50:     WPUCbits.WPUC0 = 1;
 22932  1CA1  144F               	bsf	79,0	;volatile
 22933                           
 22934                           ;buttons.c: 51:     WPUCbits.WPUC1 = 1;
 22935  1CA2  14CF               	bsf	79,1	;volatile
 22936                           
 22937                           ;buttons.c: 52:     WPUCbits.WPUC2 = 1;
 22938  1CA3  154F               	bsf	79,2	;volatile
 22939  1CA4  0008               	return
 22940  1CA5                     __end_of_GPIO_init:	
 22941                           
 22942                           	psect	text82
 22943  0A15                     __ptext82:	
 22944 ;; *************** function _BEAT_task *****************
 22945 ;; Defined at:
 22946 ;;		line 65 in file "beat.c"
 22947 ;; Parameters:    Size  Location     Type
 22948 ;;		None
 22949 ;; Auto vars:     Size  Location     Type
 22950 ;;  offset          2   10[BANK0 ] unsigned short 
 22951 ;; Return value:  Size  Location     Type
 22952 ;;                  1    wreg      void 
 22953 ;; Registers used:
 22954 ;;		wreg, status,2, status,0, pclath, cstack
 22955 ;; Tracked objects:
 22956 ;;		On entry : 0/0
 22957 ;;		On exit  : 0/0
 22958 ;;		Unchanged: 0/0
 22959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22961 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22962 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22963 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22964 ;;Total ram usage:        4 bytes
 22965 ;; Hardware stack levels used:    1
 22966 ;; Hardware stack levels required when called:    5
 22967 ;; This function calls:
 22968 ;;		_ADCC_SetUpperThreshold
 22969 ;;		_CLOCK_getTime
 22970 ;;		___lwdiv
 22971 ;; This function is called by:
 22972 ;;		_main
 22973 ;; This function uses a non-reentrant model
 22974 ;;
 22975                           
 22976                           
 22977                           ;psect for function _BEAT_task
 22978  0A15                     _BEAT_task:	
 22979                           
 22980                           ;beat.c: 68:     if (CLOCK_getTime() - lastRun < delay)
 22981                           
 22982                           ;incstack = 0
 22983                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 22984  0A15  319B  23C3  318A   	fcall	_CLOCK_getTime
 22985  0A18  0142               	movlb	2	; select bank2
 22986  0A19  082E               	movf	_lastRun^(0+256),w
 22987  0A1A  0140               	movlb	0	; select bank0
 22988  0A1B  0220               	subwf	?_CLOCK_getTime,w
 22989  0A1C  00A8               	movwf	??_BEAT_task
 22990  0A1D  0142               	movlb	2	; select bank2
 22991  0A1E  082F               	movf	(_lastRun+1)^(0+256),w
 22992  0A1F  0140               	movlb	0	; select bank0
 22993  0A20  3B21               	subwfb	?_CLOCK_getTime+1,w
 22994  0A21  00A9               	movwf	??_BEAT_task+1
 22995  0A22  0142               	movlb	2	; select bank2
 22996  0A23  086A               	movf	(_delay+1)^(0+256),w
 22997  0A24  0140               	movlb	0	; select bank0
 22998  0A25  0229               	subwf	??_BEAT_task+1,w
 22999  0A26  1D03               	skipz
 23000  0A27  2A2C               	goto	u8605
 23001  0A28  0142               	movlb	2	; select bank2
 23002  0A29  0869               	movf	_delay^(0+256),w
 23003  0A2A  0140               	movlb	0	; select bank0
 23004  0A2B  0228               	subwf	??_BEAT_task,w
 23005  0A2C                     u8605:	
 23006  0A2C  1C03               	btfss	3,0
 23007  0A2D  0008               	return
 23008                           
 23009                           ;beat.c: 71:     lastRun = CLOCK_getTime();
 23010  0A2E  319B  23C3  318A   	fcall	_CLOCK_getTime
 23011  0A31  0140               	movlb	0	; select bank0
 23012  0A32  0821               	movf	?_CLOCK_getTime+1,w
 23013  0A33  0142               	movlb	2	; select bank2
 23014  0A34  00AF               	movwf	(_lastRun+1)^(0+256)
 23015  0A35  0140               	movlb	0	; select bank0
 23016  0A36  0820               	movf	?_CLOCK_getTime,w
 23017  0A37  0142               	movlb	2	; select bank2
 23018  0A38  00AE               	movwf	_lastRun^(0+256)
 23019                           
 23020                           ;beat.c: 73:     if (thresholdExceeded == 1) {
 23021  0A39  0370               	decf	_thresholdExceeded,w
 23022  0A3A  1D03               	btfss	3,2
 23023  0A3B  2A41               	goto	l8834
 23024                           
 23025                           ;beat.c: 77:         thresholdCount++;
 23026  0A3C  3001               	movlw	1
 23027  0A3D  07AC               	addwf	_thresholdCount^(0+256),f
 23028  0A3E  3000               	movlw	0
 23029  0A3F  3DAD               	addwfc	(_thresholdCount+1)^(0+256),f
 23030                           
 23031                           ;beat.c: 78:     } else {
 23032  0A40  2A47               	goto	l8838
 23033  0A41                     l8834:	
 23034                           
 23035                           ;beat.c: 80:         thresholdCount = 0;
 23036  0A41  01AC               	clrf	_thresholdCount^(0+256)
 23037  0A42  01AD               	clrf	(_thresholdCount+1)^(0+256)
 23038                           
 23039                           ;beat.c: 81:         delay = 30;
 23040  0A43  301E               	movlw	30
 23041  0A44  00E9               	movwf	_delay^(0+256)
 23042  0A45  3000               	movlw	0
 23043  0A46  00EA               	movwf	(_delay^(0+256)+1)
 23044  0A47                     l8838:	
 23045                           
 23046                           ;beat.c: 87:     if (thresholdExceeded == 1 && lastDetected == 0) {
 23047  0A47  0370               	decf	_thresholdExceeded,w
 23048  0A48  1D03               	btfss	3,2
 23049  0A49  2A8E               	goto	l8856
 23050  0A4A  083C               	movf	_lastDetected^(0+256),w
 23051  0A4B  1D03               	btfss	3,2
 23052  0A4C  2A8E               	goto	l8856
 23053                           
 23054                           ;beat.c: 89:         detected = 1;
 23055  0A4D  0141               	movlb	1	; select bank1
 23056  0A4E  01D8               	clrf	_detected^(0+128)
 23057  0A4F  0AD8               	incf	_detected^(0+128),f
 23058                           
 23059                           ;beat.c: 92:         delay = 50;
 23060  0A50  3032               	movlw	50
 23061  0A51  0142               	movlb	2	; select bank2
 23062  0A52  00E9               	movwf	_delay^(0+256)
 23063  0A53  3000               	movlw	0
 23064  0A54  00EA               	movwf	(_delay^(0+256)+1)
 23065                           
 23066                           ;beat.c: 95:         time_t offset = CLOCK_getTime() - lastBeat;
 23067  0A55  319B  23C3  318A   	fcall	_CLOCK_getTime
 23068  0A58  0142               	movlb	2	; select bank2
 23069  0A59  0832               	movf	_lastBeat^(0+256),w
 23070  0A5A  0140               	movlb	0	; select bank0
 23071  0A5B  0220               	subwf	?_CLOCK_getTime,w
 23072  0A5C  00AA               	movwf	BEAT_task@offset
 23073  0A5D  0142               	movlb	2	; select bank2
 23074  0A5E  0833               	movf	(_lastBeat+1)^(0+256),w
 23075  0A5F  0140               	movlb	0	; select bank0
 23076  0A60  3B21               	subwfb	?_CLOCK_getTime+1,w
 23077  0A61  00AB               	movwf	BEAT_task@offset+1
 23078                           
 23079                           ;beat.c: 97:         lastBeat = CLOCK_getTime();
 23080  0A62  319B  23C3  318A   	fcall	_CLOCK_getTime
 23081  0A65  0140               	movlb	0	; select bank0
 23082  0A66  0821               	movf	?_CLOCK_getTime+1,w
 23083  0A67  0142               	movlb	2	; select bank2
 23084  0A68  00B3               	movwf	(_lastBeat+1)^(0+256)
 23085  0A69  0140               	movlb	0	; select bank0
 23086  0A6A  0820               	movf	?_CLOCK_getTime,w
 23087  0A6B  0142               	movlb	2	; select bank2
 23088  0A6C  00B2               	movwf	_lastBeat^(0+256)
 23089                           
 23090                           ;beat.c: 99:         if (offset < 150)
 23091  0A6D  3000               	movlw	0
 23092  0A6E  0140               	movlb	0	; select bank0
 23093  0A6F  022B               	subwf	BEAT_task@offset+1,w
 23094  0A70  3096               	movlw	150
 23095  0A71  1903               	skipnz
 23096  0A72  022A               	subwf	BEAT_task@offset,w
 23097  0A73  1803               	skipnc
 23098  0A74  2A7B               	goto	l8854
 23099                           
 23100                           ;beat.c: 100:             bpm = 400;
 23101  0A75  3090               	movlw	144
 23102  0A76  0142               	movlb	2	; select bank2
 23103  0A77  00B0               	movwf	_bpm^(0+256)
 23104  0A78  3001               	movlw	1
 23105  0A79  00B1               	movwf	(_bpm^(0+256)+1)
 23106  0A7A  2A8E               	goto	l8856
 23107  0A7B                     l8854:	
 23108                           
 23109                           ;beat.c: 102:             bpm = 60 * 1000 / offset;
 23110  0A7B  082B               	movf	BEAT_task@offset+1,w
 23111  0A7C  00A1               	movwf	___lwdiv@divisor+1
 23112  0A7D  082A               	movf	BEAT_task@offset,w
 23113  0A7E  00A0               	movwf	___lwdiv@divisor
 23114  0A7F  3060               	movlw	96
 23115  0A80  00A2               	movwf	___lwdiv@dividend
 23116  0A81  30EA               	movlw	234
 23117  0A82  00A3               	movwf	___lwdiv@dividend+1
 23118  0A83  3190  20A3  318A   	fcall	___lwdiv
 23119  0A86  0140               	movlb	0	; select bank0
 23120  0A87  0821               	movf	?___lwdiv+1,w
 23121  0A88  0142               	movlb	2	; select bank2
 23122  0A89  00B1               	movwf	(_bpm+1)^(0+256)
 23123  0A8A  0140               	movlb	0	; select bank0
 23124  0A8B  0820               	movf	?___lwdiv,w
 23125  0A8C  0142               	movlb	2	; select bank2
 23126  0A8D  00B0               	movwf	_bpm^(0+256)
 23127  0A8E                     l8856:	
 23128                           
 23129                           ;beat.c: 108:     lastDetected = thresholdExceeded;
 23130  0A8E  0870               	movf	_thresholdExceeded,w
 23131  0A8F  0140               	movlb	0	; select bank0
 23132  0A90  00A8               	movwf	??_BEAT_task
 23133  0A91  0828               	movf	??_BEAT_task,w
 23134  0A92  0142               	movlb	2	; select bank2
 23135  0A93  00BC               	movwf	_lastDetected^(0+256)
 23136                           
 23137                           ;beat.c: 109:     thresholdExceeded = 0;
 23138  0A94  01F0               	clrf	_thresholdExceeded
 23139                           
 23140                           ;beat.c: 111:     if (thresholdCount > 3) {
 23141  0A95  082D               	movf	(_thresholdCount+1)^(0+256),w
 23142  0A96  3A80               	xorlw	128
 23143  0A97  0140               	movlb	0	; select bank0
 23144  0A98  00A8               	movwf	??_BEAT_task
 23145  0A99  3080               	movlw	128
 23146  0A9A  0228               	subwf	??_BEAT_task,w
 23147  0A9B  1D03               	skipz
 23148  0A9C  2AA0               	goto	u8655
 23149  0A9D  3004               	movlw	4
 23150  0A9E  0142               	movlb	2	; select bank2
 23151  0A9F  022C               	subwf	_thresholdCount^(0+256),w
 23152  0AA0                     u8655:	
 23153  0AA0  1C03               	skipc
 23154  0AA1  2ABF               	goto	l8870
 23155                           
 23156                           ;beat.c: 112:         threshold += 1;
 23157  0AA2  3001               	movlw	1
 23158  0AA3  0142               	movlb	2	; select bank2
 23159  0AA4  07EB               	addwf	_threshold^(0+256),f
 23160  0AA5  3000               	movlw	0
 23161  0AA6  3DEC               	addwfc	(_threshold+1)^(0+256),f
 23162                           
 23163                           ;beat.c: 113:         ADCC_SetUpperThreshold(threshold);
 23164  0AA7  086C               	movf	(_threshold+1)^(0+256),w
 23165  0AA8  0140               	movlb	0	; select bank0
 23166  0AA9  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 23167  0AAA  0142               	movlb	2	; select bank2
 23168  0AAB  086B               	movf	_threshold^(0+256),w
 23169  0AAC  0140               	movlb	0	; select bank0
 23170  0AAD  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 23171  0AAE  319B  23B1  318A   	fcall	_ADCC_SetUpperThreshold
 23172                           
 23173                           ;beat.c: 114:         thresholdCount = 0;
 23174  0AB1  0142               	movlb	2	; select bank2
 23175  0AB2  01AC               	clrf	_thresholdCount^(0+256)
 23176  0AB3  01AD               	clrf	(_thresholdCount+1)^(0+256)
 23177                           
 23178                           ;beat.c: 117:         lastBeat = CLOCK_getTime();
 23179  0AB4  319B  23C3         	fcall	_CLOCK_getTime
 23180  0AB6  0140               	movlb	0	; select bank0
 23181  0AB7  0821               	movf	?_CLOCK_getTime+1,w
 23182  0AB8  0142               	movlb	2	; select bank2
 23183  0AB9  00B3               	movwf	(_lastBeat+1)^(0+256)
 23184  0ABA  0140               	movlb	0	; select bank0
 23185  0ABB  0820               	movf	?_CLOCK_getTime,w
 23186  0ABC  0142               	movlb	2	; select bank2
 23187  0ABD  00B2               	movwf	_lastBeat^(0+256)
 23188                           
 23189                           ;beat.c: 118:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 23190  0ABE  0008               	return
 23191  0ABF                     l8870:	
 23192  0ABF  319B  23C3  318A   	fcall	_CLOCK_getTime
 23193  0AC2  0142               	movlb	2	; select bank2
 23194  0AC3  0832               	movf	_lastBeat^(0+256),w
 23195  0AC4  0140               	movlb	0	; select bank0
 23196  0AC5  0220               	subwf	?_CLOCK_getTime,w
 23197  0AC6  00A8               	movwf	??_BEAT_task
 23198  0AC7  0142               	movlb	2	; select bank2
 23199  0AC8  0833               	movf	(_lastBeat+1)^(0+256),w
 23200  0AC9  0140               	movlb	0	; select bank0
 23201  0ACA  3B21               	subwfb	?_CLOCK_getTime+1,w
 23202  0ACB  00A9               	movwf	??_BEAT_task+1
 23203  0ACC  3003               	movlw	3
 23204  0ACD  0229               	subwf	??_BEAT_task+1,w
 23205  0ACE  30E9               	movlw	233
 23206  0ACF  1903               	skipnz
 23207  0AD0  0228               	subwf	??_BEAT_task,w
 23208  0AD1  1C03               	skipc
 23209  0AD2  0008               	return
 23210                           
 23211                           ;beat.c: 119:         threshold -= 1;
 23212  0AD3  3001               	movlw	1
 23213  0AD4  0142               	movlb	2	; select bank2
 23214  0AD5  02EB               	subwf	_threshold^(0+256),f
 23215  0AD6  3000               	movlw	0
 23216  0AD7  3BEC               	subwfb	(_threshold+1)^(0+256),f
 23217                           
 23218                           ;beat.c: 120:         ADCC_SetUpperThreshold(threshold);
 23219  0AD8  086C               	movf	(_threshold+1)^(0+256),w
 23220  0AD9  0140               	movlb	0	; select bank0
 23221  0ADA  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 23222  0ADB  0142               	movlb	2	; select bank2
 23223  0ADC  086B               	movf	_threshold^(0+256),w
 23224  0ADD  0140               	movlb	0	; select bank0
 23225  0ADE  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 23226  0ADF  319B  23B1         	fcall	_ADCC_SetUpperThreshold
 23227  0AE1  0008               	return
 23228  0AE2                     __end_of_BEAT_task:	
 23229                           
 23230                           	psect	text83
 23231  10A3                     __ptext83:	
 23232 ;; *************** function ___lwdiv *****************
 23233 ;; Defined at:
 23234 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/lwdiv.c"
 23235 ;; Parameters:    Size  Location     Type
 23236 ;;  divisor         2    0[BANK0 ] unsigned int 
 23237 ;;  dividend        2    2[BANK0 ] unsigned int 
 23238 ;; Auto vars:     Size  Location     Type
 23239 ;;  quotient        2    6[BANK0 ] unsigned int 
 23240 ;;  counter         1    5[BANK0 ] unsigned char 
 23241 ;; Return value:  Size  Location     Type
 23242 ;;                  2    0[BANK0 ] unsigned int 
 23243 ;; Registers used:
 23244 ;;		wreg, status,2, status,0
 23245 ;; Tracked objects:
 23246 ;;		On entry : 0/0
 23247 ;;		On exit  : 0/0
 23248 ;;		Unchanged: 0/0
 23249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23250 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23251 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23252 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23253 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23254 ;;Total ram usage:        8 bytes
 23255 ;; Hardware stack levels used:    1
 23256 ;; Hardware stack levels required when called:    4
 23257 ;; This function calls:
 23258 ;;		Nothing
 23259 ;; This function is called by:
 23260 ;;		_TM1650_fastPrintNum
 23261 ;;		_TM1650_fastPrintNum_3digit
 23262 ;;		_BEAT_task
 23263 ;; This function uses a non-reentrant model
 23264 ;;
 23265                           
 23266                           
 23267                           ;psect for function ___lwdiv
 23268  10A3                     ___lwdiv:	
 23269                           
 23270                           ;incstack = 0
 23271                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 23272  10A3  0140               	movlb	0	; select bank0
 23273  10A4  01A6               	clrf	___lwdiv@quotient
 23274  10A5  01A7               	clrf	___lwdiv@quotient+1
 23275  10A6  0820               	movf	___lwdiv@divisor,w
 23276  10A7  0421               	iorwf	___lwdiv@divisor+1,w
 23277  10A8  1903               	btfsc	3,2
 23278  10A9  28D3               	goto	l7658
 23279  10AA  01A5               	clrf	___lwdiv@counter
 23280  10AB  0AA5               	incf	___lwdiv@counter,f
 23281  10AC                     l7646:	
 23282  10AC  1BA1               	btfsc	___lwdiv@divisor+1,7
 23283  10AD  28B8               	goto	l7648
 23284  10AE  3001               	movlw	1
 23285  10AF                     u7225:	
 23286  10AF  35A0               	lslf	___lwdiv@divisor,f
 23287  10B0  0DA1               	rlf	___lwdiv@divisor+1,f
 23288  10B1  0B89               	decfsz	9,f
 23289  10B2  28AF               	goto	u7225
 23290  10B3  3001               	movlw	1
 23291  10B4  00A4               	movwf	??___lwdiv
 23292  10B5  0824               	movf	??___lwdiv,w
 23293  10B6  07A5               	addwf	___lwdiv@counter,f
 23294  10B7  28AC               	goto	l7646
 23295  10B8                     l7648:	
 23296  10B8  3001               	movlw	1
 23297  10B9                     u7245:	
 23298  10B9  35A6               	lslf	___lwdiv@quotient,f
 23299  10BA  0DA7               	rlf	___lwdiv@quotient+1,f
 23300  10BB  0B89               	decfsz	9,f
 23301  10BC  28B9               	goto	u7245
 23302  10BD  0821               	movf	___lwdiv@divisor+1,w
 23303  10BE  0223               	subwf	___lwdiv@dividend+1,w
 23304  10BF  1D03               	skipz
 23305  10C0  28C3               	goto	u7255
 23306  10C1  0820               	movf	___lwdiv@divisor,w
 23307  10C2  0222               	subwf	___lwdiv@dividend,w
 23308  10C3                     u7255:	
 23309  10C3  1C03               	skipc
 23310  10C4  28CA               	goto	l7654
 23311  10C5  0820               	movf	___lwdiv@divisor,w
 23312  10C6  02A2               	subwf	___lwdiv@dividend,f
 23313  10C7  0821               	movf	___lwdiv@divisor+1,w
 23314  10C8  3BA3               	subwfb	___lwdiv@dividend+1,f
 23315  10C9  1426               	bsf	___lwdiv@quotient,0
 23316  10CA                     l7654:	
 23317  10CA  3001               	movlw	1
 23318  10CB                     u7265:	
 23319  10CB  36A1               	lsrf	___lwdiv@divisor+1,f
 23320  10CC  0CA0               	rrf	___lwdiv@divisor,f
 23321  10CD  0B89               	decfsz	9,f
 23322  10CE  28CB               	goto	u7265
 23323  10CF  3001               	movlw	1
 23324  10D0  02A5               	subwf	___lwdiv@counter,f
 23325  10D1  1D03               	btfss	3,2
 23326  10D2  28B8               	goto	l7648
 23327  10D3                     l7658:	
 23328  10D3  0827               	movf	___lwdiv@quotient+1,w
 23329  10D4  00A1               	movwf	?___lwdiv+1
 23330  10D5  0826               	movf	___lwdiv@quotient,w
 23331  10D6  00A0               	movwf	?___lwdiv
 23332  10D7  0008               	return
 23333  10D8                     __end_of___lwdiv:	
 23334                           
 23335                           	psect	text84
 23336  1BC3                     __ptext84:	
 23337 ;; *************** function _CLOCK_getTime *****************
 23338 ;; Defined at:
 23339 ;;		line 16 in file "clock.c"
 23340 ;; Parameters:    Size  Location     Type
 23341 ;;		None
 23342 ;; Auto vars:     Size  Location     Type
 23343 ;;		None
 23344 ;; Return value:  Size  Location     Type
 23345 ;;                  2    0[BANK0 ] unsigned short 
 23346 ;; Registers used:
 23347 ;;		wreg
 23348 ;; Tracked objects:
 23349 ;;		On entry : 0/0
 23350 ;;		On exit  : 0/0
 23351 ;;		Unchanged: 0/0
 23352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23353 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23356 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23357 ;;Total ram usage:        2 bytes
 23358 ;; Hardware stack levels used:    1
 23359 ;; Hardware stack levels required when called:    4
 23360 ;; This function calls:
 23361 ;;		Nothing
 23362 ;; This function is called by:
 23363 ;;		_main
 23364 ;;		_BUTTONS_task
 23365 ;;		_CONTROL_DMX
 23366 ;;		_CONTROL_MANUAL
 23367 ;;		_BEAT_task
 23368 ;;		_LED_task_BEAT_STROBE
 23369 ;; This function uses a non-reentrant model
 23370 ;;
 23371                           
 23372                           
 23373                           ;psect for function _CLOCK_getTime
 23374  1BC3                     _CLOCK_getTime:	
 23375                           
 23376                           ;clock.c: 17:     return currentTime;
 23377                           
 23378                           ;incstack = 0
 23379                           ; Regs used in _CLOCK_getTime: [wreg]
 23380  1BC3  0142               	movlb	2	; select bank2
 23381  1BC4  0837               	movf	(_currentTime+1)^(0+256),w
 23382  1BC5  0140               	movlb	0	; select bank0
 23383  1BC6  00A1               	movwf	?_CLOCK_getTime+1
 23384  1BC7  0142               	movlb	2	; select bank2
 23385  1BC8  0836               	movf	_currentTime^(0+256),w
 23386  1BC9  0140               	movlb	0	; select bank0
 23387  1BCA  00A0               	movwf	?_CLOCK_getTime
 23388  1BCB  0008               	return
 23389  1BCC                     __end_of_CLOCK_getTime:	
 23390                           
 23391                           	psect	text85
 23392  1D30                     __ptext85:	
 23393 ;; *************** function _BEAT_init *****************
 23394 ;; Defined at:
 23395 ;;		line 39 in file "beat.c"
 23396 ;; Parameters:    Size  Location     Type
 23397 ;;		None
 23398 ;; Auto vars:     Size  Location     Type
 23399 ;;		None
 23400 ;; Return value:  Size  Location     Type
 23401 ;;                  1    wreg      void 
 23402 ;; Registers used:
 23403 ;;		wreg, status,2, status,0, pclath, cstack
 23404 ;; Tracked objects:
 23405 ;;		On entry : 0/0
 23406 ;;		On exit  : 0/0
 23407 ;;		Unchanged: 0/0
 23408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23413 ;;Total ram usage:        0 bytes
 23414 ;; Hardware stack levels used:    1
 23415 ;; Hardware stack levels required when called:    5
 23416 ;; This function calls:
 23417 ;;		_ADCC_SetADTIInterruptHandler
 23418 ;;		_ADCC_SetUpperThreshold
 23419 ;;		_ADCC_StartConversion
 23420 ;; This function is called by:
 23421 ;;		_main
 23422 ;; This function uses a non-reentrant model
 23423 ;;
 23424                           
 23425                           
 23426                           ;psect for function _BEAT_init
 23427  1D30                     _BEAT_init:	
 23428                           
 23429                           ;beat.c: 40:     ADCC_SetUpperThreshold(threshold);
 23430                           
 23431                           ;incstack = 0
 23432                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 23433  1D30  0142               	movlb	2	; select bank2
 23434  1D31  086C               	movf	(_threshold+1)^(0+256),w
 23435  1D32  0140               	movlb	0	; select bank0
 23436  1D33  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 23437  1D34  0142               	movlb	2	; select bank2
 23438  1D35  086B               	movf	_threshold^(0+256),w
 23439  1D36  0140               	movlb	0	; select bank0
 23440  1D37  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 23441  1D38  319B  23B1  319D   	fcall	_ADCC_SetUpperThreshold
 23442                           
 23443                           ;beat.c: 41:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 23444  1D3B  306D               	movlw	low _adcThresholdHandler
 23445  1D3C  0140               	movlb	0	; select bank0
 23446  1D3D  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 23447  1D3E  301B               	movlw	high _adcThresholdHandler
 23448  1D3F  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 23449  1D40  319B  23A8  319D   	fcall	_ADCC_SetADTIInterruptHandler
 23450                           
 23451                           ;beat.c: 42:     ADCC_StartConversion(0x0F);
 23452  1D43  300F               	movlw	15
 23453  1D44  319B  23BA         	fcall	_ADCC_StartConversion
 23454  1D46  0008               	return
 23455  1D47                     __end_of_BEAT_init:	
 23456                           
 23457                           	psect	text86
 23458  1BBA                     __ptext86:	
 23459 ;; *************** function _ADCC_StartConversion *****************
 23460 ;; Defined at:
 23461 ;;		line 121 in file "mcc_generated_files/adcc.c"
 23462 ;; Parameters:    Size  Location     Type
 23463 ;;  channel         1    wreg     enum E10867
 23464 ;; Auto vars:     Size  Location     Type
 23465 ;;  channel         1    0[BANK0 ] enum E10867
 23466 ;; Return value:  Size  Location     Type
 23467 ;;                  1    wreg      void 
 23468 ;; Registers used:
 23469 ;;		wreg
 23470 ;; Tracked objects:
 23471 ;;		On entry : 0/0
 23472 ;;		On exit  : 0/0
 23473 ;;		Unchanged: 0/0
 23474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23476 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23478 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23479 ;;Total ram usage:        1 bytes
 23480 ;; Hardware stack levels used:    1
 23481 ;; Hardware stack levels required when called:    4
 23482 ;; This function calls:
 23483 ;;		Nothing
 23484 ;; This function is called by:
 23485 ;;		_BEAT_init
 23486 ;; This function uses a non-reentrant model
 23487 ;;
 23488                           
 23489                           
 23490                           ;psect for function _ADCC_StartConversion
 23491  1BBA                     _ADCC_StartConversion:	
 23492                           
 23493                           ;incstack = 0
 23494                           ; Regs used in _ADCC_StartConversion: [wreg]
 23495                           ;ADCC_StartConversion@channel stored from wreg
 23496  1BBA  0140               	movlb	0	; select bank0
 23497  1BBB  00A0               	movwf	ADCC_StartConversion@channel
 23498                           
 23499                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 23500  1BBC  0820               	movf	ADCC_StartConversion@channel,w
 23501  1BBD  0141               	movlb	1	; select bank1
 23502  1BBE  009F               	movwf	31	;volatile
 23503                           
 23504                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 23505  1BBF  0142               	movlb	2	; select bank2
 23506  1BC0  1791               	bsf	17,7	;volatile
 23507                           
 23508                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 23509  1BC1  1411               	bsf	17,0	;volatile
 23510  1BC2  0008               	return
 23511  1BC3                     __end_of_ADCC_StartConversion:	
 23512                           
 23513                           	psect	text87
 23514  1BB1                     __ptext87:	
 23515 ;; *************** function _ADCC_SetUpperThreshold *****************
 23516 ;; Defined at:
 23517 ;;		line 251 in file "mcc_generated_files/adcc.c"
 23518 ;; Parameters:    Size  Location     Type
 23519 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 23520 ;; Auto vars:     Size  Location     Type
 23521 ;;		None
 23522 ;; Return value:  Size  Location     Type
 23523 ;;                  1    wreg      void 
 23524 ;; Registers used:
 23525 ;;		wreg, status,2
 23526 ;; Tracked objects:
 23527 ;;		On entry : 0/0
 23528 ;;		On exit  : 0/0
 23529 ;;		Unchanged: 0/0
 23530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23531 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23534 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23535 ;;Total ram usage:        2 bytes
 23536 ;; Hardware stack levels used:    1
 23537 ;; Hardware stack levels required when called:    4
 23538 ;; This function calls:
 23539 ;;		Nothing
 23540 ;; This function is called by:
 23541 ;;		_BEAT_init
 23542 ;;		_BEAT_task
 23543 ;; This function uses a non-reentrant model
 23544 ;;
 23545                           
 23546                           
 23547                           ;psect for function _ADCC_SetUpperThreshold
 23548  1BB1                     _ADCC_SetUpperThreshold:	
 23549                           
 23550                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 23551                           
 23552                           ;incstack = 0
 23553                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 23554  1BB1  0140               	movlb	0	; select bank0
 23555  1BB2  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 23556  1BB3  0141               	movlb	1	; select bank1
 23557  1BB4  008F               	movwf	15	;volatile
 23558                           
 23559                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 23560  1BB5  0140               	movlb	0	; select bank0
 23561  1BB6  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 23562  1BB7  0141               	movlb	1	; select bank1
 23563  1BB8  008E               	movwf	14	;volatile
 23564  1BB9  0008               	return
 23565  1BBA                     __end_of_ADCC_SetUpperThreshold:	
 23566                           
 23567                           	psect	text88
 23568  1BA8                     __ptext88:	
 23569 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 23570 ;; Defined at:
 23571 ;;		line 317 in file "mcc_generated_files/adcc.c"
 23572 ;; Parameters:    Size  Location     Type
 23573 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 23574 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 23575 ;; Auto vars:     Size  Location     Type
 23576 ;;		None
 23577 ;; Return value:  Size  Location     Type
 23578 ;;                  1    wreg      void 
 23579 ;; Registers used:
 23580 ;;		wreg
 23581 ;; Tracked objects:
 23582 ;;		On entry : 0/0
 23583 ;;		On exit  : 0/0
 23584 ;;		Unchanged: 0/0
 23585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23586 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23589 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23590 ;;Total ram usage:        2 bytes
 23591 ;; Hardware stack levels used:    1
 23592 ;; Hardware stack levels required when called:    4
 23593 ;; This function calls:
 23594 ;;		Nothing
 23595 ;; This function is called by:
 23596 ;;		_ADCC_Initialize
 23597 ;;		_BEAT_init
 23598 ;; This function uses a non-reentrant model
 23599 ;;
 23600                           
 23601                           
 23602                           ;psect for function _ADCC_SetADTIInterruptHandler
 23603  1BA8                     _ADCC_SetADTIInterruptHandler:	
 23604                           
 23605                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 23606                           
 23607                           ;incstack = 0
 23608                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 23609  1BA8  0140               	movlb	0	; select bank0
 23610  1BA9  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 23611  1BAA  0142               	movlb	2	; select bank2
 23612  1BAB  00E2               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 23613  1BAC  0140               	movlb	0	; select bank0
 23614  1BAD  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 23615  1BAE  0142               	movlb	2	; select bank2
 23616  1BAF  00E1               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 23617  1BB0  0008               	return
 23618  1BB1                     __end_of_ADCC_SetADTIInterruptHandler:	
 23619                           
 23620                           	psect	intentry
 23621  0004                     __pintentry:	
 23622 ;; *************** function _INTERRUPT_InterruptManager *****************
 23623 ;; Defined at:
 23624 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 23625 ;; Parameters:    Size  Location     Type
 23626 ;;		None
 23627 ;; Auto vars:     Size  Location     Type
 23628 ;;		None
 23629 ;; Return value:  Size  Location     Type
 23630 ;;                  1    wreg      void 
 23631 ;; Registers used:
 23632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23633 ;; Tracked objects:
 23634 ;;		On entry : 0/0
 23635 ;;		On exit  : 0/0
 23636 ;;		Unchanged: 0/0
 23637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23642 ;;Total ram usage:        0 bytes
 23643 ;; Hardware stack levels used:    1
 23644 ;; Hardware stack levels required when called:    3
 23645 ;; This function calls:
 23646 ;;		Absolute function
 23647 ;;		_ADCC_ThresholdISR
 23648 ;;		_DMX_interrupt
 23649 ;;		_EUSART1_Receive_ISR
 23650 ;;		_I2C1_BusCollisionISR
 23651 ;;		_I2C1_ISR
 23652 ;;		_TMR0_ISR
 23653 ;; This function is called by:
 23654 ;;		Interrupt level 1
 23655 ;; This function uses a non-reentrant model
 23656 ;;
 23657                           
 23658  0004                     _INTERRUPT_InterruptManager:	
 23659                           
 23660                           ;incstack = 0
 23661 ;; hardware stack exceeded
 23662  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 23663                           
 23664                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23665  0005  3180               	pagesel	$
 23666                           
 23667                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 23668  0006  014E               	movlb	14	; select bank14
 23669  0007  1A96               	btfsc	22,5	;volatile
 23670  0008  1E8C               	btfss	12,5	;volatile
 23671  0009  280E               	goto	i1l429
 23672                           
 23673                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 23674  000A  319C  2467  3180   	fcall	_TMR0_ISR
 23675                           
 23676                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 23677  000D  282E               	goto	i1l441
 23678  000E                     i1l429:	
 23679                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 23680                           
 23681  000E  1F0B               	btfss	11,6	;volatile
 23682  000F  282E               	goto	i1l441
 23683                           
 23684                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 23685  0010  1899               	btfsc	25,1	;volatile
 23686  0011  1C8F               	btfss	15,1	;volatile
 23687  0012  2817               	goto	i1l432
 23688                           
 23689                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 23690  0013  319B  2373  3180   	fcall	_I2C1_BusCollisionISR
 23691                           
 23692                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 23693  0016  282E               	goto	i1l441
 23694  0017                     i1l432:	
 23695                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 23696                           
 23697  0017  1819               	btfsc	25,0	;volatile
 23698  0018  1C0F               	btfss	15,0	;volatile
 23699  0019  281E               	goto	i1l434
 23700                           
 23701                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 23702  001A  318E  26AE  3180   	fcall	_I2C1_ISR
 23703                           
 23704                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 23705  001D  282E               	goto	i1l441
 23706  001E                     i1l434:	
 23707                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 23708                           
 23709  001E  1897               	btfsc	23,1	;volatile
 23710  001F  1C8D               	btfss	13,1	;volatile
 23711  0020  2825               	goto	i1l436
 23712                           
 23713                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             ADCC_ThresholdISR();
 23714  0021  319C  245A  3180   	fcall	_ADCC_ThresholdISR
 23715                           
 23716                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 23717  0024  282E               	goto	i1l441
 23718  0025                     i1l436:	
 23719                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 23720                           
 23721  0025  1A99               	btfsc	25,5	;volatile
 23722  0026  1E8F               	btfss	15,5	;volatile
 23723  0027  282E               	goto	i1l441
 23724                           
 23725                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 23726  0028  0142               	movlb	2	; select bank2
 23727  0029  0866               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 23728  002A  008A               	movwf	10
 23729  002B  0865               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 23730  002C  000A               	callw
 23731  002D  3180               	pagesel	$
 23732  002E                     i1l441:	
 23733                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 23734                           
 23735  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 23736  002F  0009               	retfie
 23737  0030                     __end_of_INTERRUPT_InterruptManager:	
 23738                           
 23739                           	psect	text90
 23740  1C67                     __ptext90:	
 23741 ;; *************** function _TMR0_ISR *****************
 23742 ;; Defined at:
 23743 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 23744 ;; Parameters:    Size  Location     Type
 23745 ;;		None
 23746 ;; Auto vars:     Size  Location     Type
 23747 ;;		None
 23748 ;; Return value:  Size  Location     Type
 23749 ;;                  1    wreg      void 
 23750 ;; Registers used:
 23751 ;;		wreg, status,2, status,0, pclath, cstack
 23752 ;; Tracked objects:
 23753 ;;		On entry : 0/0
 23754 ;;		On exit  : 0/0
 23755 ;;		Unchanged: 0/0
 23756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23761 ;;Total ram usage:        0 bytes
 23762 ;; Hardware stack levels used:    1
 23763 ;; Hardware stack levels required when called:    1
 23764 ;; This function calls:
 23765 ;;		Absolute function
 23766 ;;		_CLOCK_timerCallback
 23767 ;;		_TMR0_DefaultInterruptHandler
 23768 ;; This function is called by:
 23769 ;;		_INTERRUPT_InterruptManager
 23770 ;; This function uses a non-reentrant model
 23771 ;;
 23772                           
 23773                           
 23774                           ;psect for function _TMR0_ISR
 23775  1C67                     _TMR0_ISR:	
 23776                           
 23777                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 23778                           
 23779                           ;incstack = 0
 23780 ;; hardware stack exceeded
 23781                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 23782  1C67  014E               	movlb	14	; select bank14
 23783  1C68  128C               	bcf	12,5	;volatile
 23784                           
 23785                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 23786  1C69  0142               	movlb	2	; select bank2
 23787  1C6A  0863               	movf	_TMR0_InterruptHandler^(0+256),w
 23788  1C6B  0464               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 23789  1C6C  1903               	btfsc	3,2
 23790  1C6D  0008               	return
 23791                           
 23792                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 23793  1C6E  0864               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 23794  1C6F  008A               	movwf	10
 23795  1C70  0863               	movf	_TMR0_InterruptHandler^(0+256),w
 23796  1C71  000A               	callw
 23797  1C72  319C               	pagesel	$
 23798  1C73  0008               	return
 23799  1C74                     __end_of_TMR0_ISR:	
 23800                           
 23801                           	psect	text91
 23802  1B82                     __ptext91:	
 23803 ;; *************** function _CLOCK_timerCallback *****************
 23804 ;; Defined at:
 23805 ;;		line 20 in file "clock.c"
 23806 ;; Parameters:    Size  Location     Type
 23807 ;;		None
 23808 ;; Auto vars:     Size  Location     Type
 23809 ;;		None
 23810 ;; Return value:  Size  Location     Type
 23811 ;;                  1    wreg      void 
 23812 ;; Registers used:
 23813 ;;		wreg
 23814 ;; Tracked objects:
 23815 ;;		On entry : 0/0
 23816 ;;		On exit  : 0/0
 23817 ;;		Unchanged: 0/0
 23818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23823 ;;Total ram usage:        0 bytes
 23824 ;; Hardware stack levels used:    1
 23825 ;; This function calls:
 23826 ;;		Nothing
 23827 ;; This function is called by:
 23828 ;;		_CLOCK_init
 23829 ;;		_TMR0_ISR
 23830 ;; This function uses a non-reentrant model
 23831 ;;
 23832                           
 23833                           
 23834                           ;psect for function _CLOCK_timerCallback
 23835  1B82                     _CLOCK_timerCallback:	
 23836                           
 23837                           ;clock.c: 21:     currentTime++;
 23838                           
 23839                           ;incstack = 0
 23840 ;; hardware stack exceeded
 23841                           ; Regs used in _CLOCK_timerCallback: [wreg]
 23842  1B82  3001               	movlw	1
 23843  1B83  0142               	movlb	2	; select bank2
 23844  1B84  07B6               	addwf	_currentTime^(0+256),f
 23845  1B85  3000               	movlw	0
 23846  1B86  3DB7               	addwfc	(_currentTime+1)^(0+256),f
 23847  1B87  0008               	return
 23848  1B88                     __end_of_CLOCK_timerCallback:	
 23849                           
 23850                           	psect	text92
 23851  1B6C                     __ptext92:	
 23852 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 23853 ;; Defined at:
 23854 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 23855 ;; Parameters:    Size  Location     Type
 23856 ;;		None
 23857 ;; Auto vars:     Size  Location     Type
 23858 ;;		None
 23859 ;; Return value:  Size  Location     Type
 23860 ;;                  1    wreg      void 
 23861 ;; Registers used:
 23862 ;;		None
 23863 ;; Tracked objects:
 23864 ;;		On entry : 0/0
 23865 ;;		On exit  : 0/0
 23866 ;;		Unchanged: 0/0
 23867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23872 ;;Total ram usage:        0 bytes
 23873 ;; Hardware stack levels used:    1
 23874 ;; This function calls:
 23875 ;;		Nothing
 23876 ;; This function is called by:
 23877 ;;		_TMR0_Initialize
 23878 ;;		_TMR0_ISR
 23879 ;; This function uses a non-reentrant model
 23880 ;;
 23881                           
 23882                           
 23883                           ;psect for function _TMR0_DefaultInterruptHandler
 23884  1B6C                     _TMR0_DefaultInterruptHandler:	
 23885                           
 23886                           ;incstack = 0
 23887 ;; hardware stack exceeded
 23888                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 23889  1B6C  0008               	return
 23890  1B6D                     __end_of_TMR0_DefaultInterruptHandler:	
 23891                           
 23892                           	psect	text93
 23893  0EAE                     __ptext93:	
 23894 ;; *************** function _I2C1_ISR *****************
 23895 ;; Defined at:
 23896 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 23897 ;; Parameters:    Size  Location     Type
 23898 ;;		None
 23899 ;; Auto vars:     Size  Location     Type
 23900 ;;		None
 23901 ;; Return value:  Size  Location     Type
 23902 ;;                  1    wreg      void 
 23903 ;; Registers used:
 23904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23905 ;; Tracked objects:
 23906 ;;		On entry : 0/0
 23907 ;;		On exit  : 0/0
 23908 ;;		Unchanged: 0/0
 23909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23912 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23913 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23914 ;;Total ram usage:        4 bytes
 23915 ;; Hardware stack levels used:    1
 23916 ;; Hardware stack levels required when called:    1
 23917 ;; This function calls:
 23918 ;;		_I2C1_FunctionComplete
 23919 ;;		_I2C1_Stop
 23920 ;; This function is called by:
 23921 ;;		_INTERRUPT_InterruptManager
 23922 ;; This function uses a non-reentrant model
 23923 ;;
 23924                           
 23925                           
 23926                           ;psect for function _I2C1_ISR
 23927  0EAE                     _I2C1_ISR:	
 23928                           
 23929                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 23930                           
 23931                           ;incstack = 0
 23932 ;; hardware stack exceeded
 23933                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 23934  0EAE  014E               	movlb	14	; select bank14
 23935  0EAF  100F               	bcf	15,0	;volatile
 23936                           
 23937                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 23938  0EB0  0143               	movlb	3	; select bank3
 23939  0EB1  1F90               	btfss	16,7	;volatile
 23940  0EB2  2FD3               	goto	i1l6294
 23941                           
 23942                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 23943  0EB3  1390               	bcf	16,7	;volatile
 23944                           
 23945                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 23946  0EB4  0141               	movlb	1	; select bank1
 23947  0EB5  01E6               	clrf	_i2c1_state^(0+128)
 23948                           
 23949                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 23950  0EB6  0871               	movf	_p_i2c1_current,w
 23951  0EB7  3E02               	addlw	2
 23952  0EB8  0086               	movwf	6
 23953  0EB9  3001               	movlw	1	; select bank2/3
 23954  0EBA  0087               	movwf	7
 23955  0EBB  0801               	movf	1,w
 23956  0EBC  0086               	movwf	6
 23957  0EBD  0187               	clrf	7
 23958  0EBE  0181               	clrf	1
 23959  0EBF  0A81               	incf	1,f
 23960                           
 23961                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 23962  0EC0  01F1               	clrf	_p_i2c1_current
 23963  0EC1  0008               	return
 23964  0EC2                     i1l549:	
 23965                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 23966                           
 23967                           
 23968                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 23969  0EC2  18C9               	btfsc	(_i2c1_object^(0+128)+2),1
 23970  0EC3  0008               	return
 23971                           
 23972                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 23973  0EC4  0848               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 23974  0EC5  00F9               	movwf	??_I2C1_ISR
 23975  0EC6  0879               	movf	??_I2C1_ISR,w
 23976  0EC7  00F1               	movwf	_p_i2c1_current
 23977                           
 23978                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 23979  0EC8  0848               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 23980  0EC9  0086               	movwf	6
 23981  0ECA  3001               	movlw	1	; select bank2/3
 23982  0ECB  0087               	movwf	7
 23983  0ECC  0801               	movf	1,w
 23984  0ECD  00F9               	movwf	??_I2C1_ISR
 23985  0ECE  0879               	movf	??_I2C1_ISR,w
 23986  0ECF  00E5               	movwf	_i2c1_trb_count^(0+128)
 23987                           
 23988                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 23989  0ED0  0848               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 23990  0ED1  0086               	movwf	6
 23991  0ED2  3001               	movlw	1	; select bank2/3
 23992  0ED3  0087               	movwf	7
 23993  0ED4  3001               	movlw	1	; select bank2/3
 23994  0ED5  3F41               	moviw [1]fsr1
 23995  0ED6  00F2               	movwf	_p_i2c1_trb_current
 23996                           
 23997                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 23998  0ED7  3003               	movlw	3
 23999  0ED8  00F9               	movwf	??_I2C1_ISR
 24000  0ED9  0879               	movf	??_I2C1_ISR,w
 24001  0EDA  07C8               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 24002                           
 24003                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 24004  0EDB  0848               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 24005  0EDC  3A61               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 24006  0EDD  1D03               	skipz
 24007  0EDE  2EE3               	goto	i1l6182
 24008                           
 24009                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 24010  0EDF  305E               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 24011  0EE0  00F9               	movwf	??_I2C1_ISR
 24012  0EE1  0879               	movf	??_I2C1_ISR,w
 24013  0EE2  00C8               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 24014  0EE3                     i1l6182:	
 24015                           
 24016                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 24017  0EE3  1049               	bcf	(_i2c1_object^(0+128)+2),0
 24018                           
 24019                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 24020  0EE4  0848               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 24021  0EE5  0647               	xorwf	_i2c1_object^(0+128),w
 24022  0EE6  1903               	btfsc	3,2
 24023                           
 24024                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 24025  0EE7  14C9               	bsf	(_i2c1_object^(0+128)+2),1
 24026                           
 24027                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 24028                           
 24029                           ;mcc_generated_files/i2c1.c: 290:                 }
 24030  0EE8  0143               	movlb	3	; select bank3
 24031  0EE9  1411               	bsf	17,0	;volatile
 24032  0EEA                     i1l6186:	
 24033                           
 24034                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 24035  0EEA  3002               	movlw	2
 24036  0EEB  00F9               	movwf	??_I2C1_ISR
 24037  0EEC  0879               	movf	??_I2C1_ISR,w
 24038  0EED  0141               	movlb	1	; select bank1
 24039  0EEE  00E6               	movwf	_i2c1_state^(0+128)
 24040  0EEF  0008               	return
 24041  0EF0                     i1l554:	
 24042                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 24043                           
 24044  0EF0  2F7C               	goto	i1l575
 24045  0EF1                     i1l555:	
 24046                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 24047                           
 24048                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 24049                           
 24050                           
 24051                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 24052  0EF1  0143               	movlb	3	; select bank3
 24053  0EF2  1F11               	btfss	17,6	;volatile
 24054  0EF3  2EFD               	goto	i1l6194
 24055                           
 24056                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 24057  0EF4  3001               	movlw	1
 24058  0EF5  00F9               	movwf	??_I2C1_ISR
 24059  0EF6  0879               	movf	??_I2C1_ISR,w
 24060  0EF7  0141               	movlb	1	; select bank1
 24061  0EF8  07CB               	addwf	(_i2c1_object^(0+128)+4),f
 24062                           
 24063                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 24064  0EF9  3004               	movlw	4
 24065  0EFA  319D  2577         	fcall	_I2C1_Stop
 24066                           
 24067                           ;mcc_generated_files/i2c1.c: 319:             }
 24068  0EFC  0008               	return
 24069  0EFD                     i1l6194:	
 24070                           
 24071                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 24072  0EFD  0876               	movf	I2C1_ISR@i2c_address+1,w
 24073  0EFE  00FA               	movwf	??_I2C1_ISR+1
 24074  0EFF  0875               	movf	I2C1_ISR@i2c_address,w
 24075  0F00  00F9               	movwf	??_I2C1_ISR
 24076  0F01  36FA               	lsrf	??_I2C1_ISR+1,f
 24077  0F02  0CF9               	rrf	??_I2C1_ISR,f
 24078  0F03  0879               	movf	??_I2C1_ISR,w
 24079  0F04  008C               	movwf	12	;volatile
 24080                           
 24081                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 24082  0F05  1C75               	btfss	I2C1_ISR@i2c_address,0
 24083  0F06  2F0D               	goto	i1l6200
 24084                           
 24085                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 24086  0F07  300B               	movlw	11
 24087  0F08  00F9               	movwf	??_I2C1_ISR
 24088  0F09  0879               	movf	??_I2C1_ISR,w
 24089  0F0A  0141               	movlb	1	; select bank1
 24090  0F0B  00E6               	movwf	_i2c1_state^(0+128)
 24091                           
 24092                           ;mcc_generated_files/i2c1.c: 331:                 }
 24093  0F0C  0008               	return
 24094  0F0D                     i1l6200:	
 24095                           
 24096                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 24097  0F0D  3003               	movlw	3
 24098  0F0E  00F9               	movwf	??_I2C1_ISR
 24099  0F0F  0879               	movf	??_I2C1_ISR,w
 24100  0F10  0141               	movlb	1	; select bank1
 24101  0F11  00E6               	movwf	_i2c1_state^(0+128)
 24102  0F12  0008               	return
 24103  0F13                     i1l560:	
 24104                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 24105                           
 24106                           
 24107                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 24108  0F13  0143               	movlb	3	; select bank3
 24109  0F14  1F11               	btfss	17,6	;volatile
 24110  0F15  2F1F               	goto	i1l561
 24111                           
 24112                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 24113  0F16  3001               	movlw	1
 24114  0F17  00F9               	movwf	??_I2C1_ISR
 24115  0F18  0879               	movf	??_I2C1_ISR,w
 24116  0F19  0141               	movlb	1	; select bank1
 24117  0F1A  07CB               	addwf	(_i2c1_object^(0+128)+4),f
 24118                           
 24119                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 24120  0F1B  3004               	movlw	4
 24121  0F1C  319D  2577         	fcall	_I2C1_Stop
 24122                           
 24123                           ;mcc_generated_files/i2c1.c: 347:             }
 24124  0F1E  0008               	return
 24125  0F1F                     i1l561:	
 24126                           ;mcc_generated_files/i2c1.c: 348:             else
 24127                           
 24128                           
 24129                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 24130  0F1F  1491               	bsf	17,1	;volatile
 24131                           
 24132                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 24133  0F20  0876               	movf	I2C1_ISR@i2c_address+1,w
 24134  0F21  00FA               	movwf	??_I2C1_ISR+1
 24135  0F22  0875               	movf	I2C1_ISR@i2c_address,w
 24136  0F23  00F9               	movwf	??_I2C1_ISR
 24137  0F24  087A               	movf	??_I2C1_ISR+1,w
 24138  0F25  00F9               	movwf	??_I2C1_ISR
 24139  0F26  01FA               	clrf	??_I2C1_ISR+1
 24140  0F27  3006               	movlw	6
 24141  0F28  0579               	andwf	??_I2C1_ISR,w
 24142  0F29  00FB               	movwf	??_I2C1_ISR+2
 24143  0F2A  3000               	movlw	0
 24144  0F2B  057A               	andwf	??_I2C1_ISR+1,w
 24145  0F2C  00FC               	movwf	??_I2C1_ISR+3
 24146  0F2D  30F0               	movlw	240
 24147  0F2E  047B               	iorwf	??_I2C1_ISR+2,w
 24148  0F2F  00F5               	movwf	I2C1_ISR@i2c_address
 24149  0F30  3000               	movlw	0
 24150  0F31  047C               	iorwf	??_I2C1_ISR+3,w
 24151  0F32  00F6               	movwf	I2C1_ISR@i2c_address+1
 24152                           
 24153                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 24154  0F33  1475               	bsf	I2C1_ISR@i2c_address,0
 24155                           
 24156                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 24157  0F34  0141               	movlb	1	; select bank1
 24158  0F35  01E2               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 24159  0F36  0AE2               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 24160  0F37  2EEA               	goto	i1l6186
 24161  0F38                     i1l6214:	
 24162                           
 24163                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 24164  0F38  0362               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 24165  0F39  1903               	btfsc	3,2
 24166  0F3A  2F51               	goto	i1l6234
 24167                           
 24168                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 24169  0F3B  0872               	movf	_p_i2c1_trb_current,w
 24170  0F3C  0086               	movwf	6
 24171  0F3D  3001               	movlw	1	; select bank2/3
 24172  0F3E  0087               	movwf	7
 24173  0F3F  3F40               	moviw [0]fsr1
 24174  0F40  00F5               	movwf	I2C1_ISR@i2c_address
 24175  0F41  3F41               	moviw [1]fsr1
 24176  0F42  00F6               	movwf	I2C1_ISR@i2c_address+1
 24177                           
 24178                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 24179  0F43  0872               	movf	_p_i2c1_trb_current,w
 24180  0F44  0086               	movwf	6
 24181  0F45  3001               	movlw	1	; select bank2/3
 24182  0F46  0087               	movwf	7
 24183  0F47  3001               	movlw	1	; select bank2/3
 24184  0F48  3F43               	moviw [3]fsr1
 24185  0F49  00E4               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 24186                           
 24187                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 24188  0F4A  0872               	movf	_p_i2c1_trb_current,w
 24189  0F4B  0086               	movwf	6
 24190  0F4C  3001               	movlw	1	; select bank2/3
 24191  0F4D  0087               	movwf	7
 24192  0F4E  3001               	movlw	1	; select bank2/3
 24193  0F4F  3F42               	moviw [2]fsr1
 24194  0F50  00E3               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 24195  0F51                     i1l6234:	
 24196                           
 24197                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 24198  0F51  0875               	movf	I2C1_ISR@i2c_address,w
 24199  0F52  0143               	movlb	3	; select bank3
 24200  0F53  008C               	movwf	12	;volatile
 24201                           
 24202                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 24203  0F54  1C75               	btfss	I2C1_ISR@i2c_address,0
 24204  0F55  2F0D               	goto	i1l6200
 24205                           
 24206                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 24207  0F56  3005               	movlw	5
 24208  0F57  00F9               	movwf	??_I2C1_ISR
 24209  0F58  0879               	movf	??_I2C1_ISR,w
 24210  0F59  0141               	movlb	1	; select bank1
 24211  0F5A  00E6               	movwf	_i2c1_state^(0+128)
 24212                           
 24213                           ;mcc_generated_files/i2c1.c: 419:                 }
 24214  0F5B  0008               	return
 24215  0F5C                     i1l571:	
 24216                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 24217                           
 24218                           
 24219                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 24220  0F5C  0143               	movlb	3	; select bank3
 24221  0F5D  1F11               	btfss	17,6	;volatile
 24222  0F5E  2F6A               	goto	i1l6248
 24223                           
 24224                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 24225  0F5F  3001               	movlw	1
 24226  0F60  00F9               	movwf	??_I2C1_ISR
 24227  0F61  0879               	movf	??_I2C1_ISR,w
 24228  0F62  0141               	movlb	1	; select bank1
 24229  0F63  07CB               	addwf	(_i2c1_object^(0+128)+4),f
 24230                           
 24231                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 24232  0F64  0143               	movlb	3	; select bank3
 24233  0F65  1311               	bcf	17,6	;volatile
 24234                           
 24235                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 24236  0F66  3005               	movlw	5
 24237  0F67  319D  2577         	fcall	_I2C1_Stop
 24238                           
 24239                           ;mcc_generated_files/i2c1.c: 442:             }
 24240  0F69  0008               	return
 24241  0F6A                     i1l6248:	
 24242                           
 24243                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 24244  0F6A  3001               	movlw	1
 24245  0F6B  0141               	movlb	1	; select bank1
 24246  0F6C  02E3               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 24247  0F6D  0A63               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 24248  0F6E  1D03               	btfss	3,2
 24249  0F6F  2F7F               	goto	i1l6256
 24250                           
 24251                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 24252  0F70  3004               	movlw	4
 24253  0F71  00F9               	movwf	??_I2C1_ISR
 24254  0F72  0879               	movf	??_I2C1_ISR,w
 24255  0F73  07F2               	addwf	_p_i2c1_trb_current,f
 24256                           
 24257                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 24258  0F74  3001               	movlw	1
 24259  0F75  02E5               	subwf	_i2c1_trb_count^(0+128),f
 24260  0F76  1D03               	btfss	3,2
 24261  0F77  2F7C               	goto	i1l575
 24262                           
 24263                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 24264  0F78  3000               	movlw	0
 24265  0F79  319D  2577         	fcall	_I2C1_Stop
 24266                           
 24267                           ;mcc_generated_files/i2c1.c: 457:                     }
 24268  0F7B  0008               	return
 24269  0F7C                     i1l575:	
 24270                           ;mcc_generated_files/i2c1.c: 458:                     else
 24271                           
 24272                           
 24273                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 24274  0F7C  0143               	movlb	3	; select bank3
 24275  0F7D  1491               	bsf	17,1	;volatile
 24276  0F7E  2EEA               	goto	i1l6186
 24277  0F7F                     i1l6256:	
 24278                           
 24279                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 24280  0F7F  0864               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 24281  0F80  0086               	movwf	6
 24282  0F81  0187               	clrf	7
 24283  0F82  0801               	movf	1,w
 24284  0F83  0143               	movlb	3	; select bank3
 24285  0F84  008C               	movwf	12	;volatile
 24286  0F85  3001               	movlw	1
 24287  0F86  00F9               	movwf	??_I2C1_ISR
 24288  0F87  0879               	movf	??_I2C1_ISR,w
 24289  0F88  0141               	movlb	1	; select bank1
 24290  0F89  07E4               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 24291  0F8A  0008               	return
 24292  0F8B                     i1l578:	
 24293                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 24294                           
 24295                           
 24296                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 24297  0F8B  0143               	movlb	3	; select bank3
 24298  0F8C  1F11               	btfss	17,6	;volatile
 24299  0F8D  2F99               	goto	i1l579
 24300                           
 24301                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 24302  0F8E  3001               	movlw	1
 24303  0F8F  00F9               	movwf	??_I2C1_ISR
 24304  0F90  0879               	movf	??_I2C1_ISR,w
 24305  0F91  0141               	movlb	1	; select bank1
 24306  0F92  07CB               	addwf	(_i2c1_object^(0+128)+4),f
 24307                           
 24308                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 24309  0F93  3004               	movlw	4
 24310  0F94  319D  2577         	fcall	_I2C1_Stop
 24311                           
 24312                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 24313  0F96  0143               	movlb	3	; select bank3
 24314  0F97  1311               	bcf	17,6	;volatile
 24315                           
 24316                           ;mcc_generated_files/i2c1.c: 495:             }
 24317  0F98  0008               	return
 24318  0F99                     i1l579:	
 24319                           ;mcc_generated_files/i2c1.c: 496:             else
 24320                           
 24321                           
 24322                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 24323  0F99  1591               	bsf	17,3	;volatile
 24324                           
 24325                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 24326  0F9A  3008               	movlw	8
 24327  0F9B  00F9               	movwf	??_I2C1_ISR
 24328  0F9C  0879               	movf	??_I2C1_ISR,w
 24329  0F9D  0141               	movlb	1	; select bank1
 24330  0F9E  00E6               	movwf	_i2c1_state^(0+128)
 24331  0F9F  0008               	return
 24332  0FA0                     i1l6268:	
 24333                           
 24334                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 24335  0FA0  3008               	movlw	8
 24336  0FA1  00F9               	movwf	??_I2C1_ISR
 24337  0FA2  0879               	movf	??_I2C1_ISR,w
 24338  0FA3  00E6               	movwf	_i2c1_state^(0+128)
 24339                           
 24340                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 24341  0FA4  0143               	movlb	3	; select bank3
 24342  0FA5  1591               	bsf	17,3	;volatile
 24343                           
 24344                           ;mcc_generated_files/i2c1.c: 513:             break;
 24345  0FA6  0008               	return
 24346  0FA7                     i1l6272:	
 24347                           
 24348                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 24349  0FA7  0143               	movlb	3	; select bank3
 24350  0FA8  080C               	movf	12,w	;volatile
 24351  0FA9  00F9               	movwf	??_I2C1_ISR
 24352  0FAA  0141               	movlb	1	; select bank1
 24353  0FAB  0864               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 24354  0FAC  0086               	movwf	6
 24355  0FAD  0187               	clrf	7
 24356  0FAE  0879               	movf	??_I2C1_ISR,w
 24357  0FAF  0081               	movwf	1
 24358  0FB0  3001               	movlw	1
 24359  0FB1  00F9               	movwf	??_I2C1_ISR
 24360  0FB2  0879               	movf	??_I2C1_ISR,w
 24361  0FB3  07E4               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 24362                           
 24363                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 24364  0FB4  3001               	movlw	1
 24365  0FB5  02E3               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 24366  0FB6  1903               	btfsc	3,2
 24367  0FB7  2FC0               	goto	i1l583
 24368                           
 24369                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 24370  0FB8  0143               	movlb	3	; select bank3
 24371  0FB9  1291               	bcf	17,5	;volatile
 24372                           
 24373                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 24374  0FBA  3006               	movlw	6
 24375  0FBB  00F9               	movwf	??_I2C1_ISR
 24376  0FBC  0879               	movf	??_I2C1_ISR,w
 24377  0FBD  0141               	movlb	1	; select bank1
 24378  0FBE  00E6               	movwf	_i2c1_state^(0+128)
 24379                           
 24380                           ;mcc_generated_files/i2c1.c: 532:             }
 24381  0FBF  2FC4               	goto	i1l6284
 24382  0FC0                     i1l583:	
 24383                           ;mcc_generated_files/i2c1.c: 533:             else
 24384                           
 24385                           
 24386                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 24387  0FC0  0143               	movlb	3	; select bank3
 24388  0FC1  1691               	bsf	17,5	;volatile
 24389                           
 24390                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 24391  0FC2  319C  2483         	fcall	_I2C1_FunctionComplete
 24392  0FC4                     i1l6284:	
 24393                           
 24394                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 24395  0FC4  0143               	movlb	3	; select bank3
 24396  0FC5  1611               	bsf	17,4	;volatile
 24397                           
 24398                           ;mcc_generated_files/i2c1.c: 545:             break;
 24399  0FC6  0008               	return
 24400  0FC7                     i1l6286:	
 24401                           
 24402                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 24403  0FC7  3000               	movlw	0
 24404  0FC8  319D  2577         	fcall	_I2C1_Stop
 24405                           
 24406                           ;mcc_generated_files/i2c1.c: 552:             break;
 24407  0FCA  0008               	return
 24408  0FCB                     i1l6288:	
 24409                           
 24410                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 24411  0FCB  3001               	movlw	1
 24412  0FCC  00F9               	movwf	??_I2C1_ISR
 24413  0FCD  0879               	movf	??_I2C1_ISR,w
 24414  0FCE  07CB               	addwf	(_i2c1_object^(0+128)+4),f
 24415                           
 24416                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 24417  0FCF  3006               	movlw	6
 24418  0FD0  319D  2577         	fcall	_I2C1_Stop
 24419                           
 24420                           ;mcc_generated_files/i2c1.c: 560:             break;
 24421  0FD2  0008               	return
 24422  0FD3                     i1l6294:	
 24423  0FD3  0141               	movlb	1	; select bank1
 24424  0FD4  0866               	movf	_i2c1_state^(0+128),w
 24425  0FD5  00F9               	movwf	??_I2C1_ISR
 24426  0FD6  01FA               	clrf	??_I2C1_ISR+1
 24427                           
 24428                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24429                           ; Switch size 1, requested type "simple"
 24430                           ; Number of cases is 1, Range of values is 0 to 0
 24431                           ; switch strategies available:
 24432                           ; Name         Instructions Cycles
 24433                           ; simple_byte            4     3 (average)
 24434                           ; direct_byte            8     6 (fixed)
 24435                           ; jumptable            260     6 (fixed)
 24436                           ;	Chosen strategy is simple_byte
 24437  0FD7  087A               	movf	??_I2C1_ISR+1,w
 24438  0FD8  3A00               	xorlw	0	; case 0
 24439  0FD9  1903               	skipnz
 24440  0FDA  2FDC               	goto	i1l9654
 24441  0FDB  2FCB               	goto	i1l6288
 24442  0FDC                     i1l9654:	
 24443                           
 24444                           ; Switch size 1, requested type "simple"
 24445                           ; Number of cases is 11, Range of values is 0 to 11
 24446                           ; switch strategies available:
 24447                           ; Name         Instructions Cycles
 24448                           ; direct_byte           30     6 (fixed)
 24449                           ; simple_byte           34    18 (average)
 24450                           ; jumptable            260     6 (fixed)
 24451                           ;	Chosen strategy is simple_byte
 24452  0FDC  0879               	movf	??_I2C1_ISR,w
 24453  0FDD  3A00               	xorlw	0	; case 0
 24454  0FDE  1903               	skipnz
 24455  0FDF  2EC2               	goto	i1l549
 24456  0FE0  3A01               	xorlw	1	; case 1
 24457  0FE1  1903               	skipnz
 24458  0FE2  2EF0               	goto	i1l554
 24459  0FE3  3A03               	xorlw	3	; case 2
 24460  0FE4  1903               	skipnz
 24461  0FE5  2F38               	goto	i1l6214
 24462  0FE6  3A01               	xorlw	1	; case 3
 24463  0FE7  1903               	skipnz
 24464  0FE8  2F5C               	goto	i1l571
 24465  0FE9  3A07               	xorlw	7	; case 4
 24466  0FEA  1903               	skipnz
 24467  0FEB  2FC7               	goto	i1l6286
 24468  0FEC  3A01               	xorlw	1	; case 5
 24469  0FED  1903               	skipnz
 24470  0FEE  2F8B               	goto	i1l578
 24471  0FEF  3A03               	xorlw	3	; case 6
 24472  0FF0  1903               	skipnz
 24473  0FF1  2FA0               	goto	i1l6268
 24474  0FF2  3A01               	xorlw	1	; case 7
 24475  0FF3  1903               	skipnz
 24476  0FF4  2FC7               	goto	i1l6286
 24477  0FF5  3A0F               	xorlw	15	; case 8
 24478  0FF6  1903               	skipnz
 24479  0FF7  2FA7               	goto	i1l6272
 24480  0FF8  3A02               	xorlw	2	; case 10
 24481  0FF9  1903               	skipnz
 24482  0FFA  2EF1               	goto	i1l555
 24483  0FFB  3A01               	xorlw	1	; case 11
 24484  0FFC  1903               	skipnz
 24485  0FFD  2F13               	goto	i1l560
 24486  0FFE  2FCB               	goto	i1l6288
 24487  0FFF  0008               	return
 24488  1000                     __end_of_I2C1_ISR:	
 24489                           
 24490                           	psect	text94
 24491  1D77                     __ptext94:	
 24492 ;; *************** function _I2C1_Stop *****************
 24493 ;; Defined at:
 24494 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 24495 ;; Parameters:    Size  Location     Type
 24496 ;;  completion_c    1    wreg     enum E10866
 24497 ;; Auto vars:     Size  Location     Type
 24498 ;;  completion_c    1    1[COMMON] enum E10866
 24499 ;; Return value:  Size  Location     Type
 24500 ;;                  1    wreg      void 
 24501 ;; Registers used:
 24502 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24503 ;; Tracked objects:
 24504 ;;		On entry : 0/0
 24505 ;;		On exit  : 0/0
 24506 ;;		Unchanged: 0/0
 24507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24509 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24510 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24511 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24512 ;;Total ram usage:        2 bytes
 24513 ;; Hardware stack levels used:    1
 24514 ;; This function calls:
 24515 ;;		Nothing
 24516 ;; This function is called by:
 24517 ;;		_I2C1_ISR
 24518 ;; This function uses a non-reentrant model
 24519 ;;
 24520                           
 24521                           
 24522                           ;psect for function _I2C1_Stop
 24523  1D77                     _I2C1_Stop:	
 24524                           
 24525                           ;incstack = 0
 24526 ;; hardware stack exceeded
 24527                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 24528                           ;I2C1_Stop@completion_code stored from wreg
 24529  1D77  00F8               	movwf	I2C1_Stop@completion_code
 24530                           
 24531                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 24532  1D78  0143               	movlb	3	; select bank3
 24533  1D79  1511               	bsf	17,2	;volatile
 24534                           
 24535                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 24536  1D7A  0871               	movf	_p_i2c1_current,w
 24537  1D7B  3E02               	addlw	2
 24538  1D7C  0086               	movwf	6
 24539  1D7D  3001               	movlw	1	; select bank2/3
 24540  1D7E  0087               	movwf	7
 24541  1D7F  0801               	movf	1,w
 24542  1D80  1903               	btfsc	3,2
 24543  1D81  2D8E               	goto	i1l5842
 24544                           
 24545                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 24546  1D82  0878               	movf	I2C1_Stop@completion_code,w
 24547  1D83  00F7               	movwf	??_I2C1_Stop
 24548  1D84  0871               	movf	_p_i2c1_current,w
 24549  1D85  3E02               	addlw	2
 24550  1D86  0086               	movwf	6
 24551  1D87  3001               	movlw	1	; select bank2/3
 24552  1D88  0087               	movwf	7
 24553  1D89  0801               	movf	1,w
 24554  1D8A  0086               	movwf	6
 24555  1D8B  0187               	clrf	7
 24556  1D8C  0877               	movf	??_I2C1_Stop,w
 24557  1D8D  0081               	movwf	1
 24558  1D8E                     i1l5842:	
 24559                           
 24560                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 24561  1D8E  0141               	movlb	1	; select bank1
 24562  1D8F  01E6               	clrf	_i2c1_state^(0+128)
 24563  1D90  0008               	return
 24564  1D91                     __end_of_I2C1_Stop:	
 24565                           
 24566                           	psect	text95
 24567  1C83                     __ptext95:	
 24568 ;; *************** function _I2C1_FunctionComplete *****************
 24569 ;; Defined at:
 24570 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 24571 ;; Parameters:    Size  Location     Type
 24572 ;;		None
 24573 ;; Auto vars:     Size  Location     Type
 24574 ;;		None
 24575 ;; Return value:  Size  Location     Type
 24576 ;;                  1    wreg      void 
 24577 ;; Registers used:
 24578 ;;		wreg, status,2, status,0
 24579 ;; Tracked objects:
 24580 ;;		On entry : 0/0
 24581 ;;		On exit  : 0/0
 24582 ;;		Unchanged: 0/0
 24583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24586 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24587 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24588 ;;Total ram usage:        1 bytes
 24589 ;; Hardware stack levels used:    1
 24590 ;; This function calls:
 24591 ;;		Nothing
 24592 ;; This function is called by:
 24593 ;;		_I2C1_ISR
 24594 ;; This function uses a non-reentrant model
 24595 ;;
 24596                           
 24597                           
 24598                           ;psect for function _I2C1_FunctionComplete
 24599  1C83                     _I2C1_FunctionComplete:	
 24600                           
 24601                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 24602                           
 24603                           ;incstack = 0
 24604 ;; hardware stack exceeded
 24605                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 24606  1C83  3004               	movlw	4
 24607  1C84  00F7               	movwf	??_I2C1_FunctionComplete
 24608  1C85  0877               	movf	??_I2C1_FunctionComplete,w
 24609  1C86  07F2               	addwf	_p_i2c1_trb_current,f
 24610                           
 24611                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 24612  1C87  3001               	movlw	1
 24613  1C88  0141               	movlb	1	; select bank1
 24614  1C89  02E5               	subwf	_i2c1_trb_count^(0+128),f
 24615  1C8A  1D03               	btfss	3,2
 24616  1C8B  2C91               	goto	i1l590
 24617                           
 24618                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 24619  1C8C  3004               	movlw	4
 24620  1C8D  00F7               	movwf	??_I2C1_FunctionComplete
 24621  1C8E  0877               	movf	??_I2C1_FunctionComplete,w
 24622  1C8F  00E6               	movwf	_i2c1_state^(0+128)
 24623                           
 24624                           ;mcc_generated_files/i2c1.c: 575:     }
 24625  1C90  0008               	return
 24626  1C91                     i1l590:	
 24627                           ;mcc_generated_files/i2c1.c: 576:     else
 24628                           
 24629                           
 24630                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 24631  1C91  01E6               	clrf	_i2c1_state^(0+128)
 24632  1C92  0AE6               	incf	_i2c1_state^(0+128),f
 24633  1C93  0008               	return
 24634  1C94                     __end_of_I2C1_FunctionComplete:	
 24635                           
 24636                           	psect	text96
 24637  1B73                     __ptext96:	
 24638 ;; *************** function _I2C1_BusCollisionISR *****************
 24639 ;; Defined at:
 24640 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 24641 ;; Parameters:    Size  Location     Type
 24642 ;;		None
 24643 ;; Auto vars:     Size  Location     Type
 24644 ;;		None
 24645 ;; Return value:  Size  Location     Type
 24646 ;;                  1    wreg      void 
 24647 ;; Registers used:
 24648 ;;		None
 24649 ;; Tracked objects:
 24650 ;;		On entry : 0/0
 24651 ;;		On exit  : 0/0
 24652 ;;		Unchanged: 0/0
 24653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24658 ;;Total ram usage:        0 bytes
 24659 ;; Hardware stack levels used:    1
 24660 ;; This function calls:
 24661 ;;		Nothing
 24662 ;; This function is called by:
 24663 ;;		_INTERRUPT_InterruptManager
 24664 ;; This function uses a non-reentrant model
 24665 ;;
 24666                           
 24667                           
 24668                           ;psect for function _I2C1_BusCollisionISR
 24669  1B73                     _I2C1_BusCollisionISR:	
 24670                           
 24671                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 24672                           
 24673                           ;incstack = 0
 24674 ;; hardware stack exceeded
 24675                           ; Regs used in _I2C1_BusCollisionISR: []
 24676  1B73  014E               	movlb	14	; select bank14
 24677  1B74  108F               	bcf	15,1	;volatile
 24678  1B75  0008               	return
 24679  1B76                     __end_of_I2C1_BusCollisionISR:	
 24680                           
 24681                           	psect	text97
 24682  103E                     __ptext97:	
 24683 ;; *************** function _DMX_interrupt *****************
 24684 ;; Defined at:
 24685 ;;		line 56 in file "dmx.c"
 24686 ;; Parameters:    Size  Location     Type
 24687 ;;		None
 24688 ;; Auto vars:     Size  Location     Type
 24689 ;;  dummy           1    6[COMMON] volatile unsigned char 
 24690 ;; Return value:  Size  Location     Type
 24691 ;;                  1    wreg      void 
 24692 ;; Registers used:
 24693 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 24694 ;; Tracked objects:
 24695 ;;		On entry : 0/0
 24696 ;;		On exit  : 0/0
 24697 ;;		Unchanged: 0/0
 24698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24701 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24702 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24703 ;;Total ram usage:        7 bytes
 24704 ;; Hardware stack levels used:    1
 24705 ;; This function calls:
 24706 ;;		Nothing
 24707 ;; This function is called by:
 24708 ;;		_DMX_init
 24709 ;;		_INTERRUPT_InterruptManager
 24710 ;; This function uses a non-reentrant model
 24711 ;;
 24712                           
 24713                           
 24714                           ;psect for function _DMX_interrupt
 24715  103E                     _DMX_interrupt:	
 24716                           
 24717                           ;dmx.c: 58:     if (RC1STAbits.OERR) {
 24718                           
 24719                           ;incstack = 0
 24720 ;; hardware stack exceeded
 24721                           ; Regs used in _DMX_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
 24722  103E  0142               	movlb	2	; select bank2
 24723  103F  1C9D               	btfss	29,1	;volatile
 24724  1040  2843               	goto	i1l6700
 24725                           
 24726                           ;dmx.c: 59:         RC1STAbits.CREN = 0;
 24727  1041  121D               	bcf	29,4	;volatile
 24728                           
 24729                           ;dmx.c: 60:         RC1STAbits.CREN = 1;
 24730  1042  161D               	bsf	29,4	;volatile
 24731  1043                     i1l6700:	
 24732                           
 24733                           ;dmx.c: 63:     if (initial == 0 && !(RC1STAbits.FERR)) {
 24734  1043  0867               	movf	_initial^(0+256),w
 24735  1044  0468               	iorwf	(_initial+1)^(0+256),w
 24736  1045  1903               	btfsc	3,2
 24737  1046  191D               	btfsc	29,2	;volatile
 24738  1047  2864               	goto	i1l6708
 24739                           
 24740                           ;dmx.c: 64:         dmxArray[arrayIndex] = RC1REG;
 24741  1048  0819               	movf	25,w	;volatile
 24742  1049  00F7               	movwf	??_DMX_interrupt
 24743  104A  01F8               	clrf	??_DMX_interrupt+1
 24744  104B  082B               	movf	(_arrayIndex+1)^(0+256),w
 24745  104C  00FA               	movwf	??_DMX_interrupt+3
 24746  104D  082A               	movf	_arrayIndex^(0+256),w
 24747  104E  00F9               	movwf	??_DMX_interrupt+2
 24748  104F  35F9               	lslf	??_DMX_interrupt+2,f
 24749  1050  0DFA               	rlf	??_DMX_interrupt+3,f
 24750  1051  30EE               	movlw	238
 24751  1052  00FB               	movwf	??_DMX_interrupt+4
 24752  1053  3023               	movlw	35
 24753  1054  00FC               	movwf	??_DMX_interrupt+5
 24754  1055  0879               	movf	??_DMX_interrupt+2,w
 24755  1056  077B               	addwf	??_DMX_interrupt+4,w
 24756  1057  0086               	movwf	6
 24757  1058  087A               	movf	??_DMX_interrupt+3,w
 24758  1059  3D7C               	addwfc	??_DMX_interrupt+5,w
 24759  105A  0087               	movwf	7
 24760  105B  0877               	movf	??_DMX_interrupt,w
 24761  105C  3FC0               	movwi [0]fsr1
 24762  105D  0878               	movf	??_DMX_interrupt+1,w
 24763  105E  3FC1               	movwi [1]fsr1
 24764                           
 24765                           ;dmx.c: 65:         arrayIndex += 1;
 24766  105F  3001               	movlw	1
 24767  1060  07AA               	addwf	_arrayIndex^(0+256),f
 24768  1061  3000               	movlw	0
 24769  1062  3DAB               	addwfc	(_arrayIndex+1)^(0+256),f
 24770                           
 24771                           ;dmx.c: 66:     } else {
 24772  1063  286C               	goto	i1l6712
 24773  1064                     i1l6708:	
 24774                           
 24775                           ;dmx.c: 67:         arrayIndex = 0;
 24776  1064  01AA               	clrf	_arrayIndex^(0+256)
 24777  1065  01AB               	clrf	(_arrayIndex+1)^(0+256)
 24778                           
 24779                           ;dmx.c: 68:         initial = 0;
 24780  1066  01E7               	clrf	_initial^(0+256)
 24781  1067  01E8               	clrf	(_initial+1)^(0+256)
 24782                           
 24783                           ;dmx.c: 69:         volatile uint8_t dummy = RC1REG;
 24784  1068  0819               	movf	25,w	;volatile
 24785  1069  00F7               	movwf	??_DMX_interrupt
 24786  106A  0877               	movf	??_DMX_interrupt,w
 24787  106B  00FD               	movwf	DMX_interrupt@dummy	;volatile
 24788  106C                     i1l6712:	
 24789                           
 24790                           ;dmx.c: 72:     PIR3bits.RC1IF = 0;
 24791  106C  014E               	movlb	14	; select bank14
 24792  106D  128F               	bcf	15,5	;volatile
 24793  106E  0008               	return
 24794  106F                     __end_of_DMX_interrupt:	
 24795                           
 24796                           	psect	text98
 24797  110D                     __ptext98:	
 24798 ;; *************** function _EUSART1_Receive_ISR *****************
 24799 ;; Defined at:
 24800 ;;		line 171 in file "mcc_generated_files/eusart1.c"
 24801 ;; Parameters:    Size  Location     Type
 24802 ;;		None
 24803 ;; Auto vars:     Size  Location     Type
 24804 ;;		None
 24805 ;; Return value:  Size  Location     Type
 24806 ;;                  1    wreg      void 
 24807 ;; Registers used:
 24808 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24809 ;; Tracked objects:
 24810 ;;		On entry : 0/0
 24811 ;;		On exit  : 0/0
 24812 ;;		Unchanged: 0/0
 24813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24818 ;;Total ram usage:        0 bytes
 24819 ;; Hardware stack levels used:    1
 24820 ;; Hardware stack levels required when called:    2
 24821 ;; This function calls:
 24822 ;;		Absolute function
 24823 ;;		_EUSART1_DefaultErrorHandler
 24824 ;;		_EUSART1_DefaultFramingErrorHandler
 24825 ;;		_EUSART1_DefaultOverrunErrorHandler
 24826 ;;		_EUSART1_RxDataHandler
 24827 ;; This function is called by:
 24828 ;;		_EUSART1_Initialize
 24829 ;;		_INTERRUPT_InterruptManager
 24830 ;; This function uses a non-reentrant model
 24831 ;;
 24832                           
 24833                           
 24834                           ;psect for function _EUSART1_Receive_ISR
 24835  110D                     _EUSART1_Receive_ISR:	
 24836                           
 24837                           ;mcc_generated_files/eusart1.c: 174:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 24838                           
 24839                           ;incstack = 0
 24840 ;; hardware stack exceeded
 24841                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 24842  110D  0874               	movf	_eusart1RxHead,w	;volatile
 24843  110E  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 24844  110F  0086               	movwf	6
 24845  1110  3001               	movlw	1	; select bank3/4
 24846  1111  0087               	movwf	7
 24847  1112  0181               	clrf	1
 24848                           
 24849                           ;mcc_generated_files/eusart1.c: 176:     if(RC1STAbits.FERR){
 24850  1113  0142               	movlb	2	; select bank2
 24851  1114  1D1D               	btfss	29,2	;volatile
 24852  1115  2922               	goto	i1l8476
 24853                           
 24854                           ;mcc_generated_files/eusart1.c: 177:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 24855  1116  0874               	movf	_eusart1RxHead,w	;volatile
 24856  1117  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 24857  1118  0086               	movwf	6
 24858  1119  3001               	movlw	1	; select bank3/4
 24859  111A  0087               	movwf	7
 24860  111B  1481               	bsf	1,1
 24861                           
 24862                           ;mcc_generated_files/eusart1.c: 178:         EUSART1_FramingErrorHandler();
 24863  111C  0144               	movlb	4	; select bank4
 24864  111D  086D               	movf	(_EUSART1_FramingErrorHandler+1)^(0+512),w
 24865  111E  008A               	movwf	10
 24866  111F  086C               	movf	_EUSART1_FramingErrorHandler^(0+512),w
 24867  1120  000A               	callw
 24868  1121  3191               	pagesel	$
 24869  1122                     i1l8476:	
 24870                           
 24871                           ;mcc_generated_files/eusart1.c: 181:     if(RC1STAbits.OERR){
 24872  1122  0142               	movlb	2	; select bank2
 24873  1123  1C9D               	btfss	29,1	;volatile
 24874  1124  2931               	goto	i1l8482
 24875                           
 24876                           ;mcc_generated_files/eusart1.c: 182:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 24877  1125  0874               	movf	_eusart1RxHead,w	;volatile
 24878  1126  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 24879  1127  0086               	movwf	6
 24880  1128  3001               	movlw	1	; select bank3/4
 24881  1129  0087               	movwf	7
 24882  112A  1501               	bsf	1,2
 24883                           
 24884                           ;mcc_generated_files/eusart1.c: 183:         EUSART1_OverrunErrorHandler();
 24885  112B  0145               	movlb	5	; select bank5
 24886  112C  0863               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+640),w
 24887  112D  008A               	movwf	10
 24888  112E  0862               	movf	_EUSART1_OverrunErrorHandler^(0+640),w
 24889  112F  000A               	callw
 24890  1130  3191               	pagesel	$
 24891  1131                     i1l8482:	
 24892                           
 24893                           ;mcc_generated_files/eusart1.c: 186:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 24894  1131  0874               	movf	_eusart1RxHead,w	;volatile
 24895  1132  3EA0               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 24896  1133  0086               	movwf	6
 24897  1134  3001               	movlw	1	; select bank3/4
 24898  1135  0087               	movwf	7
 24899  1136  0801               	movf	1,w
 24900  1137  1903               	btfsc	3,2
 24901  1138  2940               	goto	i1l8486
 24902                           
 24903                           ;mcc_generated_files/eusart1.c: 187:         EUSART1_ErrorHandler();
 24904  1139  0145               	movlb	5	; select bank5
 24905  113A  0861               	movf	(_EUSART1_ErrorHandler+1)^(0+640),w
 24906  113B  008A               	movwf	10
 24907  113C  0860               	movf	_EUSART1_ErrorHandler^(0+640),w
 24908  113D  000A               	callw
 24909  113E  3191               	pagesel	$
 24910                           
 24911                           ;mcc_generated_files/eusart1.c: 188:     } else {
 24912  113F  0008               	return
 24913  1140                     i1l8486:	
 24914                           
 24915                           ;mcc_generated_files/eusart1.c: 189:         EUSART1_RxDataHandler();
 24916  1140  319D  2547         	fcall	_EUSART1_RxDataHandler
 24917  1142  0008               	return
 24918  1143                     __end_of_EUSART1_Receive_ISR:	
 24919                           
 24920                           	psect	text99
 24921  1B79                     __ptext99:	
 24922 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 24923 ;; Defined at:
 24924 ;;		line 207 in file "mcc_generated_files/eusart1.c"
 24925 ;; Parameters:    Size  Location     Type
 24926 ;;		None
 24927 ;; Auto vars:     Size  Location     Type
 24928 ;;		None
 24929 ;; Return value:  Size  Location     Type
 24930 ;;                  1    wreg      void 
 24931 ;; Registers used:
 24932 ;;		None
 24933 ;; Tracked objects:
 24934 ;;		On entry : 0/0
 24935 ;;		On exit  : 0/0
 24936 ;;		Unchanged: 0/0
 24937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24942 ;;Total ram usage:        0 bytes
 24943 ;; Hardware stack levels used:    1
 24944 ;; This function calls:
 24945 ;;		Nothing
 24946 ;; This function is called by:
 24947 ;;		_EUSART1_Initialize
 24948 ;;		_EUSART1_Receive_ISR
 24949 ;; This function uses a non-reentrant model
 24950 ;;
 24951                           
 24952                           
 24953                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 24954  1B79                     _EUSART1_DefaultOverrunErrorHandler:	
 24955                           
 24956                           ;mcc_generated_files/eusart1.c: 210:     RC1STAbits.CREN = 0;
 24957                           
 24958                           ;incstack = 0
 24959 ;; hardware stack exceeded
 24960                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 24961  1B79  0142               	movlb	2	; select bank2
 24962  1B7A  121D               	bcf	29,4	;volatile
 24963                           
 24964                           ;mcc_generated_files/eusart1.c: 211:     RC1STAbits.CREN = 1;
 24965  1B7B  161D               	bsf	29,4	;volatile
 24966  1B7C  0008               	return
 24967  1B7D                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 24968                           
 24969                           	psect	text100
 24970  1B6B                     __ptext100:	
 24971 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 24972 ;; Defined at:
 24973 ;;		line 205 in file "mcc_generated_files/eusart1.c"
 24974 ;; Parameters:    Size  Location     Type
 24975 ;;		None
 24976 ;; Auto vars:     Size  Location     Type
 24977 ;;		None
 24978 ;; Return value:  Size  Location     Type
 24979 ;;                  1    wreg      void 
 24980 ;; Registers used:
 24981 ;;		None
 24982 ;; Tracked objects:
 24983 ;;		On entry : 0/0
 24984 ;;		On exit  : 0/0
 24985 ;;		Unchanged: 0/0
 24986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 24987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 24991 ;;Total ram usage:        0 bytes
 24992 ;; Hardware stack levels used:    1
 24993 ;; This function calls:
 24994 ;;		Nothing
 24995 ;; This function is called by:
 24996 ;;		_EUSART1_Initialize
 24997 ;;		_EUSART1_Receive_ISR
 24998 ;; This function uses a non-reentrant model
 24999 ;;
 25000                           
 25001                           
 25002                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 25003  1B6B                     _EUSART1_DefaultFramingErrorHandler:	
 25004                           
 25005                           ;incstack = 0
 25006 ;; hardware stack exceeded
 25007                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 25008  1B6B  0008               	return
 25009  1B6C                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 25010                           
 25011                           	psect	text101
 25012  1B70                     __ptext101:	
 25013 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 25014 ;; Defined at:
 25015 ;;		line 215 in file "mcc_generated_files/eusart1.c"
 25016 ;; Parameters:    Size  Location     Type
 25017 ;;		None
 25018 ;; Auto vars:     Size  Location     Type
 25019 ;;		None
 25020 ;; Return value:  Size  Location     Type
 25021 ;;                  1    wreg      void 
 25022 ;; Registers used:
 25023 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25024 ;; Tracked objects:
 25025 ;;		On entry : 0/0
 25026 ;;		On exit  : 0/0
 25027 ;;		Unchanged: 0/0
 25028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25033 ;;Total ram usage:        0 bytes
 25034 ;; Hardware stack levels used:    1
 25035 ;; Hardware stack levels required when called:    1
 25036 ;; This function calls:
 25037 ;;		_EUSART1_RxDataHandler
 25038 ;; This function is called by:
 25039 ;;		_EUSART1_Initialize
 25040 ;;		_EUSART1_Receive_ISR
 25041 ;; This function uses a non-reentrant model
 25042 ;;
 25043                           
 25044                           
 25045                           ;psect for function _EUSART1_DefaultErrorHandler
 25046  1B70                     _EUSART1_DefaultErrorHandler:	
 25047                           
 25048                           ;mcc_generated_files/eusart1.c: 216:     EUSART1_RxDataHandler();
 25049                           
 25050                           ;incstack = 0
 25051 ;; hardware stack exceeded
 25052                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 25053  1B70  319D  2547         	fcall	_EUSART1_RxDataHandler
 25054  1B72  0008               	return
 25055  1B73                     __end_of_EUSART1_DefaultErrorHandler:	
 25056                           
 25057                           	psect	text102
 25058  1D47                     __ptext102:	
 25059 ;; *************** function _EUSART1_RxDataHandler *****************
 25060 ;; Defined at:
 25061 ;;		line 195 in file "mcc_generated_files/eusart1.c"
 25062 ;; Parameters:    Size  Location     Type
 25063 ;;		None
 25064 ;; Auto vars:     Size  Location     Type
 25065 ;;		None
 25066 ;; Return value:  Size  Location     Type
 25067 ;;                  1    wreg      void 
 25068 ;; Registers used:
 25069 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25070 ;; Tracked objects:
 25071 ;;		On entry : 0/0
 25072 ;;		On exit  : 0/0
 25073 ;;		Unchanged: 0/0
 25074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25077 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25079 ;;Total ram usage:        1 bytes
 25080 ;; Hardware stack levels used:    1
 25081 ;; This function calls:
 25082 ;;		Nothing
 25083 ;; This function is called by:
 25084 ;;		_EUSART1_Receive_ISR
 25085 ;;		_EUSART1_DefaultErrorHandler
 25086 ;; This function uses a non-reentrant model
 25087 ;;
 25088                           
 25089                           
 25090                           ;psect for function _EUSART1_RxDataHandler
 25091  1D47                     _EUSART1_RxDataHandler:	
 25092                           
 25093                           ;mcc_generated_files/eusart1.c: 197:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 25094                           
 25095                           ;incstack = 0
 25096 ;; hardware stack exceeded
 25097                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 25098  1D47  0142               	movlb	2	; select bank2
 25099  1D48  0819               	movf	25,w	;volatile
 25100  1D49  00F7               	movwf	??_EUSART1_RxDataHandler
 25101  1D4A  0874               	movf	_eusart1RxHead,w
 25102  1D4B  3E20               	addlw	(low (_eusart1RxBuffer| (0+512)))& (0+255)
 25103  1D4C  0086               	movwf	6
 25104  1D4D  3002               	movlw	2	; select bank4/5
 25105  1D4E  0087               	movwf	7
 25106  1D4F  0877               	movf	??_EUSART1_RxDataHandler,w
 25107  1D50  0081               	movwf	1
 25108  1D51  3001               	movlw	1
 25109  1D52  00F7               	movwf	??_EUSART1_RxDataHandler
 25110  1D53  0877               	movf	??_EUSART1_RxDataHandler,w
 25111  1D54  07F4               	addwf	_eusart1RxHead,f	;volatile
 25112                           
 25113                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 25114  1D55  3008               	movlw	8
 25115  1D56  0274               	subwf	_eusart1RxHead,w	;volatile
 25116  1D57  1803               	btfsc	3,0
 25117                           
 25118                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         e
      +                          usart1RxHead = 0;
 25119  1D58  01F4               	clrf	_eusart1RxHead	;volatile
 25120                           
 25121                           ;mcc_generated_files/eusart1.c: 202:     eusart1RxCount++;
 25122  1D59  3001               	movlw	1
 25123  1D5A  00F7               	movwf	??_EUSART1_RxDataHandler
 25124  1D5B  0877               	movf	??_EUSART1_RxDataHandler,w
 25125  1D5C  0141               	movlb	1	; select bank1
 25126  1D5D  07E7               	addwf	_eusart1RxCount^(0+128),f	;volatile
 25127  1D5E  0008               	return
 25128  1D5F                     __end_of_EUSART1_RxDataHandler:	
 25129                           
 25130                           	psect	text103
 25131  1C5A                     __ptext103:	
 25132 ;; *************** function _ADCC_ThresholdISR *****************
 25133 ;; Defined at:
 25134 ;;		line 308 in file "mcc_generated_files/adcc.c"
 25135 ;; Parameters:    Size  Location     Type
 25136 ;;		None
 25137 ;; Auto vars:     Size  Location     Type
 25138 ;;		None
 25139 ;; Return value:  Size  Location     Type
 25140 ;;                  1    wreg      void 
 25141 ;; Registers used:
 25142 ;;		wreg, status,2, status,0, pclath, cstack
 25143 ;; Tracked objects:
 25144 ;;		On entry : 0/0
 25145 ;;		On exit  : 0/0
 25146 ;;		Unchanged: 0/0
 25147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25152 ;;Total ram usage:        0 bytes
 25153 ;; Hardware stack levels used:    1
 25154 ;; Hardware stack levels required when called:    1
 25155 ;; This function calls:
 25156 ;;		Absolute function
 25157 ;;		_ADCC_DefaultInterruptHandler
 25158 ;;		_adcThresholdHandler
 25159 ;; This function is called by:
 25160 ;;		_INTERRUPT_InterruptManager
 25161 ;; This function uses a non-reentrant model
 25162 ;;
 25163                           
 25164                           
 25165                           ;psect for function _ADCC_ThresholdISR
 25166  1C5A                     _ADCC_ThresholdISR:	
 25167                           
 25168                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 25169                           
 25170                           ;incstack = 0
 25171 ;; hardware stack exceeded
 25172                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 25173  1C5A  014E               	movlb	14	; select bank14
 25174  1C5B  108D               	bcf	13,1	;volatile
 25175                           
 25176                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 25177  1C5C  0142               	movlb	2	; select bank2
 25178  1C5D  0861               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 25179  1C5E  0462               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 25180  1C5F  1903               	btfsc	3,2
 25181  1C60  0008               	return
 25182                           
 25183                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 25184  1C61  0862               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 25185  1C62  008A               	movwf	10
 25186  1C63  0861               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 25187  1C64  000A               	callw
 25188  1C65  319C               	pagesel	$
 25189  1C66  0008               	return
 25190  1C67                     __end_of_ADCC_ThresholdISR:	
 25191                           
 25192                           	psect	text104
 25193  1B6A                     __ptext104:	
 25194 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 25195 ;; Defined at:
 25196 ;;		line 320 in file "mcc_generated_files/adcc.c"
 25197 ;; Parameters:    Size  Location     Type
 25198 ;;		None
 25199 ;; Auto vars:     Size  Location     Type
 25200 ;;		None
 25201 ;; Return value:  Size  Location     Type
 25202 ;;                  1    wreg      void 
 25203 ;; Registers used:
 25204 ;;		None
 25205 ;; Tracked objects:
 25206 ;;		On entry : 0/0
 25207 ;;		On exit  : 0/0
 25208 ;;		Unchanged: 0/0
 25209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25214 ;;Total ram usage:        0 bytes
 25215 ;; Hardware stack levels used:    1
 25216 ;; This function calls:
 25217 ;;		Nothing
 25218 ;; This function is called by:
 25219 ;;		_ADCC_Initialize
 25220 ;;		_ADCC_ThresholdISR
 25221 ;; This function uses a non-reentrant model
 25222 ;;
 25223                           
 25224                           
 25225                           ;psect for function _ADCC_DefaultInterruptHandler
 25226  1B6A                     _ADCC_DefaultInterruptHandler:	
 25227                           
 25228                           ;incstack = 0
 25229 ;; hardware stack exceeded
 25230                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 25231  1B6A  0008               	return
 25232  1B6B                     __end_of_ADCC_DefaultInterruptHandler:	
 25233                           
 25234                           	psect	text105
 25235  1B6D                     __ptext105:	
 25236 ;; *************** function _adcThresholdHandler *****************
 25237 ;; Defined at:
 25238 ;;		line 35 in file "beat.c"
 25239 ;; Parameters:    Size  Location     Type
 25240 ;;		None
 25241 ;; Auto vars:     Size  Location     Type
 25242 ;;		None
 25243 ;; Return value:  Size  Location     Type
 25244 ;;                  1    wreg      void 
 25245 ;; Registers used:
 25246 ;;		None
 25247 ;; Tracked objects:
 25248 ;;		On entry : 0/0
 25249 ;;		On exit  : 0/0
 25250 ;;		Unchanged: 0/0
 25251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 25252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 25256 ;;Total ram usage:        0 bytes
 25257 ;; Hardware stack levels used:    1
 25258 ;; This function calls:
 25259 ;;		Nothing
 25260 ;; This function is called by:
 25261 ;;		_BEAT_init
 25262 ;;		_ADCC_ThresholdISR
 25263 ;; This function uses a non-reentrant model
 25264 ;;
 25265                           
 25266                           
 25267                           ;psect for function _adcThresholdHandler
 25268  1B6D                     _adcThresholdHandler:	
 25269                           
 25270                           ;beat.c: 36:     thresholdExceeded = 1;
 25271                           
 25272                           ;incstack = 0
 25273 ;; hardware stack exceeded
 25274                           ; Regs used in _adcThresholdHandler: []
 25275  1B6D  01F0               	clrf	_thresholdExceeded
 25276  1B6E  0AF0               	incf	_thresholdExceeded,f
 25277  1B6F  0008               	return
 25278  1B70                     __end_of_adcThresholdHandler:	
 25279  007E                     btemp	set	126	;btemp
 25280  007E                     int$flags	set	126
 25281  007E                     wtemp0	set	126


Data Sizes:
    Strings     162
    Constant    96
    Data        14
    BSS         321
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     80      80
    BANK1            80     39      80
    BANK2            80      2      79
    BANK3            80      0      80
    BANK4            80      4      78
    BANK5            80      0      68
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           46      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), STR_21(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), STR_21(CODE[9]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[6]), STR_28(CODE[7]), 
		 -> STR_27(CODE[8]), STR_26(CODE[9]), STR_25(CODE[10]), STR_24(CODE[9]), 
		 -> STR_23(CODE[8]), STR_22(CODE[7]), STR_20(CODE[2]), STR_19(CODE[5]), 
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[3]), STR_15(CODE[3]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S3612_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[6]), STR_28(CODE[7]), 
		 -> STR_27(CODE[8]), STR_26(CODE[9]), STR_25(CODE[10]), STR_24(CODE[9]), 
		 -> STR_23(CODE[8]), STR_22(CODE[7]), STR_20(CODE[2]), STR_19(CODE[5]), 
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[3]), STR_15(CODE[3]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[6]), STR_28(CODE[7]), 
		 -> STR_27(CODE[8]), STR_26(CODE[9]), STR_25(CODE[10]), STR_24(CODE[9]), 
		 -> STR_23(CODE[8]), STR_22(CODE[7]), STR_20(CODE[2]), STR_19(CODE[5]), 
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[3]), STR_15(CODE[3]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    currentMenu.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    currentMenu.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    currentMenu.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    currentMenu.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    currentMenu.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    currentMenu	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatCont(BANK3[8]), 
		 -> beatStrobeTask(BANK4[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), manualRed(BANK3[8]), 
		 -> animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), animation(BANK3[8]), dmx_task(BANK3[8]), 
		 -> manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), NULL(NULL[0]), 

    beatMixedTask.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatMixedTask.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatMixedTask.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatMixedTask.parent.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatMixedTask.parent.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatContTask.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatContTask.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatContTask.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatContTask.parent.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatContTask.parent.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatFadeTask.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatFadeTask.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatFadeTask.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatFadeTask.parent.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatFadeTask.parent.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatStrobeTask.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatStrobeTask.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatStrobeTask.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatStrobeTask.parent.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatStrobeTask.parent.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualWhite.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualWhite.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    manualWhite.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    manualWhite.parent.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualWhite.parent.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualWhite.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualWhite.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    manualWhite.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    manualWhite.config.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualWhite.config.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualBlue.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualBlue.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    manualBlue.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    manualBlue.parent.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualBlue.parent.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualBlue.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualBlue.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    manualBlue.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    manualBlue.config.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualBlue.config.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualGreen.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualGreen.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    manualGreen.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    manualGreen.parent.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualGreen.parent.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualGreen.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualGreen.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    manualGreen.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    manualGreen.config.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualGreen.config.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualRed.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualRed.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    manualRed.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    manualRed.parent.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualRed.parent.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualRed.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualRed.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    manualRed.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    manualRed.config.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualRed.config.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animationBrightnessCtrl.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    animationBrightnessCtrl.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.parent.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.parent.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animationBrightnessCtrl.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    animationBrightnessCtrl.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.config.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.config.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animationType.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animationType.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    animationType.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    animationType.parent.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animationType.parent.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animationType.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animationType.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    animationType.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    animationType.config.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animationType.config.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatMixed.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatMixed.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatMixed.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatMixed.parent.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatMixed.parent.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatMixed.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatMixed.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatMixed.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatMixed.config.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatMixed.config.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatMixed.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatMixed.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatMixed.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatMixed.prevItem.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatMixed.prevItem.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatMixed.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatMixed.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatMixed.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatMixed.nextItem.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatMixed.nextItem.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatCont.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatCont.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatCont.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatCont.parent.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatCont.parent.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatCont.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatCont.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatCont.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatCont.config.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatCont.config.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatCont.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatCont.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatCont.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatCont.prevItem.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatCont.prevItem.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatCont.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatCont.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatCont.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatCont.nextItem.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatCont.nextItem.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatFade.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatFade.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatFade.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatFade.parent.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatFade.parent.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatFade.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatFade.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatFade.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatFade.config.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatFade.config.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatFade.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatFade.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatFade.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatFade.prevItem.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatFade.prevItem.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatFade.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatFade.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatFade.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatFade.nextItem.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatFade.nextItem.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatStrobe.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatStrobe.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatStrobe.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatStrobe.parent.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatStrobe.parent.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatStrobe.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatStrobe.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatStrobe.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatStrobe.config.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatStrobe.config.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatStrobe.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatStrobe.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatStrobe.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatStrobe.prevItem.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatStrobe.prevItem.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatStrobe.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatStrobe.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatStrobe.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatStrobe.nextItem.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatStrobe.nextItem.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    dmx_task.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    dmx_task.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    dmx_task.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    dmx_task.parent.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    dmx_task.parent.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manual.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manual.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    manual.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    manual.parent.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manual.parent.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manual.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manual.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    manual.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    manual.config.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manual.config.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manual.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manual.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    manual.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    manual.prevItem.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manual.prevItem.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manual.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manual.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    manual.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    manual.nextItem.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manual.nextItem.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animation.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animation.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    animation.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    animation.parent.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animation.parent.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animation.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animation.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    animation.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    animation.config.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animation.config.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animation.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animation.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    animation.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    animation.prevItem.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animation.prevItem.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animation.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animation.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    animation.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    animation.nextItem.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animation.nextItem.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beat.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beat.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beat.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beat.parent.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beat.parent.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beat.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beat.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beat.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beat.config.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beat.config.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beat.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beat.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beat.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beat.prevItem.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beat.prevItem.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beat.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beat.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beat.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beat.nextItem.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beat.nextItem.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    dmx.parent.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    dmx.parent.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    dmx.parent.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    dmx.parent.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    dmx.parent.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    previousTask	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    dmx.config.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    dmx.config.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    dmx.config.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    dmx.config.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    dmx.config.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    dmx.prevItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    dmx.prevItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    dmx.prevItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    dmx.prevItem.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    dmx.prevItem.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    dmx.nextItem.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    dmx.nextItem.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    dmx.nextItem.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    dmx.nextItem.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    dmx.nextItem.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualWhite.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualWhite.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    manualWhite.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    manualWhite.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualWhite.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualBlue.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualBlue.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    manualBlue.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    manualBlue.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualBlue.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualGreen.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualGreen.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    manualGreen.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    manualGreen.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualGreen.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualRed.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manualRed.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    manualRed.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    manualRed.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manualRed.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animationBrightnessCtrl.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    animationBrightnessCtrl.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animationBrightnessCtrl.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animationType.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animationType.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    animationType.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    animationType.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animationType.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatMixedTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatMixedTask.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatMixedTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatMixedTask.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatMixedTask.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatContTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatContTask.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatContTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatContTask.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatContTask.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatFadeTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatFadeTask.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatFadeTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatFadeTask.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatFadeTask.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatStrobeTask.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatStrobeTask.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatStrobeTask.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatStrobeTask.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatStrobeTask.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatMixed.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatMixed.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatMixed.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatMixed.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatMixed.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatCont.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatCont.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatCont.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatCont.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatCont.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatFade.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatFade.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatFade.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatFade.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatFade.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatStrobe.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beatStrobe.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beatStrobe.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beatStrobe.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beatStrobe.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    dmx_task.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    dmx_task.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    dmx_task.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    dmx_task.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    dmx_task.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manual.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    manual.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    manual.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    manual.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    manual.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animation.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    animation.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    animation.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    animation.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    animation.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beat.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    beat.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    beat.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    beat.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    beat.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    S2241menuItem$task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    dmx.task	PTR FTN()void  size(2) Largest target is 1
		 -> CONTROL_BEAT(), CONTROL_MANUAL(), CONTROL_ANIMATION(), CONTROL_DMX(), 
		 -> Absolute function(), 

    S2241menuItem$parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    dmx.parent	PTR struct menuItem size(1) Largest target is 11
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 

    S2241menuItem$config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    dmx.config	PTR struct menuItem size(2) Largest target is 11
		 -> manualWhite(BANK4[8]), manualBlue(BANK4[8]), manualGreen(BANK4[8]), animationType(BANK4[8]), 
		 -> beatMixedTask(BANK4[8]), beatContTask(BANK4[8]), beatFadeTask(BANK4[8]), beatStrobeTask(BANK4[8]), 
		 -> manualRed(BANK3[8]), animationBrightnessCtrl(BANK3[8]), beatStrobe(BANK3[8]), dmx_task(BANK3[8]), 
		 -> NULL(NULL[0]), 

    S2241menuItem$prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    dmx.prevItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    S2241menuItem$nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    dmx.nextItem	PTR struct menuItem size(1) Largest target is 11
		 -> beatCont(BANK3[8]), beatMixed(BANK3[8]), beatFade(BANK3[8]), beatStrobe(BANK3[8]), 
		 -> animation(BANK3[8]), manual(BANK2[8]), beat(BANK2[8]), dmx(BANK2[8]), 
		 -> NULL(NULL[0]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK5[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK5[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK5[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK5[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK5[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK5[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK5[32]), NULL(NULL[0]), 

    S1994$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK5[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK3[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    S1140$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1152$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S1152$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), NULL(NULL[0]), 

    S1163$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    S1163$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_interrupt(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_DMX_interrupt
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _TM1650_init->_printf
    _TM1650_enable->_writeData
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _DMX_init->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_writeData
    _CONTROLLER_task->_CONTROL_ANIMATION
    _CONTROL_MANUAL->_printf
    _address_inc->_printf
    _address_dec->_printf
    _TM1650_fastPrintNum_3digit->_writeData
    ___lwmod->___lwdiv
    _CONTROL_BEAT->_LED_task_BEAT_STROBE
    _LED_task_BEAT_STROBE->_beatColorCreator
    _beatColorCreator->_beatBrightnessCalculation
    _beatBrightnessCalculation->___fltol
    _LED_setColor->_beatColorCreator
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _PWM4_LoadDutyValue->___fltol
    _PWM3_LoadDutyValue->___fltol
    _PWM2_LoadDutyValue->___fltol
    _PWM1_LoadDutyValue->___fltol
    _CONTROL_ANIMATION->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TM1650_fastPrintNum_2digit->_writeData
    _writeData->___awmod
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    ___awmod->___awdiv
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _TM1650_init->_printf
    _LED_task_MANUAL->_LED_setColor
    _CONTROL_DMX->_LED_task_DMX
    _address_inc->_printf
    _address_dec->_printf
    _LED_task_DMX->_LED_setColor
    _CONTROL_BEAT->_LED_task_BEAT_STROBE
    _LED_task_BEAT_STROBE->_LED_setColor
    _beatColorCreator->_beatBrightnessCalculation
    _LED_setColor->_beatColorCreator
    _CONTROL_ANIMATION->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _CONTROLLER_task->_CONTROL_DMX

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_CONTROLLER_task

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  261725
                                              2 BANK4      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                      _CLOCK_getTime
                         _CLOCK_init
                    _CONTROLLER_init
                    _CONTROLLER_task
                           _DMX_init
                           _LED_init
                  _SYSTEM_Initialize
                        _TM1650_init
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0   27299
                      _TM1650_enable
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    4420
                                             22 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     574
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_init                                             0     0      0    7658
      _EUSART1_SetRxInterruptHandler
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_fastPrintNum                                  3     1      2    7447
                                             22 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      2     2      0  221517
                                              0 BANK4      2     2      0
                   Absolute function *
                  _BUTTONS_isClicked
                  _CONTROL_ANIMATION *
                       _CONTROL_BEAT *
                        _CONTROL_DMX *
                     _CONTROL_MANUAL *
                             _printf
 ---------------------------------------------------------------------------------
 (2) _CONTROL_MANUAL                                       2     2      0   42242
                                             30 BANK1      2     2      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                    _LED_task_MANUAL
         _TM1650_fastPrintNum_3digit
                           _colorDec
                           _colorInc
                             _printf
 ---------------------------------------------------------------------------------
 (3) _colorInc                                             2     2      0       0
                                              0 BANK0      2     2      0
                     _getCurrentMenu
 ---------------------------------------------------------------------------------
 (3) _colorDec                                             2     2      0       0
                                              0 BANK0      2     2      0
                     _getCurrentMenu
 ---------------------------------------------------------------------------------
 (4) _getCurrentMenu                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LED_task_MANUAL                                      0     0      0   11142
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (2) _CONTROL_DMX                                          2     2      0   73132
                                              0 BANK2      2     2      0
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                       _LED_task_DMX
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (3) _address_inc                                          0     0      0   30745
         _TM1650_fastPrintNum_3digit
                             _printf
 ---------------------------------------------------------------------------------
 (3) _address_dec                                          0     0      0   30745
         _TM1650_fastPrintNum_3digit
                             _printf
 ---------------------------------------------------------------------------------
 (3) _TM1650_fastPrintNum_3digit                           3     1      2    7866
                                             22 BANK0      3     1      2
                            ___lwdiv
                            ___lwmod
                          _writeData
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1492
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_task_DMX                                         9     9      0   11287
                                             30 BANK1      9     9      0
                     _DMX_getAddress
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (4) _DMX_getAddress                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BUTTONS_isHeld                                       1     1      0     355
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CONTROL_BEAT                                         2     2      0   54279
                                             32 BANK1      2     2      0
                 _LED_task_BEAT_FADE
                _LED_task_BEAT_MIXED
               _LED_task_BEAT_STROBE
         _TM1650_fastPrintNum_2digit
                             _printf
 ---------------------------------------------------------------------------------
 (3) _LED_task_BEAT_STROBE                                 3     3      0   25500
                                             79 BANK0      1     1      0
                                             30 BANK1      2     2      0
                      _BEAT_detected
                      _CLOCK_getTime
                       _LED_setColor
                   _beatColorCreator
 ---------------------------------------------------------------------------------
 (4) _beatColorCreator                                    14    10      4   14293
                                             78 BANK0      1     1      0
                                              9 BANK1     13     9      4
                            ___fltol
          _beatBrightnessCalculation
 ---------------------------------------------------------------------------------
 (5) _beatBrightnessCalculation                           10     6      4    8509
                                             77 BANK0      1     1      0
                                              0 BANK1      9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) _LED_setColor                                         8     4      4   11142
                                             22 BANK1      8     4      4
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _beatColorCreator (ARG)
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     930
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             11     7      4    1061
                                             66 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    4073
                                             40 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    2411
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _PWM4_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _PWM3_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _PWM2_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _PWM1_LoadDutyValue                                   2     0      2     251
                                              0 BANK1      2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LED_task_BEAT_MIXED                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LED_task_BEAT_FADE                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CONTROL_ANIMATION                                    1     1      0   28779
                                             79 BANK0      1     1      0
                 _LED_task_ANIMATION
         _TM1650_fastPrintNum_2digit
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   22879
                                             75 BANK0      4     4      0
                                              0 BANK1     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   20098
                                             67 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    38      2   19663
                                             58 BANK0      9     7      2
                               _ctoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     6      2   13382
                                             52 BANK0      6     4      2
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3   13138
                                             43 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     940
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    6001
                                             35 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    5609
                                             27 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                2     2      0    4665
                                             25 BANK0      2     2      0
                    _TM1650_setDigit
 ---------------------------------------------------------------------------------
 (7) _TM1650_setDigit                                      3     2      1    4541
                                             22 BANK0      3     2      1
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _TM1650_fastPrintNum_2digit                           4     4      0    5900
                                             22 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                          _writeData
 ---------------------------------------------------------------------------------
 (8) _writeData                                            6     5      1    4389
                                             16 BANK0      6     5      1
                   _I2C1_MasterWrite
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterWrite                                     7     3      4    1499
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterWriteTRBBuild                            7     3      4     492
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterTRBInsert                                4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (11) _I2C1_WaitForLastPacketToComplete                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     793
                                              9 BANK0      7     3      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     625
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _LED_task_ANIMATION                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     206
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_init                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     880
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0     872
                                              5 BANK0      1     1      0
                          _GPIO_init
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3     872
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _GPIO_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    1718
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1321
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INTERRUPT_InterruptManager                          0     0      0      23
                   Absolute function *
                  _ADCC_ThresholdISR
                      _DMX_interrupt *
                _EUSART1_Receive_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (18) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (19) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (19) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (18) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (19) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (19) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (18) _DMX_interrupt                                       7     7      0       1
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (18) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (19) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     ___lwdiv
   _BUTTONS_init
     _GPIO_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_init
   _CONTROLLER_task
     Absolute function(Fake) *
     _BUTTONS_isClicked *
     _CONTROL_ANIMATION *
       _LED_task_ANIMATION
       _TM1650_fastPrintNum_2digit
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___awdiv (ARG)
                           ___awmod (ARG)
                             ___awdiv (ARG)
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___awdiv (ARG)
                     ___awmod (ARG)
                       ___awdiv (ARG)
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _CONTROL_BEAT *
       _LED_task_BEAT_FADE
       _LED_task_BEAT_MIXED
       _LED_task_BEAT_STROBE
         _BEAT_detected
         _CLOCK_getTime
         _LED_setColor
           _PWM1_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM2_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM3_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM4_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
           _beatColorCreator (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _beatBrightnessCalculation
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
         _beatColorCreator
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _beatBrightnessCalculation
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
       _TM1650_fastPrintNum_2digit
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___awdiv (ARG)
                           ___awmod (ARG)
                             ___awdiv (ARG)
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___awdiv (ARG)
                     ___awmod (ARG)
                       ___awdiv (ARG)
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _CONTROL_DMX *
       _BUTTONS_isHeld
       _CLOCK_getTime
       _LED_task_DMX
         _DMX_getAddress
         _LED_setColor
           _PWM1_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM2_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM3_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM4_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
           _beatColorCreator (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _beatBrightnessCalculation
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
       _address_dec
         _TM1650_fastPrintNum_3digit
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___awdiv (ARG)
             ___awmod (ARG)
               ___awdiv (ARG)
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___awdiv (ARG)
                           ___awmod (ARG)
                             ___awdiv (ARG)
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                   _fputs
                     _fputc
                       _putch
                         _TM1650_setDigit
                           _writeData
                             _I2C1_MasterWrite
                               _I2C1_MasterTRBInsert
                                 _I2C1_WaitForLastPacketToComplete
                               _I2C1_MasterWriteTRBBuild
                             ___awdiv (ARG)
                             ___awmod (ARG)
                               ___awdiv (ARG)
                             ___lwdiv (ARG)
                             ___lwmod (ARG)
                               ___lwdiv (ARG)
                   _strlen
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___awdiv (ARG)
                       ___awmod (ARG)
                         ___awdiv (ARG)
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
       _address_inc
         _TM1650_fastPrintNum_3digit
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
             ___awdiv (ARG)
             ___awmod (ARG)
               ___awdiv (ARG)
             ___lwdiv (ARG)
             ___lwmod (ARG)
               ___lwdiv (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___awdiv (ARG)
                           ___awmod (ARG)
                             ___awdiv (ARG)
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                   _fputs
                     _fputc
                       _putch
                         _TM1650_setDigit
                           _writeData
                             _I2C1_MasterWrite
                               _I2C1_MasterTRBInsert
                                 _I2C1_WaitForLastPacketToComplete
                               _I2C1_MasterWriteTRBBuild
                             ___awdiv (ARG)
                             ___awmod (ARG)
                               ___awdiv (ARG)
                             ___lwdiv (ARG)
                             ___lwmod (ARG)
                               ___lwdiv (ARG)
                   _strlen
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___awdiv (ARG)
                       ___awmod (ARG)
                         ___awdiv (ARG)
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
     _CONTROL_MANUAL *
       _BUTTONS_isHeld
       _CLOCK_getTime
       _LED_task_MANUAL
         _LED_setColor
           _PWM1_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM2_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM3_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           _PWM4_LoadDutyValue
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
           _beatColorCreator (ARG)
             ___fltol
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             _beatBrightnessCalculation
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fldiv (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl
       _TM1650_fastPrintNum_3digit
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
           ___awdiv (ARG)
           ___awmod (ARG)
             ___awdiv (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
       _colorDec
         _getCurrentMenu
       _colorInc
         _getCurrentMenu
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
                 _fputs
                   _fputc
                     _putch
                       _TM1650_setDigit
                         _writeData
                           _I2C1_MasterWrite
                             _I2C1_MasterTRBInsert
                               _I2C1_WaitForLastPacketToComplete
                             _I2C1_MasterWriteTRBBuild
                           ___awdiv (ARG)
                           ___awmod (ARG)
                             ___awdiv (ARG)
                           ___lwdiv (ARG)
                           ___lwmod (ARG)
                             ___lwdiv (ARG)
                 _strlen
             _fputc
               _putch
                 _TM1650_setDigit
                   _writeData
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                         _I2C1_WaitForLastPacketToComplete
                       _I2C1_MasterWriteTRBBuild
                     ___awdiv (ARG)
                     ___awmod (ARG)
                       ___awdiv (ARG)
                     ___lwdiv (ARG)
                     ___lwmod (ARG)
                       ___lwdiv (ARG)
     _printf *
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___awdiv (ARG)
                       ___awmod (ARG)
                         ___awdiv (ARG)
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___awdiv (ARG)
                   ___awmod (ARG)
                     ___awdiv (ARG)
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)
   _DMX_init
     _EUSART1_SetRxInterruptHandler
     _TM1650_fastPrintNum
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
   _LED_init
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _TM1650_setDigit
                     _writeData
                       _I2C1_MasterWrite
                         _I2C1_MasterTRBInsert
                           _I2C1_WaitForLastPacketToComplete
                         _I2C1_MasterWriteTRBBuild
                       ___awdiv (ARG)
                       ___awmod (ARG)
                         ___awdiv (ARG)
                       ___lwdiv (ARG)
                       ___lwmod (ARG)
                         ___lwdiv (ARG)
               _fputs
                 _fputc
                   _putch
                     _TM1650_setDigit
                       _writeData
                         _I2C1_MasterWrite
                           _I2C1_MasterTRBInsert
                             _I2C1_WaitForLastPacketToComplete
                           _I2C1_MasterWriteTRBBuild
                         ___awdiv (ARG)
                         ___awmod (ARG)
                           ___awdiv (ARG)
                         ___lwdiv (ARG)
                         ___lwmod (ARG)
                           ___lwdiv (ARG)
               _strlen
           _fputc
             _putch
               _TM1650_setDigit
                 _writeData
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                       _I2C1_WaitForLastPacketToComplete
                     _I2C1_MasterWriteTRBBuild
                   ___awdiv (ARG)
                   ___awmod (ARG)
                     ___awdiv (ARG)
                   ___lwdiv (ARG)
                   ___lwmod (ARG)
                     ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_interrupt *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     1DF       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     27      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      2      4F      10       98.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      50      12      100.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      4      4E      14       97.5%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      44      16       85.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              2E      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BANK14               0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BANK15               0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BANK16               0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BANK17               0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BANK18               0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     1DF      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed May  1 01:34:46 2019

                       __end_of_LED_task_MANUAL 1C42                                    ___fldiv@aexp 0047  
                                  ___fldiv@bexp 0046                        ??_ADCC_SetUpperThreshold 0022  
                                  ___fldiv@sign 003F                                     __CFG_CP$OFF 0000  
                                  ?_TM1650_init 0077                                    ___awdiv@sign 0026  
                                            _up 00E0                              __size_of_BEAT_init 0017  
                            __size_of_BEAT_task 00CD                             __Umul8_16@word_mpld 0026  
                                   __CFG_LVP$ON 0000                             _adcThresholdHandler 1B6D  
                                           l911 0C2A                                             l913 0C98  
                                           _PR2 028D                                             _bpm 0130  
                                           _dmx 0156                                             _pad 131A  
                       __size_of_PMD_Initialize 000A                                    ___awmod@sign 002F  
                               _TMR2_Initialize 1000                                 _PWM4_Initialize 0800  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                                  ___flmul@aexp 0056                                    ___flmul@bexp 005B  
                            _LED_task_BEAT_FADE 0003                                    ___flmul@sign 0055  
                                  ___flmul@temp 0060                                    ___flmul@prod 005C  
                                 __CFG_BBEN$OFF 0000                             _animationBrightness 00EC  
                              __end_of_I2C1_ISR 1000                                    ___fltol@exp1 006C  
                                          l2110 02B9                                            l2150 1688  
                                          l2142 166A                                            l2080 0632  
                                          l2136 1634                                            l1168 15C0  
                                          l2082 063F                                            l2058 0513  
                                          l2149 167E                                            l2079 061A  
                                          l1491 11B0                                            l2188 1E73  
                                          l1902 147E                                            l1478 1279  
                                          l1673 1332                                            l1676 1352  
                          _ADCC_StartConversion 1BBA                                            l7102 1F32  
                                          ?_pad 004B                                            l7032 07DF  
                                          l7112 1330                                            l7018 1B7D  
                                          l7122 135E                                            l7130 101D  
                                          l7202 1447                                            l8010 124A  
                                          l8002 1234                                            l7036 07E6  
                                          l7108 1328                                            l7132 1026  
                                          l7220 147A                                            l8020 1260  
                                          l7038 07EC                                            l7054 1DC4  
                                          l7118 1334                                            l8014 1255  
                                          l8006 123F                                            l7048 1F9D  
                                          l7064 1EF4                                            l7312 059E  
                                          l7144 1E6D                                            l8040 1190  
                                          l8032 1182                                            l7066 1EF6  
                                          l7082 1170                                            l7090 1D64  
                                          l7330 05A9                                            l7306 0585  
                                          l7314 0567                                            l7250 04E7  
                                          l7218 146C                                            l7092 1D70  
                                          l7172 16FF                                            l7332 05C0  
                                          l7316 05A3                                            l7252 04EF  
                                          l7500 02A6                                            l7404 00D7  
                                          l7228 148B                                            l8036 1189  
                                          l8028 117B                                            l8300 1424  
                                          l7078 114D                                            l7182 1726  
                                          l7342 05D9                                            l7270 050B  
                                          l7246 04E4                                            l7406 00D9  
                                          l8046 1197                                            l8302 1429  
                                          l7352 0602                                            l7280 0532  
                                          l7416 00EF                                            l7408 00E1  
                                          l8320 0CC9                                            l8218 1CDC  
                                          l7178 1720                                            l7338 05D7  
                                          l7266 0508                                            l7530 1657  
                                          l8322 0CDF                                            l8330 0D27  
                                          l7188 1731                                            l7612 1DFD  
                                          l7540 166F                                            l7524 1643  
                                          l7700 0836                                            l8324 0CF5  
                                          l8308 1432                                            l7630 1FDA  
                                          l7366 063B                                            l7286 053E  
                                          l7470 0238                                            l7390 00BE  
                                          l7198 143E                                            l7518 162C  
                                          l8342 0D7E                                            l8318 0CB3  
                                          l8422 1607                                            l8406 15DA  
                                          l7632 1FF7                                            l7480 0251  
                                          l7552 16A3                                            l7528 1647  
                                          l8344 0D49                                            l8328 0D0B  
                                          l8416 15F3                                            l8408 15E1  
                                          l8280 13E7                                            l8272 13D1  
                                          l8432 1D29                                            l7714 1BDC  
                                          l7490 027A                                            l7386 00B4  
                                          l7538 167C                                            l7730 08CF  
                                          l8362 0D93                                            l8354 0D86  
                                          l8418 15F4                                            l8290 13F6  
                                          l8442 097E                                            l7804 11F8  
                                          l7564 1E1B                                            l7580 1E39  
                                          l7476 024F                                            l7468 0221  
                                          l7388 00B6                                            l7740 0920  
                                          l9180 17CE                                            l9164 179A  
                                          l8284 13EB                                            l8276 13DC  
                                          l8292 1412                                            l9412 0DFA  
                                          l7654 10CA                                            l7646 10AC  
                                          l7830 122E                                            l7822 121D  
                                          l7494 028F                                            l7742 0921  
                                          l7734 08F7                                            l7670 1FAB  
                                          l8358 0D8D                                            l9190 17E6  
                                          l8390 15AD                                            l9430 0E48  
                                          l9406 0DE5                                            l7648 10B8  
                                          l8720 0BE3                                            l7760 12D3  
                                          l7816 1205                                            l7808 11FF  
                                          l7736 08F8                                            l7728 08CE  
                                          l7672 1FB7                                            l7680 1FCC  
                                          l9176 17C0                                            l9440 0E70  
                                          l9432 0E50                                            l9424 0E30  
                                          l7658 10D3                                            l7818 1211  
                                          l7826 1226                                            l7746 0949  
                                          l7914 0B6A                                            l9186 17E0  
                                          l9434 0E58                                            l9426 0E38  
                                          l9418 0E11                                            l7596 1DDF  
                                          l7748 094A                                            l7940 0B36  
                                          l7908 0B27                                            l7676 1FC3  
                                          l8388 15A6                                            l9436 0E60  
                                          l9428 0E40                                            l8742 0C66  
                                          l8734 0C42                                            l7766 12DE  
                                          l7934 0B30                                            l7862 1C81  
                                          l8398 15C3                                            l9438 0E68  
                                          l9446 0E85                                            l8728 0C24  
                                          l7792 1315                                            l7784 1304  
                                          l7776 12E6                                            l7928 0B2E  
                                          l8834 0A41                                            l8746 0C79  
                                          l7778 12F2                                            l7970 0B45  
                                          l7946 0B39                                            l7874 1EAD  
                                          l9650 126B                                            l9394 0DB6  
                                          l7788 130D                                            l7964 0B40  
                                          l7884 1E8C                                            l7876 1EB1  
                                          l9652 11A2                                            l9644 0E93  
                                          l8870 0ABF                                            l8854 0A7B  
                                          l8838 0A47                                            l7982 0B50  
                                          l7958 0B3C                                            l7886 1E90  
                                          l9646 1404                                            l9478 11E3  
                                          l8856 0A8E                                            l7976 0B48  
                                          l9648 0D19                                            l7996 14C3  
                                ?_TM1650_enable 0077                                            STR_1 2055  
                                          STR_2 2073                                            STR_3 2061  
                                          STR_4 205B                                            STR_5 2049  
                                          STR_6 206D                                            STR_7 204F  
                                          STR_8 2067                                            STR_9 2082  
                       __end_of_PWM1_Initialize 1C20                                            _LATA 0018  
                                          _LATB 0019                                            _LATC 001A  
                                          _T2PR 028D                                            _PMD0 0796  
                                          u6205 133E                                            _PMD1 0797  
                                          _PMD2 0798                                            u7015 1676  
                                          _PMD3 0799                                            _PMD4 079A  
                                          u7105 1E17                                            u6305 1450  
                                          _PMD5 079B                                            _PMD6 079C  
                                          u6155 116E                                            _PMD7 079D  
                                          u6245 1E74                                            u7135 1E35  
                                          u6335 146D                                            u7055 1690  
                                          u7225 10AF                                            u8105 0D5D  
                                          u6515 057F                                            u7315 1FBD  
                                          u8115 0D76                                            u7245 10B9  
                                          u7165 1DDB                                            u6525 0593  
                                          u6365 1482                                            u7325 1FC4  
                                          u7255 10C3                                            u7265 10CB  
                                          u7435 12E9                                            u7195 1DF9  
                                          u6555 05AC                                            u8075 0D43  
                                          u6645 05F0                                            u6485 056F  
                                          u6805 0210                                            u7455 12F3  
                                          u7535 1208                                            u6655 060B  
                                          u6575 05B5                                            u6495 0576  
                                          u6815 0224                                            u7295 1FAE  
                                          u9047 11BA                                            u7465 12FD  
                                          u6665 0624                                            u6905 0268  
                                          u7475 1305                                            u7555 1217  
                                          u6915 0283                                            u6835 022D  
                                          u8605 0A2C                                            u7565 121E  
                                          u6925 0299                                            u6765 0165  
                    ?_beatBrightnessCalculation 00A0                                            u8375 0BE6  
                                          u6775 0194                                            u8384 0C05  
                                          u8385 0C04                                            u6785 01EA  
                                          u6795 0201                                            u8655 0AA0  
                                          u6975 1650                                            u6995 1664  
                                          u8835 1777                                            u8845 1792  
                                          u8865 17BA                                            _TMR2 028C  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                              _LED_task_ANIMATION 0002  
                                 __CFG_FCMEN$ON 0000                             ?_LED_task_BEAT_FADE 0077  
                                 ?_BUTTONS_init 0077                                   ?_BUTTONS_task 0077  
                                          _beat 014E                                            _dbuf 02A0  
                          ?_adcThresholdHandler 0077                                            _ctoa 100E  
                                          _main 11B1                                            _down 00DF  
                                          _init 1E42                                            _menu 00E1  
                                          _prec 0124                                            _nout 0120  
                                          pad@i 004F                                            pad@p 004C  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          pad@w 0051                          ??_I2C1_MasterTRBInsert 0022  
                                          btemp 007E                                   __CFG_BOREN$ON 0000  
                                          start 0030                                 ___fldiv@new_exp 0040  
                       __end_of_TM1650_setDigit 1CB7                             ?_LED_task_ANIMATION 0077  
                            __size_of_GPIO_init 0011                             __size_of_CLOCK_init 0008  
                                 __CFG_CSWEN$ON 0000                                   __CFG_MCLRE$ON 0000  
                          __size_of_address_dec 0020                            __size_of_address_inc 0021  
                I2C1_MasterWriteTRBBuild@length 0021                             _LED_task_BEAT_MIXED 07FF  
                                _BUTTONS_isHeld 1C74                                           ??_pad 004E  
                       __end_of_PWM2_Initialize 1C2B                         __end_of_TMR0_Initialize 1CF2  
                                    _i2c1_state 00E6                  ??_TMR0_DefaultInterruptHandler 0077  
                __size_of_OSCILLATOR_Initialize 0009                            ??_LED_task_BEAT_FADE 0020  
                     I2C1_MasterTRBInsert@count 0023                   __end_of_OSCILLATOR_Initialize 1C0B  
                     I2C1_MasterTRBInsert@pflag 0021                           _eusart1RxStatusBuffer 01A0  
                              __end_of_LED_init 1BA0                                   ___fltol@sign1 006B  
                                         _ADCAP 010E                                           _ADACT 0117  
                                         ?_ctoa 0054                                           ?_main 0077  
                                         _ADCLK 0118                                           _ADCNT 0099  
                                         ?_init 0020                                           _ADPCH 009F  
                               __end_of___fldiv 0644                                           _ADREF 0116  
                               __end_of___awdiv 131A                               __end_of_I2C1_Stop 1D91  
                                         STR_10 208A                                           STR_11 2086  
                                         STR_20 2047                                           STR_12 207E  
                                         STR_13 2093                                           STR_21 201C  
                                         STR_14 209C                                           STR_30 2096  
                                         STR_22 203C                                           STR_31 2096  
                                         STR_15 2099                                           STR_23 202D  
                                         STR_16 209F                                           STR_24 2013  
                                         STR_17 208E                                           STR_25 2000  
                                 __CFG_WDTE$OFF 0000                                           STR_18 2092  
                                         STR_26 200A                                           STR_19 2079  
                                         STR_27 2025                                           STR_28 2035  
                               __end_of___awmod 1233                                           STR_29 2043  
                              __end_of_DMX_init 1CCA                                           _ADRPT 009A  
                               __end_of___flmul 02C6                                 __end_of___fltol 149A  
                               ___awdiv@divisor 0020                                           _T2CON 028E  
                                         _LATC5 00D5                                           _T2HLT 028F  
                               __end_of___lwdiv 10D8                      _ADCC_ADTI_InterruptHandler 0161  
                                         _T2TMR 028C                                           _T2RST 0291  
                                         i1l432 0017                                           i1l441 002E  
                               __end_of___lwmod 1FD1                                           i1l434 001E  
                                         i1l436 0025                                           i1l429 000E  
                                         i1l560 0F13                                           i1l561 0F1F  
                                         i1l554 0EF0                                           i1l571 0F5C  
                                         i1l555 0EF1                                           i1l549 0EC2  
                                         i1l590 1C91                                           i1l583 0FC0  
                                         i1l575 0F7C                                           i1l578 0F8B  
                                         i1l579 0F99                                 ___awdiv@counter 0025  
                                         _OSCEN 0891                                    vfpfcnvrt@fmt 005A  
                            _PWM4_LoadDutyValue 1E24                                           _TMR0H 059D  
                                         _TMR0L 059C                                           _PORTA 000C  
                                         _PORTC 000E                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
             __size_of_TMR0_SetInterruptHandler 0009                    __end_of_I2C1_BusCollisionISR 1B76  
                          ??_LED_task_ANIMATION 0020                       ?_TMR0_SetInterruptHandler 0020  
                             ??_I2C1_Initialize 0020                                __end_of_TMR0_ISR 1C74  
                                 __CFG_WRTB$OFF 0000                                   __CFG_WRTC$OFF 0000  
                                 __CFG_WRTD$OFF 0000                                           _delay 0169  
                          ?_LED_task_BEAT_MIXED 0077                                           _flags 0126  
                                         _enter 00DE                           ?_ADCC_StartConversion 0077  
                                         _fputc 1143                                           _fputs 1F2E  
                           ?_PWM4_LoadDutyValue 00A0                       __size_of_beatColorCreator 00AF  
                                         pad@fp 0053                                           _width 0122  
                                         ctoa@c 0054                                           _putch 1EE6  
                                         ctoa@w 0057                         __end_of_PWM3_Initialize 1C36  
                                         pclath 000A                                  ??_BUTTONS_init 0025  
                                ??_BUTTONS_task 0022                           ??_adcThresholdHandler 0077  
                             __end_of_BEAT_init 1D47                               __end_of_BEAT_task 0AE2  
                                         status 0003                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 1B6C     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0077             ?_EUSART1_DefaultFramingErrorHandler 0077  
            _EUSART1_DefaultFramingErrorHandler 1B6B                                    _beatFadeTask 0258  
               I2C1_MasterWriteTRBBuild@address 0022                          __end_of_BUTTONS_isHeld 1C83  
                               __initialization 0032                            TM1650_setDigit@digit 0038  
                         I2C1_MasterWrite@pdata 002D                           I2C1_MasterWrite@pflag 002A  
                              ?_LED_task_MANUAL 0077                                    __end_of_ctoa 103E  
                    __end_of_EUSART1_Initialize 10A3                                    __end_of_main 11ED  
                                  __end_of_init 1E62                                 _CONTROLLER_init 02C6  
                               _CONTROLLER_task 0DAD                            ??_PWM4_LoadDutyValue 006D  
                                 ?_LED_setColor 00B6                    __size_of_CLOCK_timerCallback 0006  
                                __CFG_SAFEN$OFF 0000                                   ?_LED_task_DMX 0077  
               __size_of_ADCC_SetUpperThreshold 0009                           __end_of_CLOCK_getTime 1BCC  
                                  _beatContTask 0250                         __end_of_PWM4_Initialize 080B  
                       __end_of_TMR2_Initialize 100E                     ?_INTERRUPT_InterruptManager 0077  
                          _LED_task_BEAT_STROBE 0AE2                                     _i2c1_object 00C7  
                                        ??_ctoa 0056                                          ??_main 026A  
                                        ??_init 0023                            __end_of_CONTROL_BEAT 1434  
                             __end_of_GPIO_init 1CA5                           ??_LED_task_BEAT_MIXED 0020  
                               ??_TM1650_enable 0036                                          _ADACCH 0097  
                                        _ADACCL 0096                                          _ADACCU 0098  
                                        _ADACQH 010D                                          _ADACQL 010C  
                                        _ADCON0 0111                                          _ADCON1 0112  
                                        _ADCON2 0113                                          _ADCON3 0114  
                                        _ADERRH 0091                                          _ADERRL 0090  
                          __size_of_CONTROL_DMX 00AC                                          ?_fputc 003B  
                                        _ADLTHH 008D                                          _ADLTHL 008C  
                                        ?_fputs 0043                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _CCPR1H 030D  
                                        _CCPR2H 0311                                          _CCPR3H 0315  
                                        _CCPR1L 030C                                          _CCPR4H 0319  
                                        _CCPR2L 0310                                          _CCPR3L 0314  
                                        _CCPR4L 0318                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                ___awdiv@dividend 0022  
                                        _ADUTHL 008E                                          _ANSELA 1F38  
                                        ?_putch 0077                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T0CON0 059E                                          _T0CON1 059F  
                                        _RC1REG 0119                                          _RA4PPS 1F14  
                                        _RA5PPS 1F15                                          _RC1STA 011D  
                                        _RC3PPS 1F23                                          _RC4PPS 1F24  
                              ?_PWM1_Initialize 0077                                          _RC5PPS 1F25  
                                        _ODCONA 1F3A                                          _ODCONB 1F45  
                                        _ODCONC 1F50                                          _RC6PPS 1F26  
                                        _RC7PPS 1F27                                          i1l6200 0F0D  
                                        i1l6214 0F38                                  __CFG_WDTCCS$SC 0000  
                                        i1l6234 0F51                                          i1l6182 0EE3  
                                        i1l6272 0FA7                                          i1l6256 0F7F  
                                        i1l6248 0F6A                                          i1l6194 0EFD  
                                        i1l6186 0EEA                                          i1l6700 1043  
                                        i1l6284 0FC4                                          i1l6268 0FA0  
                                        i1l6286 0FC7                                          i1l6294 0FD3  
                                        i1l6712 106C                                          i1l6288 0FCB  
                                        i1l5842 1D8E                                          i1l6708 1064  
                                        i1l8482 1131                                          i1l8476 1122  
                                        i1l8486 1140                                          i1l9654 0FDC  
                                        _OSCFRQ 0893                          __size_of_DMX_interrupt 0031  
                                        _TX1REG 011A                                          _TX1STA 011E  
                              __end_of___xxtofl 16AC                               ?_I2C1_MasterWrite 0027  
                                __CFG_PWRTS$OFF 0000                                ?_TM1650_setDigit 0036  
                               ?_BUTTONS_isHeld 0077                              ??_I2C1_MasterWrite 002B  
                                  _CCPTMRS0bits 021E                                    vfprintf@cfmt 0069  
                              __end_of_colorDec 11B1                                __end_of_colorInc 127A  
                                _p_i2c1_current 0071                                  ??_LED_setColor 00BA  
                   __size_of_PWM3_LoadDutyValue 001E                                  ??_LED_task_DMX 00BE  
                   __end_of_TM1650_fastPrintNum 0A15                               _ADCC_ThresholdISR 1C5A  
                                     ??___fldiv 0036                                       ??___awdiv 0024  
                                __CFG_STVREN$ON 0000                                       ??___awmod 002D  
                                     ??___flmul 0050                                       ??___fltol 0066  
                                     ??___lwdiv 0024                    ??_TM1650_fastPrintNum_2digit 0036  
                                     ??___lwmod 002C                    ??_TM1650_fastPrintNum_3digit 0038  
                      ?_EUSART1_SetErrorHandler 0020                      ??_I2C1_MasterWriteTRBBuild 0024  
                                        _manual 0146                                ?_TMR0_Initialize 0077  
                              ?_PWM2_Initialize 0077                              ?_ADCC_ThresholdISR 0077  
                         ?_LED_task_BEAT_STROBE 0077                                       ?_I2C1_ISR 0077  
                              ___awdiv@quotient 0027                                 ___awmod@divisor 0029  
                               ___awmod@counter 002E                                          _printf 1D06  
                        __size_of_BEAT_detected 0009                                          pad@buf 004B  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                        ctoa@fp 0059                                  _lastActiveTime 0134  
                                        _strlen 1D5F                            __size_of_TM1650_init 0014  
                 TM1650_fastPrintNum_2digit@num 0039                                 _ADCC_Initialize 1F54  
                                        fputc@c 003B                                  _PMD_Initialize 1C0B  
                                        fputs@c 0047                                    ??_CLOCK_init 0022  
                                        fputs@i 0048                                          fputs@s 004A  
                            __size_of__Umul8_16 0020                             ??_ADCC_ThresholdISR 0077  
                 TM1650_fastPrintNum_3digit@num 0036                          ??_ADCC_StartConversion 0020  
                                        putch@n 003A                                __end_of_vfprintf 2000  
          ADCC_SetUpperThreshold@upperThreshold 0020    ADCC_SetADTIInterruptHandler@InterruptHandler 0020  
      TMR0_SetInterruptHandler@InterruptHandler 0020                          _ADCC_SetUpperThreshold 1BB1  
                 I2C1_MasterWriteTRBBuild@pdata 0020                                   _tm1650_status 013D  
                               _eusart1RxBuffer 0220                         beatColorCreator@inGreen 00A9  
                              ?_PWM3_Initialize 0077                                    ___xxtofl@arg 002A  
                                  ___xxtofl@exp 0029                               _SYSTEM_Initialize 1F0A  
                                  ___xxtofl@val 0020                         beatColorCreator@inWhite 00AB  
                       __end_of__initialization 0096                         __end_of_CONTROLLER_init 04CA  
                       __end_of_CONTROLLER_task 0EAE                              ?_SYSTEM_Initialize 0077  
           __size_of_TM1650_fastPrintNum_2digit 0074             __size_of_TM1650_fastPrintNum_3digit 0099  
                    __end_of_PWM2_LoadDutyValue 1E06                                       ?_LED_init 0077  
                                    ___fltol@f1 0062                                       ?_DMX_init 0077  
                                _i2c1_trb_count 00E5                     PWM1_LoadDutyValue@dutyValue 00A0  
                __size_of_EUSART1_RxDataHandler 0018                       __end_of_ADCC_ThresholdISR 1C67  
                       __size_of_DMX_getAddress 0003                   __end_of_EUSART1_RxDataHandler 1D5F  
                         _I2C1_FunctionComplete 1C83                            _I2C1_BusCollisionISR 1B73  
                                __pcstackCOMMON 0077                              __end_of_CLOCK_init 1B90  
                        I2C1_MasterWrite@length 0027                                    __pidataBANK1 1BA0  
                                  __pidataBANK2 07F9                             ??_SYSTEM_Initialize 0022  
                                     ?_TMR0_ISR 0077                                   __end_of_fputc 117A  
                                 __end_of_fputs 1F54                                   __end_of_putch 1F0A  
                            _PWM1_LoadDutyValue 1DCA                                      ??_I2C1_ISR 0079  
                              ?_TMR2_Initialize 0077                                ?_PWM4_Initialize 0077  
                                 _DMX_interrupt 103E                            __end_of_BUTTONS_init 12C8  
                        __end_of_PMD_Initialize 1C15                            __end_of_BUTTONS_task 0CAF  
                   PWM4_LoadDutyValue@dutyValue 00A0                             ?_PWM1_LoadDutyValue 00A0  
                                    _beatStrobe 01D0                     __end_of_EUSART1_Receive_ISR 1143  
                             _thresholdExceeded 0070                     ADCC_StartConversion@channel 0020  
                             LED_setColor@input 00B6                                         ??_fputc 003E  
                     __end_of_SYSTEM_Initialize 1F2E                                         ??_fputs 0044  
                              _beatColorCreator 08A4                                         ??_putch 0039  
                                 _eusart1RxHead 0074                                   _eusart1RxTail 0073  
                                    __pbssBANK1 00C7                                      __pbssBANK2 0120  
                                    __pbssBANK3 01A0                                      __pbssBANK4 0220  
                                    __pbssBANK5 02A0                 ??_EUSART1_SetRxInterruptHandler 0022  
                   ??_beatBrightnessCalculation 00A4                         __size_of_getCurrentMenu 0008  
                                 _BEAT_detected 1BD5                                   _beatMixedTask 0248  
                                    ??_LED_init 0020                                      ??_DMX_init 0039  
                          ??_PWM1_LoadDutyValue 006D                               __end_of__Umul8_16 1E82  
                         ?_I2C1_BusCollisionISR 0077                 __end_of_EUSART1_SetErrorHandler 1BF0  
                                    __pmaintext 11B1                __end_of_TMR0_SetInterruptHandler 1BD5  
                                    ??_TMR0_ISR 0077                                 __CFG_PPS1WAY$ON 0000  
                              writeData@address 0034                         __end_of_ADCC_Initialize 1F7A  
                        ??_LED_task_BEAT_STROBE 00BE                                      __pintentry 0004  
                               _I2C1_Initialize 1D91                                         _CCP1CON 030E  
                                       _CCP2CON 0312                                         _CCP3CON 0316  
                         __size_of_CONTROL_BEAT 0064                                         _CCP4CON 031A  
                                       _ADFLTRH 0095                                         _ADFLTRL 0094  
                                ?_DMX_interrupt 0077                                         _ADPREVH 009C  
                                       _ADPREVL 009B                                   BUTTONS_task@i 0025  
          __end_of_ADCC_SetADTIInterruptHandler 1BB1           __size_of_ADCC_SetADTIInterruptHandler 0009  
                  _ADCC_SetADTIInterruptHandler 1BA8                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                 __CFG_ZCDDIS$OFF 0000  
                                       ?_printf 00A0                                 ?_PMD_Initialize 0077  
                         _animationModeSelected 00ED                                         ?_strlen 0020  
        __end_of_EUSART1_SetFramingErrorHandler 1BF9         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 1BF0                                       ?___xxtofl 0020  
                  ?_EUSART1_DefaultErrorHandler 0077                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                              __size_of_vfpfcnvrt 00A8  
                                     _I2C1_Stop 1D77                                      _arrayIndex 012A  
                                       _OSCTUNE 0892                                         _SSP1ADD 018D  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                         _SSP1BUF 018C  
                          __end_of_LED_setColor 07A4                               _colorModeSelected 013F  
                                     ?_colorDec 0077                               __end_of_charTable 1860  
                           _CLOCK_timerCallback 1B82                                       ?_colorInc 0077  
                          __end_of_LED_task_DMX 13D0                                  ?_BEAT_detected 0077  
                 I2C1_MasterTRBInsert@ptrb_list 0020                         __size_of_CONTROL_MANUAL 00FE  
                            __size_of_writeData 001D                                   ??_address_dec 006F  
                              ?_CONTROLLER_init 0077                                   ??_address_inc 006F  
                              ?_CONTROLLER_task 0077                                      _enterState 00DA  
                               BUTTONS_task@btn 0028                                    _CONTROL_BEAT 13D0  
                        ?_I2C1_FunctionComplete 0077                                       _BEAT_init 1D30  
                 __size_of_I2C1_MasterTRBInsert 0055                                       _BEAT_task 0A15  
                    __size_of_ADCC_ThresholdISR 000D                                      _manualBlue 0230  
                            _p_i2c1_trb_current 0072              __end_of_TM1650_fastPrintNum_2digit 150E  
                    _TM1650_fastPrintNum_2digit 149A              __end_of_TM1650_fastPrintNum_3digit 08A4  
                    _TM1650_fastPrintNum_3digit 080B                                         ___fldiv 04CA  
                                       ___awdiv 12C8                            ?_CLOCK_timerCallback 0077  
                                       ___awmod 11ED                                         ___flmul 009A  
                                       ___fltol 1434                                         ___lwdiv 10A3  
                                       ___lwmod 1FA4                                       ?_vfprintf 0063  
                     _beatBrightnessCalculation 150E                                         _address 00EA  
                    _animationBrightnessControl 013E                     __size_of_LED_task_BEAT_FADE 0001  
                                       __ptext1 1CF2                                         __ptext2 1D1B  
                                       __ptext3 1F0A                                         __ptext4 1000  
                                       __ptext5 1CDE                                         __ptext6 0800  
                                       __ptext7 1C2B                                         __ptext8 1C20  
                                       __ptext9 1C15                                 __size_of_printf 0015  
                 ?_ADCC_SetADTIInterruptHandler 0020                                 __CFG_WRTAPP$OFF 0000  
                               __size_of_strlen 0018                                         _lastRun 012E  
                         _OSCILLATOR_Initialize 1C02                                       _T2CONbits 028E  
                                  __size_of_pad 0053                                         _initial 0167  
                                       _buttons 02C0                                      ??___xxtofl 0024  
                              ___awmod@dividend 002B                              _EUSART1_Initialize 106F  
                      ??_PIN_MANAGER_Initialize 0020                                       _T2HLTbits 028F  
                               __CFG_WRTSAF$OFF 0000                     __size_of_LED_task_ANIMATION 0001  
                                    ?_I2C1_Stop 0077                     __end_of_adcThresholdHandler 1B70  
                                       _upState 00DD                   ??_EUSART1_DefaultErrorHandler 0078  
                                       _startup 00EE                      __size_of_SYSTEM_Initialize 0024  
                 LED_task_BEAT_STROBE@beatState 006F                            I2C1_ISR@pi2c_buf_ptr 00E4  
                                       clrloop0 1C43                                      ??_colorDec 0020  
                                    ??_colorInc 0020                                _currentSelection 0143  
                          end_of_initialization 0096                                       _T2RSTbits 0291  
                                     _GPIO_init 1C94                             ?_EUSART1_Initialize 0077  
                                       init@btn 0024                                         init@pin 0022  
                              ??_BUTTONS_isHeld 0020                                         fputc@fp 003D  
                                       init_ram 1C4E                     _EUSART1_OverrunErrorHandler 02E2  
                                       fputs@fp 0043                                         initloop 1C4F  
                        ??_I2C1_BusCollisionISR 0077                         __end_of_I2C1_Initialize 1DAD  
                                _DMX_getAddress 1B76           __end_of_EUSART1_SetRxInterruptHandler 1BE7  
        __size_of_EUSART1_SetRxInterruptHandler 0009                   _EUSART1_SetRxInterruptHandler 1BDE  
                                    ?_BEAT_init 0077                                      ?_BEAT_task 0077  
                 beatBrightnessCalculation@temp 006D                               __end_of_vfpfcnvrt 1754  
                         __size_of_BUTTONS_init 004E                           __size_of_BUTTONS_task 00EE  
                         ??_CLOCK_timerCallback 0077                                 ??_DMX_interrupt 0077  
                           __end_of_address_dec 1EA2                     __size_of_PWM4_LoadDutyValue 001E  
                           __end_of_address_inc 1EC3                                ?_ADCC_Initialize 0077  
                                    ??_vfprintf 0066                            ??_EUSART1_Initialize 0022  
                         __CFG_WDTCPS$WDTCPS_31 0000                                         strlen@a 0023  
                                       strlen@s 0020                        _TMR0_SetInterruptHandler 1BCC  
                   __end_of_LED_task_BEAT_MIXED 0800                       __size_of_I2C1_MasterWrite 002A  
                             __size_of_I2C1_ISR 0152                        __size_of_LED_task_MANUAL 000C  
                             __end_of_writeData 1DCA                         ?_ADCC_SetUpperThreshold 0020  
                                 ??_CONTROL_DMX 016D                                   ___xxtofl@sign 0028  
                                     _TRISAbits 0012                                       _TRISCbits 0014  
                                   ___fldiv@grs 0042                                     ___fldiv@rem 003B  
                               ??_BEAT_detected 0020                __size_of_EUSART1_SetErrorHandler 0009  
                              __CFG_FEXTOSC$OFF 0000                           __end_of_TM1650_enable 1D30  
             I2C1_ISR@i2c_10bit_address_restart 00E2                                  _getCurrentMenu 1B90  
                                    ?_GPIO_init 0077                          __size_of_CLOCK_getTime 0009  
                                   ___flmul@grs 0057                                    _BUTTONS_init 127A  
                                  _BUTTONS_task 0BC1                          __end_of_DMX_getAddress 1B79  
                                   _CCP1CONbits 030E                                     _CCP2CONbits 0312  
                                   _CCP3CONbits 0316                                     _CCP4CONbits 031A  
                       I2C1_MasterWrite@address 0028                      __end_of_PWM3_LoadDutyValue 1E24  
          __size_of_EUSART1_DefaultErrorHandler 0003                        __size_of_PWM1_Initialize 000B  
                             __size_of_LED_init 0008                               __size_of_DMX_init 0013  
                      __end_of_beatColorCreator 0953                  ??_ADCC_DefaultInterruptHandler 0077  
                                 ??_TM1650_init 006F                                     vfpfcnvrt@ap 005B  
                                   vfpfcnvrt@fp 0062                         I2C1_MasterWrite@trBlock 01EC  
                             __size_of_TMR0_ISR 000D                        I2C1_Stop@completion_code 0078  
                            _PWM2_LoadDutyValue 1DE8                        __size_of_TM1650_setDigit 0012  
                        ?_OSCILLATOR_Initialize 0077                  __end_of_ADCC_SetUpperThreshold 1BBA  
                  __size_of_TM1650_fastPrintNum 00C2                                  __end_of_printf 1D1B  
                         __size_of_LED_setColor 0160                                  __end_of_strlen 1D77  
                                  _lastDetected 013C                           __size_of_LED_task_DMX 0063  
                           start_initialization 0032                                    _enterPressed 0141  
                                   ??_I2C1_Stop 0077                        __size_of_PWM2_Initialize 000B  
                      __size_of_TMR0_Initialize 0014                             ?_PWM2_LoadDutyValue 00A0  
               __size_of_PIN_MANAGER_Initialize 0035                             TM1650_setDigit@data 0036  
                                   __end_of_pad 136D                          __end_of_getCurrentMenu 1B98  
 EUSART1_SetRxInterruptHandler@interruptHandler 0020                                  _beatBrightness 00EF  
                 __size_of_ADCC_StartConversion 0009               __size_of_I2C1_MasterWriteTRBBuild 0023  
                     ?_I2C1_MasterWriteTRBBuild 0020                               _BUTTONS_isClicked 1CCA  
                           __end_of_CONTROL_DMX 1800                         _animationBrightnessCtrl 01B0  
                                _CONTROL_MANUAL 0CAF                                 ?_DMX_getAddress 0077  
                            ?_BUTTONS_isClicked 0077                                     _address_dec 1E82  
                                   _address_inc 1EA2                                     ??_BEAT_init 0022  
                              ?_I2C1_Initialize 0077                                     ??_BEAT_task 0028  
                              __CFG_LPBOREN$OFF 0000                            ??_PWM2_LoadDutyValue 006D  
                      __size_of_PWM3_Initialize 000B                                     vfprintf@fmt 0063  
                   PWM2_LoadDutyValue@dutyValue 00A0                             ??_BUTTONS_isClicked 0020  
                              ??_PMD_Initialize 0020                           _EUSART1_RxDataHandler 1D47  
                                  _LED_setColor 0644                  ?_EUSART1_SetRxInterruptHandler 0020  
                                     __Umul8_16 1E62                                     __pdataBANK1 00E8  
                                   __pdataBANK2 0167                                    _LED_task_DMX 136D  
                                 _CLOCK_getTime 1BC3                                        ??_printf 006B  
                                      ??_strlen 0022                    I2C1_MasterWriteTRBBuild@ptrb 0026  
                                _eusart1RxCount 00E7                          beatColorCreator@inBlue 00AA  
                                     ___fldiv@a 002E                                       ___fldiv@b 0032  
                                   __pbssBIGRAM 23EE                             __end_of_TM1650_init 1D06  
                                     ___flmul@a 004C                                       ___flmul@b 0048  
                                   __pbssCOMMON 0070               _EUSART1_RxDefaultInterruptHandler 0165  
                                     ___latbits 0003                                   __pcstackBANK0 0020  
                                 __pcstackBANK1 00A0                                   __pcstackBANK2 016D  
                                 __pcstackBANK4 0268                               _CONTROL_ANIMATION 158B  
            __size_of_beatBrightnessCalculation 007D                        __size_of_PWM4_Initialize 000B  
                      __size_of_TMR2_Initialize 000E                                   _i2c1_tr_queue 015E  
                             __size_of___xxtofl 0096                                 ?_getCurrentMenu 0077  
                     __end_of_BUTTONS_isClicked 1CDE                       beatColorCreator@tempColor 00B2  
                            ?_CONTROL_ANIMATION 0077                               ??_LED_task_MANUAL 006F  
                        __end_of_CONTROL_MANUAL 0DAD                                       _beatMixed 01B8  
                                   ??_GPIO_init 0020                ??_EUSART1_SetFramingErrorHandler 0022  
               ?_EUSART1_SetFramingErrorHandler 0020                         ??_I2C1_FunctionComplete 0077  
                  __size_of_EUSART1_Receive_ISR 0036                               __size_of_colorDec 0037  
                             __size_of_colorInc 0047                                    _menuSelected 0144  
                                  _currentState 00D0                                       _charTable 1800  
                           ??_CONTROL_ANIMATION 006F                           _TMR0_InterruptHandler 0163  
                                     __pnvBANK2 0161                                       __pnvBANK4 026C  
                                     __pnvBANK5 02E0                     __size_of_PWM1_LoadDutyValue 001E  
                              ___lwdiv@dividend 0022                          _PIN_MANAGER_Initialize 10D8  
                                     _animation 01E0                     ?_TM1650_fastPrintNum_2digit 0077  
                                      ?___fldiv 002E                     ?_TM1650_fastPrintNum_3digit 0036  
                                      ?___awdiv 0020                                       __ptext100 1B6B  
                                     __ptext101 1B70                                       __ptext102 1D47  
                                     __ptext103 1C5A                                       __ptext104 1B6A  
                                     __ptext105 1B6D                                        ?___awmod 0029  
                                      ?___flmul 0048                                        ?___fltol 0062  
                                    ?__Umul8_16 0020                                        ?___lwdiv 0020  
                                      ?___lwmod 0028                                  ?_CLOCK_getTime 0020  
                                      _I2C1_ISR 0EAE                   __size_of_LED_task_BEAT_STROBE 00DF  
                             ??_PWM1_Initialize 0020                    ??_INTERRUPT_InterruptManager 007E  
                               writeData@status 0035                               __size_of_vfprintf 002F  
                              _I2C1_MasterWrite 1F7A                                        _BAUD1CON 011F  
                     __end_of_CONTROL_ANIMATION 1616                    __end_of_I2C1_MasterTRBInsert 07F9  
    __end_of_EUSART1_DefaultOverrunErrorHandler 1B7D     __size_of_EUSART1_DefaultOverrunErrorHandler 0004  
          ??_EUSART1_DefaultOverrunErrorHandler 0077             ?_EUSART1_DefaultOverrunErrorHandler 0077  
            _EUSART1_DefaultOverrunErrorHandler 1B79                            _EUSART1_ErrorHandler 02E0  
                                     _downState 00DC                                     _CONTROL_DMX 1754  
                       _EUSART1_SetErrorHandler 1BE7                                       _manualRed 01A8  
                             ??_TM1650_setDigit 0037                                ___lwdiv@quotient 0026  
             __end_of_beatBrightnessCalculation 158B                                  __size_of_fputc 0037  
                                      _T2CLKCON 0290                                       _menuState 00DB  
                                __size_of_fputs 0026                                 ?_CONTROL_MANUAL 0077  
                                __size_of_putch 0024        __end_of_I2C1_WaitForLastPacketToComplete 1B82  
     __size_of_I2C1_WaitForLastPacketToComplete 0005              ??_I2C1_WaitForLastPacketToComplete 0020  
             ?_I2C1_WaitForLastPacketToComplete 0077                _I2C1_WaitForLastPacketToComplete 1B7D  
                        I2C1_MasterRead@trBlock 01E8                               ??_TMR0_Initialize 0022  
                             ??_PWM2_Initialize 0020         EUSART1_SetErrorHandler@interruptHandler 0020  
                       BUTTONS_isClicked@button 0020                                       clear_ram0 1C42  
                                      _PIE0bits 0716                                        _LED_init 1B98  
                                      _PIE1bits 0717                                        _PIE3bits 0719  
                                      _DMX_init 1CB7             __size_of_INTERRUPT_InterruptManager 002C  
                    ??_TMR0_SetInterruptHandler 0022                                        _PIR0bits 070C  
                                   _incInterval 00E8                                        _PIR1bits 070D  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0077  
                             __CFG_BBSIZE$BB512 0000                                   _animationType 0240  
                                      _SSP1CON1 0190                                        _SSP1CON3 0192  
                                      _TMR0_ISR 1C67                      __end_of_LED_task_BEAT_FADE 0004  
                                      _SSP1STAT 018F                                  _beatStrobeTask 0260  
                      __size_of_CONTROLLER_init 0204                        __size_of_CONTROLLER_task 0101  
                                   _TM1650_init 1CF2                                       _threshold 016B  
                                     _vfpfcnvrt 16AC                               ??_PWM3_Initialize 0020  
                                    _ADCON0bits 0111                                      _ADCON1bits 0112  
                                    _ADCON2bits 0113                                      _ADCON3bits 0114  
                                     _startTime 013A                      __end_of_LED_task_ANIMATION 0003  
                            DMX_interrupt@dummy 007D                                        _WPUAbits 1F39  
                                      _WPUCbits 1F4F                                       _writeData 1DAD  
                    __size_of_BUTTONS_isClicked 0014                                      vfpfcnvrt@c 0061  
                                   _lastIncTime 00D2                               ??_TMR2_Initialize 0020  
                             ??_PWM4_Initialize 0020                    __size_of_adcThresholdHandler 0003  
                   __end_of_CLOCK_timerCallback 1B88                                BUTTONS_task@time 0026  
                           _TM1650_fastPrintNum 0953                                      _ADSTATbits 0115  
                    __end_of_PWM4_LoadDutyValue 1E42                   __size_of_I2C1_BusCollisionISR 0003  
                                    vfprintf@ap 0065                                      vfprintf@fp 0068  
                                   _manualColor 00CC                                     _manualGreen 0238  
                               ??_CLOCK_getTime 0022                          I2C1_ISR@i2c_bytes_left 00E3  
                                   _manualWhite 0228                         ??_OSCILLATOR_Initialize 0020  
                                   ??__Umul8_16 0022                                __size_of___fldiv 017A  
                              __size_of___awdiv 0052                               ?_beatColorCreator 00A9  
                         beatColorCreator@inRed 00AD                                __size_of___awmod 0046  
                              __size_of___flmul 022C                                __size_of___fltol 0066  
                         __end_of_DMX_interrupt 106F                     __size_of_EUSART1_Initialize 0034  
                                    ?_vfpfcnvrt 005A                                __size_of___lwdiv 0035  
                              __size_of___lwmod 002D                           _beatColorCreator$4093 00AE  
              __end_of_I2C1_MasterWriteTRBBuild 1EE6                              ??_beatColorCreator 006E  
                                      _beatFade 01C8                              _PWM3_LoadDutyValue 1E06  
                                      _beatCont 01C0                                      _ANSELAbits 1F38  
                                      _beatHold 0140                                      _ANSELCbits 1F4E  
                          ?_TM1650_fastPrintNum 0036                       ??_EUSART1_SetErrorHandler 0022  
                               BEAT_task@offset 002A                      __size_of_CONTROL_ANIMATION 008B  
                           TM1650_enable@enable 0036             __end_of_EUSART1_DefaultErrorHandler 1B73  
                   _EUSART1_DefaultErrorHandler 1B70                                     _currentMenu 00D6  
                                   _currentTime 0136                                      _CLOCK_init 1B88  
                                      ___xxtofl 1616                                      _T0CON0bits 059E  
                      __size_of_ADCC_Initialize 0026                                     _menuPressed 0142  
                               ___lwdiv@divisor 0020                             I2C1_ISR@i2c_address 0075  
                               ___lwdiv@counter 0025                                        _detected 00D8  
                                    ?_writeData 0030                                        __ptext10 1C0B  
                                      __ptext11 10D8                                        __ptext20 1CB7  
                                      __ptext12 1C02                                        __ptext21 0953  
                                      __ptext13 1D91                                        __ptext30 1B90  
                                      __ptext22 1BDE                                        __ptext14 106F  
                                      __ptext31 1C36                                        __ptext23 0DAD  
                                      __ptext15 1BF9                                        __ptext40 08A4  
                                      __ptext32 1EA2                                        __ptext24 13D0  
                                      __ptext16 1BF0                                        __ptext41 150E  
                                      __ptext33 1E82                                        __ptext25 158B  
                                      __ptext17 1BE7                                        __ptext50 1DE8  
                                      __ptext42 0644                                        __ptext34 080B  
                                      __ptext26 1754                                        __ptext18 1F54  
                                      __ptext51 1DCA                                        __ptext43 1616  
                                      __ptext35 1FA4                                        __ptext27 0CAF  
                                      __ptext19 1B98                                        __ptext60 1D5F  
                                      __ptext52 1BD5                                        __ptext44 1434  
                                      __ptext36 136D                                        __ptext28 1233  
                                      __ptext61 1F2E                                        __ptext53 07FF  
                                      __ptext45 009A                                        __ptext37 1B76  
                                      __ptext29 117A                                        __ptext70 1B7D  
                                      __ptext62 1143                                        __ptext54 0003  
                                      __ptext46 1E62                                        __ptext38 1C74  
                                      __ptext71 11ED                                        __ptext63 1EE6  
                                      __ptext55 1D06                                        __ptext47 04CA  
                                      __ptext39 0AE2                                        __ptext80 1E42  
                                      __ptext72 12C8                                        __ptext64 1CA5  
                                      __ptext56 1FD1                                        __ptext48 1E24  
                                      __ptext81 1C94                                        __ptext73 0002  
                                      __ptext65 149A                                        __ptext57 16AC  
                                      __ptext49 1E06                                        __ptext90 1C67  
                                      __ptext82 0A15                                        __ptext74 1CCA  
                                      __ptext66 1DAD                                        __ptext58 100E  
                           ?_PWM3_LoadDutyValue 00A0                                        __ptext91 1B82  
                                      __ptext83 10A3                                        __ptext75 02C6  
                                      __ptext67 1F7A                                        __ptext59 131A  
                                      __ptext92 1B6C                                        __ptext84 1BC3  
                                      __ptext76 1B88                                        __ptext68 1EC3  
                                      __ptext93 0EAE                                        __ptext85 1D30  
                                      __ptext77 1BCC                                        __ptext69 07A4  
                                      __ptext94 1D77                                        __ptext86 1BBA  
                                      __ptext78 0BC1                                        __ptext95 1C83  
                                      __ptext87 1BB1                                        __ptext79 127A  
                                      __ptext96 1B73                                        __ptext88 1BA8  
                                      __ptext97 103E                                        __ptext98 110D  
                                      __ptext99 1B79                    __size_of_LED_task_BEAT_MIXED 0001  
                                  _SSP1CON1bits 0190                                    _SSP1CON2bits 0191  
                                      _dmxArray 23EE                                ??_DMX_getAddress 0020  
                                      _colorDec 117A                                        _colorInc 1233  
                          BUTTONS_isHeld@button 0020                           __end_of_BEAT_detected 1BDE  
                                      _dmx_task 01D8                                        _lastBeat 0132  
                                      _lastTime 0138                                 LED_task_DMX@dmx 00C3  
                                 __size_of_ctoa 0030                                   __size_of_main 003C  
                                 __size_of_init 0020                                    ?_address_dec 0077  
          __end_of_TMR0_DefaultInterruptHandler 1B6D           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 1B6C                                    ?_address_inc 0077  
                          __CFG_WDTCWS$WDTCWS_7 0000                            _I2C1_MasterTRBInsert 07A4  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0020  
                          ??_PWM3_LoadDutyValue 006D                    __end_of_ADCC_StartConversion 1BC3  
                                      int$flags 007E                                        _position 00D9  
                       __size_of_BUTTONS_isHeld 000F                                        _vfprintf 1FD1  
            __end_of_INTERRUPT_InterruptManager 0030                      _INTERRUPT_InterruptManager 0004  
                                     printf@fmt 00A0                          __size_of_TM1650_enable 0015  
                   _EUSART1_FramingErrorHandler 026C                             _EUSART1_Receive_ISR 110D  
                               _LED_task_MANUAL 1C36                           ??_TM1650_fastPrintNum 0038  
                              ??_getCurrentMenu 0020                                      _INTCONbits 000B  
                             ??_CONTROLLER_init 0020                               ??_CONTROLLER_task 0268  
                                      init@port 0020                                  __pstringtext10 2043  
                                __pstringtext11 2049                                  __pstringtext20 207E  
                                __pstringtext12 204F                                  __pstringtext21 2082  
                                __pstringtext13 2055                                  __pstringtext30 0000  
                                __pstringtext22 2086                                  __pstringtext14 205B  
                                __pstringtext23 208A                                  __pstringtext15 2061  
                                __pstringtext24 208E                                  __pstringtext16 2067  
                                __pstringtext25 2092                                  __pstringtext17 206D  
                                __pstringtext26 2096                                  __pstringtext18 2073  
                                __pstringtext27 2099                                  __pstringtext19 2079  
                                __pstringtext28 209C                                  __pstringtext29 209F  
          __end_of_ADCC_DefaultInterruptHandler 1B6B           __size_of_ADCC_DefaultInterruptHandler 0001  
                  _ADCC_DefaultInterruptHandler 1B6A                                        intlevel1 0000  
                                _thresholdCount 012C                            ?_EUSART1_Receive_ISR 0077  
                                 writeData@data 0030                                ___lwmod@dividend 002A  
                       ?_PIN_MANAGER_Initialize 0077                        __end_of_I2C1_MasterWrite 1FA4  
                             __CFG_CLKOUTEN$OFF 0000                  __size_of_I2C1_FunctionComplete 0011  
        __end_of_EUSART1_SetOverrunErrorHandler 1C02         __size_of_EUSART1_SetOverrunErrorHandler 0009  
                _EUSART1_SetOverrunErrorHandler 1BF9                   __end_of_I2C1_FunctionComplete 1C94  
                                 ?_CONTROL_BEAT 0077                           ?_I2C1_MasterTRBInsert 0020  
                               _PWM1_Initialize 1C15                   ?_TMR0_DefaultInterruptHandler 0077  
                   __size_of_PWM2_LoadDutyValue 001E                          TM1650_fastPrintNum@num 0036  
                             _lastLedActiveTime 0128                                        printf@ap 006E  
EUSART1_SetFramingErrorHandler@interruptHandler 0020                     PWM3_LoadDutyValue@dutyValue 00A0  
                               _TM1650_setDigit 1CA5                                     ??_vfpfcnvrt 005C  
                      __size_of_I2C1_Initialize 001C                              _eusart1RxLastError 0145  
                                 __pstringtext1 1800                                   __pstringtext2 2000  
                                 __pstringtext3 200A                                   __pstringtext4 2013  
                                 __pstringtext5 201C                                   __pstringtext6 2025  
                                 __pstringtext7 202D                                   __pstringtext8 2035  
                                 __pstringtext9 203C                          __Umul8_16@multiplicand 0020  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                               ___lwmod@divisor 0028                                     ?_CLOCK_init 0077  
                               _TMR0_Initialize 1CDE                                 _PWM2_Initialize 1C20  
                              ??_CONTROL_MANUAL 00BE                                 ___lwmod@counter 002D  
                                  ?_CONTROL_DMX 0077                                    _previousTask 00D4  
                      _I2C1_MasterWriteTRBBuild 1EC3                                     ??_writeData 0031  
                                    _TX1STAbits 011E                    __end_of_LED_task_BEAT_STROBE 0BC1  
                ??_ADCC_SetADTIInterruptHandler 0022                           ??_EUSART1_Receive_ISR 0078  
                __end_of_PIN_MANAGER_Initialize 110D                               ??_ADCC_Initialize 0022  
                                 _TM1650_enable 1D1B                              __size_of_I2C1_Stop 001A  
                 ?_ADCC_DefaultInterruptHandler 0077                      __end_of_PWM1_LoadDutyValue 1DE8  
                          __Umul8_16@multiplier 0028                                  ??_CONTROL_BEAT 00C0  
                       ??_EUSART1_RxDataHandler 0077                                 _PWM3_Initialize 1C2B  
                             __Umul8_16@product 0024  
